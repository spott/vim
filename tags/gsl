!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.6	//
A	/usr/local/gsl/include/gsl/gsl_bspline.h	/^    gsl_matrix *A; \/* work matrix *\/$/;"	m	struct:__anon138	access:public
A	/usr/local/gsl/include/gsl/gsl_multifit.h	/^  gsl_matrix * A;$/;"	m	struct:__anon118	access:public
A	/usr/local/gsl/include/gsl/gsl_randist.h	/^    size_t *A;$/;"	m	struct:__anon34	access:public
B	/usr/local/gsl/include/gsl/gsl_bspline.h	/^    gsl_vector *B; \/* temporary spline results *\/$/;"	m	struct:__anon137	access:public
CBLAS_DIAG	/usr/local/gsl/include/gsl/gsl_cblas.h	/^enum CBLAS_DIAG {CblasNonUnit=131, CblasUnit=132};$/;"	g
CBLAS_DIAG_t	/usr/local/gsl/include/gsl/gsl_blas_types.h	/^typedef  enum CBLAS_DIAG        CBLAS_DIAG_t;$/;"	t	typeref:enum:CBLAS_DIAG
CBLAS_INDEX	/usr/local/gsl/include/gsl/gsl_cblas.h	44;"	d
CBLAS_INDEX_t	/usr/local/gsl/include/gsl/gsl_blas_types.h	/^typedef  CBLAS_INDEX  CBLAS_INDEX_t;$/;"	t
CBLAS_ORDER	/usr/local/gsl/include/gsl/gsl_cblas.h	/^enum CBLAS_ORDER {CblasRowMajor=101, CblasColMajor=102};$/;"	g
CBLAS_ORDER_t	/usr/local/gsl/include/gsl/gsl_blas_types.h	/^typedef  enum CBLAS_ORDER       CBLAS_ORDER_t;$/;"	t	typeref:enum:CBLAS_ORDER
CBLAS_SIDE	/usr/local/gsl/include/gsl/gsl_cblas.h	/^enum CBLAS_SIDE {CblasLeft=141, CblasRight=142};$/;"	g
CBLAS_SIDE_t	/usr/local/gsl/include/gsl/gsl_blas_types.h	/^typedef  enum CBLAS_SIDE        CBLAS_SIDE_t;$/;"	t	typeref:enum:CBLAS_SIDE
CBLAS_TRANSPOSE	/usr/local/gsl/include/gsl/gsl_cblas.h	/^enum CBLAS_TRANSPOSE {CblasNoTrans=111, CblasTrans=112, CblasConjTrans=113};$/;"	g
CBLAS_TRANSPOSE_t	/usr/local/gsl/include/gsl/gsl_blas_types.h	/^typedef  enum CBLAS_TRANSPOSE   CBLAS_TRANSPOSE_t;$/;"	t	typeref:enum:CBLAS_TRANSPOSE
CBLAS_UPLO	/usr/local/gsl/include/gsl/gsl_cblas.h	/^enum CBLAS_UPLO {CblasUpper=121, CblasLower=122};$/;"	g
CBLAS_UPLO_t	/usr/local/gsl/include/gsl/gsl_blas_types.h	/^typedef  enum CBLAS_UPLO        CBLAS_UPLO_t;$/;"	t	typeref:enum:CBLAS_UPLO
CblasColMajor	/usr/local/gsl/include/gsl/gsl_cblas.h	/^enum CBLAS_ORDER {CblasRowMajor=101, CblasColMajor=102};$/;"	e	enum:CBLAS_ORDER
CblasConjTrans	/usr/local/gsl/include/gsl/gsl_cblas.h	/^enum CBLAS_TRANSPOSE {CblasNoTrans=111, CblasTrans=112, CblasConjTrans=113};$/;"	e	enum:CBLAS_TRANSPOSE
CblasLeft	/usr/local/gsl/include/gsl/gsl_cblas.h	/^enum CBLAS_SIDE {CblasLeft=141, CblasRight=142};$/;"	e	enum:CBLAS_SIDE
CblasLower	/usr/local/gsl/include/gsl/gsl_cblas.h	/^enum CBLAS_UPLO {CblasUpper=121, CblasLower=122};$/;"	e	enum:CBLAS_UPLO
CblasNoTrans	/usr/local/gsl/include/gsl/gsl_cblas.h	/^enum CBLAS_TRANSPOSE {CblasNoTrans=111, CblasTrans=112, CblasConjTrans=113};$/;"	e	enum:CBLAS_TRANSPOSE
CblasNonUnit	/usr/local/gsl/include/gsl/gsl_cblas.h	/^enum CBLAS_DIAG {CblasNonUnit=131, CblasUnit=132};$/;"	e	enum:CBLAS_DIAG
CblasRight	/usr/local/gsl/include/gsl/gsl_cblas.h	/^enum CBLAS_SIDE {CblasLeft=141, CblasRight=142};$/;"	e	enum:CBLAS_SIDE
CblasRowMajor	/usr/local/gsl/include/gsl/gsl_cblas.h	/^enum CBLAS_ORDER {CblasRowMajor=101, CblasColMajor=102};$/;"	e	enum:CBLAS_ORDER
CblasTrans	/usr/local/gsl/include/gsl/gsl_cblas.h	/^enum CBLAS_TRANSPOSE {CblasNoTrans=111, CblasTrans=112, CblasConjTrans=113};$/;"	e	enum:CBLAS_TRANSPOSE
CblasUnit	/usr/local/gsl/include/gsl/gsl_cblas.h	/^enum CBLAS_DIAG {CblasNonUnit=131, CblasUnit=132};$/;"	e	enum:CBLAS_DIAG
CblasUpper	/usr/local/gsl/include/gsl/gsl_cblas.h	/^enum CBLAS_UPLO {CblasUpper=121, CblasLower=122};$/;"	e	enum:CBLAS_UPLO
D	/usr/local/gsl/include/gsl/gsl_multifit.h	/^  gsl_vector * D;$/;"	m	struct:__anon118	access:public
F	/usr/local/gsl/include/gsl/gsl_randist.h	/^    double *F;$/;"	m	struct:__anon34	access:public
GSL_COMPLEX_AT	/usr/local/gsl/include/gsl/gsl_vector_complex.h	13;"	d
GSL_COMPLEX_EQ	/usr/local/gsl/include/gsl/gsl_complex.h	93;"	d
GSL_COMPLEX_FLOAT_AT	/usr/local/gsl/include/gsl/gsl_vector_complex.h	14;"	d
GSL_COMPLEX_LONG_DOUBLE_AT	/usr/local/gsl/include/gsl/gsl_vector_complex.h	15;"	d
GSL_COMPLEX_NEGONE	/usr/local/gsl/include/gsl/gsl_complex_math.h	55;"	d
GSL_COMPLEX_ONE	/usr/local/gsl/include/gsl/gsl_complex_math.h	53;"	d
GSL_COMPLEX_P	/usr/local/gsl/include/gsl/gsl_complex.h	90;"	d
GSL_COMPLEX_P_IMAG	/usr/local/gsl/include/gsl/gsl_complex.h	92;"	d
GSL_COMPLEX_P_REAL	/usr/local/gsl/include/gsl/gsl_complex.h	91;"	d
GSL_COMPLEX_ZERO	/usr/local/gsl/include/gsl/gsl_complex_math.h	54;"	d
GSL_CONST_CGSM_ACRE	/usr/local/gsl/include/gsl/gsl_const_cgsm.h	61;"	d
GSL_CONST_CGSM_ANGSTROM	/usr/local/gsl/include/gsl/gsl_const_cgsm.h	59;"	d
GSL_CONST_CGSM_ASTRONOMICAL_UNIT	/usr/local/gsl/include/gsl/gsl_const_cgsm.h	28;"	d
GSL_CONST_CGSM_BAR	/usr/local/gsl/include/gsl/gsl_const_cgsm.h	92;"	d
GSL_CONST_CGSM_BARN	/usr/local/gsl/include/gsl/gsl_const_cgsm.h	62;"	d
GSL_CONST_CGSM_BOHR_MAGNETON	/usr/local/gsl/include/gsl/gsl_const_cgsm.h	39;"	d
GSL_CONST_CGSM_BOHR_RADIUS	/usr/local/gsl/include/gsl/gsl_const_cgsm.h	115;"	d
GSL_CONST_CGSM_BOLTZMANN	/usr/local/gsl/include/gsl/gsl_const_cgsm.h	38;"	d
GSL_CONST_CGSM_BTU	/usr/local/gsl/include/gsl/gsl_const_cgsm.h	89;"	d
GSL_CONST_CGSM_CALORIE	/usr/local/gsl/include/gsl/gsl_const_cgsm.h	88;"	d
GSL_CONST_CGSM_CANADIAN_GALLON	/usr/local/gsl/include/gsl/gsl_const_cgsm.h	71;"	d
GSL_CONST_CGSM_CARAT	/usr/local/gsl/include/gsl/gsl_const_cgsm.h	82;"	d
GSL_CONST_CGSM_CUP	/usr/local/gsl/include/gsl/gsl_const_cgsm.h	67;"	d
GSL_CONST_CGSM_CURIE	/usr/local/gsl/include/gsl/gsl_const_cgsm.h	111;"	d
GSL_CONST_CGSM_DAY	/usr/local/gsl/include/gsl/gsl_const_cgsm.h	47;"	d
GSL_CONST_CGSM_DYNE	/usr/local/gsl/include/gsl/gsl_const_cgsm.h	117;"	d
GSL_CONST_CGSM_ELECTRON_CHARGE	/usr/local/gsl/include/gsl/gsl_const_cgsm.h	102;"	d
GSL_CONST_CGSM_ELECTRON_MAGNETIC_MOMENT	/usr/local/gsl/include/gsl/gsl_const_cgsm.h	41;"	d
GSL_CONST_CGSM_ELECTRON_VOLT	/usr/local/gsl/include/gsl/gsl_const_cgsm.h	32;"	d
GSL_CONST_CGSM_ERG	/usr/local/gsl/include/gsl/gsl_const_cgsm.h	119;"	d
GSL_CONST_CGSM_FARADAY	/usr/local/gsl/include/gsl/gsl_const_cgsm.h	101;"	d
GSL_CONST_CGSM_FATHOM	/usr/local/gsl/include/gsl/gsl_const_cgsm.h	54;"	d
GSL_CONST_CGSM_FLUID_OUNCE	/usr/local/gsl/include/gsl/gsl_const_cgsm.h	68;"	d
GSL_CONST_CGSM_FOOT	/usr/local/gsl/include/gsl/gsl_const_cgsm.h	50;"	d
GSL_CONST_CGSM_FOOTCANDLE	/usr/local/gsl/include/gsl/gsl_const_cgsm.h	108;"	d
GSL_CONST_CGSM_FOOTLAMBERT	/usr/local/gsl/include/gsl/gsl_const_cgsm.h	110;"	d
GSL_CONST_CGSM_GAUSS	/usr/local/gsl/include/gsl/gsl_const_cgsm.h	103;"	d
GSL_CONST_CGSM_GRAM_FORCE	/usr/local/gsl/include/gsl/gsl_const_cgsm.h	84;"	d
GSL_CONST_CGSM_GRAVITATIONAL_CONSTANT	/usr/local/gsl/include/gsl/gsl_const_cgsm.h	25;"	d
GSL_CONST_CGSM_GRAV_ACCEL	/usr/local/gsl/include/gsl/gsl_const_cgsm.h	31;"	d
GSL_CONST_CGSM_HECTARE	/usr/local/gsl/include/gsl/gsl_const_cgsm.h	60;"	d
GSL_CONST_CGSM_HORSEPOWER	/usr/local/gsl/include/gsl/gsl_const_cgsm.h	91;"	d
GSL_CONST_CGSM_HOUR	/usr/local/gsl/include/gsl/gsl_const_cgsm.h	46;"	d
GSL_CONST_CGSM_INCH	/usr/local/gsl/include/gsl/gsl_const_cgsm.h	49;"	d
GSL_CONST_CGSM_INCH_OF_MERCURY	/usr/local/gsl/include/gsl/gsl_const_cgsm.h	96;"	d
GSL_CONST_CGSM_INCH_OF_WATER	/usr/local/gsl/include/gsl/gsl_const_cgsm.h	97;"	d
GSL_CONST_CGSM_JOULE	/usr/local/gsl/include/gsl/gsl_const_cgsm.h	118;"	d
GSL_CONST_CGSM_KILOMETERS_PER_HOUR	/usr/local/gsl/include/gsl/gsl_const_cgsm.h	74;"	d
GSL_CONST_CGSM_KILOPOUND_FORCE	/usr/local/gsl/include/gsl/gsl_const_cgsm.h	86;"	d
GSL_CONST_CGSM_KNOT	/usr/local/gsl/include/gsl/gsl_const_cgsm.h	75;"	d
GSL_CONST_CGSM_LAMBERT	/usr/local/gsl/include/gsl/gsl_const_cgsm.h	109;"	d
GSL_CONST_CGSM_LIGHT_YEAR	/usr/local/gsl/include/gsl/gsl_const_cgsm.h	29;"	d
GSL_CONST_CGSM_LITER	/usr/local/gsl/include/gsl/gsl_const_cgsm.h	63;"	d
GSL_CONST_CGSM_LUMEN	/usr/local/gsl/include/gsl/gsl_const_cgsm.h	105;"	d
GSL_CONST_CGSM_LUX	/usr/local/gsl/include/gsl/gsl_const_cgsm.h	106;"	d
GSL_CONST_CGSM_MASS_ELECTRON	/usr/local/gsl/include/gsl/gsl_const_cgsm.h	33;"	d
GSL_CONST_CGSM_MASS_MUON	/usr/local/gsl/include/gsl/gsl_const_cgsm.h	34;"	d
GSL_CONST_CGSM_MASS_NEUTRON	/usr/local/gsl/include/gsl/gsl_const_cgsm.h	36;"	d
GSL_CONST_CGSM_MASS_PROTON	/usr/local/gsl/include/gsl/gsl_const_cgsm.h	35;"	d
GSL_CONST_CGSM_METER_OF_MERCURY	/usr/local/gsl/include/gsl/gsl_const_cgsm.h	95;"	d
GSL_CONST_CGSM_METRIC_TON	/usr/local/gsl/include/gsl/gsl_const_cgsm.h	79;"	d
GSL_CONST_CGSM_MICRON	/usr/local/gsl/include/gsl/gsl_const_cgsm.h	58;"	d
GSL_CONST_CGSM_MIL	/usr/local/gsl/include/gsl/gsl_const_cgsm.h	55;"	d
GSL_CONST_CGSM_MILE	/usr/local/gsl/include/gsl/gsl_const_cgsm.h	52;"	d
GSL_CONST_CGSM_MILES_PER_HOUR	/usr/local/gsl/include/gsl/gsl_const_cgsm.h	73;"	d
GSL_CONST_CGSM_MINUTE	/usr/local/gsl/include/gsl/gsl_const_cgsm.h	45;"	d
GSL_CONST_CGSM_MOLAR_GAS	/usr/local/gsl/include/gsl/gsl_const_cgsm.h	43;"	d
GSL_CONST_CGSM_NAUTICAL_MILE	/usr/local/gsl/include/gsl/gsl_const_cgsm.h	53;"	d
GSL_CONST_CGSM_NEWTON	/usr/local/gsl/include/gsl/gsl_const_cgsm.h	116;"	d
GSL_CONST_CGSM_NUCLEAR_MAGNETON	/usr/local/gsl/include/gsl/gsl_const_cgsm.h	40;"	d
GSL_CONST_CGSM_OUNCE_MASS	/usr/local/gsl/include/gsl/gsl_const_cgsm.h	77;"	d
GSL_CONST_CGSM_PARSEC	/usr/local/gsl/include/gsl/gsl_const_cgsm.h	30;"	d
GSL_CONST_CGSM_PHOT	/usr/local/gsl/include/gsl/gsl_const_cgsm.h	107;"	d
GSL_CONST_CGSM_PINT	/usr/local/gsl/include/gsl/gsl_const_cgsm.h	66;"	d
GSL_CONST_CGSM_PLANCKS_CONSTANT_H	/usr/local/gsl/include/gsl/gsl_const_cgsm.h	26;"	d
GSL_CONST_CGSM_PLANCKS_CONSTANT_HBAR	/usr/local/gsl/include/gsl/gsl_const_cgsm.h	27;"	d
GSL_CONST_CGSM_POINT	/usr/local/gsl/include/gsl/gsl_const_cgsm.h	56;"	d
GSL_CONST_CGSM_POISE	/usr/local/gsl/include/gsl/gsl_const_cgsm.h	99;"	d
GSL_CONST_CGSM_POUNDAL	/usr/local/gsl/include/gsl/gsl_const_cgsm.h	87;"	d
GSL_CONST_CGSM_POUND_FORCE	/usr/local/gsl/include/gsl/gsl_const_cgsm.h	85;"	d
GSL_CONST_CGSM_POUND_MASS	/usr/local/gsl/include/gsl/gsl_const_cgsm.h	76;"	d
GSL_CONST_CGSM_PROTON_MAGNETIC_MOMENT	/usr/local/gsl/include/gsl/gsl_const_cgsm.h	42;"	d
GSL_CONST_CGSM_PSI	/usr/local/gsl/include/gsl/gsl_const_cgsm.h	98;"	d
GSL_CONST_CGSM_QUART	/usr/local/gsl/include/gsl/gsl_const_cgsm.h	65;"	d
GSL_CONST_CGSM_RAD	/usr/local/gsl/include/gsl/gsl_const_cgsm.h	113;"	d
GSL_CONST_CGSM_ROENTGEN	/usr/local/gsl/include/gsl/gsl_const_cgsm.h	112;"	d
GSL_CONST_CGSM_RYDBERG	/usr/local/gsl/include/gsl/gsl_const_cgsm.h	37;"	d
GSL_CONST_CGSM_SOLAR_MASS	/usr/local/gsl/include/gsl/gsl_const_cgsm.h	114;"	d
GSL_CONST_CGSM_SPEED_OF_LIGHT	/usr/local/gsl/include/gsl/gsl_const_cgsm.h	24;"	d
GSL_CONST_CGSM_STANDARD_GAS_VOLUME	/usr/local/gsl/include/gsl/gsl_const_cgsm.h	44;"	d
GSL_CONST_CGSM_STD_ATMOSPHERE	/usr/local/gsl/include/gsl/gsl_const_cgsm.h	93;"	d
GSL_CONST_CGSM_STEFAN_BOLTZMANN_CONSTANT	/usr/local/gsl/include/gsl/gsl_const_cgsm.h	120;"	d
GSL_CONST_CGSM_STILB	/usr/local/gsl/include/gsl/gsl_const_cgsm.h	104;"	d
GSL_CONST_CGSM_STOKES	/usr/local/gsl/include/gsl/gsl_const_cgsm.h	100;"	d
GSL_CONST_CGSM_TABLESPOON	/usr/local/gsl/include/gsl/gsl_const_cgsm.h	69;"	d
GSL_CONST_CGSM_TEASPOON	/usr/local/gsl/include/gsl/gsl_const_cgsm.h	70;"	d
GSL_CONST_CGSM_TEXPOINT	/usr/local/gsl/include/gsl/gsl_const_cgsm.h	57;"	d
GSL_CONST_CGSM_THERM	/usr/local/gsl/include/gsl/gsl_const_cgsm.h	90;"	d
GSL_CONST_CGSM_THOMSON_CROSS_SECTION	/usr/local/gsl/include/gsl/gsl_const_cgsm.h	121;"	d
GSL_CONST_CGSM_TON	/usr/local/gsl/include/gsl/gsl_const_cgsm.h	78;"	d
GSL_CONST_CGSM_TORR	/usr/local/gsl/include/gsl/gsl_const_cgsm.h	94;"	d
GSL_CONST_CGSM_TROY_OUNCE	/usr/local/gsl/include/gsl/gsl_const_cgsm.h	81;"	d
GSL_CONST_CGSM_UK_GALLON	/usr/local/gsl/include/gsl/gsl_const_cgsm.h	72;"	d
GSL_CONST_CGSM_UK_TON	/usr/local/gsl/include/gsl/gsl_const_cgsm.h	80;"	d
GSL_CONST_CGSM_UNIFIED_ATOMIC_MASS	/usr/local/gsl/include/gsl/gsl_const_cgsm.h	83;"	d
GSL_CONST_CGSM_US_GALLON	/usr/local/gsl/include/gsl/gsl_const_cgsm.h	64;"	d
GSL_CONST_CGSM_WEEK	/usr/local/gsl/include/gsl/gsl_const_cgsm.h	48;"	d
GSL_CONST_CGSM_YARD	/usr/local/gsl/include/gsl/gsl_const_cgsm.h	51;"	d
GSL_CONST_CGS_ACRE	/usr/local/gsl/include/gsl/gsl_const_cgs.h	61;"	d
GSL_CONST_CGS_ANGSTROM	/usr/local/gsl/include/gsl/gsl_const_cgs.h	59;"	d
GSL_CONST_CGS_ASTRONOMICAL_UNIT	/usr/local/gsl/include/gsl/gsl_const_cgs.h	28;"	d
GSL_CONST_CGS_BAR	/usr/local/gsl/include/gsl/gsl_const_cgs.h	92;"	d
GSL_CONST_CGS_BARN	/usr/local/gsl/include/gsl/gsl_const_cgs.h	62;"	d
GSL_CONST_CGS_BOHR_MAGNETON	/usr/local/gsl/include/gsl/gsl_const_cgs.h	39;"	d
GSL_CONST_CGS_BOHR_RADIUS	/usr/local/gsl/include/gsl/gsl_const_cgs.h	115;"	d
GSL_CONST_CGS_BOLTZMANN	/usr/local/gsl/include/gsl/gsl_const_cgs.h	38;"	d
GSL_CONST_CGS_BTU	/usr/local/gsl/include/gsl/gsl_const_cgs.h	89;"	d
GSL_CONST_CGS_CALORIE	/usr/local/gsl/include/gsl/gsl_const_cgs.h	88;"	d
GSL_CONST_CGS_CANADIAN_GALLON	/usr/local/gsl/include/gsl/gsl_const_cgs.h	71;"	d
GSL_CONST_CGS_CARAT	/usr/local/gsl/include/gsl/gsl_const_cgs.h	82;"	d
GSL_CONST_CGS_CUP	/usr/local/gsl/include/gsl/gsl_const_cgs.h	67;"	d
GSL_CONST_CGS_CURIE	/usr/local/gsl/include/gsl/gsl_const_cgs.h	111;"	d
GSL_CONST_CGS_DAY	/usr/local/gsl/include/gsl/gsl_const_cgs.h	47;"	d
GSL_CONST_CGS_DYNE	/usr/local/gsl/include/gsl/gsl_const_cgs.h	117;"	d
GSL_CONST_CGS_ELECTRON_CHARGE	/usr/local/gsl/include/gsl/gsl_const_cgs.h	102;"	d
GSL_CONST_CGS_ELECTRON_MAGNETIC_MOMENT	/usr/local/gsl/include/gsl/gsl_const_cgs.h	41;"	d
GSL_CONST_CGS_ELECTRON_VOLT	/usr/local/gsl/include/gsl/gsl_const_cgs.h	32;"	d
GSL_CONST_CGS_ERG	/usr/local/gsl/include/gsl/gsl_const_cgs.h	119;"	d
GSL_CONST_CGS_FARADAY	/usr/local/gsl/include/gsl/gsl_const_cgs.h	101;"	d
GSL_CONST_CGS_FATHOM	/usr/local/gsl/include/gsl/gsl_const_cgs.h	54;"	d
GSL_CONST_CGS_FLUID_OUNCE	/usr/local/gsl/include/gsl/gsl_const_cgs.h	68;"	d
GSL_CONST_CGS_FOOT	/usr/local/gsl/include/gsl/gsl_const_cgs.h	50;"	d
GSL_CONST_CGS_FOOTCANDLE	/usr/local/gsl/include/gsl/gsl_const_cgs.h	108;"	d
GSL_CONST_CGS_FOOTLAMBERT	/usr/local/gsl/include/gsl/gsl_const_cgs.h	110;"	d
GSL_CONST_CGS_GAUSS	/usr/local/gsl/include/gsl/gsl_const_cgs.h	103;"	d
GSL_CONST_CGS_GRAM_FORCE	/usr/local/gsl/include/gsl/gsl_const_cgs.h	84;"	d
GSL_CONST_CGS_GRAVITATIONAL_CONSTANT	/usr/local/gsl/include/gsl/gsl_const_cgs.h	25;"	d
GSL_CONST_CGS_GRAV_ACCEL	/usr/local/gsl/include/gsl/gsl_const_cgs.h	31;"	d
GSL_CONST_CGS_HECTARE	/usr/local/gsl/include/gsl/gsl_const_cgs.h	60;"	d
GSL_CONST_CGS_HORSEPOWER	/usr/local/gsl/include/gsl/gsl_const_cgs.h	91;"	d
GSL_CONST_CGS_HOUR	/usr/local/gsl/include/gsl/gsl_const_cgs.h	46;"	d
GSL_CONST_CGS_INCH	/usr/local/gsl/include/gsl/gsl_const_cgs.h	49;"	d
GSL_CONST_CGS_INCH_OF_MERCURY	/usr/local/gsl/include/gsl/gsl_const_cgs.h	96;"	d
GSL_CONST_CGS_INCH_OF_WATER	/usr/local/gsl/include/gsl/gsl_const_cgs.h	97;"	d
GSL_CONST_CGS_JOULE	/usr/local/gsl/include/gsl/gsl_const_cgs.h	118;"	d
GSL_CONST_CGS_KILOMETERS_PER_HOUR	/usr/local/gsl/include/gsl/gsl_const_cgs.h	74;"	d
GSL_CONST_CGS_KILOPOUND_FORCE	/usr/local/gsl/include/gsl/gsl_const_cgs.h	86;"	d
GSL_CONST_CGS_KNOT	/usr/local/gsl/include/gsl/gsl_const_cgs.h	75;"	d
GSL_CONST_CGS_LAMBERT	/usr/local/gsl/include/gsl/gsl_const_cgs.h	109;"	d
GSL_CONST_CGS_LIGHT_YEAR	/usr/local/gsl/include/gsl/gsl_const_cgs.h	29;"	d
GSL_CONST_CGS_LITER	/usr/local/gsl/include/gsl/gsl_const_cgs.h	63;"	d
GSL_CONST_CGS_LUMEN	/usr/local/gsl/include/gsl/gsl_const_cgs.h	105;"	d
GSL_CONST_CGS_LUX	/usr/local/gsl/include/gsl/gsl_const_cgs.h	106;"	d
GSL_CONST_CGS_MASS_ELECTRON	/usr/local/gsl/include/gsl/gsl_const_cgs.h	33;"	d
GSL_CONST_CGS_MASS_MUON	/usr/local/gsl/include/gsl/gsl_const_cgs.h	34;"	d
GSL_CONST_CGS_MASS_NEUTRON	/usr/local/gsl/include/gsl/gsl_const_cgs.h	36;"	d
GSL_CONST_CGS_MASS_PROTON	/usr/local/gsl/include/gsl/gsl_const_cgs.h	35;"	d
GSL_CONST_CGS_METER_OF_MERCURY	/usr/local/gsl/include/gsl/gsl_const_cgs.h	95;"	d
GSL_CONST_CGS_METRIC_TON	/usr/local/gsl/include/gsl/gsl_const_cgs.h	79;"	d
GSL_CONST_CGS_MICRON	/usr/local/gsl/include/gsl/gsl_const_cgs.h	58;"	d
GSL_CONST_CGS_MIL	/usr/local/gsl/include/gsl/gsl_const_cgs.h	55;"	d
GSL_CONST_CGS_MILE	/usr/local/gsl/include/gsl/gsl_const_cgs.h	52;"	d
GSL_CONST_CGS_MILES_PER_HOUR	/usr/local/gsl/include/gsl/gsl_const_cgs.h	73;"	d
GSL_CONST_CGS_MINUTE	/usr/local/gsl/include/gsl/gsl_const_cgs.h	45;"	d
GSL_CONST_CGS_MOLAR_GAS	/usr/local/gsl/include/gsl/gsl_const_cgs.h	43;"	d
GSL_CONST_CGS_NAUTICAL_MILE	/usr/local/gsl/include/gsl/gsl_const_cgs.h	53;"	d
GSL_CONST_CGS_NEWTON	/usr/local/gsl/include/gsl/gsl_const_cgs.h	116;"	d
GSL_CONST_CGS_NUCLEAR_MAGNETON	/usr/local/gsl/include/gsl/gsl_const_cgs.h	40;"	d
GSL_CONST_CGS_OUNCE_MASS	/usr/local/gsl/include/gsl/gsl_const_cgs.h	77;"	d
GSL_CONST_CGS_PARSEC	/usr/local/gsl/include/gsl/gsl_const_cgs.h	30;"	d
GSL_CONST_CGS_PHOT	/usr/local/gsl/include/gsl/gsl_const_cgs.h	107;"	d
GSL_CONST_CGS_PINT	/usr/local/gsl/include/gsl/gsl_const_cgs.h	66;"	d
GSL_CONST_CGS_PLANCKS_CONSTANT_H	/usr/local/gsl/include/gsl/gsl_const_cgs.h	26;"	d
GSL_CONST_CGS_PLANCKS_CONSTANT_HBAR	/usr/local/gsl/include/gsl/gsl_const_cgs.h	27;"	d
GSL_CONST_CGS_POINT	/usr/local/gsl/include/gsl/gsl_const_cgs.h	56;"	d
GSL_CONST_CGS_POISE	/usr/local/gsl/include/gsl/gsl_const_cgs.h	99;"	d
GSL_CONST_CGS_POUNDAL	/usr/local/gsl/include/gsl/gsl_const_cgs.h	87;"	d
GSL_CONST_CGS_POUND_FORCE	/usr/local/gsl/include/gsl/gsl_const_cgs.h	85;"	d
GSL_CONST_CGS_POUND_MASS	/usr/local/gsl/include/gsl/gsl_const_cgs.h	76;"	d
GSL_CONST_CGS_PROTON_MAGNETIC_MOMENT	/usr/local/gsl/include/gsl/gsl_const_cgs.h	42;"	d
GSL_CONST_CGS_PSI	/usr/local/gsl/include/gsl/gsl_const_cgs.h	98;"	d
GSL_CONST_CGS_QUART	/usr/local/gsl/include/gsl/gsl_const_cgs.h	65;"	d
GSL_CONST_CGS_RAD	/usr/local/gsl/include/gsl/gsl_const_cgs.h	113;"	d
GSL_CONST_CGS_ROENTGEN	/usr/local/gsl/include/gsl/gsl_const_cgs.h	112;"	d
GSL_CONST_CGS_RYDBERG	/usr/local/gsl/include/gsl/gsl_const_cgs.h	37;"	d
GSL_CONST_CGS_SOLAR_MASS	/usr/local/gsl/include/gsl/gsl_const_cgs.h	114;"	d
GSL_CONST_CGS_SPEED_OF_LIGHT	/usr/local/gsl/include/gsl/gsl_const_cgs.h	24;"	d
GSL_CONST_CGS_STANDARD_GAS_VOLUME	/usr/local/gsl/include/gsl/gsl_const_cgs.h	44;"	d
GSL_CONST_CGS_STD_ATMOSPHERE	/usr/local/gsl/include/gsl/gsl_const_cgs.h	93;"	d
GSL_CONST_CGS_STEFAN_BOLTZMANN_CONSTANT	/usr/local/gsl/include/gsl/gsl_const_cgs.h	120;"	d
GSL_CONST_CGS_STILB	/usr/local/gsl/include/gsl/gsl_const_cgs.h	104;"	d
GSL_CONST_CGS_STOKES	/usr/local/gsl/include/gsl/gsl_const_cgs.h	100;"	d
GSL_CONST_CGS_TABLESPOON	/usr/local/gsl/include/gsl/gsl_const_cgs.h	69;"	d
GSL_CONST_CGS_TEASPOON	/usr/local/gsl/include/gsl/gsl_const_cgs.h	70;"	d
GSL_CONST_CGS_TEXPOINT	/usr/local/gsl/include/gsl/gsl_const_cgs.h	57;"	d
GSL_CONST_CGS_THERM	/usr/local/gsl/include/gsl/gsl_const_cgs.h	90;"	d
GSL_CONST_CGS_THOMSON_CROSS_SECTION	/usr/local/gsl/include/gsl/gsl_const_cgs.h	121;"	d
GSL_CONST_CGS_TON	/usr/local/gsl/include/gsl/gsl_const_cgs.h	78;"	d
GSL_CONST_CGS_TORR	/usr/local/gsl/include/gsl/gsl_const_cgs.h	94;"	d
GSL_CONST_CGS_TROY_OUNCE	/usr/local/gsl/include/gsl/gsl_const_cgs.h	81;"	d
GSL_CONST_CGS_UK_GALLON	/usr/local/gsl/include/gsl/gsl_const_cgs.h	72;"	d
GSL_CONST_CGS_UK_TON	/usr/local/gsl/include/gsl/gsl_const_cgs.h	80;"	d
GSL_CONST_CGS_UNIFIED_ATOMIC_MASS	/usr/local/gsl/include/gsl/gsl_const_cgs.h	83;"	d
GSL_CONST_CGS_US_GALLON	/usr/local/gsl/include/gsl/gsl_const_cgs.h	64;"	d
GSL_CONST_CGS_WEEK	/usr/local/gsl/include/gsl/gsl_const_cgs.h	48;"	d
GSL_CONST_CGS_YARD	/usr/local/gsl/include/gsl/gsl_const_cgs.h	51;"	d
GSL_CONST_MKSA_ACRE	/usr/local/gsl/include/gsl/gsl_const_mksa.h	61;"	d
GSL_CONST_MKSA_ANGSTROM	/usr/local/gsl/include/gsl/gsl_const_mksa.h	59;"	d
GSL_CONST_MKSA_ASTRONOMICAL_UNIT	/usr/local/gsl/include/gsl/gsl_const_mksa.h	28;"	d
GSL_CONST_MKSA_BAR	/usr/local/gsl/include/gsl/gsl_const_mksa.h	92;"	d
GSL_CONST_MKSA_BARN	/usr/local/gsl/include/gsl/gsl_const_mksa.h	62;"	d
GSL_CONST_MKSA_BOHR_MAGNETON	/usr/local/gsl/include/gsl/gsl_const_mksa.h	39;"	d
GSL_CONST_MKSA_BOHR_RADIUS	/usr/local/gsl/include/gsl/gsl_const_mksa.h	115;"	d
GSL_CONST_MKSA_BOLTZMANN	/usr/local/gsl/include/gsl/gsl_const_mksa.h	38;"	d
GSL_CONST_MKSA_BTU	/usr/local/gsl/include/gsl/gsl_const_mksa.h	89;"	d
GSL_CONST_MKSA_CALORIE	/usr/local/gsl/include/gsl/gsl_const_mksa.h	88;"	d
GSL_CONST_MKSA_CANADIAN_GALLON	/usr/local/gsl/include/gsl/gsl_const_mksa.h	71;"	d
GSL_CONST_MKSA_CARAT	/usr/local/gsl/include/gsl/gsl_const_mksa.h	82;"	d
GSL_CONST_MKSA_CUP	/usr/local/gsl/include/gsl/gsl_const_mksa.h	67;"	d
GSL_CONST_MKSA_CURIE	/usr/local/gsl/include/gsl/gsl_const_mksa.h	111;"	d
GSL_CONST_MKSA_DAY	/usr/local/gsl/include/gsl/gsl_const_mksa.h	47;"	d
GSL_CONST_MKSA_DEBYE	/usr/local/gsl/include/gsl/gsl_const_mksa.h	124;"	d
GSL_CONST_MKSA_DYNE	/usr/local/gsl/include/gsl/gsl_const_mksa.h	117;"	d
GSL_CONST_MKSA_ELECTRON_CHARGE	/usr/local/gsl/include/gsl/gsl_const_mksa.h	102;"	d
GSL_CONST_MKSA_ELECTRON_MAGNETIC_MOMENT	/usr/local/gsl/include/gsl/gsl_const_mksa.h	41;"	d
GSL_CONST_MKSA_ELECTRON_VOLT	/usr/local/gsl/include/gsl/gsl_const_mksa.h	32;"	d
GSL_CONST_MKSA_ERG	/usr/local/gsl/include/gsl/gsl_const_mksa.h	119;"	d
GSL_CONST_MKSA_FARADAY	/usr/local/gsl/include/gsl/gsl_const_mksa.h	101;"	d
GSL_CONST_MKSA_FATHOM	/usr/local/gsl/include/gsl/gsl_const_mksa.h	54;"	d
GSL_CONST_MKSA_FLUID_OUNCE	/usr/local/gsl/include/gsl/gsl_const_mksa.h	68;"	d
GSL_CONST_MKSA_FOOT	/usr/local/gsl/include/gsl/gsl_const_mksa.h	50;"	d
GSL_CONST_MKSA_FOOTCANDLE	/usr/local/gsl/include/gsl/gsl_const_mksa.h	108;"	d
GSL_CONST_MKSA_FOOTLAMBERT	/usr/local/gsl/include/gsl/gsl_const_mksa.h	110;"	d
GSL_CONST_MKSA_GAUSS	/usr/local/gsl/include/gsl/gsl_const_mksa.h	103;"	d
GSL_CONST_MKSA_GRAM_FORCE	/usr/local/gsl/include/gsl/gsl_const_mksa.h	84;"	d
GSL_CONST_MKSA_GRAVITATIONAL_CONSTANT	/usr/local/gsl/include/gsl/gsl_const_mksa.h	25;"	d
GSL_CONST_MKSA_GRAV_ACCEL	/usr/local/gsl/include/gsl/gsl_const_mksa.h	31;"	d
GSL_CONST_MKSA_HECTARE	/usr/local/gsl/include/gsl/gsl_const_mksa.h	60;"	d
GSL_CONST_MKSA_HORSEPOWER	/usr/local/gsl/include/gsl/gsl_const_mksa.h	91;"	d
GSL_CONST_MKSA_HOUR	/usr/local/gsl/include/gsl/gsl_const_mksa.h	46;"	d
GSL_CONST_MKSA_INCH	/usr/local/gsl/include/gsl/gsl_const_mksa.h	49;"	d
GSL_CONST_MKSA_INCH_OF_MERCURY	/usr/local/gsl/include/gsl/gsl_const_mksa.h	96;"	d
GSL_CONST_MKSA_INCH_OF_WATER	/usr/local/gsl/include/gsl/gsl_const_mksa.h	97;"	d
GSL_CONST_MKSA_JOULE	/usr/local/gsl/include/gsl/gsl_const_mksa.h	118;"	d
GSL_CONST_MKSA_KILOMETERS_PER_HOUR	/usr/local/gsl/include/gsl/gsl_const_mksa.h	74;"	d
GSL_CONST_MKSA_KILOPOUND_FORCE	/usr/local/gsl/include/gsl/gsl_const_mksa.h	86;"	d
GSL_CONST_MKSA_KNOT	/usr/local/gsl/include/gsl/gsl_const_mksa.h	75;"	d
GSL_CONST_MKSA_LAMBERT	/usr/local/gsl/include/gsl/gsl_const_mksa.h	109;"	d
GSL_CONST_MKSA_LIGHT_YEAR	/usr/local/gsl/include/gsl/gsl_const_mksa.h	29;"	d
GSL_CONST_MKSA_LITER	/usr/local/gsl/include/gsl/gsl_const_mksa.h	63;"	d
GSL_CONST_MKSA_LUMEN	/usr/local/gsl/include/gsl/gsl_const_mksa.h	105;"	d
GSL_CONST_MKSA_LUX	/usr/local/gsl/include/gsl/gsl_const_mksa.h	106;"	d
GSL_CONST_MKSA_MASS_ELECTRON	/usr/local/gsl/include/gsl/gsl_const_mksa.h	33;"	d
GSL_CONST_MKSA_MASS_MUON	/usr/local/gsl/include/gsl/gsl_const_mksa.h	34;"	d
GSL_CONST_MKSA_MASS_NEUTRON	/usr/local/gsl/include/gsl/gsl_const_mksa.h	36;"	d
GSL_CONST_MKSA_MASS_PROTON	/usr/local/gsl/include/gsl/gsl_const_mksa.h	35;"	d
GSL_CONST_MKSA_METER_OF_MERCURY	/usr/local/gsl/include/gsl/gsl_const_mksa.h	95;"	d
GSL_CONST_MKSA_METRIC_TON	/usr/local/gsl/include/gsl/gsl_const_mksa.h	79;"	d
GSL_CONST_MKSA_MICRON	/usr/local/gsl/include/gsl/gsl_const_mksa.h	58;"	d
GSL_CONST_MKSA_MIL	/usr/local/gsl/include/gsl/gsl_const_mksa.h	55;"	d
GSL_CONST_MKSA_MILE	/usr/local/gsl/include/gsl/gsl_const_mksa.h	52;"	d
GSL_CONST_MKSA_MILES_PER_HOUR	/usr/local/gsl/include/gsl/gsl_const_mksa.h	73;"	d
GSL_CONST_MKSA_MINUTE	/usr/local/gsl/include/gsl/gsl_const_mksa.h	45;"	d
GSL_CONST_MKSA_MOLAR_GAS	/usr/local/gsl/include/gsl/gsl_const_mksa.h	43;"	d
GSL_CONST_MKSA_NAUTICAL_MILE	/usr/local/gsl/include/gsl/gsl_const_mksa.h	53;"	d
GSL_CONST_MKSA_NEWTON	/usr/local/gsl/include/gsl/gsl_const_mksa.h	116;"	d
GSL_CONST_MKSA_NUCLEAR_MAGNETON	/usr/local/gsl/include/gsl/gsl_const_mksa.h	40;"	d
GSL_CONST_MKSA_OUNCE_MASS	/usr/local/gsl/include/gsl/gsl_const_mksa.h	77;"	d
GSL_CONST_MKSA_PARSEC	/usr/local/gsl/include/gsl/gsl_const_mksa.h	30;"	d
GSL_CONST_MKSA_PHOT	/usr/local/gsl/include/gsl/gsl_const_mksa.h	107;"	d
GSL_CONST_MKSA_PINT	/usr/local/gsl/include/gsl/gsl_const_mksa.h	66;"	d
GSL_CONST_MKSA_PLANCKS_CONSTANT_H	/usr/local/gsl/include/gsl/gsl_const_mksa.h	26;"	d
GSL_CONST_MKSA_PLANCKS_CONSTANT_HBAR	/usr/local/gsl/include/gsl/gsl_const_mksa.h	27;"	d
GSL_CONST_MKSA_POINT	/usr/local/gsl/include/gsl/gsl_const_mksa.h	56;"	d
GSL_CONST_MKSA_POISE	/usr/local/gsl/include/gsl/gsl_const_mksa.h	99;"	d
GSL_CONST_MKSA_POUNDAL	/usr/local/gsl/include/gsl/gsl_const_mksa.h	87;"	d
GSL_CONST_MKSA_POUND_FORCE	/usr/local/gsl/include/gsl/gsl_const_mksa.h	85;"	d
GSL_CONST_MKSA_POUND_MASS	/usr/local/gsl/include/gsl/gsl_const_mksa.h	76;"	d
GSL_CONST_MKSA_PROTON_MAGNETIC_MOMENT	/usr/local/gsl/include/gsl/gsl_const_mksa.h	42;"	d
GSL_CONST_MKSA_PSI	/usr/local/gsl/include/gsl/gsl_const_mksa.h	98;"	d
GSL_CONST_MKSA_QUART	/usr/local/gsl/include/gsl/gsl_const_mksa.h	65;"	d
GSL_CONST_MKSA_RAD	/usr/local/gsl/include/gsl/gsl_const_mksa.h	113;"	d
GSL_CONST_MKSA_ROENTGEN	/usr/local/gsl/include/gsl/gsl_const_mksa.h	112;"	d
GSL_CONST_MKSA_RYDBERG	/usr/local/gsl/include/gsl/gsl_const_mksa.h	37;"	d
GSL_CONST_MKSA_SOLAR_MASS	/usr/local/gsl/include/gsl/gsl_const_mksa.h	114;"	d
GSL_CONST_MKSA_SPEED_OF_LIGHT	/usr/local/gsl/include/gsl/gsl_const_mksa.h	24;"	d
GSL_CONST_MKSA_STANDARD_GAS_VOLUME	/usr/local/gsl/include/gsl/gsl_const_mksa.h	44;"	d
GSL_CONST_MKSA_STD_ATMOSPHERE	/usr/local/gsl/include/gsl/gsl_const_mksa.h	93;"	d
GSL_CONST_MKSA_STEFAN_BOLTZMANN_CONSTANT	/usr/local/gsl/include/gsl/gsl_const_mksa.h	120;"	d
GSL_CONST_MKSA_STILB	/usr/local/gsl/include/gsl/gsl_const_mksa.h	104;"	d
GSL_CONST_MKSA_STOKES	/usr/local/gsl/include/gsl/gsl_const_mksa.h	100;"	d
GSL_CONST_MKSA_TABLESPOON	/usr/local/gsl/include/gsl/gsl_const_mksa.h	69;"	d
GSL_CONST_MKSA_TEASPOON	/usr/local/gsl/include/gsl/gsl_const_mksa.h	70;"	d
GSL_CONST_MKSA_TEXPOINT	/usr/local/gsl/include/gsl/gsl_const_mksa.h	57;"	d
GSL_CONST_MKSA_THERM	/usr/local/gsl/include/gsl/gsl_const_mksa.h	90;"	d
GSL_CONST_MKSA_THOMSON_CROSS_SECTION	/usr/local/gsl/include/gsl/gsl_const_mksa.h	121;"	d
GSL_CONST_MKSA_TON	/usr/local/gsl/include/gsl/gsl_const_mksa.h	78;"	d
GSL_CONST_MKSA_TORR	/usr/local/gsl/include/gsl/gsl_const_mksa.h	94;"	d
GSL_CONST_MKSA_TROY_OUNCE	/usr/local/gsl/include/gsl/gsl_const_mksa.h	81;"	d
GSL_CONST_MKSA_UK_GALLON	/usr/local/gsl/include/gsl/gsl_const_mksa.h	72;"	d
GSL_CONST_MKSA_UK_TON	/usr/local/gsl/include/gsl/gsl_const_mksa.h	80;"	d
GSL_CONST_MKSA_UNIFIED_ATOMIC_MASS	/usr/local/gsl/include/gsl/gsl_const_mksa.h	83;"	d
GSL_CONST_MKSA_US_GALLON	/usr/local/gsl/include/gsl/gsl_const_mksa.h	64;"	d
GSL_CONST_MKSA_VACUUM_PERMEABILITY	/usr/local/gsl/include/gsl/gsl_const_mksa.h	123;"	d
GSL_CONST_MKSA_VACUUM_PERMITTIVITY	/usr/local/gsl/include/gsl/gsl_const_mksa.h	122;"	d
GSL_CONST_MKSA_WEEK	/usr/local/gsl/include/gsl/gsl_const_mksa.h	48;"	d
GSL_CONST_MKSA_YARD	/usr/local/gsl/include/gsl/gsl_const_mksa.h	51;"	d
GSL_CONST_MKS_ACRE	/usr/local/gsl/include/gsl/gsl_const_mks.h	61;"	d
GSL_CONST_MKS_ANGSTROM	/usr/local/gsl/include/gsl/gsl_const_mks.h	59;"	d
GSL_CONST_MKS_ASTRONOMICAL_UNIT	/usr/local/gsl/include/gsl/gsl_const_mks.h	28;"	d
GSL_CONST_MKS_BAR	/usr/local/gsl/include/gsl/gsl_const_mks.h	92;"	d
GSL_CONST_MKS_BARN	/usr/local/gsl/include/gsl/gsl_const_mks.h	62;"	d
GSL_CONST_MKS_BOHR_MAGNETON	/usr/local/gsl/include/gsl/gsl_const_mks.h	39;"	d
GSL_CONST_MKS_BOHR_RADIUS	/usr/local/gsl/include/gsl/gsl_const_mks.h	115;"	d
GSL_CONST_MKS_BOLTZMANN	/usr/local/gsl/include/gsl/gsl_const_mks.h	38;"	d
GSL_CONST_MKS_BTU	/usr/local/gsl/include/gsl/gsl_const_mks.h	89;"	d
GSL_CONST_MKS_CALORIE	/usr/local/gsl/include/gsl/gsl_const_mks.h	88;"	d
GSL_CONST_MKS_CANADIAN_GALLON	/usr/local/gsl/include/gsl/gsl_const_mks.h	71;"	d
GSL_CONST_MKS_CARAT	/usr/local/gsl/include/gsl/gsl_const_mks.h	82;"	d
GSL_CONST_MKS_CUP	/usr/local/gsl/include/gsl/gsl_const_mks.h	67;"	d
GSL_CONST_MKS_CURIE	/usr/local/gsl/include/gsl/gsl_const_mks.h	111;"	d
GSL_CONST_MKS_DAY	/usr/local/gsl/include/gsl/gsl_const_mks.h	47;"	d
GSL_CONST_MKS_DEBYE	/usr/local/gsl/include/gsl/gsl_const_mks.h	124;"	d
GSL_CONST_MKS_DYNE	/usr/local/gsl/include/gsl/gsl_const_mks.h	117;"	d
GSL_CONST_MKS_ELECTRON_CHARGE	/usr/local/gsl/include/gsl/gsl_const_mks.h	102;"	d
GSL_CONST_MKS_ELECTRON_MAGNETIC_MOMENT	/usr/local/gsl/include/gsl/gsl_const_mks.h	41;"	d
GSL_CONST_MKS_ELECTRON_VOLT	/usr/local/gsl/include/gsl/gsl_const_mks.h	32;"	d
GSL_CONST_MKS_ERG	/usr/local/gsl/include/gsl/gsl_const_mks.h	119;"	d
GSL_CONST_MKS_FARADAY	/usr/local/gsl/include/gsl/gsl_const_mks.h	101;"	d
GSL_CONST_MKS_FATHOM	/usr/local/gsl/include/gsl/gsl_const_mks.h	54;"	d
GSL_CONST_MKS_FLUID_OUNCE	/usr/local/gsl/include/gsl/gsl_const_mks.h	68;"	d
GSL_CONST_MKS_FOOT	/usr/local/gsl/include/gsl/gsl_const_mks.h	50;"	d
GSL_CONST_MKS_FOOTCANDLE	/usr/local/gsl/include/gsl/gsl_const_mks.h	108;"	d
GSL_CONST_MKS_FOOTLAMBERT	/usr/local/gsl/include/gsl/gsl_const_mks.h	110;"	d
GSL_CONST_MKS_GAUSS	/usr/local/gsl/include/gsl/gsl_const_mks.h	103;"	d
GSL_CONST_MKS_GRAM_FORCE	/usr/local/gsl/include/gsl/gsl_const_mks.h	84;"	d
GSL_CONST_MKS_GRAVITATIONAL_CONSTANT	/usr/local/gsl/include/gsl/gsl_const_mks.h	25;"	d
GSL_CONST_MKS_GRAV_ACCEL	/usr/local/gsl/include/gsl/gsl_const_mks.h	31;"	d
GSL_CONST_MKS_HECTARE	/usr/local/gsl/include/gsl/gsl_const_mks.h	60;"	d
GSL_CONST_MKS_HORSEPOWER	/usr/local/gsl/include/gsl/gsl_const_mks.h	91;"	d
GSL_CONST_MKS_HOUR	/usr/local/gsl/include/gsl/gsl_const_mks.h	46;"	d
GSL_CONST_MKS_INCH	/usr/local/gsl/include/gsl/gsl_const_mks.h	49;"	d
GSL_CONST_MKS_INCH_OF_MERCURY	/usr/local/gsl/include/gsl/gsl_const_mks.h	96;"	d
GSL_CONST_MKS_INCH_OF_WATER	/usr/local/gsl/include/gsl/gsl_const_mks.h	97;"	d
GSL_CONST_MKS_JOULE	/usr/local/gsl/include/gsl/gsl_const_mks.h	118;"	d
GSL_CONST_MKS_KILOMETERS_PER_HOUR	/usr/local/gsl/include/gsl/gsl_const_mks.h	74;"	d
GSL_CONST_MKS_KILOPOUND_FORCE	/usr/local/gsl/include/gsl/gsl_const_mks.h	86;"	d
GSL_CONST_MKS_KNOT	/usr/local/gsl/include/gsl/gsl_const_mks.h	75;"	d
GSL_CONST_MKS_LAMBERT	/usr/local/gsl/include/gsl/gsl_const_mks.h	109;"	d
GSL_CONST_MKS_LIGHT_YEAR	/usr/local/gsl/include/gsl/gsl_const_mks.h	29;"	d
GSL_CONST_MKS_LITER	/usr/local/gsl/include/gsl/gsl_const_mks.h	63;"	d
GSL_CONST_MKS_LUMEN	/usr/local/gsl/include/gsl/gsl_const_mks.h	105;"	d
GSL_CONST_MKS_LUX	/usr/local/gsl/include/gsl/gsl_const_mks.h	106;"	d
GSL_CONST_MKS_MASS_ELECTRON	/usr/local/gsl/include/gsl/gsl_const_mks.h	33;"	d
GSL_CONST_MKS_MASS_MUON	/usr/local/gsl/include/gsl/gsl_const_mks.h	34;"	d
GSL_CONST_MKS_MASS_NEUTRON	/usr/local/gsl/include/gsl/gsl_const_mks.h	36;"	d
GSL_CONST_MKS_MASS_PROTON	/usr/local/gsl/include/gsl/gsl_const_mks.h	35;"	d
GSL_CONST_MKS_METER_OF_MERCURY	/usr/local/gsl/include/gsl/gsl_const_mks.h	95;"	d
GSL_CONST_MKS_METRIC_TON	/usr/local/gsl/include/gsl/gsl_const_mks.h	79;"	d
GSL_CONST_MKS_MICRON	/usr/local/gsl/include/gsl/gsl_const_mks.h	58;"	d
GSL_CONST_MKS_MIL	/usr/local/gsl/include/gsl/gsl_const_mks.h	55;"	d
GSL_CONST_MKS_MILE	/usr/local/gsl/include/gsl/gsl_const_mks.h	52;"	d
GSL_CONST_MKS_MILES_PER_HOUR	/usr/local/gsl/include/gsl/gsl_const_mks.h	73;"	d
GSL_CONST_MKS_MINUTE	/usr/local/gsl/include/gsl/gsl_const_mks.h	45;"	d
GSL_CONST_MKS_MOLAR_GAS	/usr/local/gsl/include/gsl/gsl_const_mks.h	43;"	d
GSL_CONST_MKS_NAUTICAL_MILE	/usr/local/gsl/include/gsl/gsl_const_mks.h	53;"	d
GSL_CONST_MKS_NEWTON	/usr/local/gsl/include/gsl/gsl_const_mks.h	116;"	d
GSL_CONST_MKS_NUCLEAR_MAGNETON	/usr/local/gsl/include/gsl/gsl_const_mks.h	40;"	d
GSL_CONST_MKS_OUNCE_MASS	/usr/local/gsl/include/gsl/gsl_const_mks.h	77;"	d
GSL_CONST_MKS_PARSEC	/usr/local/gsl/include/gsl/gsl_const_mks.h	30;"	d
GSL_CONST_MKS_PHOT	/usr/local/gsl/include/gsl/gsl_const_mks.h	107;"	d
GSL_CONST_MKS_PINT	/usr/local/gsl/include/gsl/gsl_const_mks.h	66;"	d
GSL_CONST_MKS_PLANCKS_CONSTANT_H	/usr/local/gsl/include/gsl/gsl_const_mks.h	26;"	d
GSL_CONST_MKS_PLANCKS_CONSTANT_HBAR	/usr/local/gsl/include/gsl/gsl_const_mks.h	27;"	d
GSL_CONST_MKS_POINT	/usr/local/gsl/include/gsl/gsl_const_mks.h	56;"	d
GSL_CONST_MKS_POISE	/usr/local/gsl/include/gsl/gsl_const_mks.h	99;"	d
GSL_CONST_MKS_POUNDAL	/usr/local/gsl/include/gsl/gsl_const_mks.h	87;"	d
GSL_CONST_MKS_POUND_FORCE	/usr/local/gsl/include/gsl/gsl_const_mks.h	85;"	d
GSL_CONST_MKS_POUND_MASS	/usr/local/gsl/include/gsl/gsl_const_mks.h	76;"	d
GSL_CONST_MKS_PROTON_MAGNETIC_MOMENT	/usr/local/gsl/include/gsl/gsl_const_mks.h	42;"	d
GSL_CONST_MKS_PSI	/usr/local/gsl/include/gsl/gsl_const_mks.h	98;"	d
GSL_CONST_MKS_QUART	/usr/local/gsl/include/gsl/gsl_const_mks.h	65;"	d
GSL_CONST_MKS_RAD	/usr/local/gsl/include/gsl/gsl_const_mks.h	113;"	d
GSL_CONST_MKS_ROENTGEN	/usr/local/gsl/include/gsl/gsl_const_mks.h	112;"	d
GSL_CONST_MKS_RYDBERG	/usr/local/gsl/include/gsl/gsl_const_mks.h	37;"	d
GSL_CONST_MKS_SOLAR_MASS	/usr/local/gsl/include/gsl/gsl_const_mks.h	114;"	d
GSL_CONST_MKS_SPEED_OF_LIGHT	/usr/local/gsl/include/gsl/gsl_const_mks.h	24;"	d
GSL_CONST_MKS_STANDARD_GAS_VOLUME	/usr/local/gsl/include/gsl/gsl_const_mks.h	44;"	d
GSL_CONST_MKS_STD_ATMOSPHERE	/usr/local/gsl/include/gsl/gsl_const_mks.h	93;"	d
GSL_CONST_MKS_STEFAN_BOLTZMANN_CONSTANT	/usr/local/gsl/include/gsl/gsl_const_mks.h	120;"	d
GSL_CONST_MKS_STILB	/usr/local/gsl/include/gsl/gsl_const_mks.h	104;"	d
GSL_CONST_MKS_STOKES	/usr/local/gsl/include/gsl/gsl_const_mks.h	100;"	d
GSL_CONST_MKS_TABLESPOON	/usr/local/gsl/include/gsl/gsl_const_mks.h	69;"	d
GSL_CONST_MKS_TEASPOON	/usr/local/gsl/include/gsl/gsl_const_mks.h	70;"	d
GSL_CONST_MKS_TEXPOINT	/usr/local/gsl/include/gsl/gsl_const_mks.h	57;"	d
GSL_CONST_MKS_THERM	/usr/local/gsl/include/gsl/gsl_const_mks.h	90;"	d
GSL_CONST_MKS_THOMSON_CROSS_SECTION	/usr/local/gsl/include/gsl/gsl_const_mks.h	121;"	d
GSL_CONST_MKS_TON	/usr/local/gsl/include/gsl/gsl_const_mks.h	78;"	d
GSL_CONST_MKS_TORR	/usr/local/gsl/include/gsl/gsl_const_mks.h	94;"	d
GSL_CONST_MKS_TROY_OUNCE	/usr/local/gsl/include/gsl/gsl_const_mks.h	81;"	d
GSL_CONST_MKS_UK_GALLON	/usr/local/gsl/include/gsl/gsl_const_mks.h	72;"	d
GSL_CONST_MKS_UK_TON	/usr/local/gsl/include/gsl/gsl_const_mks.h	80;"	d
GSL_CONST_MKS_UNIFIED_ATOMIC_MASS	/usr/local/gsl/include/gsl/gsl_const_mks.h	83;"	d
GSL_CONST_MKS_US_GALLON	/usr/local/gsl/include/gsl/gsl_const_mks.h	64;"	d
GSL_CONST_MKS_VACUUM_PERMEABILITY	/usr/local/gsl/include/gsl/gsl_const_mks.h	123;"	d
GSL_CONST_MKS_VACUUM_PERMITTIVITY	/usr/local/gsl/include/gsl/gsl_const_mks.h	122;"	d
GSL_CONST_MKS_WEEK	/usr/local/gsl/include/gsl/gsl_const_mks.h	48;"	d
GSL_CONST_MKS_YARD	/usr/local/gsl/include/gsl/gsl_const_mks.h	51;"	d
GSL_CONST_NUM_ATTO	/usr/local/gsl/include/gsl/gsl_const_num.h	39;"	d
GSL_CONST_NUM_AVOGADRO	/usr/local/gsl/include/gsl/gsl_const_num.h	25;"	d
GSL_CONST_NUM_EXA	/usr/local/gsl/include/gsl/gsl_const_num.h	28;"	d
GSL_CONST_NUM_FEMTO	/usr/local/gsl/include/gsl/gsl_const_num.h	38;"	d
GSL_CONST_NUM_FINE_STRUCTURE	/usr/local/gsl/include/gsl/gsl_const_num.h	24;"	d
GSL_CONST_NUM_GIGA	/usr/local/gsl/include/gsl/gsl_const_num.h	31;"	d
GSL_CONST_NUM_KILO	/usr/local/gsl/include/gsl/gsl_const_num.h	33;"	d
GSL_CONST_NUM_MEGA	/usr/local/gsl/include/gsl/gsl_const_num.h	32;"	d
GSL_CONST_NUM_MICRO	/usr/local/gsl/include/gsl/gsl_const_num.h	35;"	d
GSL_CONST_NUM_MILLI	/usr/local/gsl/include/gsl/gsl_const_num.h	34;"	d
GSL_CONST_NUM_NANO	/usr/local/gsl/include/gsl/gsl_const_num.h	36;"	d
GSL_CONST_NUM_PETA	/usr/local/gsl/include/gsl/gsl_const_num.h	29;"	d
GSL_CONST_NUM_PICO	/usr/local/gsl/include/gsl/gsl_const_num.h	37;"	d
GSL_CONST_NUM_TERA	/usr/local/gsl/include/gsl/gsl_const_num.h	30;"	d
GSL_CONST_NUM_YOCTO	/usr/local/gsl/include/gsl/gsl_const_num.h	41;"	d
GSL_CONST_NUM_YOTTA	/usr/local/gsl/include/gsl/gsl_const_num.h	26;"	d
GSL_CONST_NUM_ZEPTO	/usr/local/gsl/include/gsl/gsl_const_num.h	40;"	d
GSL_CONST_NUM_ZETTA	/usr/local/gsl/include/gsl/gsl_const_num.h	27;"	d
GSL_CONTINUE	/usr/local/gsl/include/gsl/gsl_errno.h	/^  GSL_CONTINUE = -2,  \/* iteration has not converged *\/$/;"	e	enum:__anon59
GSL_DBL_EPSILON	/usr/local/gsl/include/gsl/gsl_machine.h	17;"	d
GSL_DBL_MAX	/usr/local/gsl/include/gsl/gsl_machine.h	33;"	d
GSL_DBL_MIN	/usr/local/gsl/include/gsl/gsl_machine.h	25;"	d
GSL_EBADFUNC	/usr/local/gsl/include/gsl/gsl_errno.h	/^  GSL_EBADFUNC = 9,   \/* problem with user-supplied function *\/$/;"	e	enum:__anon59
GSL_EBADLEN	/usr/local/gsl/include/gsl/gsl_errno.h	/^  GSL_EBADLEN  = 19,  \/* matrix, vector lengths are not conformant *\/$/;"	e	enum:__anon59
GSL_EBADTOL	/usr/local/gsl/include/gsl/gsl_errno.h	/^  GSL_EBADTOL  = 13,  \/* user specified an invalid tolerance *\/$/;"	e	enum:__anon59
GSL_ECACHE	/usr/local/gsl/include/gsl/gsl_errno.h	/^  GSL_ECACHE   = 25,  \/* cache limit exceeded *\/$/;"	e	enum:__anon59
GSL_EDIVERGE	/usr/local/gsl/include/gsl/gsl_errno.h	/^  GSL_EDIVERGE = 22,  \/* integral or series is divergent *\/$/;"	e	enum:__anon59
GSL_EDOM	/usr/local/gsl/include/gsl/gsl_errno.h	/^  GSL_EDOM     = 1,   \/* input domain error, e.g sqrt(-1) *\/$/;"	e	enum:__anon59
GSL_EFACTOR	/usr/local/gsl/include/gsl/gsl_errno.h	/^  GSL_EFACTOR  = 6,   \/* factorization failed *\/$/;"	e	enum:__anon59
GSL_EFAILED	/usr/local/gsl/include/gsl/gsl_errno.h	/^  GSL_EFAILED  = 5,   \/* generic failure *\/$/;"	e	enum:__anon59
GSL_EFAULT	/usr/local/gsl/include/gsl/gsl_errno.h	/^  GSL_EFAULT   = 3,   \/* invalid pointer *\/$/;"	e	enum:__anon59
GSL_EIGEN_SORT_ABS_ASC	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  GSL_EIGEN_SORT_ABS_ASC,$/;"	e	enum:__anon89
GSL_EIGEN_SORT_ABS_DESC	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  GSL_EIGEN_SORT_ABS_DESC$/;"	e	enum:__anon89
GSL_EIGEN_SORT_VAL_ASC	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  GSL_EIGEN_SORT_VAL_ASC,$/;"	e	enum:__anon89
GSL_EIGEN_SORT_VAL_DESC	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  GSL_EIGEN_SORT_VAL_DESC,$/;"	e	enum:__anon89
GSL_EINVAL	/usr/local/gsl/include/gsl/gsl_errno.h	/^  GSL_EINVAL   = 4,   \/* invalid argument supplied by user *\/$/;"	e	enum:__anon59
GSL_ELOSS	/usr/local/gsl/include/gsl/gsl_errno.h	/^  GSL_ELOSS    = 17,  \/* loss of accuracy *\/$/;"	e	enum:__anon59
GSL_EMAXITER	/usr/local/gsl/include/gsl/gsl_errno.h	/^  GSL_EMAXITER = 11,  \/* exceeded max number of iterations *\/$/;"	e	enum:__anon59
GSL_ENOMEM	/usr/local/gsl/include/gsl/gsl_errno.h	/^  GSL_ENOMEM   = 8,   \/* malloc failed *\/$/;"	e	enum:__anon59
GSL_ENOPROG	/usr/local/gsl/include/gsl/gsl_errno.h	/^  GSL_ENOPROG  = 27,  \/* iteration is not making progress towards solution *\/$/;"	e	enum:__anon59
GSL_ENOPROGJ	/usr/local/gsl/include/gsl/gsl_errno.h	/^  GSL_ENOPROGJ = 28,  \/* jacobian evaluations are not improving the solution *\/$/;"	e	enum:__anon59
GSL_ENOTSQR	/usr/local/gsl/include/gsl/gsl_errno.h	/^  GSL_ENOTSQR  = 20,  \/* matrix not square *\/$/;"	e	enum:__anon59
GSL_EOF	/usr/local/gsl/include/gsl/gsl_errno.h	/^  GSL_EOF      = 32   \/* end of file *\/$/;"	e	enum:__anon59
GSL_EOVRFLW	/usr/local/gsl/include/gsl/gsl_errno.h	/^  GSL_EOVRFLW  = 16,  \/* overflow  *\/$/;"	e	enum:__anon59
GSL_ERANGE	/usr/local/gsl/include/gsl/gsl_errno.h	/^  GSL_ERANGE   = 2,   \/* output range error, e.g. exp(1e100) *\/$/;"	e	enum:__anon59
GSL_EROUND	/usr/local/gsl/include/gsl/gsl_errno.h	/^  GSL_EROUND   = 18,  \/* failed because of roundoff error *\/$/;"	e	enum:__anon59
GSL_ERROR	/usr/local/gsl/include/gsl/gsl_errno.h	104;"	d
GSL_ERROR_NULL	/usr/local/gsl/include/gsl/gsl_errno.h	129;"	d
GSL_ERROR_SELECT_2	/usr/local/gsl/include/gsl/gsl_errno.h	145;"	d
GSL_ERROR_SELECT_3	/usr/local/gsl/include/gsl/gsl_errno.h	146;"	d
GSL_ERROR_SELECT_4	/usr/local/gsl/include/gsl/gsl_errno.h	147;"	d
GSL_ERROR_SELECT_5	/usr/local/gsl/include/gsl/gsl_errno.h	148;"	d
GSL_ERROR_VAL	/usr/local/gsl/include/gsl/gsl_errno.h	112;"	d
GSL_ERROR_VOID	/usr/local/gsl/include/gsl/gsl_errno.h	121;"	d
GSL_ERUNAWAY	/usr/local/gsl/include/gsl/gsl_errno.h	/^  GSL_ERUNAWAY = 10,  \/* iterative process is out of control *\/$/;"	e	enum:__anon59
GSL_ESANITY	/usr/local/gsl/include/gsl/gsl_errno.h	/^  GSL_ESANITY  = 7,   \/* sanity check failed - shouldn't happen *\/$/;"	e	enum:__anon59
GSL_ESING	/usr/local/gsl/include/gsl/gsl_errno.h	/^  GSL_ESING    = 21,  \/* apparent singularity detected *\/$/;"	e	enum:__anon59
GSL_ETABLE	/usr/local/gsl/include/gsl/gsl_errno.h	/^  GSL_ETABLE   = 26,  \/* table limit exceeded *\/$/;"	e	enum:__anon59
GSL_ETOL	/usr/local/gsl/include/gsl/gsl_errno.h	/^  GSL_ETOL     = 14,  \/* failed to reach the specified tolerance *\/$/;"	e	enum:__anon59
GSL_ETOLF	/usr/local/gsl/include/gsl/gsl_errno.h	/^  GSL_ETOLF    = 29,  \/* cannot reach the specified tolerance in F *\/$/;"	e	enum:__anon59
GSL_ETOLG	/usr/local/gsl/include/gsl/gsl_errno.h	/^  GSL_ETOLG    = 31,  \/* cannot reach the specified tolerance in gradient *\/$/;"	e	enum:__anon59
GSL_ETOLX	/usr/local/gsl/include/gsl/gsl_errno.h	/^  GSL_ETOLX    = 30,  \/* cannot reach the specified tolerance in X *\/$/;"	e	enum:__anon59
GSL_EUNDRFLW	/usr/local/gsl/include/gsl/gsl_errno.h	/^  GSL_EUNDRFLW = 15,  \/* underflow *\/$/;"	e	enum:__anon59
GSL_EUNIMPL	/usr/local/gsl/include/gsl/gsl_errno.h	/^  GSL_EUNIMPL  = 24,  \/* requested feature not (yet) implemented *\/$/;"	e	enum:__anon59
GSL_EUNSUP	/usr/local/gsl/include/gsl/gsl_errno.h	/^  GSL_EUNSUP   = 23,  \/* requested feature is not supported by the hardware *\/$/;"	e	enum:__anon59
GSL_EZERODIV	/usr/local/gsl/include/gsl/gsl_errno.h	/^  GSL_EZERODIV = 12,  \/* tried to divide by zero *\/$/;"	e	enum:__anon59
GSL_FAILURE	/usr/local/gsl/include/gsl/gsl_errno.h	/^  GSL_FAILURE  = -1,$/;"	e	enum:__anon59
GSL_FLT_EPSILON	/usr/local/gsl/include/gsl/gsl_machine.h	41;"	d
GSL_FLT_MAX	/usr/local/gsl/include/gsl/gsl_machine.h	57;"	d
GSL_FLT_MIN	/usr/local/gsl/include/gsl/gsl_machine.h	49;"	d
GSL_FN_EVAL	/usr/local/gsl/include/gsl/gsl_math.h	131;"	d
GSL_FN_FDF_EVAL_DF	/usr/local/gsl/include/gsl/gsl_math.h	146;"	d
GSL_FN_FDF_EVAL_F	/usr/local/gsl/include/gsl/gsl_math.h	145;"	d
GSL_FN_FDF_EVAL_F_DF	/usr/local/gsl/include/gsl/gsl_math.h	147;"	d
GSL_FN_VEC_EVAL	/usr/local/gsl/include/gsl/gsl_math.h	160;"	d
GSL_IEEE_DOUBLE_PRECISION	/usr/local/gsl/include/gsl/gsl_ieee_utils.h	/^  GSL_IEEE_DOUBLE_PRECISION = 2,$/;"	e	enum:__anon122
GSL_IEEE_EXTENDED_PRECISION	/usr/local/gsl/include/gsl/gsl_ieee_utils.h	/^  GSL_IEEE_EXTENDED_PRECISION = 3$/;"	e	enum:__anon122
GSL_IEEE_MASK_ALL	/usr/local/gsl/include/gsl/gsl_ieee_utils.h	/^  GSL_IEEE_MASK_ALL = 31,$/;"	e	enum:__anon124
GSL_IEEE_MASK_DENORMALIZED	/usr/local/gsl/include/gsl/gsl_ieee_utils.h	/^  GSL_IEEE_MASK_DENORMALIZED = 2,$/;"	e	enum:__anon124
GSL_IEEE_MASK_DIVISION_BY_ZERO	/usr/local/gsl/include/gsl/gsl_ieee_utils.h	/^  GSL_IEEE_MASK_DIVISION_BY_ZERO = 4,$/;"	e	enum:__anon124
GSL_IEEE_MASK_INVALID	/usr/local/gsl/include/gsl/gsl_ieee_utils.h	/^  GSL_IEEE_MASK_INVALID = 1,$/;"	e	enum:__anon124
GSL_IEEE_MASK_OVERFLOW	/usr/local/gsl/include/gsl/gsl_ieee_utils.h	/^  GSL_IEEE_MASK_OVERFLOW = 8,$/;"	e	enum:__anon124
GSL_IEEE_MASK_UNDERFLOW	/usr/local/gsl/include/gsl/gsl_ieee_utils.h	/^  GSL_IEEE_MASK_UNDERFLOW = 16,$/;"	e	enum:__anon124
GSL_IEEE_ROUND_DOWN	/usr/local/gsl/include/gsl/gsl_ieee_utils.h	/^  GSL_IEEE_ROUND_DOWN = 2,$/;"	e	enum:__anon123
GSL_IEEE_ROUND_TO_NEAREST	/usr/local/gsl/include/gsl/gsl_ieee_utils.h	/^  GSL_IEEE_ROUND_TO_NEAREST = 1,$/;"	e	enum:__anon123
GSL_IEEE_ROUND_TO_ZERO	/usr/local/gsl/include/gsl/gsl_ieee_utils.h	/^  GSL_IEEE_ROUND_TO_ZERO = 4$/;"	e	enum:__anon123
GSL_IEEE_ROUND_UP	/usr/local/gsl/include/gsl/gsl_ieee_utils.h	/^  GSL_IEEE_ROUND_UP = 3,$/;"	e	enum:__anon123
GSL_IEEE_SINGLE_PRECISION	/usr/local/gsl/include/gsl/gsl_ieee_utils.h	/^  GSL_IEEE_SINGLE_PRECISION = 1,$/;"	e	enum:__anon122
GSL_IEEE_TRAP_INEXACT	/usr/local/gsl/include/gsl/gsl_ieee_utils.h	/^  GSL_IEEE_TRAP_INEXACT = 32$/;"	e	enum:__anon124
GSL_IEEE_TYPE_DENORMAL	/usr/local/gsl/include/gsl/gsl_ieee_utils.h	/^  GSL_IEEE_TYPE_DENORMAL = 4,$/;"	e	enum:__anon119
GSL_IEEE_TYPE_INF	/usr/local/gsl/include/gsl/gsl_ieee_utils.h	/^  GSL_IEEE_TYPE_INF = 2,$/;"	e	enum:__anon119
GSL_IEEE_TYPE_NAN	/usr/local/gsl/include/gsl/gsl_ieee_utils.h	/^  GSL_IEEE_TYPE_NAN = 1,$/;"	e	enum:__anon119
GSL_IEEE_TYPE_NORMAL	/usr/local/gsl/include/gsl/gsl_ieee_utils.h	/^  GSL_IEEE_TYPE_NORMAL = 3,$/;"	e	enum:__anon119
GSL_IEEE_TYPE_ZERO	/usr/local/gsl/include/gsl/gsl_ieee_utils.h	/^  GSL_IEEE_TYPE_ZERO = 5$/;"	e	enum:__anon119
GSL_IMAG	/usr/local/gsl/include/gsl/gsl_complex.h	89;"	d
GSL_INTEG_COSINE	/usr/local/gsl/include/gsl/gsl_integration.h	/^enum gsl_integration_qawo_enum { GSL_INTEG_COSINE, GSL_INTEG_SINE };$/;"	e	enum:gsl_integration_qawo_enum
GSL_INTEG_GAUSS15	/usr/local/gsl/include/gsl/gsl_integration.h	/^    GSL_INTEG_GAUSS15 = 1,      \/* 15 point Gauss-Kronrod rule *\/$/;"	e	enum:__anon48
GSL_INTEG_GAUSS21	/usr/local/gsl/include/gsl/gsl_integration.h	/^    GSL_INTEG_GAUSS21 = 2,      \/* 21 point Gauss-Kronrod rule *\/$/;"	e	enum:__anon48
GSL_INTEG_GAUSS31	/usr/local/gsl/include/gsl/gsl_integration.h	/^    GSL_INTEG_GAUSS31 = 3,      \/* 31 point Gauss-Kronrod rule *\/$/;"	e	enum:__anon48
GSL_INTEG_GAUSS41	/usr/local/gsl/include/gsl/gsl_integration.h	/^    GSL_INTEG_GAUSS41 = 4,      \/* 41 point Gauss-Kronrod rule *\/$/;"	e	enum:__anon48
GSL_INTEG_GAUSS51	/usr/local/gsl/include/gsl/gsl_integration.h	/^    GSL_INTEG_GAUSS51 = 5,      \/* 51 point Gauss-Kronrod rule *\/$/;"	e	enum:__anon48
GSL_INTEG_GAUSS61	/usr/local/gsl/include/gsl/gsl_integration.h	/^    GSL_INTEG_GAUSS61 = 6       \/* 61 point Gauss-Kronrod rule *\/$/;"	e	enum:__anon48
GSL_INTEG_SINE	/usr/local/gsl/include/gsl/gsl_integration.h	/^enum gsl_integration_qawo_enum { GSL_INTEG_COSINE, GSL_INTEG_SINE };$/;"	e	enum:gsl_integration_qawo_enum
GSL_IS_EVEN	/usr/local/gsl/include/gsl/gsl_math.h	115;"	d
GSL_IS_ODD	/usr/local/gsl/include/gsl/gsl_math.h	114;"	d
GSL_IS_REAL	/usr/local/gsl/include/gsl/gsl_math.h	119;"	d
GSL_LINALG_MOD_CONJUGATE	/usr/local/gsl/include/gsl/gsl_linalg.h	/^    GSL_LINALG_MOD_CONJUGATE = 2$/;"	e	enum:__anon131
GSL_LINALG_MOD_NONE	/usr/local/gsl/include/gsl/gsl_linalg.h	/^    GSL_LINALG_MOD_NONE = 0,$/;"	e	enum:__anon131
GSL_LINALG_MOD_TRANSPOSE	/usr/local/gsl/include/gsl/gsl_linalg.h	/^    GSL_LINALG_MOD_TRANSPOSE = 1,$/;"	e	enum:__anon131
GSL_LOG_DBL_EPSILON	/usr/local/gsl/include/gsl/gsl_machine.h	23;"	d
GSL_LOG_DBL_MAX	/usr/local/gsl/include/gsl/gsl_machine.h	39;"	d
GSL_LOG_DBL_MIN	/usr/local/gsl/include/gsl/gsl_machine.h	31;"	d
GSL_LOG_FLT_EPSILON	/usr/local/gsl/include/gsl/gsl_machine.h	47;"	d
GSL_LOG_FLT_MAX	/usr/local/gsl/include/gsl/gsl_machine.h	63;"	d
GSL_LOG_FLT_MIN	/usr/local/gsl/include/gsl/gsl_machine.h	55;"	d
GSL_LOG_MACH_EPS	/usr/local/gsl/include/gsl/gsl_machine.h	101;"	d
GSL_LOG_SFLT_EPSILON	/usr/local/gsl/include/gsl/gsl_machine.h	71;"	d
GSL_MACH_EPS	/usr/local/gsl/include/gsl/gsl_machine.h	77;"	d
GSL_MAX	/usr/local/gsl/include/gsl/gsl_minmax.h	39;"	d
GSL_MAX_DBL	/usr/local/gsl/include/gsl/gsl_minmax.h	/^GSL_MAX_DBL (double a, double b)$/;"	f	signature:(double a, double b)
GSL_MAX_DBL	/usr/local/gsl/include/gsl/gsl_minmax.h	/^INLINE_FUN double GSL_MAX_DBL (double a, double b);$/;"	p	signature:(double a, double b)
GSL_MAX_DBL	/usr/local/gsl/include/gsl/gsl_minmax.h	94;"	d
GSL_MAX_INT	/usr/local/gsl/include/gsl/gsl_minmax.h	/^GSL_MAX_INT (int a, int b)$/;"	f	signature:(int a, int b)
GSL_MAX_INT	/usr/local/gsl/include/gsl/gsl_minmax.h	/^INLINE_FUN int GSL_MAX_INT (int a, int b);$/;"	p	signature:(int a, int b)
GSL_MAX_INT	/usr/local/gsl/include/gsl/gsl_minmax.h	92;"	d
GSL_MAX_LDBL	/usr/local/gsl/include/gsl/gsl_minmax.h	/^GSL_MAX_LDBL (long double a, long double b)$/;"	f	signature:(long double a, long double b)
GSL_MAX_LDBL	/usr/local/gsl/include/gsl/gsl_minmax.h	/^INLINE_FUN long double GSL_MAX_LDBL (long double a, long double b);$/;"	p	signature:(long double a, long double b)
GSL_MAX_LDBL	/usr/local/gsl/include/gsl/gsl_minmax.h	96;"	d
GSL_MESSAGE	/usr/local/gsl/include/gsl/gsl_message.h	67;"	d
GSL_MESSAGE	/usr/local/gsl/include/gsl/gsl_message.h	69;"	d
GSL_MESSAGE_MASK	/usr/local/gsl/include/gsl/gsl_message.h	48;"	d
GSL_MESSAGE_MASK_A	/usr/local/gsl/include/gsl/gsl_message.h	/^  GSL_MESSAGE_MASK_A = 1,$/;"	e	enum:__anon3
GSL_MESSAGE_MASK_B	/usr/local/gsl/include/gsl/gsl_message.h	/^  GSL_MESSAGE_MASK_B = 2,$/;"	e	enum:__anon3
GSL_MESSAGE_MASK_C	/usr/local/gsl/include/gsl/gsl_message.h	/^  GSL_MESSAGE_MASK_C = 4,$/;"	e	enum:__anon3
GSL_MESSAGE_MASK_D	/usr/local/gsl/include/gsl/gsl_message.h	/^  GSL_MESSAGE_MASK_D = 8,$/;"	e	enum:__anon3
GSL_MESSAGE_MASK_E	/usr/local/gsl/include/gsl/gsl_message.h	/^  GSL_MESSAGE_MASK_E = 16,$/;"	e	enum:__anon3
GSL_MESSAGE_MASK_F	/usr/local/gsl/include/gsl/gsl_message.h	/^  GSL_MESSAGE_MASK_F = 32,$/;"	e	enum:__anon3
GSL_MESSAGE_MASK_G	/usr/local/gsl/include/gsl/gsl_message.h	/^  GSL_MESSAGE_MASK_G = 64,$/;"	e	enum:__anon3
GSL_MESSAGE_MASK_H	/usr/local/gsl/include/gsl/gsl_message.h	/^  GSL_MESSAGE_MASK_H = 128$/;"	e	enum:__anon3
GSL_MIN	/usr/local/gsl/include/gsl/gsl_minmax.h	40;"	d
GSL_MIN_DBL	/usr/local/gsl/include/gsl/gsl_minmax.h	/^GSL_MIN_DBL (double a, double b)$/;"	f	signature:(double a, double b)
GSL_MIN_DBL	/usr/local/gsl/include/gsl/gsl_minmax.h	/^INLINE_FUN double GSL_MIN_DBL (double a, double b);$/;"	p	signature:(double a, double b)
GSL_MIN_DBL	/usr/local/gsl/include/gsl/gsl_minmax.h	95;"	d
GSL_MIN_INT	/usr/local/gsl/include/gsl/gsl_minmax.h	/^GSL_MIN_INT (int a, int b)$/;"	f	signature:(int a, int b)
GSL_MIN_INT	/usr/local/gsl/include/gsl/gsl_minmax.h	/^INLINE_FUN int GSL_MIN_INT (int a, int b);$/;"	p	signature:(int a, int b)
GSL_MIN_INT	/usr/local/gsl/include/gsl/gsl_minmax.h	93;"	d
GSL_MIN_LDBL	/usr/local/gsl/include/gsl/gsl_minmax.h	/^GSL_MIN_LDBL (long double a, long double b)$/;"	f	signature:(long double a, long double b)
GSL_MIN_LDBL	/usr/local/gsl/include/gsl/gsl_minmax.h	/^INLINE_FUN long double GSL_MIN_LDBL (long double a, long double b);$/;"	p	signature:(long double a, long double b)
GSL_MIN_LDBL	/usr/local/gsl/include/gsl/gsl_minmax.h	97;"	d
GSL_MODE_DEFAULT	/usr/local/gsl/include/gsl/gsl_mode.h	83;"	d
GSL_MODE_PREC	/usr/local/gsl/include/gsl/gsl_mode.h	/^GSL_MODE_PREC(gsl_mode_t mt)$/;"	f	signature:(gsl_mode_t mt)
GSL_MODE_PREC	/usr/local/gsl/include/gsl/gsl_mode.h	/^INLINE_FUN unsigned int GSL_MODE_PREC(gsl_mode_t mt);$/;"	p	signature:(gsl_mode_t mt)
GSL_MODE_PREC	/usr/local/gsl/include/gsl/gsl_mode.h	77;"	d
GSL_MONTE_FN_EVAL	/usr/local/gsl/include/gsl/gsl_monte.h	50;"	d
GSL_MULTIFIT_FN_EVAL	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	59;"	d
GSL_MULTIFIT_FN_EVAL_DF	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	114;"	d
GSL_MULTIFIT_FN_EVAL_F	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	113;"	d
GSL_MULTIFIT_FN_EVAL_F_DF	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	115;"	d
GSL_MULTIMIN_FN_EVAL	/usr/local/gsl/include/gsl/gsl_multimin.h	56;"	d
GSL_MULTIMIN_FN_EVAL_DF	/usr/local/gsl/include/gsl/gsl_multimin.h	72;"	d
GSL_MULTIMIN_FN_EVAL_F	/usr/local/gsl/include/gsl/gsl_multimin.h	71;"	d
GSL_MULTIMIN_FN_EVAL_F_DF	/usr/local/gsl/include/gsl/gsl_multimin.h	73;"	d
GSL_MULTIROOT_FN_EVAL	/usr/local/gsl/include/gsl/gsl_multiroots.h	52;"	d
GSL_MULTIROOT_FN_EVAL_DF	/usr/local/gsl/include/gsl/gsl_multiroots.h	113;"	d
GSL_MULTIROOT_FN_EVAL_F	/usr/local/gsl/include/gsl/gsl_multiroots.h	112;"	d
GSL_MULTIROOT_FN_EVAL_F_DF	/usr/local/gsl/include/gsl/gsl_multiroots.h	114;"	d
GSL_NAN	/usr/local/gsl/include/gsl/gsl_nan.h	35;"	d
GSL_NAN	/usr/local/gsl/include/gsl/gsl_nan.h	37;"	d
GSL_NAN	/usr/local/gsl/include/gsl/gsl_nan.h	39;"	d
GSL_NEGINF	/usr/local/gsl/include/gsl/gsl_nan.h	25;"	d
GSL_NEGINF	/usr/local/gsl/include/gsl/gsl_nan.h	28;"	d
GSL_NEGINF	/usr/local/gsl/include/gsl/gsl_nan.h	31;"	d
GSL_NEGZERO	/usr/local/gsl/include/gsl/gsl_nan.h	43;"	d
GSL_ODEIV_FN_EVAL	/usr/local/gsl/include/gsl/gsl_odeiv.h	67;"	d
GSL_ODEIV_HADJ_DEC	/usr/local/gsl/include/gsl/gsl_odeiv.h	168;"	d
GSL_ODEIV_HADJ_INC	/usr/local/gsl/include/gsl/gsl_odeiv.h	166;"	d
GSL_ODEIV_HADJ_NIL	/usr/local/gsl/include/gsl/gsl_odeiv.h	167;"	d
GSL_ODEIV_JA_EVAL	/usr/local/gsl/include/gsl/gsl_odeiv.h	68;"	d
GSL_POSINF	/usr/local/gsl/include/gsl/gsl_nan.h	24;"	d
GSL_POSINF	/usr/local/gsl/include/gsl/gsl_nan.h	27;"	d
GSL_POSINF	/usr/local/gsl/include/gsl/gsl_nan.h	30;"	d
GSL_POSZERO	/usr/local/gsl/include/gsl/gsl_nan.h	42;"	d
GSL_PREC_APPROX	/usr/local/gsl/include/gsl/gsl_mode.h	68;"	d
GSL_PREC_DOUBLE	/usr/local/gsl/include/gsl/gsl_mode.h	66;"	d
GSL_PREC_SINGLE	/usr/local/gsl/include/gsl/gsl_mode.h	67;"	d
GSL_RANGE_CHECK	/usr/local/gsl/include/gsl/gsl_check_range.h	45;"	d
GSL_RANGE_CHECK	/usr/local/gsl/include/gsl/gsl_check_range.h	51;"	d
GSL_RANGE_COND	/usr/local/gsl/include/gsl/gsl_inline.h	65;"	d
GSL_REAL	/usr/local/gsl/include/gsl/gsl_complex.h	88;"	d
GSL_ROOT3_DBL_EPSILON	/usr/local/gsl/include/gsl/gsl_machine.h	19;"	d
GSL_ROOT3_DBL_MAX	/usr/local/gsl/include/gsl/gsl_machine.h	35;"	d
GSL_ROOT3_DBL_MIN	/usr/local/gsl/include/gsl/gsl_machine.h	27;"	d
GSL_ROOT3_FLT_EPSILON	/usr/local/gsl/include/gsl/gsl_machine.h	43;"	d
GSL_ROOT3_FLT_MAX	/usr/local/gsl/include/gsl/gsl_machine.h	59;"	d
GSL_ROOT3_FLT_MIN	/usr/local/gsl/include/gsl/gsl_machine.h	51;"	d
GSL_ROOT3_MACH_EPS	/usr/local/gsl/include/gsl/gsl_machine.h	97;"	d
GSL_ROOT3_SFLT_EPSILON	/usr/local/gsl/include/gsl/gsl_machine.h	67;"	d
GSL_ROOT4_DBL_EPSILON	/usr/local/gsl/include/gsl/gsl_machine.h	20;"	d
GSL_ROOT4_DBL_MAX	/usr/local/gsl/include/gsl/gsl_machine.h	36;"	d
GSL_ROOT4_DBL_MIN	/usr/local/gsl/include/gsl/gsl_machine.h	28;"	d
GSL_ROOT4_FLT_EPSILON	/usr/local/gsl/include/gsl/gsl_machine.h	44;"	d
GSL_ROOT4_FLT_MAX	/usr/local/gsl/include/gsl/gsl_machine.h	60;"	d
GSL_ROOT4_FLT_MIN	/usr/local/gsl/include/gsl/gsl_machine.h	52;"	d
GSL_ROOT4_MACH_EPS	/usr/local/gsl/include/gsl/gsl_machine.h	98;"	d
GSL_ROOT4_SFLT_EPSILON	/usr/local/gsl/include/gsl/gsl_machine.h	68;"	d
GSL_ROOT5_DBL_EPSILON	/usr/local/gsl/include/gsl/gsl_machine.h	21;"	d
GSL_ROOT5_DBL_MAX	/usr/local/gsl/include/gsl/gsl_machine.h	37;"	d
GSL_ROOT5_DBL_MIN	/usr/local/gsl/include/gsl/gsl_machine.h	29;"	d
GSL_ROOT5_FLT_EPSILON	/usr/local/gsl/include/gsl/gsl_machine.h	45;"	d
GSL_ROOT5_FLT_MAX	/usr/local/gsl/include/gsl/gsl_machine.h	61;"	d
GSL_ROOT5_FLT_MIN	/usr/local/gsl/include/gsl/gsl_machine.h	53;"	d
GSL_ROOT5_MACH_EPS	/usr/local/gsl/include/gsl/gsl_machine.h	99;"	d
GSL_ROOT5_SFLT_EPSILON	/usr/local/gsl/include/gsl/gsl_machine.h	69;"	d
GSL_ROOT6_DBL_EPSILON	/usr/local/gsl/include/gsl/gsl_machine.h	22;"	d
GSL_ROOT6_DBL_MAX	/usr/local/gsl/include/gsl/gsl_machine.h	38;"	d
GSL_ROOT6_DBL_MIN	/usr/local/gsl/include/gsl/gsl_machine.h	30;"	d
GSL_ROOT6_FLT_EPSILON	/usr/local/gsl/include/gsl/gsl_machine.h	46;"	d
GSL_ROOT6_FLT_MAX	/usr/local/gsl/include/gsl/gsl_machine.h	62;"	d
GSL_ROOT6_FLT_MIN	/usr/local/gsl/include/gsl/gsl_machine.h	54;"	d
GSL_ROOT6_MACH_EPS	/usr/local/gsl/include/gsl/gsl_machine.h	100;"	d
GSL_ROOT6_SFLT_EPSILON	/usr/local/gsl/include/gsl/gsl_machine.h	70;"	d
GSL_SET_COMPLEX	/usr/local/gsl/include/gsl/gsl_complex.h	95;"	d
GSL_SET_COMPLEX_PACKED	/usr/local/gsl/include/gsl/gsl_complex.h	99;"	d
GSL_SET_IMAG	/usr/local/gsl/include/gsl/gsl_complex.h	97;"	d
GSL_SET_REAL	/usr/local/gsl/include/gsl/gsl_complex.h	96;"	d
GSL_SFLT_EPSILON	/usr/local/gsl/include/gsl/gsl_machine.h	65;"	d
GSL_SF_DOUBLEFACT_NMAX	/usr/local/gsl/include/gsl/gsl_sf_gamma.h	289;"	d
GSL_SF_FACT_NMAX	/usr/local/gsl/include/gsl/gsl_sf_gamma.h	286;"	d
GSL_SF_GAMMA_XMAX	/usr/local/gsl/include/gsl/gsl_sf_gamma.h	283;"	d
GSL_SF_MATHIEU_COEFF	/usr/local/gsl/include/gsl/gsl_sf_mathieu.h	40;"	d
GSL_SF_RESULT_SET	/usr/local/gsl/include/gsl/gsl_sf_result.h	43;"	d
GSL_SIGN	/usr/local/gsl/include/gsl/gsl_math.h	116;"	d
GSL_SQRT_DBL_EPSILON	/usr/local/gsl/include/gsl/gsl_machine.h	18;"	d
GSL_SQRT_DBL_MAX	/usr/local/gsl/include/gsl/gsl_machine.h	34;"	d
GSL_SQRT_DBL_MIN	/usr/local/gsl/include/gsl/gsl_machine.h	26;"	d
GSL_SQRT_FLT_EPSILON	/usr/local/gsl/include/gsl/gsl_machine.h	42;"	d
GSL_SQRT_FLT_MAX	/usr/local/gsl/include/gsl/gsl_machine.h	58;"	d
GSL_SQRT_FLT_MIN	/usr/local/gsl/include/gsl/gsl_machine.h	50;"	d
GSL_SQRT_MACH_EPS	/usr/local/gsl/include/gsl/gsl_machine.h	96;"	d
GSL_SQRT_SFLT_EPSILON	/usr/local/gsl/include/gsl/gsl_machine.h	66;"	d
GSL_STATUS_UPDATE	/usr/local/gsl/include/gsl/gsl_errno.h	150;"	d
GSL_SUCCESS	/usr/local/gsl/include/gsl/gsl_errno.h	/^  GSL_SUCCESS  = 0, $/;"	e	enum:__anon59
GSL_VAR	/usr/local/gsl/include/gsl/gsl_types.h	28;"	d
GSL_VAR	/usr/local/gsl/include/gsl/gsl_types.h	30;"	d
GSL_VAR	/usr/local/gsl/include/gsl/gsl_types.h	33;"	d
GSL_VAR	/usr/local/gsl/include/gsl/gsl_types.h	36;"	d
GSL_VECTOR_COMPLEX	/usr/local/gsl/include/gsl/gsl_vector_complex.h	10;"	d
GSL_VECTOR_COMPLEX	/usr/local/gsl/include/gsl/gsl_vector_complex.h	8;"	d
GSL_VECTOR_IMAG	/usr/local/gsl/include/gsl/gsl_vector_complex.h	5;"	d
GSL_VECTOR_REAL	/usr/local/gsl/include/gsl/gsl_vector_complex.h	4;"	d
GSL_VEGAS_MODE_IMPORTANCE	/usr/local/gsl/include/gsl/gsl_monte_vegas.h	/^enum {GSL_VEGAS_MODE_IMPORTANCE = 1, $/;"	e	enum:__anon109
GSL_VEGAS_MODE_IMPORTANCE_ONLY	/usr/local/gsl/include/gsl/gsl_monte_vegas.h	/^      GSL_VEGAS_MODE_IMPORTANCE_ONLY = 0, $/;"	e	enum:__anon109
GSL_VEGAS_MODE_STRATIFIED	/usr/local/gsl/include/gsl/gsl_monte_vegas.h	/^      GSL_VEGAS_MODE_STRATIFIED = -1};$/;"	e	enum:__anon109
GSL_VERSION	/usr/local/gsl/include/gsl/gsl_version.h	18;"	d
H	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  gsl_matrix *H;          \/* pointer to hessenberg matrix *\/$/;"	m	struct:__anon87	access:public
H	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  gsl_matrix *H;         \/* pointer to Hessenberg matrix *\/$/;"	m	struct:__anon80	access:public
INLINE_DECL	/usr/local/gsl/include/gsl/gsl_inline.h	51;"	d
INLINE_DECL	/usr/local/gsl/include/gsl/gsl_inline.h	54;"	d
INLINE_DECL	/usr/local/gsl/include/gsl/gsl_inline.h	58;"	d
INLINE_FUN	/usr/local/gsl/include/gsl/gsl_inline.h	52;"	d
INLINE_FUN	/usr/local/gsl/include/gsl/gsl_inline.h	55;"	d
J	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	/^    gsl_matrix * J;$/;"	m	struct:__anon9	access:public
J	/usr/local/gsl/include/gsl/gsl_multiroots.h	/^    gsl_matrix * J;$/;"	m	struct:__anon181	access:public
J2	/usr/local/gsl/include/gsl/gsl_dht.h	/^  double *  J2;    \/* transform denominator, J_{nu+1}^2(j_m)         *\/$/;"	m	struct:gsl_dht_struct	access:public
Jjj	/usr/local/gsl/include/gsl/gsl_dht.h	/^  double *  Jjj;   \/* transform numerator, J_nu(j_i j_m \/ j_N)       *\/$/;"	m	struct:gsl_dht_struct	access:public
K	/usr/local/gsl/include/gsl/gsl_randist.h	/^    size_t K;$/;"	m	struct:__anon34	access:public
L	/usr/local/gsl/include/gsl/gsl_integration.h	/^  double L;$/;"	m	struct:__anon47	access:public
M_1_PI	/usr/local/gsl/include/gsl/gsl_math.h	77;"	d
M_2_PI	/usr/local/gsl/include/gsl/gsl_math.h	81;"	d
M_2_SQRTPI	/usr/local/gsl/include/gsl/gsl_math.h	73;"	d
M_E	/usr/local/gsl/include/gsl/gsl_math.h	32;"	d
M_EULER	/usr/local/gsl/include/gsl/gsl_math.h	97;"	d
M_LN10	/usr/local/gsl/include/gsl/gsl_math.h	85;"	d
M_LN2	/usr/local/gsl/include/gsl/gsl_math.h	89;"	d
M_LNPI	/usr/local/gsl/include/gsl/gsl_math.h	93;"	d
M_LOG10E	/usr/local/gsl/include/gsl/gsl_math.h	40;"	d
M_LOG2E	/usr/local/gsl/include/gsl/gsl_math.h	36;"	d
M_PI	/usr/local/gsl/include/gsl/gsl_math.h	57;"	d
M_PI_2	/usr/local/gsl/include/gsl/gsl_math.h	61;"	d
M_PI_4	/usr/local/gsl/include/gsl/gsl_math.h	65;"	d
M_SQRT1_2	/usr/local/gsl/include/gsl/gsl_math.h	48;"	d
M_SQRT2	/usr/local/gsl/include/gsl/gsl_math.h	44;"	d
M_SQRT3	/usr/local/gsl/include/gsl/gsl_math.h	53;"	d
M_SQRTPI	/usr/local/gsl/include/gsl/gsl_math.h	69;"	d
Q	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  gsl_matrix *Q;          \/* pointer to left Schur vectors *\/$/;"	m	struct:__anon87	access:public
Q	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  gsl_matrix *Q;          \/* pointer to left Schur vectors *\/$/;"	m	struct:__anon88	access:public
Q	/usr/local/gsl/include/gsl/gsl_multifit.h	/^  gsl_matrix * Q;$/;"	m	struct:__anon118	access:public
QSI	/usr/local/gsl/include/gsl/gsl_multifit.h	/^  gsl_matrix * QSI;$/;"	m	struct:__anon118	access:public
R	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  gsl_matrix *R;          \/* pointer to upper triangular matrix *\/$/;"	m	struct:__anon87	access:public
S	/usr/local/gsl/include/gsl/gsl_multifit.h	/^  gsl_vector * S;$/;"	m	struct:__anon118	access:public
Z	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  gsl_matrix *Z;               \/* pointer to Schur vectors *\/$/;"	m	struct:__anon82	access:public
Z	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  gsl_matrix *Z;               \/* pointer to Z matrix *\/$/;"	m	struct:__anon81	access:public
Z	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  gsl_matrix *Z;          \/* pointer to right Schur vectors *\/$/;"	m	struct:__anon87	access:public
Z	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  gsl_matrix *Z;          \/* pointer to right Schur vectors *\/$/;"	m	struct:__anon88	access:public
Z	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  gsl_matrix *Z;         \/* pointer to Schur vector matrix *\/$/;"	m	struct:__anon80	access:public
_GSL_PREC_T_NUM	/usr/local/gsl/include/gsl/gsl_precision.h	49;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_blas.h	32;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_blas.h	35;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_blas.h	38;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_blas_types.h	30;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_blas_types.h	33;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_blas_types.h	36;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_block_char.h	26;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_block_char.h	29;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_block_char.h	32;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_block_complex_double.h	26;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_block_complex_double.h	29;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_block_complex_double.h	32;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_block_complex_float.h	26;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_block_complex_float.h	29;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_block_complex_float.h	32;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_block_complex_long_double.h	26;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_block_complex_long_double.h	29;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_block_complex_long_double.h	32;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_block_double.h	26;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_block_double.h	29;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_block_double.h	32;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_block_float.h	26;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_block_float.h	29;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_block_float.h	32;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_block_int.h	26;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_block_int.h	29;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_block_int.h	32;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_block_long.h	26;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_block_long.h	29;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_block_long.h	32;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_block_long_double.h	26;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_block_long_double.h	29;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_block_long_double.h	32;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_block_short.h	26;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_block_short.h	29;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_block_short.h	32;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_block_uchar.h	26;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_block_uchar.h	29;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_block_uchar.h	32;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_block_uint.h	26;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_block_uint.h	29;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_block_uint.h	32;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_block_ulong.h	26;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_block_ulong.h	29;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_block_ulong.h	32;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_block_ushort.h	26;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_block_ushort.h	29;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_block_ushort.h	32;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_bspline.h	29;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_bspline.h	32;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_bspline.h	35;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_cblas.h	29;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_cblas.h	32;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_cblas.h	35;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_cdf.h	25;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_cdf.h	28;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_cdf.h	31;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_chebyshev.h	26;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_chebyshev.h	29;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_chebyshev.h	32;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_check_range.h	26;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_check_range.h	29;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_check_range.h	32;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_combination.h	30;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_combination.h	33;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_combination.h	36;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_complex.h	23;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_complex.h	26;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_complex.h	29;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_complex_math.h	25;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_complex_math.h	28;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_complex_math.h	31;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_deriv.h	24;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_deriv.h	27;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_deriv.h	30;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_dft_complex.h	29;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_dft_complex.h	32;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_dft_complex.h	35;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_dft_complex_float.h	29;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_dft_complex_float.h	32;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_dft_complex_float.h	35;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_dht.h	25;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_dht.h	28;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_dht.h	31;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_diff.h	24;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_diff.h	27;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_diff.h	30;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_eigen.h	26;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_eigen.h	29;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_eigen.h	32;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_errno.h	27;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_errno.h	30;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_errno.h	33;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_fft.h	25;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_fft.h	28;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_fft.h	31;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_fft_complex.h	29;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_fft_complex.h	32;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_fft_complex.h	35;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_fft_complex_float.h	29;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_fft_complex_float.h	32;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_fft_complex_float.h	35;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_fft_halfcomplex.h	30;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_fft_halfcomplex.h	33;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_fft_halfcomplex.h	36;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_fft_halfcomplex_float.h	30;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_fft_halfcomplex_float.h	33;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_fft_halfcomplex_float.h	36;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_fft_real.h	29;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_fft_real.h	32;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_fft_real.h	35;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_fft_real_float.h	29;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_fft_real_float.h	32;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_fft_real_float.h	35;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_fit.h	26;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_fit.h	29;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_fit.h	32;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_heapsort.h	25;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_heapsort.h	28;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_heapsort.h	31;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_histogram.h	26;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_histogram.h	29;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_histogram.h	32;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_histogram2d.h	26;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_histogram2d.h	29;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_histogram2d.h	32;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_ieee_utils.h	24;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_ieee_utils.h	27;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_ieee_utils.h	30;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_integration.h	25;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_integration.h	28;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_integration.h	31;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_interp.h	28;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_interp.h	31;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_interp.h	34;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_linalg.h	28;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_linalg.h	31;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_linalg.h	34;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_math.h	100;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_math.h	103;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_math.h	106;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_matrix_char.h	30;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_matrix_char.h	33;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_matrix_char.h	36;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_matrix_complex_double.h	30;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_matrix_complex_double.h	33;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_matrix_complex_double.h	36;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_matrix_complex_float.h	30;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_matrix_complex_float.h	33;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_matrix_complex_float.h	36;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_matrix_complex_long_double.h	30;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_matrix_complex_long_double.h	33;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_matrix_complex_long_double.h	36;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_matrix_double.h	30;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_matrix_double.h	33;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_matrix_double.h	36;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_matrix_float.h	30;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_matrix_float.h	33;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_matrix_float.h	36;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_matrix_int.h	30;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_matrix_int.h	33;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_matrix_int.h	36;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_matrix_long.h	30;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_matrix_long.h	33;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_matrix_long.h	36;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	30;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	33;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	36;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_matrix_short.h	30;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_matrix_short.h	33;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_matrix_short.h	36;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	30;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	33;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	36;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	30;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	33;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	36;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	30;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	33;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	36;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	30;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	33;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	36;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_message.h	24;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_message.h	27;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_message.h	30;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_min.h	27;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_min.h	30;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_min.h	33;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_minmax.h	24;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_minmax.h	27;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_minmax.h	30;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_mode.h	26;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_mode.h	29;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_mode.h	32;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_monte.h	26;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_monte.h	29;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_monte.h	32;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_monte_miser.h	29;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_monte_miser.h	32;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_monte_miser.h	35;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_monte_plain.h	31;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_monte_plain.h	34;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_monte_plain.h	37;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_monte_vegas.h	28;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_monte_vegas.h	31;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_monte_vegas.h	34;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_multifit.h	28;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_multifit.h	31;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_multifit.h	34;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	29;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	32;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	35;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_multimin.h	33;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_multimin.h	36;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_multimin.h	39;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_multiroots.h	29;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_multiroots.h	32;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_multiroots.h	35;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_ntuple.h	31;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_ntuple.h	34;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_ntuple.h	37;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_odeiv.h	29;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_odeiv.h	32;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_odeiv.h	35;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_permutation.h	29;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_permutation.h	32;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_permutation.h	35;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_permute_char.h	27;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_permute_char.h	30;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_permute_char.h	33;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_permute_complex_double.h	28;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_permute_complex_double.h	31;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_permute_complex_double.h	34;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_permute_complex_float.h	28;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_permute_complex_float.h	31;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_permute_complex_float.h	34;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_permute_complex_long_double.h	28;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_permute_complex_long_double.h	31;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_permute_complex_long_double.h	34;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_permute_double.h	27;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_permute_double.h	30;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_permute_double.h	33;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_permute_float.h	27;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_permute_float.h	30;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_permute_float.h	33;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_permute_int.h	27;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_permute_int.h	30;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_permute_int.h	33;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_permute_long.h	27;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_permute_long.h	30;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_permute_long.h	33;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_permute_long_double.h	27;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_permute_long_double.h	30;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_permute_long_double.h	33;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_permute_short.h	27;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_permute_short.h	30;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_permute_short.h	33;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_permute_uchar.h	27;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_permute_uchar.h	30;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_permute_uchar.h	33;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_permute_uint.h	27;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_permute_uint.h	30;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_permute_uint.h	33;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_permute_ulong.h	27;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_permute_ulong.h	30;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_permute_ulong.h	33;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_permute_ushort.h	27;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_permute_ushort.h	30;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_permute_ushort.h	33;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_permute_vector_char.h	28;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_permute_vector_char.h	31;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_permute_vector_char.h	34;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_permute_vector_complex_double.h	28;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_permute_vector_complex_double.h	31;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_permute_vector_complex_double.h	34;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_permute_vector_complex_float.h	28;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_permute_vector_complex_float.h	31;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_permute_vector_complex_float.h	34;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_permute_vector_complex_long_double.h	28;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_permute_vector_complex_long_double.h	31;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_permute_vector_complex_long_double.h	34;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_permute_vector_double.h	28;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_permute_vector_double.h	31;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_permute_vector_double.h	34;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_permute_vector_float.h	28;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_permute_vector_float.h	31;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_permute_vector_float.h	34;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_permute_vector_int.h	28;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_permute_vector_int.h	31;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_permute_vector_int.h	34;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_permute_vector_long.h	28;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_permute_vector_long.h	31;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_permute_vector_long.h	34;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_permute_vector_long_double.h	28;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_permute_vector_long_double.h	31;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_permute_vector_long_double.h	34;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_permute_vector_short.h	28;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_permute_vector_short.h	31;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_permute_vector_short.h	34;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_permute_vector_uchar.h	28;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_permute_vector_uchar.h	31;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_permute_vector_uchar.h	34;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_permute_vector_uint.h	28;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_permute_vector_uint.h	31;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_permute_vector_uint.h	34;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_permute_vector_ulong.h	28;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_permute_vector_ulong.h	31;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_permute_vector_ulong.h	34;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_permute_vector_ushort.h	28;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_permute_vector_ushort.h	31;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_permute_vector_ushort.h	34;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_poly.h	27;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_poly.h	30;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_poly.h	33;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_pow_int.h	24;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_pow_int.h	27;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_pow_int.h	30;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_precision.h	26;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_precision.h	29;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_precision.h	32;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_qrng.h	11;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_qrng.h	14;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_qrng.h	17;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_randist.h	24;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_randist.h	27;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_randist.h	30;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_rng.h	27;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_rng.h	30;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_rng.h	33;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_roots.h	27;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_roots.h	30;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_roots.h	33;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sf_airy.h	28;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sf_airy.h	31;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sf_airy.h	34;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	30;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	33;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	36;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sf_clausen.h	27;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sf_clausen.h	30;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sf_clausen.h	33;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sf_coulomb.h	28;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sf_coulomb.h	31;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sf_coulomb.h	34;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sf_coupling.h	27;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sf_coupling.h	30;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sf_coupling.h	33;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sf_dawson.h	27;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sf_dawson.h	30;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sf_dawson.h	33;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sf_debye.h	28;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sf_debye.h	31;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sf_debye.h	34;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sf_dilog.h	27;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sf_dilog.h	30;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sf_dilog.h	33;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sf_elementary.h	29;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sf_elementary.h	32;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sf_elementary.h	35;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sf_ellint.h	28;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sf_ellint.h	31;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sf_ellint.h	34;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sf_elljac.h	25;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sf_elljac.h	28;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sf_elljac.h	31;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sf_erf.h	27;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sf_erf.h	30;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sf_erf.h	33;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sf_exp.h	28;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sf_exp.h	31;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sf_exp.h	34;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sf_expint.h	28;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sf_expint.h	31;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sf_expint.h	34;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sf_fermi_dirac.h	27;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sf_fermi_dirac.h	30;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sf_fermi_dirac.h	33;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sf_gamma.h	27;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sf_gamma.h	30;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sf_gamma.h	33;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sf_gegenbauer.h	27;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sf_gegenbauer.h	30;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sf_gegenbauer.h	33;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sf_hyperg.h	27;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sf_hyperg.h	30;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sf_hyperg.h	33;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sf_laguerre.h	27;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sf_laguerre.h	30;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sf_laguerre.h	33;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sf_lambert.h	27;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sf_lambert.h	30;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sf_lambert.h	33;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sf_legendre.h	27;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sf_legendre.h	30;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sf_legendre.h	33;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sf_log.h	27;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sf_log.h	30;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sf_log.h	33;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sf_mathieu.h	28;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sf_mathieu.h	31;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sf_mathieu.h	34;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sf_pow_int.h	27;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sf_pow_int.h	30;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sf_pow_int.h	33;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sf_psi.h	27;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sf_psi.h	30;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sf_psi.h	33;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sf_result.h	25;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sf_result.h	28;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sf_result.h	31;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sf_synchrotron.h	27;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sf_synchrotron.h	30;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sf_synchrotron.h	33;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sf_transport.h	27;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sf_transport.h	30;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sf_transport.h	33;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sf_trig.h	27;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sf_trig.h	30;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sf_trig.h	33;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sf_zeta.h	27;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sf_zeta.h	30;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sf_zeta.h	33;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_siman.h	25;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_siman.h	28;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_siman.h	31;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sort_char.h	27;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sort_char.h	30;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sort_char.h	33;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sort_double.h	27;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sort_double.h	30;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sort_double.h	33;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sort_float.h	27;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sort_float.h	30;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sort_float.h	33;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sort_int.h	27;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sort_int.h	30;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sort_int.h	33;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sort_long.h	27;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sort_long.h	30;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sort_long.h	33;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sort_long_double.h	27;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sort_long_double.h	30;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sort_long_double.h	33;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sort_short.h	27;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sort_short.h	30;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sort_short.h	33;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sort_uchar.h	27;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sort_uchar.h	30;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sort_uchar.h	33;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sort_uint.h	27;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sort_uint.h	30;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sort_uint.h	33;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sort_ulong.h	27;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sort_ulong.h	30;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sort_ulong.h	33;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sort_ushort.h	27;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sort_ushort.h	30;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sort_ushort.h	33;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sort_vector_char.h	28;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sort_vector_char.h	31;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sort_vector_char.h	34;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sort_vector_double.h	28;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sort_vector_double.h	31;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sort_vector_double.h	34;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sort_vector_float.h	28;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sort_vector_float.h	31;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sort_vector_float.h	34;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sort_vector_int.h	28;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sort_vector_int.h	31;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sort_vector_int.h	34;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sort_vector_long.h	28;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sort_vector_long.h	31;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sort_vector_long.h	34;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sort_vector_long_double.h	28;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sort_vector_long_double.h	31;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sort_vector_long_double.h	34;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sort_vector_short.h	28;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sort_vector_short.h	31;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sort_vector_short.h	34;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sort_vector_uchar.h	28;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sort_vector_uchar.h	31;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sort_vector_uchar.h	34;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sort_vector_uint.h	28;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sort_vector_uint.h	31;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sort_vector_uint.h	34;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sort_vector_ulong.h	28;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sort_vector_ulong.h	31;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sort_vector_ulong.h	34;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sort_vector_ushort.h	28;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sort_vector_ushort.h	31;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sort_vector_ushort.h	34;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_spline.h	25;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_spline.h	28;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_spline.h	31;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_statistics_char.h	25;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_statistics_char.h	28;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_statistics_char.h	31;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_statistics_double.h	25;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_statistics_double.h	28;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_statistics_double.h	31;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_statistics_float.h	25;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_statistics_float.h	28;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_statistics_float.h	31;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_statistics_int.h	25;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_statistics_int.h	28;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_statistics_int.h	31;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_statistics_long.h	25;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_statistics_long.h	28;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_statistics_long.h	31;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_statistics_long_double.h	25;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_statistics_long_double.h	28;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_statistics_long_double.h	31;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_statistics_short.h	25;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_statistics_short.h	28;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_statistics_short.h	31;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_statistics_uchar.h	25;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_statistics_uchar.h	28;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_statistics_uchar.h	31;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_statistics_uint.h	25;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_statistics_uint.h	28;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_statistics_uint.h	31;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_statistics_ulong.h	25;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_statistics_ulong.h	28;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_statistics_ulong.h	31;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_statistics_ushort.h	25;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_statistics_ushort.h	28;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_statistics_ushort.h	31;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sum.h	28;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sum.h	31;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sum.h	34;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sys.h	23;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sys.h	26;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_sys.h	29;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_test.h	23;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_test.h	26;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_test.h	29;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_vector_char.h	30;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_vector_char.h	33;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_vector_char.h	36;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_vector_complex_double.h	32;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_vector_complex_double.h	35;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_vector_complex_double.h	38;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_vector_complex_float.h	32;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_vector_complex_float.h	35;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_vector_complex_float.h	38;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_vector_complex_long_double.h	32;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_vector_complex_long_double.h	35;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_vector_complex_long_double.h	38;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_vector_double.h	30;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_vector_double.h	33;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_vector_double.h	36;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_vector_float.h	30;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_vector_float.h	33;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_vector_float.h	36;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_vector_int.h	30;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_vector_int.h	33;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_vector_int.h	36;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_vector_long.h	30;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_vector_long.h	33;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_vector_long.h	36;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_vector_long_double.h	30;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_vector_long_double.h	33;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_vector_long_double.h	36;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_vector_short.h	30;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_vector_short.h	33;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_vector_short.h	36;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_vector_uchar.h	30;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_vector_uchar.h	33;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_vector_uchar.h	36;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_vector_uint.h	30;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_vector_uint.h	33;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_vector_uint.h	36;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_vector_ulong.h	30;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_vector_ulong.h	33;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_vector_ulong.h	36;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_vector_ushort.h	30;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_vector_ushort.h	33;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_vector_ushort.h	36;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_version.h	12;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_version.h	6;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_version.h	9;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_wavelet.h	26;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_wavelet.h	29;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_wavelet.h	32;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_wavelet2d.h	28;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_wavelet2d.h	31;"	d
__BEGIN_DECLS	/usr/local/gsl/include/gsl/gsl_wavelet2d.h	34;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_blas.h	33;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_blas.h	36;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_blas.h	39;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_blas_types.h	31;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_blas_types.h	34;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_blas_types.h	37;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_block_char.h	27;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_block_char.h	30;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_block_char.h	33;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_block_complex_double.h	27;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_block_complex_double.h	30;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_block_complex_double.h	33;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_block_complex_float.h	27;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_block_complex_float.h	30;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_block_complex_float.h	33;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_block_complex_long_double.h	27;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_block_complex_long_double.h	30;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_block_complex_long_double.h	33;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_block_double.h	27;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_block_double.h	30;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_block_double.h	33;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_block_float.h	27;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_block_float.h	30;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_block_float.h	33;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_block_int.h	27;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_block_int.h	30;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_block_int.h	33;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_block_long.h	27;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_block_long.h	30;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_block_long.h	33;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_block_long_double.h	27;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_block_long_double.h	30;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_block_long_double.h	33;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_block_short.h	27;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_block_short.h	30;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_block_short.h	33;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_block_uchar.h	27;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_block_uchar.h	30;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_block_uchar.h	33;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_block_uint.h	27;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_block_uint.h	30;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_block_uint.h	33;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_block_ulong.h	27;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_block_ulong.h	30;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_block_ulong.h	33;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_block_ushort.h	27;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_block_ushort.h	30;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_block_ushort.h	33;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_bspline.h	30;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_bspline.h	33;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_bspline.h	36;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_cblas.h	30;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_cblas.h	33;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_cblas.h	36;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_cdf.h	26;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_cdf.h	29;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_cdf.h	32;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_chebyshev.h	27;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_chebyshev.h	30;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_chebyshev.h	33;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_check_range.h	27;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_check_range.h	30;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_check_range.h	33;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_combination.h	31;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_combination.h	34;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_combination.h	37;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_complex.h	24;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_complex.h	27;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_complex.h	30;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_complex_math.h	26;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_complex_math.h	29;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_complex_math.h	32;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_deriv.h	25;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_deriv.h	28;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_deriv.h	31;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_dft_complex.h	30;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_dft_complex.h	33;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_dft_complex.h	36;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_dft_complex_float.h	30;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_dft_complex_float.h	33;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_dft_complex_float.h	36;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_dht.h	26;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_dht.h	29;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_dht.h	32;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_diff.h	25;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_diff.h	28;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_diff.h	31;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_eigen.h	27;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_eigen.h	30;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_eigen.h	33;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_errno.h	28;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_errno.h	31;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_errno.h	34;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_fft.h	26;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_fft.h	29;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_fft.h	32;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_fft_complex.h	30;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_fft_complex.h	33;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_fft_complex.h	36;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_fft_complex_float.h	30;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_fft_complex_float.h	33;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_fft_complex_float.h	36;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_fft_halfcomplex.h	31;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_fft_halfcomplex.h	34;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_fft_halfcomplex.h	37;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_fft_halfcomplex_float.h	31;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_fft_halfcomplex_float.h	34;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_fft_halfcomplex_float.h	37;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_fft_real.h	30;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_fft_real.h	33;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_fft_real.h	36;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_fft_real_float.h	30;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_fft_real_float.h	33;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_fft_real_float.h	36;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_fit.h	27;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_fit.h	30;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_fit.h	33;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_heapsort.h	26;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_heapsort.h	29;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_heapsort.h	32;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_histogram.h	27;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_histogram.h	30;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_histogram.h	33;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_histogram2d.h	27;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_histogram2d.h	30;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_histogram2d.h	33;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_ieee_utils.h	25;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_ieee_utils.h	28;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_ieee_utils.h	31;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_integration.h	26;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_integration.h	29;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_integration.h	32;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_interp.h	29;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_interp.h	32;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_interp.h	35;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_linalg.h	29;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_linalg.h	32;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_linalg.h	35;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_math.h	101;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_math.h	104;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_math.h	107;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_matrix_char.h	31;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_matrix_char.h	34;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_matrix_char.h	37;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_matrix_complex_double.h	31;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_matrix_complex_double.h	34;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_matrix_complex_double.h	37;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_matrix_complex_float.h	31;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_matrix_complex_float.h	34;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_matrix_complex_float.h	37;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_matrix_complex_long_double.h	31;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_matrix_complex_long_double.h	34;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_matrix_complex_long_double.h	37;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_matrix_double.h	31;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_matrix_double.h	34;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_matrix_double.h	37;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_matrix_float.h	31;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_matrix_float.h	34;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_matrix_float.h	37;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_matrix_int.h	31;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_matrix_int.h	34;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_matrix_int.h	37;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_matrix_long.h	31;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_matrix_long.h	34;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_matrix_long.h	37;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	31;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	34;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	37;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_matrix_short.h	31;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_matrix_short.h	34;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_matrix_short.h	37;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	31;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	34;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	37;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	31;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	34;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	37;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	31;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	34;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	37;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	31;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	34;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	37;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_message.h	25;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_message.h	28;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_message.h	31;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_min.h	28;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_min.h	31;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_min.h	34;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_minmax.h	25;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_minmax.h	28;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_minmax.h	31;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_mode.h	27;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_mode.h	30;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_mode.h	33;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_monte.h	27;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_monte.h	30;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_monte.h	33;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_monte_miser.h	30;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_monte_miser.h	33;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_monte_miser.h	36;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_monte_plain.h	32;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_monte_plain.h	35;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_monte_plain.h	38;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_monte_vegas.h	29;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_monte_vegas.h	32;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_monte_vegas.h	35;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_multifit.h	29;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_multifit.h	32;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_multifit.h	35;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	30;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	33;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	36;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_multimin.h	34;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_multimin.h	37;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_multimin.h	40;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_multiroots.h	30;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_multiroots.h	33;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_multiroots.h	36;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_ntuple.h	32;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_ntuple.h	35;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_ntuple.h	38;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_odeiv.h	30;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_odeiv.h	33;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_odeiv.h	36;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_permutation.h	30;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_permutation.h	33;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_permutation.h	36;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_permute_char.h	28;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_permute_char.h	31;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_permute_char.h	34;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_permute_complex_double.h	29;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_permute_complex_double.h	32;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_permute_complex_double.h	35;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_permute_complex_float.h	29;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_permute_complex_float.h	32;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_permute_complex_float.h	35;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_permute_complex_long_double.h	29;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_permute_complex_long_double.h	32;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_permute_complex_long_double.h	35;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_permute_double.h	28;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_permute_double.h	31;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_permute_double.h	34;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_permute_float.h	28;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_permute_float.h	31;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_permute_float.h	34;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_permute_int.h	28;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_permute_int.h	31;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_permute_int.h	34;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_permute_long.h	28;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_permute_long.h	31;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_permute_long.h	34;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_permute_long_double.h	28;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_permute_long_double.h	31;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_permute_long_double.h	34;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_permute_short.h	28;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_permute_short.h	31;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_permute_short.h	34;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_permute_uchar.h	28;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_permute_uchar.h	31;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_permute_uchar.h	34;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_permute_uint.h	28;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_permute_uint.h	31;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_permute_uint.h	34;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_permute_ulong.h	28;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_permute_ulong.h	31;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_permute_ulong.h	34;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_permute_ushort.h	28;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_permute_ushort.h	31;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_permute_ushort.h	34;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_permute_vector_char.h	29;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_permute_vector_char.h	32;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_permute_vector_char.h	35;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_permute_vector_complex_double.h	29;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_permute_vector_complex_double.h	32;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_permute_vector_complex_double.h	35;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_permute_vector_complex_float.h	29;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_permute_vector_complex_float.h	32;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_permute_vector_complex_float.h	35;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_permute_vector_complex_long_double.h	29;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_permute_vector_complex_long_double.h	32;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_permute_vector_complex_long_double.h	35;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_permute_vector_double.h	29;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_permute_vector_double.h	32;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_permute_vector_double.h	35;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_permute_vector_float.h	29;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_permute_vector_float.h	32;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_permute_vector_float.h	35;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_permute_vector_int.h	29;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_permute_vector_int.h	32;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_permute_vector_int.h	35;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_permute_vector_long.h	29;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_permute_vector_long.h	32;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_permute_vector_long.h	35;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_permute_vector_long_double.h	29;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_permute_vector_long_double.h	32;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_permute_vector_long_double.h	35;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_permute_vector_short.h	29;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_permute_vector_short.h	32;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_permute_vector_short.h	35;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_permute_vector_uchar.h	29;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_permute_vector_uchar.h	32;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_permute_vector_uchar.h	35;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_permute_vector_uint.h	29;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_permute_vector_uint.h	32;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_permute_vector_uint.h	35;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_permute_vector_ulong.h	29;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_permute_vector_ulong.h	32;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_permute_vector_ulong.h	35;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_permute_vector_ushort.h	29;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_permute_vector_ushort.h	32;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_permute_vector_ushort.h	35;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_poly.h	28;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_poly.h	31;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_poly.h	34;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_pow_int.h	25;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_pow_int.h	28;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_pow_int.h	31;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_precision.h	27;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_precision.h	30;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_precision.h	33;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_qrng.h	12;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_qrng.h	15;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_qrng.h	18;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_randist.h	25;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_randist.h	28;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_randist.h	31;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_rng.h	28;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_rng.h	31;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_rng.h	34;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_roots.h	28;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_roots.h	31;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_roots.h	34;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sf_airy.h	29;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sf_airy.h	32;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sf_airy.h	35;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	31;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	34;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	37;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sf_clausen.h	28;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sf_clausen.h	31;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sf_clausen.h	34;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sf_coulomb.h	29;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sf_coulomb.h	32;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sf_coulomb.h	35;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sf_coupling.h	28;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sf_coupling.h	31;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sf_coupling.h	34;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sf_dawson.h	28;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sf_dawson.h	31;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sf_dawson.h	34;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sf_debye.h	29;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sf_debye.h	32;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sf_debye.h	35;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sf_dilog.h	28;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sf_dilog.h	31;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sf_dilog.h	34;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sf_elementary.h	30;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sf_elementary.h	33;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sf_elementary.h	36;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sf_ellint.h	29;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sf_ellint.h	32;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sf_ellint.h	35;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sf_elljac.h	26;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sf_elljac.h	29;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sf_elljac.h	32;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sf_erf.h	28;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sf_erf.h	31;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sf_erf.h	34;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sf_exp.h	29;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sf_exp.h	32;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sf_exp.h	35;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sf_expint.h	29;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sf_expint.h	32;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sf_expint.h	35;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sf_fermi_dirac.h	28;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sf_fermi_dirac.h	31;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sf_fermi_dirac.h	34;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sf_gamma.h	28;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sf_gamma.h	31;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sf_gamma.h	34;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sf_gegenbauer.h	28;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sf_gegenbauer.h	31;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sf_gegenbauer.h	34;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sf_hyperg.h	28;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sf_hyperg.h	31;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sf_hyperg.h	34;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sf_laguerre.h	28;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sf_laguerre.h	31;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sf_laguerre.h	34;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sf_lambert.h	28;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sf_lambert.h	31;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sf_lambert.h	34;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sf_legendre.h	28;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sf_legendre.h	31;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sf_legendre.h	34;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sf_log.h	28;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sf_log.h	31;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sf_log.h	34;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sf_mathieu.h	29;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sf_mathieu.h	32;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sf_mathieu.h	35;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sf_pow_int.h	28;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sf_pow_int.h	31;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sf_pow_int.h	34;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sf_psi.h	28;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sf_psi.h	31;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sf_psi.h	34;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sf_result.h	26;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sf_result.h	29;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sf_result.h	32;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sf_synchrotron.h	28;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sf_synchrotron.h	31;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sf_synchrotron.h	34;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sf_transport.h	28;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sf_transport.h	31;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sf_transport.h	34;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sf_trig.h	28;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sf_trig.h	31;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sf_trig.h	34;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sf_zeta.h	28;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sf_zeta.h	31;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sf_zeta.h	34;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_siman.h	26;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_siman.h	29;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_siman.h	32;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sort_char.h	28;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sort_char.h	31;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sort_char.h	34;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sort_double.h	28;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sort_double.h	31;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sort_double.h	34;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sort_float.h	28;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sort_float.h	31;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sort_float.h	34;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sort_int.h	28;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sort_int.h	31;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sort_int.h	34;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sort_long.h	28;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sort_long.h	31;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sort_long.h	34;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sort_long_double.h	28;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sort_long_double.h	31;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sort_long_double.h	34;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sort_short.h	28;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sort_short.h	31;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sort_short.h	34;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sort_uchar.h	28;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sort_uchar.h	31;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sort_uchar.h	34;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sort_uint.h	28;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sort_uint.h	31;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sort_uint.h	34;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sort_ulong.h	28;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sort_ulong.h	31;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sort_ulong.h	34;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sort_ushort.h	28;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sort_ushort.h	31;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sort_ushort.h	34;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sort_vector_char.h	29;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sort_vector_char.h	32;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sort_vector_char.h	35;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sort_vector_double.h	29;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sort_vector_double.h	32;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sort_vector_double.h	35;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sort_vector_float.h	29;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sort_vector_float.h	32;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sort_vector_float.h	35;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sort_vector_int.h	29;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sort_vector_int.h	32;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sort_vector_int.h	35;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sort_vector_long.h	29;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sort_vector_long.h	32;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sort_vector_long.h	35;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sort_vector_long_double.h	29;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sort_vector_long_double.h	32;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sort_vector_long_double.h	35;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sort_vector_short.h	29;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sort_vector_short.h	32;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sort_vector_short.h	35;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sort_vector_uchar.h	29;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sort_vector_uchar.h	32;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sort_vector_uchar.h	35;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sort_vector_uint.h	29;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sort_vector_uint.h	32;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sort_vector_uint.h	35;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sort_vector_ulong.h	29;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sort_vector_ulong.h	32;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sort_vector_ulong.h	35;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sort_vector_ushort.h	29;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sort_vector_ushort.h	32;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sort_vector_ushort.h	35;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_spline.h	26;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_spline.h	29;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_spline.h	32;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_statistics_char.h	26;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_statistics_char.h	29;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_statistics_char.h	32;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_statistics_double.h	26;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_statistics_double.h	29;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_statistics_double.h	32;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_statistics_float.h	26;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_statistics_float.h	29;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_statistics_float.h	32;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_statistics_int.h	26;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_statistics_int.h	29;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_statistics_int.h	32;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_statistics_long.h	26;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_statistics_long.h	29;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_statistics_long.h	32;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_statistics_long_double.h	26;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_statistics_long_double.h	29;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_statistics_long_double.h	32;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_statistics_short.h	26;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_statistics_short.h	29;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_statistics_short.h	32;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_statistics_uchar.h	26;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_statistics_uchar.h	29;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_statistics_uchar.h	32;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_statistics_uint.h	26;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_statistics_uint.h	29;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_statistics_uint.h	32;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_statistics_ulong.h	26;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_statistics_ulong.h	29;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_statistics_ulong.h	32;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_statistics_ushort.h	26;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_statistics_ushort.h	29;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_statistics_ushort.h	32;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sum.h	29;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sum.h	32;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sum.h	35;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sys.h	24;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sys.h	27;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_sys.h	30;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_test.h	24;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_test.h	27;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_test.h	30;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_vector_char.h	31;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_vector_char.h	34;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_vector_char.h	37;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_vector_complex_double.h	33;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_vector_complex_double.h	36;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_vector_complex_double.h	39;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_vector_complex_float.h	33;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_vector_complex_float.h	36;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_vector_complex_float.h	39;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_vector_complex_long_double.h	33;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_vector_complex_long_double.h	36;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_vector_complex_long_double.h	39;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_vector_double.h	31;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_vector_double.h	34;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_vector_double.h	37;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_vector_float.h	31;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_vector_float.h	34;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_vector_float.h	37;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_vector_int.h	31;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_vector_int.h	34;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_vector_int.h	37;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_vector_long.h	31;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_vector_long.h	34;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_vector_long.h	37;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_vector_long_double.h	31;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_vector_long_double.h	34;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_vector_long_double.h	37;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_vector_short.h	31;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_vector_short.h	34;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_vector_short.h	37;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_vector_uchar.h	31;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_vector_uchar.h	34;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_vector_uchar.h	37;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_vector_uint.h	31;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_vector_uint.h	34;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_vector_uint.h	37;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_vector_ulong.h	31;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_vector_ulong.h	34;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_vector_ulong.h	37;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_vector_ushort.h	31;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_vector_ushort.h	34;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_vector_ushort.h	37;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_version.h	10;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_version.h	13;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_version.h	7;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_wavelet.h	27;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_wavelet.h	30;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_wavelet.h	33;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_wavelet2d.h	29;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_wavelet2d.h	32;"	d
__END_DECLS	/usr/local/gsl/include/gsl/gsl_wavelet2d.h	35;"	d
__GSL_BLAS_H__	/usr/local/gsl/include/gsl/gsl_blas.h	24;"	d
__GSL_BLAS_TYPES_H__	/usr/local/gsl/include/gsl/gsl_blas_types.h	26;"	d
__GSL_BLOCK_CHAR_H__	/usr/local/gsl/include/gsl/gsl_block_char.h	21;"	d
__GSL_BLOCK_COMPLEX_DOUBLE_H__	/usr/local/gsl/include/gsl/gsl_block_complex_double.h	21;"	d
__GSL_BLOCK_COMPLEX_FLOAT_H__	/usr/local/gsl/include/gsl/gsl_block_complex_float.h	21;"	d
__GSL_BLOCK_COMPLEX_LONG_DOUBLE_H__	/usr/local/gsl/include/gsl/gsl_block_complex_long_double.h	21;"	d
__GSL_BLOCK_DOUBLE_H__	/usr/local/gsl/include/gsl/gsl_block_double.h	21;"	d
__GSL_BLOCK_FLOAT_H__	/usr/local/gsl/include/gsl/gsl_block_float.h	21;"	d
__GSL_BLOCK_H__	/usr/local/gsl/include/gsl/gsl_block.h	2;"	d
__GSL_BLOCK_INT_H__	/usr/local/gsl/include/gsl/gsl_block_int.h	21;"	d
__GSL_BLOCK_LONG_DOUBLE_H__	/usr/local/gsl/include/gsl/gsl_block_long_double.h	21;"	d
__GSL_BLOCK_LONG_H__	/usr/local/gsl/include/gsl/gsl_block_long.h	21;"	d
__GSL_BLOCK_SHORT_H__	/usr/local/gsl/include/gsl/gsl_block_short.h	21;"	d
__GSL_BLOCK_UCHAR_H__	/usr/local/gsl/include/gsl/gsl_block_uchar.h	21;"	d
__GSL_BLOCK_UINT_H__	/usr/local/gsl/include/gsl/gsl_block_uint.h	21;"	d
__GSL_BLOCK_ULONG_H__	/usr/local/gsl/include/gsl/gsl_block_ulong.h	21;"	d
__GSL_BLOCK_USHORT_H__	/usr/local/gsl/include/gsl/gsl_block_ushort.h	21;"	d
__GSL_BSPLINE_H__	/usr/local/gsl/include/gsl/gsl_bspline.h	22;"	d
__GSL_CBLAS_H__	/usr/local/gsl/include/gsl/gsl_cblas.h	26;"	d
__GSL_CDF_H__	/usr/local/gsl/include/gsl/gsl_cdf.h	23;"	d
__GSL_CHEBYSHEV_H__	/usr/local/gsl/include/gsl/gsl_chebyshev.h	21;"	d
__GSL_CHECK_RANGE_H__	/usr/local/gsl/include/gsl/gsl_check_range.h	21;"	d
__GSL_COMBINATION_H__	/usr/local/gsl/include/gsl/gsl_combination.h	22;"	d
__GSL_COMPLEX_H__	/usr/local/gsl/include/gsl/gsl_complex.h	21;"	d
__GSL_COMPLEX_MATH_H__	/usr/local/gsl/include/gsl/gsl_complex_math.h	21;"	d
__GSL_CONST_CGSM__	/usr/local/gsl/include/gsl/gsl_const_cgsm.h	22;"	d
__GSL_CONST_CGS__	/usr/local/gsl/include/gsl/gsl_const_cgs.h	22;"	d
__GSL_CONST_MKSA__	/usr/local/gsl/include/gsl/gsl_const_mksa.h	22;"	d
__GSL_CONST_MKS__	/usr/local/gsl/include/gsl/gsl_const_mks.h	22;"	d
__GSL_CONST_NUM__	/usr/local/gsl/include/gsl/gsl_const_num.h	22;"	d
__GSL_CONST__	/usr/local/gsl/include/gsl/gsl_const.h	21;"	d
__GSL_DERIV_H__	/usr/local/gsl/include/gsl/gsl_deriv.h	21;"	d
__GSL_DFT_COMPLEX_FLOAT_H__	/usr/local/gsl/include/gsl/gsl_dft_complex_float.h	21;"	d
__GSL_DFT_COMPLEX_H__	/usr/local/gsl/include/gsl/gsl_dft_complex.h	21;"	d
__GSL_DHT_H__	/usr/local/gsl/include/gsl/gsl_dht.h	23;"	d
__GSL_DIFF_H__	/usr/local/gsl/include/gsl/gsl_diff.h	21;"	d
__GSL_EIGEN_H__	/usr/local/gsl/include/gsl/gsl_eigen.h	21;"	d
__GSL_ERRNO_H__	/usr/local/gsl/include/gsl/gsl_errno.h	21;"	d
__GSL_FFT_COMPLEX_FLOAT_H__	/usr/local/gsl/include/gsl/gsl_fft_complex_float.h	21;"	d
__GSL_FFT_COMPLEX_H__	/usr/local/gsl/include/gsl/gsl_fft_complex.h	21;"	d
__GSL_FFT_HALFCOMPLEX_FLOAT_H__	/usr/local/gsl/include/gsl/gsl_fft_halfcomplex_float.h	21;"	d
__GSL_FFT_HALFCOMPLEX_H__	/usr/local/gsl/include/gsl/gsl_fft_halfcomplex.h	21;"	d
__GSL_FFT_H__	/usr/local/gsl/include/gsl/gsl_fft.h	21;"	d
__GSL_FFT_REAL_FLOAT_H__	/usr/local/gsl/include/gsl/gsl_fft_real_float.h	21;"	d
__GSL_FFT_REAL_H__	/usr/local/gsl/include/gsl/gsl_fft_real.h	21;"	d
__GSL_FIT_H__	/usr/local/gsl/include/gsl/gsl_fit.h	21;"	d
__GSL_HEAPSORT_H__	/usr/local/gsl/include/gsl/gsl_heapsort.h	21;"	d
__GSL_HISTOGRAM2D_H__	/usr/local/gsl/include/gsl/gsl_histogram2d.h	21;"	d
__GSL_HISTOGRAM_H__	/usr/local/gsl/include/gsl/gsl_histogram.h	21;"	d
__GSL_IEEE_UTILS_H__	/usr/local/gsl/include/gsl/gsl_ieee_utils.h	21;"	d
__GSL_INLINE_H__	/usr/local/gsl/include/gsl/gsl_inline.h	21;"	d
__GSL_INTEGRATION_H__	/usr/local/gsl/include/gsl/gsl_integration.h	21;"	d
__GSL_INTERP_H__	/usr/local/gsl/include/gsl/gsl_interp.h	23;"	d
__GSL_LINALG_H__	/usr/local/gsl/include/gsl/gsl_linalg.h	21;"	d
__GSL_MACHINE_H__	/usr/local/gsl/include/gsl/gsl_machine.h	3;"	d
__GSL_MATH_H__	/usr/local/gsl/include/gsl/gsl_math.h	21;"	d
__GSL_MATRIX_CHAR_H__	/usr/local/gsl/include/gsl/gsl_matrix_char.h	21;"	d
__GSL_MATRIX_COMPLEX_DOUBLE_H__	/usr/local/gsl/include/gsl/gsl_matrix_complex_double.h	21;"	d
__GSL_MATRIX_COMPLEX_FLOAT_H__	/usr/local/gsl/include/gsl/gsl_matrix_complex_float.h	21;"	d
__GSL_MATRIX_COMPLEX_LONG_DOUBLE_H__	/usr/local/gsl/include/gsl/gsl_matrix_complex_long_double.h	21;"	d
__GSL_MATRIX_DOUBLE_H__	/usr/local/gsl/include/gsl/gsl_matrix_double.h	21;"	d
__GSL_MATRIX_FLOAT_H__	/usr/local/gsl/include/gsl/gsl_matrix_float.h	21;"	d
__GSL_MATRIX_H__	/usr/local/gsl/include/gsl/gsl_matrix.h	2;"	d
__GSL_MATRIX_INT_H__	/usr/local/gsl/include/gsl/gsl_matrix_int.h	21;"	d
__GSL_MATRIX_LONG_DOUBLE_H__	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	21;"	d
__GSL_MATRIX_LONG_H__	/usr/local/gsl/include/gsl/gsl_matrix_long.h	21;"	d
__GSL_MATRIX_SHORT_H__	/usr/local/gsl/include/gsl/gsl_matrix_short.h	21;"	d
__GSL_MATRIX_UCHAR_H__	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	21;"	d
__GSL_MATRIX_UINT_H__	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	21;"	d
__GSL_MATRIX_ULONG_H__	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	21;"	d
__GSL_MATRIX_USHORT_H__	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	21;"	d
__GSL_MESSAGE_H__	/usr/local/gsl/include/gsl/gsl_message.h	21;"	d
__GSL_MINMAX_H__	/usr/local/gsl/include/gsl/gsl_minmax.h	21;"	d
__GSL_MIN_H__	/usr/local/gsl/include/gsl/gsl_min.h	21;"	d
__GSL_MODE_H__	/usr/local/gsl/include/gsl/gsl_mode.h	23;"	d
__GSL_MONTE_H__	/usr/local/gsl/include/gsl/gsl_monte.h	24;"	d
__GSL_MONTE_MISER_H__	/usr/local/gsl/include/gsl/gsl_monte_miser.h	23;"	d
__GSL_MONTE_PLAIN_H__	/usr/local/gsl/include/gsl/gsl_monte_plain.h	25;"	d
__GSL_MONTE_VEGAS_H__	/usr/local/gsl/include/gsl/gsl_monte_vegas.h	23;"	d
__GSL_MULTIFIT_H__	/usr/local/gsl/include/gsl/gsl_multifit.h	21;"	d
__GSL_MULTIFIT_NLIN_H__	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	21;"	d
__GSL_MULTIMIN_H__	/usr/local/gsl/include/gsl/gsl_multimin.h	24;"	d
__GSL_MULTIROOTS_H__	/usr/local/gsl/include/gsl/gsl_multiroots.h	21;"	d
__GSL_NAN_H__	/usr/local/gsl/include/gsl/gsl_nan.h	21;"	d
__GSL_NTUPLE_H__	/usr/local/gsl/include/gsl/gsl_ntuple.h	24;"	d
__GSL_ODEIV_H__	/usr/local/gsl/include/gsl/gsl_odeiv.h	23;"	d
__GSL_PERMUTATION_H__	/usr/local/gsl/include/gsl/gsl_permutation.h	21;"	d
__GSL_PERMUTE_CHAR_H__	/usr/local/gsl/include/gsl/gsl_permute_char.h	21;"	d
__GSL_PERMUTE_COMPLEX_DOUBLE_H__	/usr/local/gsl/include/gsl/gsl_permute_complex_double.h	21;"	d
__GSL_PERMUTE_COMPLEX_FLOAT_H__	/usr/local/gsl/include/gsl/gsl_permute_complex_float.h	21;"	d
__GSL_PERMUTE_COMPLEX_LONG_DOUBLE_H__	/usr/local/gsl/include/gsl/gsl_permute_complex_long_double.h	21;"	d
__GSL_PERMUTE_DOUBLE_H__	/usr/local/gsl/include/gsl/gsl_permute_double.h	21;"	d
__GSL_PERMUTE_FLOAT_H__	/usr/local/gsl/include/gsl/gsl_permute_float.h	21;"	d
__GSL_PERMUTE_H__	/usr/local/gsl/include/gsl/gsl_permute.h	2;"	d
__GSL_PERMUTE_INT_H__	/usr/local/gsl/include/gsl/gsl_permute_int.h	21;"	d
__GSL_PERMUTE_LONG_DOUBLE_H__	/usr/local/gsl/include/gsl/gsl_permute_long_double.h	21;"	d
__GSL_PERMUTE_LONG_H__	/usr/local/gsl/include/gsl/gsl_permute_long.h	21;"	d
__GSL_PERMUTE_SHORT_H__	/usr/local/gsl/include/gsl/gsl_permute_short.h	21;"	d
__GSL_PERMUTE_UCHAR_H__	/usr/local/gsl/include/gsl/gsl_permute_uchar.h	21;"	d
__GSL_PERMUTE_UINT_H__	/usr/local/gsl/include/gsl/gsl_permute_uint.h	21;"	d
__GSL_PERMUTE_ULONG_H__	/usr/local/gsl/include/gsl/gsl_permute_ulong.h	21;"	d
__GSL_PERMUTE_USHORT_H__	/usr/local/gsl/include/gsl/gsl_permute_ushort.h	21;"	d
__GSL_PERMUTE_VECTOR_CHAR_H__	/usr/local/gsl/include/gsl/gsl_permute_vector_char.h	21;"	d
__GSL_PERMUTE_VECTOR_COMPLEX_DOUBLE_H__	/usr/local/gsl/include/gsl/gsl_permute_vector_complex_double.h	21;"	d
__GSL_PERMUTE_VECTOR_COMPLEX_FLOAT_H__	/usr/local/gsl/include/gsl/gsl_permute_vector_complex_float.h	21;"	d
__GSL_PERMUTE_VECTOR_COMPLEX_LONG_DOUBLE_H__	/usr/local/gsl/include/gsl/gsl_permute_vector_complex_long_double.h	21;"	d
__GSL_PERMUTE_VECTOR_DOUBLE_H__	/usr/local/gsl/include/gsl/gsl_permute_vector_double.h	21;"	d
__GSL_PERMUTE_VECTOR_FLOAT_H__	/usr/local/gsl/include/gsl/gsl_permute_vector_float.h	21;"	d
__GSL_PERMUTE_VECTOR_H__	/usr/local/gsl/include/gsl/gsl_permute_vector.h	2;"	d
__GSL_PERMUTE_VECTOR_INT_H__	/usr/local/gsl/include/gsl/gsl_permute_vector_int.h	21;"	d
__GSL_PERMUTE_VECTOR_LONG_DOUBLE_H__	/usr/local/gsl/include/gsl/gsl_permute_vector_long_double.h	21;"	d
__GSL_PERMUTE_VECTOR_LONG_H__	/usr/local/gsl/include/gsl/gsl_permute_vector_long.h	21;"	d
__GSL_PERMUTE_VECTOR_SHORT_H__	/usr/local/gsl/include/gsl/gsl_permute_vector_short.h	21;"	d
__GSL_PERMUTE_VECTOR_UCHAR_H__	/usr/local/gsl/include/gsl/gsl_permute_vector_uchar.h	21;"	d
__GSL_PERMUTE_VECTOR_UINT_H__	/usr/local/gsl/include/gsl/gsl_permute_vector_uint.h	21;"	d
__GSL_PERMUTE_VECTOR_ULONG_H__	/usr/local/gsl/include/gsl/gsl_permute_vector_ulong.h	21;"	d
__GSL_PERMUTE_VECTOR_USHORT_H__	/usr/local/gsl/include/gsl/gsl_permute_vector_ushort.h	21;"	d
__GSL_POLY_H__	/usr/local/gsl/include/gsl/gsl_poly.h	21;"	d
__GSL_POW_INT_H__	/usr/local/gsl/include/gsl/gsl_pow_int.h	21;"	d
__GSL_PRECISION_H__	/usr/local/gsl/include/gsl/gsl_precision.h	23;"	d
__GSL_QRNG_H__	/usr/local/gsl/include/gsl/gsl_qrng.h	4;"	d
__GSL_RANDIST_H__	/usr/local/gsl/include/gsl/gsl_randist.h	21;"	d
__GSL_RNG_H__	/usr/local/gsl/include/gsl/gsl_rng.h	21;"	d
__GSL_ROOTS_H__	/usr/local/gsl/include/gsl/gsl_roots.h	21;"	d
__GSL_SF_AIRY_H__	/usr/local/gsl/include/gsl/gsl_sf_airy.h	23;"	d
__GSL_SF_BESSEL_H__	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	23;"	d
__GSL_SF_CLAUSEN_H__	/usr/local/gsl/include/gsl/gsl_sf_clausen.h	23;"	d
__GSL_SF_COULOMB_H__	/usr/local/gsl/include/gsl/gsl_sf_coulomb.h	23;"	d
__GSL_SF_COUPLING_H__	/usr/local/gsl/include/gsl/gsl_sf_coupling.h	23;"	d
__GSL_SF_DAWSON_H__	/usr/local/gsl/include/gsl/gsl_sf_dawson.h	23;"	d
__GSL_SF_DEBYE_H__	/usr/local/gsl/include/gsl/gsl_sf_debye.h	24;"	d
__GSL_SF_DILOG_H__	/usr/local/gsl/include/gsl/gsl_sf_dilog.h	23;"	d
__GSL_SF_ELEMENTARY_H__	/usr/local/gsl/include/gsl/gsl_sf_elementary.h	25;"	d
__GSL_SF_ELLINT_H__	/usr/local/gsl/include/gsl/gsl_sf_ellint.h	23;"	d
__GSL_SF_ELLJAC_H__	/usr/local/gsl/include/gsl/gsl_sf_elljac.h	23;"	d
__GSL_SF_ERF_H__	/usr/local/gsl/include/gsl/gsl_sf_erf.h	23;"	d
__GSL_SF_EXPINT_H__	/usr/local/gsl/include/gsl/gsl_sf_expint.h	24;"	d
__GSL_SF_EXP_H__	/usr/local/gsl/include/gsl/gsl_sf_exp.h	23;"	d
__GSL_SF_FERMI_DIRAC_H__	/usr/local/gsl/include/gsl/gsl_sf_fermi_dirac.h	23;"	d
__GSL_SF_GAMMA_H__	/usr/local/gsl/include/gsl/gsl_sf_gamma.h	23;"	d
__GSL_SF_GEGENBAUER_H__	/usr/local/gsl/include/gsl/gsl_sf_gegenbauer.h	23;"	d
__GSL_SF_HYPERG_H__	/usr/local/gsl/include/gsl/gsl_sf_hyperg.h	23;"	d
__GSL_SF_H__	/usr/local/gsl/include/gsl/gsl_sf.h	4;"	d
__GSL_SF_LAGUERRE_H__	/usr/local/gsl/include/gsl/gsl_sf_laguerre.h	23;"	d
__GSL_SF_LAMBERT_H__	/usr/local/gsl/include/gsl/gsl_sf_lambert.h	23;"	d
__GSL_SF_LEGENDRE_H__	/usr/local/gsl/include/gsl/gsl_sf_legendre.h	23;"	d
__GSL_SF_LOG_H__	/usr/local/gsl/include/gsl/gsl_sf_log.h	23;"	d
__GSL_SF_MATHIEU_H__	/usr/local/gsl/include/gsl/gsl_sf_mathieu.h	23;"	d
__GSL_SF_POW_INT_H__	/usr/local/gsl/include/gsl/gsl_sf_pow_int.h	23;"	d
__GSL_SF_PSI_H__	/usr/local/gsl/include/gsl/gsl_sf_psi.h	23;"	d
__GSL_SF_RESULT_H__	/usr/local/gsl/include/gsl/gsl_sf_result.h	23;"	d
__GSL_SF_SYNCHROTRON_H__	/usr/local/gsl/include/gsl/gsl_sf_synchrotron.h	23;"	d
__GSL_SF_TRANSPORT_H__	/usr/local/gsl/include/gsl/gsl_sf_transport.h	23;"	d
__GSL_SF_TRIG_H__	/usr/local/gsl/include/gsl/gsl_sf_trig.h	23;"	d
__GSL_SF_ZETA_H__	/usr/local/gsl/include/gsl/gsl_sf_zeta.h	23;"	d
__GSL_SIMAN_H__	/usr/local/gsl/include/gsl/gsl_siman.h	21;"	d
__GSL_SORT_CHAR_H__	/usr/local/gsl/include/gsl/gsl_sort_char.h	21;"	d
__GSL_SORT_DOUBLE_H__	/usr/local/gsl/include/gsl/gsl_sort_double.h	21;"	d
__GSL_SORT_FLOAT_H__	/usr/local/gsl/include/gsl/gsl_sort_float.h	21;"	d
__GSL_SORT_H__	/usr/local/gsl/include/gsl/gsl_sort.h	2;"	d
__GSL_SORT_INT_H__	/usr/local/gsl/include/gsl/gsl_sort_int.h	21;"	d
__GSL_SORT_LONG_DOUBLE_H__	/usr/local/gsl/include/gsl/gsl_sort_long_double.h	21;"	d
__GSL_SORT_LONG_H__	/usr/local/gsl/include/gsl/gsl_sort_long.h	21;"	d
__GSL_SORT_SHORT_H__	/usr/local/gsl/include/gsl/gsl_sort_short.h	21;"	d
__GSL_SORT_UCHAR_H__	/usr/local/gsl/include/gsl/gsl_sort_uchar.h	21;"	d
__GSL_SORT_UINT_H__	/usr/local/gsl/include/gsl/gsl_sort_uint.h	21;"	d
__GSL_SORT_ULONG_H__	/usr/local/gsl/include/gsl/gsl_sort_ulong.h	21;"	d
__GSL_SORT_USHORT_H__	/usr/local/gsl/include/gsl/gsl_sort_ushort.h	21;"	d
__GSL_SORT_VECTOR_CHAR_H__	/usr/local/gsl/include/gsl/gsl_sort_vector_char.h	21;"	d
__GSL_SORT_VECTOR_DOUBLE_H__	/usr/local/gsl/include/gsl/gsl_sort_vector_double.h	21;"	d
__GSL_SORT_VECTOR_FLOAT_H__	/usr/local/gsl/include/gsl/gsl_sort_vector_float.h	21;"	d
__GSL_SORT_VECTOR_H__	/usr/local/gsl/include/gsl/gsl_sort_vector.h	2;"	d
__GSL_SORT_VECTOR_INT_H__	/usr/local/gsl/include/gsl/gsl_sort_vector_int.h	21;"	d
__GSL_SORT_VECTOR_LONG_DOUBLE_H__	/usr/local/gsl/include/gsl/gsl_sort_vector_long_double.h	21;"	d
__GSL_SORT_VECTOR_LONG_H__	/usr/local/gsl/include/gsl/gsl_sort_vector_long.h	21;"	d
__GSL_SORT_VECTOR_SHORT_H__	/usr/local/gsl/include/gsl/gsl_sort_vector_short.h	21;"	d
__GSL_SORT_VECTOR_UCHAR_H__	/usr/local/gsl/include/gsl/gsl_sort_vector_uchar.h	21;"	d
__GSL_SORT_VECTOR_UINT_H__	/usr/local/gsl/include/gsl/gsl_sort_vector_uint.h	21;"	d
__GSL_SORT_VECTOR_ULONG_H__	/usr/local/gsl/include/gsl/gsl_sort_vector_ulong.h	21;"	d
__GSL_SORT_VECTOR_USHORT_H__	/usr/local/gsl/include/gsl/gsl_sort_vector_ushort.h	21;"	d
__GSL_SPECFUNC_H__	/usr/local/gsl/include/gsl/gsl_specfunc.h	6;"	d
__GSL_SPLINE_H__	/usr/local/gsl/include/gsl/gsl_spline.h	21;"	d
__GSL_STATISTICS_CHAR_H__	/usr/local/gsl/include/gsl/gsl_statistics_char.h	21;"	d
__GSL_STATISTICS_DOUBLE_H__	/usr/local/gsl/include/gsl/gsl_statistics_double.h	21;"	d
__GSL_STATISTICS_FLOAT_H__	/usr/local/gsl/include/gsl/gsl_statistics_float.h	21;"	d
__GSL_STATISTICS_H__	/usr/local/gsl/include/gsl/gsl_statistics.h	2;"	d
__GSL_STATISTICS_INT_H__	/usr/local/gsl/include/gsl/gsl_statistics_int.h	21;"	d
__GSL_STATISTICS_LONG_DOUBLE_H__	/usr/local/gsl/include/gsl/gsl_statistics_long_double.h	21;"	d
__GSL_STATISTICS_LONG_H__	/usr/local/gsl/include/gsl/gsl_statistics_long.h	21;"	d
__GSL_STATISTICS_SHORT_H__	/usr/local/gsl/include/gsl/gsl_statistics_short.h	21;"	d
__GSL_STATISTICS_UCHAR_H__	/usr/local/gsl/include/gsl/gsl_statistics_uchar.h	21;"	d
__GSL_STATISTICS_UINT_H__	/usr/local/gsl/include/gsl/gsl_statistics_uint.h	21;"	d
__GSL_STATISTICS_ULONG_H__	/usr/local/gsl/include/gsl/gsl_statistics_ulong.h	21;"	d
__GSL_STATISTICS_USHORT_H__	/usr/local/gsl/include/gsl/gsl_statistics_ushort.h	21;"	d
__GSL_SUM_H__	/usr/local/gsl/include/gsl/gsl_sum.h	24;"	d
__GSL_SYS_H__	/usr/local/gsl/include/gsl/gsl_sys.h	21;"	d
__GSL_TEST_H__	/usr/local/gsl/include/gsl/gsl_test.h	21;"	d
__GSL_TYPES_H__	/usr/local/gsl/include/gsl/gsl_types.h	21;"	d
__GSL_VECTOR_CHAR_H__	/usr/local/gsl/include/gsl/gsl_vector_char.h	21;"	d
__GSL_VECTOR_COMPLEX_DOUBLE_H__	/usr/local/gsl/include/gsl/gsl_vector_complex_double.h	21;"	d
__GSL_VECTOR_COMPLEX_FLOAT_H__	/usr/local/gsl/include/gsl/gsl_vector_complex_float.h	21;"	d
__GSL_VECTOR_COMPLEX_H__	/usr/local/gsl/include/gsl/gsl_vector_complex.h	2;"	d
__GSL_VECTOR_COMPLEX_LONG_DOUBLE_H__	/usr/local/gsl/include/gsl/gsl_vector_complex_long_double.h	21;"	d
__GSL_VECTOR_DOUBLE_H__	/usr/local/gsl/include/gsl/gsl_vector_double.h	21;"	d
__GSL_VECTOR_FLOAT_H__	/usr/local/gsl/include/gsl/gsl_vector_float.h	21;"	d
__GSL_VECTOR_H__	/usr/local/gsl/include/gsl/gsl_vector.h	2;"	d
__GSL_VECTOR_INT_H__	/usr/local/gsl/include/gsl/gsl_vector_int.h	21;"	d
__GSL_VECTOR_LONG_DOUBLE_H__	/usr/local/gsl/include/gsl/gsl_vector_long_double.h	21;"	d
__GSL_VECTOR_LONG_H__	/usr/local/gsl/include/gsl/gsl_vector_long.h	21;"	d
__GSL_VECTOR_SHORT_H__	/usr/local/gsl/include/gsl/gsl_vector_short.h	21;"	d
__GSL_VECTOR_UCHAR_H__	/usr/local/gsl/include/gsl/gsl_vector_uchar.h	21;"	d
__GSL_VECTOR_UINT_H__	/usr/local/gsl/include/gsl/gsl_vector_uint.h	21;"	d
__GSL_VECTOR_ULONG_H__	/usr/local/gsl/include/gsl/gsl_vector_ulong.h	21;"	d
__GSL_VECTOR_USHORT_H__	/usr/local/gsl/include/gsl/gsl_vector_ushort.h	21;"	d
__GSL_VERSION_H__	/usr/local/gsl/include/gsl/gsl_version.h	2;"	d
__GSL_WAVELET2D_H__	/usr/local/gsl/include/gsl/gsl_wavelet2d.h	21;"	d
__GSL_WAVELET_H__	/usr/local/gsl/include/gsl/gsl_wavelet.h	21;"	d
__anon100::count	/usr/local/gsl/include/gsl/gsl_odeiv.h	/^  unsigned long int count;$/;"	m	struct:__anon100	access:public
__anon100::dimension	/usr/local/gsl/include/gsl/gsl_odeiv.h	/^  size_t dimension;$/;"	m	struct:__anon100	access:public
__anon100::dydt_in	/usr/local/gsl/include/gsl/gsl_odeiv.h	/^  double * dydt_in;$/;"	m	struct:__anon100	access:public
__anon100::dydt_out	/usr/local/gsl/include/gsl/gsl_odeiv.h	/^  double * dydt_out;$/;"	m	struct:__anon100	access:public
__anon100::failed_steps	/usr/local/gsl/include/gsl/gsl_odeiv.h	/^  unsigned long int failed_steps;$/;"	m	struct:__anon100	access:public
__anon100::last_step	/usr/local/gsl/include/gsl/gsl_odeiv.h	/^  double last_step;$/;"	m	struct:__anon100	access:public
__anon100::y0	/usr/local/gsl/include/gsl/gsl_odeiv.h	/^  double * y0;$/;"	m	struct:__anon100	access:public
__anon100::yerr	/usr/local/gsl/include/gsl/gsl_odeiv.h	/^  double * yerr;$/;"	m	struct:__anon100	access:public
__anon101::iterate	/usr/local/gsl/include/gsl/gsl_roots.h	/^    int (*iterate) (void *state, gsl_function * f, double * root, double * x_lower, double * x_upper);$/;"	m	struct:__anon101	access:public
__anon101::name	/usr/local/gsl/include/gsl/gsl_roots.h	/^    const char *name;$/;"	m	struct:__anon101	access:public
__anon101::set	/usr/local/gsl/include/gsl/gsl_roots.h	/^    int (*set) (void *state, gsl_function * f, double * root, double x_lower, double x_upper);$/;"	m	struct:__anon101	access:public
__anon101::size	/usr/local/gsl/include/gsl/gsl_roots.h	/^    size_t size;$/;"	m	struct:__anon101	access:public
__anon102::function	/usr/local/gsl/include/gsl/gsl_roots.h	/^    gsl_function * function ;$/;"	m	struct:__anon102	access:public
__anon102::root	/usr/local/gsl/include/gsl/gsl_roots.h	/^    double root ;$/;"	m	struct:__anon102	access:public
__anon102::state	/usr/local/gsl/include/gsl/gsl_roots.h	/^    void *state;$/;"	m	struct:__anon102	access:public
__anon102::type	/usr/local/gsl/include/gsl/gsl_roots.h	/^    const gsl_root_fsolver_type * type;$/;"	m	struct:__anon102	access:public
__anon102::x_lower	/usr/local/gsl/include/gsl/gsl_roots.h	/^    double x_lower;$/;"	m	struct:__anon102	access:public
__anon102::x_upper	/usr/local/gsl/include/gsl/gsl_roots.h	/^    double x_upper;$/;"	m	struct:__anon102	access:public
__anon103::iterate	/usr/local/gsl/include/gsl/gsl_roots.h	/^    int (*iterate) (void *state, gsl_function_fdf * f, double * root);$/;"	m	struct:__anon103	access:public
__anon103::name	/usr/local/gsl/include/gsl/gsl_roots.h	/^    const char *name;$/;"	m	struct:__anon103	access:public
__anon103::set	/usr/local/gsl/include/gsl/gsl_roots.h	/^    int (*set) (void *state, gsl_function_fdf * f, double * root);$/;"	m	struct:__anon103	access:public
__anon103::size	/usr/local/gsl/include/gsl/gsl_roots.h	/^    size_t size;$/;"	m	struct:__anon103	access:public
__anon104::fdf	/usr/local/gsl/include/gsl/gsl_roots.h	/^    gsl_function_fdf * fdf ;$/;"	m	struct:__anon104	access:public
__anon104::root	/usr/local/gsl/include/gsl/gsl_roots.h	/^    double root ;$/;"	m	struct:__anon104	access:public
__anon104::state	/usr/local/gsl/include/gsl/gsl_roots.h	/^    void *state;$/;"	m	struct:__anon104	access:public
__anon104::type	/usr/local/gsl/include/gsl/gsl_roots.h	/^    const gsl_root_fdfsolver_type * type;$/;"	m	struct:__anon104	access:public
__anon105::factor	/usr/local/gsl/include/gsl/gsl_fft_halfcomplex.h	/^    size_t factor[64];$/;"	m	struct:__anon105	access:public
__anon105::n	/usr/local/gsl/include/gsl/gsl_fft_halfcomplex.h	/^    size_t n;$/;"	m	struct:__anon105	access:public
__anon105::nf	/usr/local/gsl/include/gsl/gsl_fft_halfcomplex.h	/^    size_t nf;$/;"	m	struct:__anon105	access:public
__anon105::trig	/usr/local/gsl/include/gsl/gsl_fft_halfcomplex.h	/^    gsl_complex *trig;$/;"	m	struct:__anon105	access:public
__anon105::twiddle	/usr/local/gsl/include/gsl/gsl_fft_halfcomplex.h	/^    gsl_complex *twiddle[64];$/;"	m	struct:__anon105	access:public
__anon106::block	/usr/local/gsl/include/gsl/gsl_matrix_long.h	/^  gsl_block_long * block;$/;"	m	struct:__anon106	access:public
__anon106::data	/usr/local/gsl/include/gsl/gsl_matrix_long.h	/^  long * data;$/;"	m	struct:__anon106	access:public
__anon106::owner	/usr/local/gsl/include/gsl/gsl_matrix_long.h	/^  int owner;$/;"	m	struct:__anon106	access:public
__anon106::size1	/usr/local/gsl/include/gsl/gsl_matrix_long.h	/^  size_t size1;$/;"	m	struct:__anon106	access:public
__anon106::size2	/usr/local/gsl/include/gsl/gsl_matrix_long.h	/^  size_t size2;$/;"	m	struct:__anon106	access:public
__anon106::tda	/usr/local/gsl/include/gsl/gsl_matrix_long.h	/^  size_t tda;$/;"	m	struct:__anon106	access:public
__anon107::matrix	/usr/local/gsl/include/gsl/gsl_matrix_long.h	/^  gsl_matrix_long matrix;$/;"	m	struct:__anon107	access:public
__anon108::matrix	/usr/local/gsl/include/gsl/gsl_matrix_long.h	/^  gsl_matrix_long matrix;$/;"	m	struct:__anon108	access:public
__anon10::block	/usr/local/gsl/include/gsl/gsl_matrix_complex_double.h	/^  gsl_block_complex * block;$/;"	m	struct:__anon10	access:public
__anon10::data	/usr/local/gsl/include/gsl/gsl_matrix_complex_double.h	/^  double * data;$/;"	m	struct:__anon10	access:public
__anon10::owner	/usr/local/gsl/include/gsl/gsl_matrix_complex_double.h	/^  int owner;$/;"	m	struct:__anon10	access:public
__anon10::size1	/usr/local/gsl/include/gsl/gsl_matrix_complex_double.h	/^  size_t size1;$/;"	m	struct:__anon10	access:public
__anon10::size2	/usr/local/gsl/include/gsl/gsl_matrix_complex_double.h	/^  size_t size2;$/;"	m	struct:__anon10	access:public
__anon10::tda	/usr/local/gsl/include/gsl/gsl_matrix_complex_double.h	/^  size_t tda;$/;"	m	struct:__anon10	access:public
__anon110::alpha	/usr/local/gsl/include/gsl/gsl_monte_vegas.h	/^  double alpha;$/;"	m	struct:__anon110	access:public
__anon110::bin	/usr/local/gsl/include/gsl/gsl_monte_vegas.h	/^  int * bin;$/;"	m	struct:__anon110	access:public
__anon110::bins	/usr/local/gsl/include/gsl/gsl_monte_vegas.h	/^  unsigned int bins;$/;"	m	struct:__anon110	access:public
__anon110::bins_max	/usr/local/gsl/include/gsl/gsl_monte_vegas.h	/^  size_t bins_max;$/;"	m	struct:__anon110	access:public
__anon110::box	/usr/local/gsl/include/gsl/gsl_monte_vegas.h	/^  int * box;$/;"	m	struct:__anon110	access:public
__anon110::boxes	/usr/local/gsl/include/gsl/gsl_monte_vegas.h	/^  unsigned int boxes; \/* these are both counted along the axes *\/$/;"	m	struct:__anon110	access:public
__anon110::calls_per_box	/usr/local/gsl/include/gsl/gsl_monte_vegas.h	/^  unsigned int calls_per_box;$/;"	m	struct:__anon110	access:public
__anon110::chi_sum	/usr/local/gsl/include/gsl/gsl_monte_vegas.h	/^  double chi_sum;$/;"	m	struct:__anon110	access:public
__anon110::chisq	/usr/local/gsl/include/gsl/gsl_monte_vegas.h	/^  double chisq;$/;"	m	struct:__anon110	access:public
__anon110::d	/usr/local/gsl/include/gsl/gsl_monte_vegas.h	/^  double * d;$/;"	m	struct:__anon110	access:public
__anon110::delx	/usr/local/gsl/include/gsl/gsl_monte_vegas.h	/^  double * delx;$/;"	m	struct:__anon110	access:public
__anon110::dim	/usr/local/gsl/include/gsl/gsl_monte_vegas.h	/^  size_t dim;$/;"	m	struct:__anon110	access:public
__anon110::it_num	/usr/local/gsl/include/gsl/gsl_monte_vegas.h	/^  unsigned int it_num;$/;"	m	struct:__anon110	access:public
__anon110::it_start	/usr/local/gsl/include/gsl/gsl_monte_vegas.h	/^  unsigned int it_start;$/;"	m	struct:__anon110	access:public
__anon110::iterations	/usr/local/gsl/include/gsl/gsl_monte_vegas.h	/^  unsigned int iterations;$/;"	m	struct:__anon110	access:public
__anon110::jac	/usr/local/gsl/include/gsl/gsl_monte_vegas.h	/^  double jac;$/;"	m	struct:__anon110	access:public
__anon110::mode	/usr/local/gsl/include/gsl/gsl_monte_vegas.h	/^  int mode;$/;"	m	struct:__anon110	access:public
__anon110::ostream	/usr/local/gsl/include/gsl/gsl_monte_vegas.h	/^  FILE * ostream;$/;"	m	struct:__anon110	access:public
__anon110::result	/usr/local/gsl/include/gsl/gsl_monte_vegas.h	/^  double result;$/;"	m	struct:__anon110	access:public
__anon110::samples	/usr/local/gsl/include/gsl/gsl_monte_vegas.h	/^  unsigned int samples;$/;"	m	struct:__anon110	access:public
__anon110::sigma	/usr/local/gsl/include/gsl/gsl_monte_vegas.h	/^  double sigma;$/;"	m	struct:__anon110	access:public
__anon110::stage	/usr/local/gsl/include/gsl/gsl_monte_vegas.h	/^  int stage;$/;"	m	struct:__anon110	access:public
__anon110::sum_wgts	/usr/local/gsl/include/gsl/gsl_monte_vegas.h	/^  double sum_wgts;$/;"	m	struct:__anon110	access:public
__anon110::verbose	/usr/local/gsl/include/gsl/gsl_monte_vegas.h	/^  int verbose;$/;"	m	struct:__anon110	access:public
__anon110::vol	/usr/local/gsl/include/gsl/gsl_monte_vegas.h	/^  double vol;$/;"	m	struct:__anon110	access:public
__anon110::weight	/usr/local/gsl/include/gsl/gsl_monte_vegas.h	/^  double * weight;$/;"	m	struct:__anon110	access:public
__anon110::wtd_int_sum	/usr/local/gsl/include/gsl/gsl_monte_vegas.h	/^  double wtd_int_sum; $/;"	m	struct:__anon110	access:public
__anon110::x	/usr/local/gsl/include/gsl/gsl_monte_vegas.h	/^  double * x;$/;"	m	struct:__anon110	access:public
__anon110::xi	/usr/local/gsl/include/gsl/gsl_monte_vegas.h	/^  double * xi;$/;"	m	struct:__anon110	access:public
__anon110::xin	/usr/local/gsl/include/gsl/gsl_monte_vegas.h	/^  double * xin;$/;"	m	struct:__anon110	access:public
__anon111::alloc	/usr/local/gsl/include/gsl/gsl_multimin.h	/^  int (*alloc) (void *state, size_t n);$/;"	m	struct:__anon111	access:public
__anon111::free	/usr/local/gsl/include/gsl/gsl_multimin.h	/^  void (*free) (void *state);$/;"	m	struct:__anon111	access:public
__anon111::iterate	/usr/local/gsl/include/gsl/gsl_multimin.h	/^  int (*iterate) (void *state, gsl_multimin_function * f, $/;"	m	struct:__anon111	access:public
__anon111::name	/usr/local/gsl/include/gsl/gsl_multimin.h	/^  const char *name;$/;"	m	struct:__anon111	access:public
__anon111::set	/usr/local/gsl/include/gsl/gsl_multimin.h	/^  int (*set) (void *state, gsl_multimin_function * f,$/;"	m	struct:__anon111	access:public
__anon111::size	/usr/local/gsl/include/gsl/gsl_multimin.h	/^  size_t size;$/;"	m	struct:__anon111	access:public
__anon112::f	/usr/local/gsl/include/gsl/gsl_multimin.h	/^  gsl_multimin_function *f;$/;"	m	struct:__anon112	access:public
__anon112::fval	/usr/local/gsl/include/gsl/gsl_multimin.h	/^  double fval;$/;"	m	struct:__anon112	access:public
__anon112::size	/usr/local/gsl/include/gsl/gsl_multimin.h	/^  double size;$/;"	m	struct:__anon112	access:public
__anon112::state	/usr/local/gsl/include/gsl/gsl_multimin.h	/^  void *state;$/;"	m	struct:__anon112	access:public
__anon112::type	/usr/local/gsl/include/gsl/gsl_multimin.h	/^  const gsl_multimin_fminimizer_type *type;$/;"	m	struct:__anon112	access:public
__anon112::x	/usr/local/gsl/include/gsl/gsl_multimin.h	/^  gsl_vector * x;$/;"	m	struct:__anon112	access:public
__anon113::alloc	/usr/local/gsl/include/gsl/gsl_multimin.h	/^  int (*alloc) (void *state, size_t n);$/;"	m	struct:__anon113	access:public
__anon113::free	/usr/local/gsl/include/gsl/gsl_multimin.h	/^  void (*free) (void *state);$/;"	m	struct:__anon113	access:public
__anon113::iterate	/usr/local/gsl/include/gsl/gsl_multimin.h	/^  int (*iterate) (void *state,gsl_multimin_function_fdf * fdf, $/;"	m	struct:__anon113	access:public
__anon113::name	/usr/local/gsl/include/gsl/gsl_multimin.h	/^  const char *name;$/;"	m	struct:__anon113	access:public
__anon113::restart	/usr/local/gsl/include/gsl/gsl_multimin.h	/^  int (*restart) (void *state);$/;"	m	struct:__anon113	access:public
__anon113::set	/usr/local/gsl/include/gsl/gsl_multimin.h	/^  int (*set) (void *state, gsl_multimin_function_fdf * fdf,$/;"	m	struct:__anon113	access:public
__anon113::size	/usr/local/gsl/include/gsl/gsl_multimin.h	/^  size_t size;$/;"	m	struct:__anon113	access:public
__anon114::dx	/usr/local/gsl/include/gsl/gsl_multimin.h	/^  gsl_vector * dx;$/;"	m	struct:__anon114	access:public
__anon114::f	/usr/local/gsl/include/gsl/gsl_multimin.h	/^  double f;$/;"	m	struct:__anon114	access:public
__anon114::fdf	/usr/local/gsl/include/gsl/gsl_multimin.h	/^  gsl_multimin_function_fdf *fdf;$/;"	m	struct:__anon114	access:public
__anon114::gradient	/usr/local/gsl/include/gsl/gsl_multimin.h	/^  gsl_vector * gradient;$/;"	m	struct:__anon114	access:public
__anon114::state	/usr/local/gsl/include/gsl/gsl_multimin.h	/^  void *state;$/;"	m	struct:__anon114	access:public
__anon114::type	/usr/local/gsl/include/gsl/gsl_multimin.h	/^  const gsl_multimin_fdfminimizer_type *type;$/;"	m	struct:__anon114	access:public
__anon114::x	/usr/local/gsl/include/gsl/gsl_multimin.h	/^  gsl_vector * x;$/;"	m	struct:__anon114	access:public
__anon115::block	/usr/local/gsl/include/gsl/gsl_vector_complex_float.h	/^  gsl_block_complex_float *block;$/;"	m	struct:__anon115	access:public
__anon115::data	/usr/local/gsl/include/gsl/gsl_vector_complex_float.h	/^  float *data;$/;"	m	struct:__anon115	access:public
__anon115::owner	/usr/local/gsl/include/gsl/gsl_vector_complex_float.h	/^  int owner;$/;"	m	struct:__anon115	access:public
__anon115::size	/usr/local/gsl/include/gsl/gsl_vector_complex_float.h	/^  size_t size;$/;"	m	struct:__anon115	access:public
__anon115::stride	/usr/local/gsl/include/gsl/gsl_vector_complex_float.h	/^  size_t stride;$/;"	m	struct:__anon115	access:public
__anon116::vector	/usr/local/gsl/include/gsl/gsl_vector_complex_float.h	/^  gsl_vector_complex_float vector;$/;"	m	struct:__anon116	access:public
__anon117::vector	/usr/local/gsl/include/gsl/gsl_vector_complex_float.h	/^  gsl_vector_complex_float vector;$/;"	m	struct:__anon117	access:public
__anon118::A	/usr/local/gsl/include/gsl/gsl_multifit.h	/^  gsl_matrix * A;$/;"	m	struct:__anon118	access:public
__anon118::D	/usr/local/gsl/include/gsl/gsl_multifit.h	/^  gsl_vector * D;$/;"	m	struct:__anon118	access:public
__anon118::Q	/usr/local/gsl/include/gsl/gsl_multifit.h	/^  gsl_matrix * Q;$/;"	m	struct:__anon118	access:public
__anon118::QSI	/usr/local/gsl/include/gsl/gsl_multifit.h	/^  gsl_matrix * QSI;$/;"	m	struct:__anon118	access:public
__anon118::S	/usr/local/gsl/include/gsl/gsl_multifit.h	/^  gsl_vector * S;$/;"	m	struct:__anon118	access:public
__anon118::n	/usr/local/gsl/include/gsl/gsl_multifit.h	/^  size_t n; \/* number of observations *\/$/;"	m	struct:__anon118	access:public
__anon118::p	/usr/local/gsl/include/gsl/gsl_multifit.h	/^  size_t p; \/* number of parameters *\/$/;"	m	struct:__anon118	access:public
__anon118::t	/usr/local/gsl/include/gsl/gsl_multifit.h	/^  gsl_vector * t;$/;"	m	struct:__anon118	access:public
__anon118::xt	/usr/local/gsl/include/gsl/gsl_multifit.h	/^  gsl_vector * xt;$/;"	m	struct:__anon118	access:public
__anon11::matrix	/usr/local/gsl/include/gsl/gsl_matrix_complex_double.h	/^  gsl_matrix_complex matrix;$/;"	m	struct:__anon11	access:public
__anon120::exponent	/usr/local/gsl/include/gsl/gsl_ieee_utils.h	/^  int exponent ;$/;"	m	struct:__anon120	access:public
__anon120::mantissa	/usr/local/gsl/include/gsl/gsl_ieee_utils.h	/^  char mantissa[24] ; \/* Actual bits are 0..22, element 23 is \\0 *\/$/;"	m	struct:__anon120	access:public
__anon120::sign	/usr/local/gsl/include/gsl/gsl_ieee_utils.h	/^  int sign ;$/;"	m	struct:__anon120	access:public
__anon120::type	/usr/local/gsl/include/gsl/gsl_ieee_utils.h	/^  int type ;$/;"	m	struct:__anon120	access:public
__anon121::exponent	/usr/local/gsl/include/gsl/gsl_ieee_utils.h	/^  int exponent ;$/;"	m	struct:__anon121	access:public
__anon121::mantissa	/usr/local/gsl/include/gsl/gsl_ieee_utils.h	/^  char mantissa[53] ; \/* Actual bits are 0..51, element 52 is \\0 *\/$/;"	m	struct:__anon121	access:public
__anon121::sign	/usr/local/gsl/include/gsl/gsl_ieee_utils.h	/^  int sign ;$/;"	m	struct:__anon121	access:public
__anon121::type	/usr/local/gsl/include/gsl/gsl_ieee_utils.h	/^  int type ;$/;"	m	struct:__anon121	access:public
__anon125::block	/usr/local/gsl/include/gsl/gsl_vector_long_double.h	/^  gsl_block_long_double *block;$/;"	m	struct:__anon125	access:public
__anon125::data	/usr/local/gsl/include/gsl/gsl_vector_long_double.h	/^  long double *data;$/;"	m	struct:__anon125	access:public
__anon125::owner	/usr/local/gsl/include/gsl/gsl_vector_long_double.h	/^  int owner;$/;"	m	struct:__anon125	access:public
__anon125::size	/usr/local/gsl/include/gsl/gsl_vector_long_double.h	/^  size_t size;$/;"	m	struct:__anon125	access:public
__anon125::stride	/usr/local/gsl/include/gsl/gsl_vector_long_double.h	/^  size_t stride;$/;"	m	struct:__anon125	access:public
__anon126::vector	/usr/local/gsl/include/gsl/gsl_vector_long_double.h	/^  gsl_vector_long_double vector;$/;"	m	struct:__anon126	access:public
__anon127::vector	/usr/local/gsl/include/gsl/gsl_vector_long_double.h	/^  gsl_vector_long_double vector;$/;"	m	struct:__anon127	access:public
__anon128::block	/usr/local/gsl/include/gsl/gsl_matrix_complex_float.h	/^  gsl_block_complex_float * block;$/;"	m	struct:__anon128	access:public
__anon128::data	/usr/local/gsl/include/gsl/gsl_matrix_complex_float.h	/^  float * data;$/;"	m	struct:__anon128	access:public
__anon128::owner	/usr/local/gsl/include/gsl/gsl_matrix_complex_float.h	/^  int owner;$/;"	m	struct:__anon128	access:public
__anon128::size1	/usr/local/gsl/include/gsl/gsl_matrix_complex_float.h	/^  size_t size1;$/;"	m	struct:__anon128	access:public
__anon128::size2	/usr/local/gsl/include/gsl/gsl_matrix_complex_float.h	/^  size_t size2;$/;"	m	struct:__anon128	access:public
__anon128::tda	/usr/local/gsl/include/gsl/gsl_matrix_complex_float.h	/^  size_t tda;$/;"	m	struct:__anon128	access:public
__anon129::matrix	/usr/local/gsl/include/gsl/gsl_matrix_complex_float.h	/^  gsl_matrix_complex_float matrix;$/;"	m	struct:__anon129	access:public
__anon12::matrix	/usr/local/gsl/include/gsl/gsl_matrix_complex_double.h	/^  gsl_matrix_complex matrix;$/;"	m	struct:__anon12	access:public
__anon130::matrix	/usr/local/gsl/include/gsl/gsl_matrix_complex_float.h	/^  gsl_matrix_complex_float matrix;$/;"	m	struct:__anon130	access:public
__anon132::bin	/usr/local/gsl/include/gsl/gsl_histogram2d.h	/^  double * bin ;$/;"	m	struct:__anon132	access:public
__anon132::nx	/usr/local/gsl/include/gsl/gsl_histogram2d.h	/^  size_t nx, ny ;$/;"	m	struct:__anon132	access:public
__anon132::ny	/usr/local/gsl/include/gsl/gsl_histogram2d.h	/^  size_t nx, ny ;$/;"	m	struct:__anon132	access:public
__anon132::xrange	/usr/local/gsl/include/gsl/gsl_histogram2d.h	/^  double * xrange ;$/;"	m	struct:__anon132	access:public
__anon132::yrange	/usr/local/gsl/include/gsl/gsl_histogram2d.h	/^  double * yrange ;$/;"	m	struct:__anon132	access:public
__anon133::nx	/usr/local/gsl/include/gsl/gsl_histogram2d.h	/^  size_t nx, ny ;$/;"	m	struct:__anon133	access:public
__anon133::ny	/usr/local/gsl/include/gsl/gsl_histogram2d.h	/^  size_t nx, ny ;$/;"	m	struct:__anon133	access:public
__anon133::sum	/usr/local/gsl/include/gsl/gsl_histogram2d.h	/^  double * sum ;$/;"	m	struct:__anon133	access:public
__anon133::xrange	/usr/local/gsl/include/gsl/gsl_histogram2d.h	/^  double * xrange ;$/;"	m	struct:__anon133	access:public
__anon133::yrange	/usr/local/gsl/include/gsl/gsl_histogram2d.h	/^  double * yrange ;$/;"	m	struct:__anon133	access:public
__anon134::block	/usr/local/gsl/include/gsl/gsl_vector_complex_double.h	/^  gsl_block_complex *block;$/;"	m	struct:__anon134	access:public
__anon134::data	/usr/local/gsl/include/gsl/gsl_vector_complex_double.h	/^  double *data;$/;"	m	struct:__anon134	access:public
__anon134::owner	/usr/local/gsl/include/gsl/gsl_vector_complex_double.h	/^  int owner;$/;"	m	struct:__anon134	access:public
__anon134::size	/usr/local/gsl/include/gsl/gsl_vector_complex_double.h	/^  size_t size;$/;"	m	struct:__anon134	access:public
__anon134::stride	/usr/local/gsl/include/gsl/gsl_vector_complex_double.h	/^  size_t stride;$/;"	m	struct:__anon134	access:public
__anon135::vector	/usr/local/gsl/include/gsl/gsl_vector_complex_double.h	/^  gsl_vector_complex vector;$/;"	m	struct:__anon135	access:public
__anon136::vector	/usr/local/gsl/include/gsl/gsl_vector_complex_double.h	/^  gsl_vector_complex vector;$/;"	m	struct:__anon136	access:public
__anon137::B	/usr/local/gsl/include/gsl/gsl_bspline.h	/^    gsl_vector *B; \/* temporary spline results *\/$/;"	m	struct:__anon137	access:public
__anon137::deltal	/usr/local/gsl/include/gsl/gsl_bspline.h	/^    gsl_vector *deltal; \/* left delta *\/$/;"	m	struct:__anon137	access:public
__anon137::deltar	/usr/local/gsl/include/gsl/gsl_bspline.h	/^    gsl_vector *deltar; \/* right delta *\/$/;"	m	struct:__anon137	access:public
__anon137::k	/usr/local/gsl/include/gsl/gsl_bspline.h	/^    size_t k; \/* spline order *\/$/;"	m	struct:__anon137	access:public
__anon137::km1	/usr/local/gsl/include/gsl/gsl_bspline.h	/^    size_t km1; \/* k - 1 (polynomial order) *\/$/;"	m	struct:__anon137	access:public
__anon137::knots	/usr/local/gsl/include/gsl/gsl_bspline.h	/^    gsl_vector *knots; \/* knots vector *\/$/;"	m	struct:__anon137	access:public
__anon137::l	/usr/local/gsl/include/gsl/gsl_bspline.h	/^    size_t l; \/* number of polynomial pieces on interval *\/$/;"	m	struct:__anon137	access:public
__anon137::n	/usr/local/gsl/include/gsl/gsl_bspline.h	/^    size_t n; \/* number of bspline basis functions (l + k - 1) *\/$/;"	m	struct:__anon137	access:public
__anon137::nbreak	/usr/local/gsl/include/gsl/gsl_bspline.h	/^    size_t nbreak; \/* number of breakpoints (l + 1) *\/$/;"	m	struct:__anon137	access:public
__anon138::A	/usr/local/gsl/include/gsl/gsl_bspline.h	/^    gsl_matrix *A; \/* work matrix *\/$/;"	m	struct:__anon138	access:public
__anon138::dB	/usr/local/gsl/include/gsl/gsl_bspline.h	/^    gsl_matrix *dB; \/* temporary derivative results *\/$/;"	m	struct:__anon138	access:public
__anon138::k	/usr/local/gsl/include/gsl/gsl_bspline.h	/^    size_t k; \/* spline order *\/$/;"	m	struct:__anon138	access:public
__anon139::iters_fixed_T	/usr/local/gsl/include/gsl/gsl_siman.h	/^  int iters_fixed_T;    \/* how many iterations at each temperature? *\/$/;"	m	struct:__anon139	access:public
__anon139::k	/usr/local/gsl/include/gsl/gsl_siman.h	/^  double k, t_initial, mu_t, t_min;$/;"	m	struct:__anon139	access:public
__anon139::mu_t	/usr/local/gsl/include/gsl/gsl_siman.h	/^  double k, t_initial, mu_t, t_min;$/;"	m	struct:__anon139	access:public
__anon139::n_tries	/usr/local/gsl/include/gsl/gsl_siman.h	/^  int n_tries;          \/* how many points to try for each step *\/$/;"	m	struct:__anon139	access:public
__anon139::step_size	/usr/local/gsl/include/gsl/gsl_siman.h	/^  double step_size;     \/* max step size in the random walk *\/$/;"	m	struct:__anon139	access:public
__anon139::t_initial	/usr/local/gsl/include/gsl/gsl_siman.h	/^  double k, t_initial, mu_t, t_min;$/;"	m	struct:__anon139	access:public
__anon139::t_min	/usr/local/gsl/include/gsl/gsl_siman.h	/^  double k, t_initial, mu_t, t_min;$/;"	m	struct:__anon139	access:public
__anon13::file	/usr/local/gsl/include/gsl/gsl_ntuple.h	/^    FILE * file;$/;"	m	struct:__anon13	access:public
__anon13::ntuple_data	/usr/local/gsl/include/gsl/gsl_ntuple.h	/^    void * ntuple_data;$/;"	m	struct:__anon13	access:public
__anon13::size	/usr/local/gsl/include/gsl/gsl_ntuple.h	/^    size_t size;$/;"	m	struct:__anon13	access:public
__anon140::block	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	/^  gsl_block_uchar * block;$/;"	m	struct:__anon140	access:public
__anon140::data	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	/^  unsigned char * data;$/;"	m	struct:__anon140	access:public
__anon140::owner	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	/^  int owner;$/;"	m	struct:__anon140	access:public
__anon140::size1	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	/^  size_t size1;$/;"	m	struct:__anon140	access:public
__anon140::size2	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	/^  size_t size2;$/;"	m	struct:__anon140	access:public
__anon140::tda	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	/^  size_t tda;$/;"	m	struct:__anon140	access:public
__anon141::matrix	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	/^  gsl_matrix_uchar matrix;$/;"	m	struct:__anon141	access:public
__anon142::matrix	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	/^  gsl_matrix_uchar matrix;$/;"	m	struct:__anon142	access:public
__anon143::block	/usr/local/gsl/include/gsl/gsl_matrix_float.h	/^  gsl_block_float * block;$/;"	m	struct:__anon143	access:public
__anon143::data	/usr/local/gsl/include/gsl/gsl_matrix_float.h	/^  float * data;$/;"	m	struct:__anon143	access:public
__anon143::owner	/usr/local/gsl/include/gsl/gsl_matrix_float.h	/^  int owner;$/;"	m	struct:__anon143	access:public
__anon143::size1	/usr/local/gsl/include/gsl/gsl_matrix_float.h	/^  size_t size1;$/;"	m	struct:__anon143	access:public
__anon143::size2	/usr/local/gsl/include/gsl/gsl_matrix_float.h	/^  size_t size2;$/;"	m	struct:__anon143	access:public
__anon143::tda	/usr/local/gsl/include/gsl/gsl_matrix_float.h	/^  size_t tda;$/;"	m	struct:__anon143	access:public
__anon144::matrix	/usr/local/gsl/include/gsl/gsl_matrix_float.h	/^  gsl_matrix_float matrix;$/;"	m	struct:__anon144	access:public
__anon145::matrix	/usr/local/gsl/include/gsl/gsl_matrix_float.h	/^  gsl_matrix_float matrix;$/;"	m	struct:__anon145	access:public
__anon146::iterate	/usr/local/gsl/include/gsl/gsl_min.h	/^    int (*iterate) (void *state, gsl_function * f, double * x_minimum, double * f_minimum, double * x_lower, double * f_lower, double * x_upper, double * f_upper);$/;"	m	struct:__anon146	access:public
__anon146::name	/usr/local/gsl/include/gsl/gsl_min.h	/^    const char *name;$/;"	m	struct:__anon146	access:public
__anon146::set	/usr/local/gsl/include/gsl/gsl_min.h	/^    int (*set) (void *state, gsl_function * f, double x_minimum, double f_minimum, double x_lower, double f_lower, double x_upper, double f_upper);$/;"	m	struct:__anon146	access:public
__anon146::size	/usr/local/gsl/include/gsl/gsl_min.h	/^    size_t size;$/;"	m	struct:__anon146	access:public
__anon147::f_lower	/usr/local/gsl/include/gsl/gsl_min.h	/^    double f_minimum, f_lower, f_upper;$/;"	m	struct:__anon147	access:public
__anon147::f_minimum	/usr/local/gsl/include/gsl/gsl_min.h	/^    double f_minimum, f_lower, f_upper;$/;"	m	struct:__anon147	access:public
__anon147::f_upper	/usr/local/gsl/include/gsl/gsl_min.h	/^    double f_minimum, f_lower, f_upper;$/;"	m	struct:__anon147	access:public
__anon147::function	/usr/local/gsl/include/gsl/gsl_min.h	/^    gsl_function * function ;$/;"	m	struct:__anon147	access:public
__anon147::state	/usr/local/gsl/include/gsl/gsl_min.h	/^    void *state;$/;"	m	struct:__anon147	access:public
__anon147::type	/usr/local/gsl/include/gsl/gsl_min.h	/^    const gsl_min_fminimizer_type * type;$/;"	m	struct:__anon147	access:public
__anon147::x_lower	/usr/local/gsl/include/gsl/gsl_min.h	/^    double x_lower ;$/;"	m	struct:__anon147	access:public
__anon147::x_minimum	/usr/local/gsl/include/gsl/gsl_min.h	/^    double x_minimum ;$/;"	m	struct:__anon147	access:public
__anon147::x_upper	/usr/local/gsl/include/gsl/gsl_min.h	/^    double x_upper ;$/;"	m	struct:__anon147	access:public
__anon148::block	/usr/local/gsl/include/gsl/gsl_matrix_char.h	/^  gsl_block_char * block;$/;"	m	struct:__anon148	access:public
__anon148::data	/usr/local/gsl/include/gsl/gsl_matrix_char.h	/^  char * data;$/;"	m	struct:__anon148	access:public
__anon148::owner	/usr/local/gsl/include/gsl/gsl_matrix_char.h	/^  int owner;$/;"	m	struct:__anon148	access:public
__anon148::size1	/usr/local/gsl/include/gsl/gsl_matrix_char.h	/^  size_t size1;$/;"	m	struct:__anon148	access:public
__anon148::size2	/usr/local/gsl/include/gsl/gsl_matrix_char.h	/^  size_t size2;$/;"	m	struct:__anon148	access:public
__anon148::tda	/usr/local/gsl/include/gsl/gsl_matrix_char.h	/^  size_t tda;$/;"	m	struct:__anon148	access:public
__anon149::matrix	/usr/local/gsl/include/gsl/gsl_matrix_char.h	/^  gsl_matrix_char matrix;$/;"	m	struct:__anon149	access:public
__anon14::function	/usr/local/gsl/include/gsl/gsl_ntuple.h	/^  int (* function) (void * ntuple_data, void * params);$/;"	m	struct:__anon14	access:public
__anon14::params	/usr/local/gsl/include/gsl/gsl_ntuple.h	/^  void * params;$/;"	m	struct:__anon14	access:public
__anon150::matrix	/usr/local/gsl/include/gsl/gsl_matrix_char.h	/^  gsl_matrix_char matrix;$/;"	m	struct:__anon150	access:public
__anon151::block	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	/^  gsl_block_ushort * block;$/;"	m	struct:__anon151	access:public
__anon151::data	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	/^  unsigned short * data;$/;"	m	struct:__anon151	access:public
__anon151::owner	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	/^  int owner;$/;"	m	struct:__anon151	access:public
__anon151::size1	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	/^  size_t size1;$/;"	m	struct:__anon151	access:public
__anon151::size2	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	/^  size_t size2;$/;"	m	struct:__anon151	access:public
__anon151::tda	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	/^  size_t tda;$/;"	m	struct:__anon151	access:public
__anon152::matrix	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	/^  gsl_matrix_ushort matrix;$/;"	m	struct:__anon152	access:public
__anon153::matrix	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	/^  gsl_matrix_ushort matrix;$/;"	m	struct:__anon153	access:public
__anon154::block	/usr/local/gsl/include/gsl/gsl_vector_short.h	/^  gsl_block_short *block;$/;"	m	struct:__anon154	access:public
__anon154::data	/usr/local/gsl/include/gsl/gsl_vector_short.h	/^  short *data;$/;"	m	struct:__anon154	access:public
__anon154::owner	/usr/local/gsl/include/gsl/gsl_vector_short.h	/^  int owner;$/;"	m	struct:__anon154	access:public
__anon154::size	/usr/local/gsl/include/gsl/gsl_vector_short.h	/^  size_t size;$/;"	m	struct:__anon154	access:public
__anon154::stride	/usr/local/gsl/include/gsl/gsl_vector_short.h	/^  size_t stride;$/;"	m	struct:__anon154	access:public
__anon155::vector	/usr/local/gsl/include/gsl/gsl_vector_short.h	/^  gsl_vector_short vector;$/;"	m	struct:__anon155	access:public
__anon156::vector	/usr/local/gsl/include/gsl/gsl_vector_short.h	/^  gsl_vector_short vector;$/;"	m	struct:__anon156	access:public
__anon158::block	/usr/local/gsl/include/gsl/gsl_vector_int.h	/^  gsl_block_int *block;$/;"	m	struct:__anon158	access:public
__anon158::data	/usr/local/gsl/include/gsl/gsl_vector_int.h	/^  int *data;$/;"	m	struct:__anon158	access:public
__anon158::owner	/usr/local/gsl/include/gsl/gsl_vector_int.h	/^  int owner;$/;"	m	struct:__anon158	access:public
__anon158::size	/usr/local/gsl/include/gsl/gsl_vector_int.h	/^  size_t size;$/;"	m	struct:__anon158	access:public
__anon158::stride	/usr/local/gsl/include/gsl/gsl_vector_int.h	/^  size_t stride;$/;"	m	struct:__anon158	access:public
__anon159::vector	/usr/local/gsl/include/gsl/gsl_vector_int.h	/^  gsl_vector_int vector;$/;"	m	struct:__anon159	access:public
__anon15::function	/usr/local/gsl/include/gsl/gsl_ntuple.h	/^  double (* function) (void * ntuple_data, void * params);$/;"	m	struct:__anon15	access:public
__anon15::params	/usr/local/gsl/include/gsl/gsl_ntuple.h	/^  void * params;$/;"	m	struct:__anon15	access:public
__anon160::vector	/usr/local/gsl/include/gsl/gsl_vector_int.h	/^  gsl_vector_int vector;$/;"	m	struct:__anon160	access:public
__anon161::block	/usr/local/gsl/include/gsl/gsl_vector_ushort.h	/^  gsl_block_ushort *block;$/;"	m	struct:__anon161	access:public
__anon161::data	/usr/local/gsl/include/gsl/gsl_vector_ushort.h	/^  unsigned short *data;$/;"	m	struct:__anon161	access:public
__anon161::owner	/usr/local/gsl/include/gsl/gsl_vector_ushort.h	/^  int owner;$/;"	m	struct:__anon161	access:public
__anon161::size	/usr/local/gsl/include/gsl/gsl_vector_ushort.h	/^  size_t size;$/;"	m	struct:__anon161	access:public
__anon161::stride	/usr/local/gsl/include/gsl/gsl_vector_ushort.h	/^  size_t stride;$/;"	m	struct:__anon161	access:public
__anon162::vector	/usr/local/gsl/include/gsl/gsl_vector_ushort.h	/^  gsl_vector_ushort vector;$/;"	m	struct:__anon162	access:public
__anon163::vector	/usr/local/gsl/include/gsl/gsl_vector_ushort.h	/^  gsl_vector_ushort vector;$/;"	m	struct:__anon163	access:public
__anon165::init	/usr/local/gsl/include/gsl/gsl_wavelet.h	/^  int (*init) (const double **h1, const double **g1,$/;"	m	struct:__anon165	access:public
__anon165::name	/usr/local/gsl/include/gsl/gsl_wavelet.h	/^  const char *name;$/;"	m	struct:__anon165	access:public
__anon166::g1	/usr/local/gsl/include/gsl/gsl_wavelet.h	/^  const double *g1;$/;"	m	struct:__anon166	access:public
__anon166::g2	/usr/local/gsl/include/gsl/gsl_wavelet.h	/^  const double *g2;$/;"	m	struct:__anon166	access:public
__anon166::h1	/usr/local/gsl/include/gsl/gsl_wavelet.h	/^  const double *h1;$/;"	m	struct:__anon166	access:public
__anon166::h2	/usr/local/gsl/include/gsl/gsl_wavelet.h	/^  const double *h2;$/;"	m	struct:__anon166	access:public
__anon166::nc	/usr/local/gsl/include/gsl/gsl_wavelet.h	/^  size_t nc;$/;"	m	struct:__anon166	access:public
__anon166::offset	/usr/local/gsl/include/gsl/gsl_wavelet.h	/^  size_t offset;$/;"	m	struct:__anon166	access:public
__anon166::type	/usr/local/gsl/include/gsl/gsl_wavelet.h	/^  const gsl_wavelet_type *type;$/;"	m	struct:__anon166	access:public
__anon167::n	/usr/local/gsl/include/gsl/gsl_wavelet.h	/^  size_t n;$/;"	m	struct:__anon167	access:public
__anon167::scratch	/usr/local/gsl/include/gsl/gsl_wavelet.h	/^  double *scratch;$/;"	m	struct:__anon167	access:public
__anon168::get	/usr/local/gsl/include/gsl/gsl_qrng.h	/^  int (*get) (void * state, unsigned int dimension, double x[]);$/;"	m	struct:__anon168	access:public
__anon168::init_state	/usr/local/gsl/include/gsl/gsl_qrng.h	/^  int (*init_state) (void * state, unsigned int dimension);$/;"	m	struct:__anon168	access:public
__anon168::max_dimension	/usr/local/gsl/include/gsl/gsl_qrng.h	/^  unsigned int max_dimension;$/;"	m	struct:__anon168	access:public
__anon168::name	/usr/local/gsl/include/gsl/gsl_qrng.h	/^  const char * name;$/;"	m	struct:__anon168	access:public
__anon168::state_size	/usr/local/gsl/include/gsl/gsl_qrng.h	/^  size_t (*state_size) (unsigned int dimension);$/;"	m	struct:__anon168	access:public
__anon169::dimension	/usr/local/gsl/include/gsl/gsl_qrng.h	/^  unsigned int dimension;$/;"	m	struct:__anon169	access:public
__anon169::state	/usr/local/gsl/include/gsl/gsl_qrng.h	/^  void * state;$/;"	m	struct:__anon169	access:public
__anon169::state_size	/usr/local/gsl/include/gsl/gsl_qrng.h	/^  size_t state_size;$/;"	m	struct:__anon169	access:public
__anon169::type	/usr/local/gsl/include/gsl/gsl_qrng.h	/^  const gsl_qrng_type * type;$/;"	m	struct:__anon169	access:public
__anon16::factor	/usr/local/gsl/include/gsl/gsl_fft_complex_float.h	/^    size_t factor[64];$/;"	m	struct:__anon16	access:public
__anon16::n	/usr/local/gsl/include/gsl/gsl_fft_complex_float.h	/^    size_t n;$/;"	m	struct:__anon16	access:public
__anon16::nf	/usr/local/gsl/include/gsl/gsl_fft_complex_float.h	/^    size_t nf;$/;"	m	struct:__anon16	access:public
__anon16::trig	/usr/local/gsl/include/gsl/gsl_fft_complex_float.h	/^    gsl_complex_float *trig;$/;"	m	struct:__anon16	access:public
__anon16::twiddle	/usr/local/gsl/include/gsl/gsl_fft_complex_float.h	/^    gsl_complex_float *twiddle[64];$/;"	m	struct:__anon16	access:public
__anon170::dq_den	/usr/local/gsl/include/gsl/gsl_sum.h	/^  double *dq_den;$/;"	m	struct:__anon170	access:public
__anon170::dq_num	/usr/local/gsl/include/gsl/gsl_sum.h	/^  double *dq_num;$/;"	m	struct:__anon170	access:public
__anon170::dsum	/usr/local/gsl/include/gsl/gsl_sum.h	/^  double *dsum;$/;"	m	struct:__anon170	access:public
__anon170::i	/usr/local/gsl/include/gsl/gsl_sum.h	/^  size_t i;                     \/* position in array *\/$/;"	m	struct:__anon170	access:public
__anon170::q_den	/usr/local/gsl/include/gsl/gsl_sum.h	/^  double *q_den;$/;"	m	struct:__anon170	access:public
__anon170::q_num	/usr/local/gsl/include/gsl/gsl_sum.h	/^  double *q_num;$/;"	m	struct:__anon170	access:public
__anon170::size	/usr/local/gsl/include/gsl/gsl_sum.h	/^  size_t size;$/;"	m	struct:__anon170	access:public
__anon170::sum_plain	/usr/local/gsl/include/gsl/gsl_sum.h	/^  double sum_plain;$/;"	m	struct:__anon170	access:public
__anon170::terms_used	/usr/local/gsl/include/gsl/gsl_sum.h	/^  size_t terms_used;            \/* number of calls *\/$/;"	m	struct:__anon170	access:public
__anon171::dsum	/usr/local/gsl/include/gsl/gsl_sum.h	/^  double *dsum;$/;"	m	struct:__anon171	access:public
__anon171::i	/usr/local/gsl/include/gsl/gsl_sum.h	/^  size_t i;                     \/* position in array *\/$/;"	m	struct:__anon171	access:public
__anon171::q_den	/usr/local/gsl/include/gsl/gsl_sum.h	/^  double *q_den;$/;"	m	struct:__anon171	access:public
__anon171::q_num	/usr/local/gsl/include/gsl/gsl_sum.h	/^  double *q_num;$/;"	m	struct:__anon171	access:public
__anon171::size	/usr/local/gsl/include/gsl/gsl_sum.h	/^  size_t size;$/;"	m	struct:__anon171	access:public
__anon171::sum_plain	/usr/local/gsl/include/gsl/gsl_sum.h	/^  double sum_plain;$/;"	m	struct:__anon171	access:public
__anon171::terms_used	/usr/local/gsl/include/gsl/gsl_sum.h	/^  size_t terms_used;            \/* number of calls *\/$/;"	m	struct:__anon171	access:public
__anon172::cache	/usr/local/gsl/include/gsl/gsl_interp.h	/^  size_t  cache;        \/* cache of index   *\/$/;"	m	struct:__anon172	access:public
__anon172::hit_count	/usr/local/gsl/include/gsl/gsl_interp.h	/^  size_t  hit_count;$/;"	m	struct:__anon172	access:public
__anon172::miss_count	/usr/local/gsl/include/gsl/gsl_interp.h	/^  size_t  miss_count;   \/* keep statistics  *\/$/;"	m	struct:__anon172	access:public
__anon173::alloc	/usr/local/gsl/include/gsl/gsl_interp.h	/^  void *  (*alloc) (size_t size);$/;"	m	struct:__anon173	access:public
__anon173::eval	/usr/local/gsl/include/gsl/gsl_interp.h	/^  int     (*eval)    (const void *, const double xa[], const double ya[], size_t size, double x, gsl_interp_accel *, double * y);$/;"	m	struct:__anon173	access:public
__anon173::eval_deriv	/usr/local/gsl/include/gsl/gsl_interp.h	/^  int     (*eval_deriv)  (const void *, const double xa[], const double ya[], size_t size, double x, gsl_interp_accel *, double * y_p);$/;"	m	struct:__anon173	access:public
__anon173::eval_deriv2	/usr/local/gsl/include/gsl/gsl_interp.h	/^  int     (*eval_deriv2) (const void *, const double xa[], const double ya[], size_t size, double x, gsl_interp_accel *, double * y_pp);$/;"	m	struct:__anon173	access:public
__anon173::eval_integ	/usr/local/gsl/include/gsl/gsl_interp.h	/^  int     (*eval_integ)  (const void *, const double xa[], const double ya[], size_t size, gsl_interp_accel *, double a, double b, double * result);$/;"	m	struct:__anon173	access:public
__anon173::free	/usr/local/gsl/include/gsl/gsl_interp.h	/^  void    (*free)         (void *);$/;"	m	struct:__anon173	access:public
__anon173::init	/usr/local/gsl/include/gsl/gsl_interp.h	/^  int     (*init)    (void *, const double xa[], const double ya[], size_t size);$/;"	m	struct:__anon173	access:public
__anon173::min_size	/usr/local/gsl/include/gsl/gsl_interp.h	/^  unsigned int min_size;$/;"	m	struct:__anon173	access:public
__anon173::name	/usr/local/gsl/include/gsl/gsl_interp.h	/^  const char * name;$/;"	m	struct:__anon173	access:public
__anon174::size	/usr/local/gsl/include/gsl/gsl_interp.h	/^  size_t  size;$/;"	m	struct:__anon174	access:public
__anon174::state	/usr/local/gsl/include/gsl/gsl_interp.h	/^  void * state;$/;"	m	struct:__anon174	access:public
__anon174::type	/usr/local/gsl/include/gsl/gsl_interp.h	/^  const gsl_interp_type * type;$/;"	m	struct:__anon174	access:public
__anon174::xmax	/usr/local/gsl/include/gsl/gsl_interp.h	/^  double  xmax;$/;"	m	struct:__anon174	access:public
__anon174::xmin	/usr/local/gsl/include/gsl/gsl_interp.h	/^  double  xmin;$/;"	m	struct:__anon174	access:public
__anon175::bin	/usr/local/gsl/include/gsl/gsl_histogram.h	/^  double * bin ;$/;"	m	struct:__anon175	access:public
__anon175::n	/usr/local/gsl/include/gsl/gsl_histogram.h	/^  size_t n ;$/;"	m	struct:__anon175	access:public
__anon175::range	/usr/local/gsl/include/gsl/gsl_histogram.h	/^  double * range ;$/;"	m	struct:__anon175	access:public
__anon176::n	/usr/local/gsl/include/gsl/gsl_histogram.h	/^  size_t n ;$/;"	m	struct:__anon176	access:public
__anon176::range	/usr/local/gsl/include/gsl/gsl_histogram.h	/^  double * range ;$/;"	m	struct:__anon176	access:public
__anon176::sum	/usr/local/gsl/include/gsl/gsl_histogram.h	/^  double * sum ;$/;"	m	struct:__anon176	access:public
__anon177::aa	/usr/local/gsl/include/gsl/gsl_sf_mathieu.h	/^  double *aa;$/;"	m	struct:__anon177	access:public
__anon177::bb	/usr/local/gsl/include/gsl/gsl_sf_mathieu.h	/^  double *bb;$/;"	m	struct:__anon177	access:public
__anon177::dd	/usr/local/gsl/include/gsl/gsl_sf_mathieu.h	/^  double *dd;$/;"	m	struct:__anon177	access:public
__anon177::e2	/usr/local/gsl/include/gsl/gsl_sf_mathieu.h	/^  double *e2;$/;"	m	struct:__anon177	access:public
__anon177::ee	/usr/local/gsl/include/gsl/gsl_sf_mathieu.h	/^  double *ee;$/;"	m	struct:__anon177	access:public
__anon177::eval	/usr/local/gsl/include/gsl/gsl_sf_mathieu.h	/^  gsl_vector *eval;$/;"	m	struct:__anon177	access:public
__anon177::evec	/usr/local/gsl/include/gsl/gsl_sf_mathieu.h	/^  gsl_matrix *evec;$/;"	m	struct:__anon177	access:public
__anon177::even_order	/usr/local/gsl/include/gsl/gsl_sf_mathieu.h	/^  size_t even_order;$/;"	m	struct:__anon177	access:public
__anon177::extra_values	/usr/local/gsl/include/gsl/gsl_sf_mathieu.h	/^  int extra_values;$/;"	m	struct:__anon177	access:public
__anon177::odd_order	/usr/local/gsl/include/gsl/gsl_sf_mathieu.h	/^  size_t odd_order;$/;"	m	struct:__anon177	access:public
__anon177::qa	/usr/local/gsl/include/gsl/gsl_sf_mathieu.h	/^  double qa;   \/* allow for caching of results: not implemented yet *\/$/;"	m	struct:__anon177	access:public
__anon177::qb	/usr/local/gsl/include/gsl/gsl_sf_mathieu.h	/^  double qb;   \/* allow for caching of results: not implemented yet *\/$/;"	m	struct:__anon177	access:public
__anon177::size	/usr/local/gsl/include/gsl/gsl_sf_mathieu.h	/^  size_t size;$/;"	m	struct:__anon177	access:public
__anon177::tt	/usr/local/gsl/include/gsl/gsl_sf_mathieu.h	/^  double *tt;$/;"	m	struct:__anon177	access:public
__anon177::wmat	/usr/local/gsl/include/gsl/gsl_sf_mathieu.h	/^  gsl_eigen_symmv_workspace *wmat;$/;"	m	struct:__anon177	access:public
__anon177::zz	/usr/local/gsl/include/gsl/gsl_sf_mathieu.h	/^  double *zz;$/;"	m	struct:__anon177	access:public
__anon178::alloc	/usr/local/gsl/include/gsl/gsl_multiroots.h	/^    int (*alloc) (void *state, size_t n);$/;"	m	struct:__anon178	access:public
__anon178::free	/usr/local/gsl/include/gsl/gsl_multiroots.h	/^    void (*free) (void *state);$/;"	m	struct:__anon178	access:public
__anon178::iterate	/usr/local/gsl/include/gsl/gsl_multiroots.h	/^    int (*iterate) (void *state, gsl_multiroot_function * function, gsl_vector * x, gsl_vector * f, gsl_vector * dx);$/;"	m	struct:__anon178	access:public
__anon178::name	/usr/local/gsl/include/gsl/gsl_multiroots.h	/^    const char *name;$/;"	m	struct:__anon178	access:public
__anon178::set	/usr/local/gsl/include/gsl/gsl_multiroots.h	/^    int (*set) (void *state, gsl_multiroot_function * function, gsl_vector * x, gsl_vector * f, gsl_vector * dx);$/;"	m	struct:__anon178	access:public
__anon178::size	/usr/local/gsl/include/gsl/gsl_multiroots.h	/^    size_t size;$/;"	m	struct:__anon178	access:public
__anon179::dx	/usr/local/gsl/include/gsl/gsl_multiroots.h	/^    gsl_vector * dx ;$/;"	m	struct:__anon179	access:public
__anon179::f	/usr/local/gsl/include/gsl/gsl_multiroots.h	/^    gsl_vector * f ;$/;"	m	struct:__anon179	access:public
__anon179::function	/usr/local/gsl/include/gsl/gsl_multiroots.h	/^    gsl_multiroot_function * function ;$/;"	m	struct:__anon179	access:public
__anon179::state	/usr/local/gsl/include/gsl/gsl_multiroots.h	/^    void *state;$/;"	m	struct:__anon179	access:public
__anon179::type	/usr/local/gsl/include/gsl/gsl_multiroots.h	/^    const gsl_multiroot_fsolver_type * type;$/;"	m	struct:__anon179	access:public
__anon179::x	/usr/local/gsl/include/gsl/gsl_multiroots.h	/^    gsl_vector * x ;$/;"	m	struct:__anon179	access:public
__anon17::n	/usr/local/gsl/include/gsl/gsl_fft_complex_float.h	/^    size_t n;$/;"	m	struct:__anon17	access:public
__anon17::scratch	/usr/local/gsl/include/gsl/gsl_fft_complex_float.h	/^    float *scratch;$/;"	m	struct:__anon17	access:public
__anon180::alloc	/usr/local/gsl/include/gsl/gsl_multiroots.h	/^    int (*alloc) (void *state, size_t n);$/;"	m	struct:__anon180	access:public
__anon180::free	/usr/local/gsl/include/gsl/gsl_multiroots.h	/^    void (*free) (void *state);$/;"	m	struct:__anon180	access:public
__anon180::iterate	/usr/local/gsl/include/gsl/gsl_multiroots.h	/^    int (*iterate) (void *state, gsl_multiroot_function_fdf * fdf, gsl_vector * x, gsl_vector * f, gsl_matrix * J, gsl_vector * dx);$/;"	m	struct:__anon180	access:public
__anon180::name	/usr/local/gsl/include/gsl/gsl_multiroots.h	/^    const char *name;$/;"	m	struct:__anon180	access:public
__anon180::set	/usr/local/gsl/include/gsl/gsl_multiroots.h	/^    int (*set) (void *state, gsl_multiroot_function_fdf * fdf, gsl_vector * x, gsl_vector * f, gsl_matrix * J, gsl_vector * dx);$/;"	m	struct:__anon180	access:public
__anon180::size	/usr/local/gsl/include/gsl/gsl_multiroots.h	/^    size_t size;$/;"	m	struct:__anon180	access:public
__anon181::J	/usr/local/gsl/include/gsl/gsl_multiroots.h	/^    gsl_matrix * J;$/;"	m	struct:__anon181	access:public
__anon181::dx	/usr/local/gsl/include/gsl/gsl_multiroots.h	/^    gsl_vector * dx;$/;"	m	struct:__anon181	access:public
__anon181::f	/usr/local/gsl/include/gsl/gsl_multiroots.h	/^    gsl_vector * f;$/;"	m	struct:__anon181	access:public
__anon181::fdf	/usr/local/gsl/include/gsl/gsl_multiroots.h	/^    gsl_multiroot_function_fdf * fdf ;$/;"	m	struct:__anon181	access:public
__anon181::state	/usr/local/gsl/include/gsl/gsl_multiroots.h	/^    void *state;$/;"	m	struct:__anon181	access:public
__anon181::type	/usr/local/gsl/include/gsl/gsl_multiroots.h	/^    const gsl_multiroot_fdfsolver_type * type;$/;"	m	struct:__anon181	access:public
__anon181::x	/usr/local/gsl/include/gsl/gsl_multiroots.h	/^    gsl_vector * x;$/;"	m	struct:__anon181	access:public
__anon18::block	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	/^  gsl_block_uint * block;$/;"	m	struct:__anon18	access:public
__anon18::data	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	/^  unsigned int * data;$/;"	m	struct:__anon18	access:public
__anon18::owner	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	/^  int owner;$/;"	m	struct:__anon18	access:public
__anon18::size1	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	/^  size_t size1;$/;"	m	struct:__anon18	access:public
__anon18::size2	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	/^  size_t size2;$/;"	m	struct:__anon18	access:public
__anon18::tda	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	/^  size_t tda;$/;"	m	struct:__anon18	access:public
__anon19::matrix	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	/^  gsl_matrix_uint matrix;$/;"	m	struct:__anon19	access:public
__anon1::factor	/usr/local/gsl/include/gsl/gsl_fft_complex.h	/^    size_t factor[64];$/;"	m	struct:__anon1	access:public
__anon1::n	/usr/local/gsl/include/gsl/gsl_fft_complex.h	/^    size_t n;$/;"	m	struct:__anon1	access:public
__anon1::nf	/usr/local/gsl/include/gsl/gsl_fft_complex.h	/^    size_t nf;$/;"	m	struct:__anon1	access:public
__anon1::trig	/usr/local/gsl/include/gsl/gsl_fft_complex.h	/^    gsl_complex *trig;$/;"	m	struct:__anon1	access:public
__anon1::twiddle	/usr/local/gsl/include/gsl/gsl_fft_complex.h	/^    gsl_complex *twiddle[64];$/;"	m	struct:__anon1	access:public
__anon20::matrix	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	/^  gsl_matrix_uint matrix;$/;"	m	struct:__anon20	access:public
__anon21::factor	/usr/local/gsl/include/gsl/gsl_fft_halfcomplex_float.h	/^    size_t factor[64];$/;"	m	struct:__anon21	access:public
__anon21::n	/usr/local/gsl/include/gsl/gsl_fft_halfcomplex_float.h	/^    size_t n;$/;"	m	struct:__anon21	access:public
__anon21::nf	/usr/local/gsl/include/gsl/gsl_fft_halfcomplex_float.h	/^    size_t nf;$/;"	m	struct:__anon21	access:public
__anon21::trig	/usr/local/gsl/include/gsl/gsl_fft_halfcomplex_float.h	/^    gsl_complex_float *trig;$/;"	m	struct:__anon21	access:public
__anon21::twiddle	/usr/local/gsl/include/gsl/gsl_fft_halfcomplex_float.h	/^    gsl_complex_float *twiddle[64];$/;"	m	struct:__anon21	access:public
__anon22::block	/usr/local/gsl/include/gsl/gsl_vector_long.h	/^  gsl_block_long *block;$/;"	m	struct:__anon22	access:public
__anon22::data	/usr/local/gsl/include/gsl/gsl_vector_long.h	/^  long *data;$/;"	m	struct:__anon22	access:public
__anon22::owner	/usr/local/gsl/include/gsl/gsl_vector_long.h	/^  int owner;$/;"	m	struct:__anon22	access:public
__anon22::size	/usr/local/gsl/include/gsl/gsl_vector_long.h	/^  size_t size;$/;"	m	struct:__anon22	access:public
__anon22::stride	/usr/local/gsl/include/gsl/gsl_vector_long.h	/^  size_t stride;$/;"	m	struct:__anon22	access:public
__anon23::vector	/usr/local/gsl/include/gsl/gsl_vector_long.h	/^  gsl_vector_long vector;$/;"	m	struct:__anon23	access:public
__anon24::vector	/usr/local/gsl/include/gsl/gsl_vector_long.h	/^  gsl_vector_long vector;$/;"	m	struct:__anon24	access:public
__anon25::block	/usr/local/gsl/include/gsl/gsl_vector_uint.h	/^  gsl_block_uint *block;$/;"	m	struct:__anon25	access:public
__anon25::data	/usr/local/gsl/include/gsl/gsl_vector_uint.h	/^  unsigned int *data;$/;"	m	struct:__anon25	access:public
__anon25::owner	/usr/local/gsl/include/gsl/gsl_vector_uint.h	/^  int owner;$/;"	m	struct:__anon25	access:public
__anon25::size	/usr/local/gsl/include/gsl/gsl_vector_uint.h	/^  size_t size;$/;"	m	struct:__anon25	access:public
__anon25::stride	/usr/local/gsl/include/gsl/gsl_vector_uint.h	/^  size_t stride;$/;"	m	struct:__anon25	access:public
__anon26::vector	/usr/local/gsl/include/gsl/gsl_vector_uint.h	/^  gsl_vector_uint vector;$/;"	m	struct:__anon26	access:public
__anon27::vector	/usr/local/gsl/include/gsl/gsl_vector_uint.h	/^  gsl_vector_uint vector;$/;"	m	struct:__anon27	access:public
__anon28::block	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	/^  gsl_block_ulong * block;$/;"	m	struct:__anon28	access:public
__anon28::data	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	/^  unsigned long * data;$/;"	m	struct:__anon28	access:public
__anon28::owner	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	/^  int owner;$/;"	m	struct:__anon28	access:public
__anon28::size1	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	/^  size_t size1;$/;"	m	struct:__anon28	access:public
__anon28::size2	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	/^  size_t size2;$/;"	m	struct:__anon28	access:public
__anon28::tda	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	/^  size_t tda;$/;"	m	struct:__anon28	access:public
__anon29::matrix	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	/^  gsl_matrix_ulong matrix;$/;"	m	struct:__anon29	access:public
__anon2::n	/usr/local/gsl/include/gsl/gsl_fft_complex.h	/^  size_t n;$/;"	m	struct:__anon2	access:public
__anon2::scratch	/usr/local/gsl/include/gsl/gsl_fft_complex.h	/^  double *scratch;$/;"	m	struct:__anon2	access:public
__anon30::matrix	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	/^  gsl_matrix_ulong matrix;$/;"	m	struct:__anon30	access:public
__anon31::block	/usr/local/gsl/include/gsl/gsl_vector_complex_long_double.h	/^  gsl_block_complex_long_double *block;$/;"	m	struct:__anon31	access:public
__anon31::data	/usr/local/gsl/include/gsl/gsl_vector_complex_long_double.h	/^  long double *data;$/;"	m	struct:__anon31	access:public
__anon31::owner	/usr/local/gsl/include/gsl/gsl_vector_complex_long_double.h	/^  int owner;$/;"	m	struct:__anon31	access:public
__anon31::size	/usr/local/gsl/include/gsl/gsl_vector_complex_long_double.h	/^  size_t size;$/;"	m	struct:__anon31	access:public
__anon31::stride	/usr/local/gsl/include/gsl/gsl_vector_complex_long_double.h	/^  size_t stride;$/;"	m	struct:__anon31	access:public
__anon32::vector	/usr/local/gsl/include/gsl/gsl_vector_complex_long_double.h	/^  gsl_vector_complex_long_double vector;$/;"	m	struct:__anon32	access:public
__anon33::vector	/usr/local/gsl/include/gsl/gsl_vector_complex_long_double.h	/^  gsl_vector_complex_long_double vector;$/;"	m	struct:__anon33	access:public
__anon34::A	/usr/local/gsl/include/gsl/gsl_randist.h	/^    size_t *A;$/;"	m	struct:__anon34	access:public
__anon34::F	/usr/local/gsl/include/gsl/gsl_randist.h	/^    double *F;$/;"	m	struct:__anon34	access:public
__anon34::K	/usr/local/gsl/include/gsl/gsl_randist.h	/^    size_t K;$/;"	m	struct:__anon34	access:public
__anon35::block	/usr/local/gsl/include/gsl/gsl_vector_float.h	/^  gsl_block_float *block;$/;"	m	struct:__anon35	access:public
__anon35::data	/usr/local/gsl/include/gsl/gsl_vector_float.h	/^  float *data;$/;"	m	struct:__anon35	access:public
__anon35::owner	/usr/local/gsl/include/gsl/gsl_vector_float.h	/^  int owner;$/;"	m	struct:__anon35	access:public
__anon35::size	/usr/local/gsl/include/gsl/gsl_vector_float.h	/^  size_t size;$/;"	m	struct:__anon35	access:public
__anon35::stride	/usr/local/gsl/include/gsl/gsl_vector_float.h	/^  size_t stride;$/;"	m	struct:__anon35	access:public
__anon36::vector	/usr/local/gsl/include/gsl/gsl_vector_float.h	/^  gsl_vector_float vector;$/;"	m	struct:__anon36	access:public
__anon37::vector	/usr/local/gsl/include/gsl/gsl_vector_float.h	/^  gsl_vector_float vector;$/;"	m	struct:__anon37	access:public
__anon38::block	/usr/local/gsl/include/gsl/gsl_matrix_short.h	/^  gsl_block_short * block;$/;"	m	struct:__anon38	access:public
__anon38::data	/usr/local/gsl/include/gsl/gsl_matrix_short.h	/^  short * data;$/;"	m	struct:__anon38	access:public
__anon38::owner	/usr/local/gsl/include/gsl/gsl_matrix_short.h	/^  int owner;$/;"	m	struct:__anon38	access:public
__anon38::size1	/usr/local/gsl/include/gsl/gsl_matrix_short.h	/^  size_t size1;$/;"	m	struct:__anon38	access:public
__anon38::size2	/usr/local/gsl/include/gsl/gsl_matrix_short.h	/^  size_t size2;$/;"	m	struct:__anon38	access:public
__anon38::tda	/usr/local/gsl/include/gsl/gsl_matrix_short.h	/^  size_t tda;$/;"	m	struct:__anon38	access:public
__anon39::matrix	/usr/local/gsl/include/gsl/gsl_matrix_short.h	/^  gsl_matrix_short matrix;$/;"	m	struct:__anon39	access:public
__anon40::matrix	/usr/local/gsl/include/gsl/gsl_matrix_short.h	/^  gsl_matrix_short matrix;$/;"	m	struct:__anon40	access:public
__anon41::interp	/usr/local/gsl/include/gsl/gsl_spline.h	/^  gsl_interp * interp;$/;"	m	struct:__anon41	access:public
__anon41::size	/usr/local/gsl/include/gsl/gsl_spline.h	/^  size_t  size;$/;"	m	struct:__anon41	access:public
__anon41::x	/usr/local/gsl/include/gsl/gsl_spline.h	/^  double  * x;$/;"	m	struct:__anon41	access:public
__anon41::y	/usr/local/gsl/include/gsl/gsl_spline.h	/^  double  * y;$/;"	m	struct:__anon41	access:public
__anon42::block	/usr/local/gsl/include/gsl/gsl_vector_uchar.h	/^  gsl_block_uchar *block;$/;"	m	struct:__anon42	access:public
__anon42::data	/usr/local/gsl/include/gsl/gsl_vector_uchar.h	/^  unsigned char *data;$/;"	m	struct:__anon42	access:public
__anon42::owner	/usr/local/gsl/include/gsl/gsl_vector_uchar.h	/^  int owner;$/;"	m	struct:__anon42	access:public
__anon42::size	/usr/local/gsl/include/gsl/gsl_vector_uchar.h	/^  size_t size;$/;"	m	struct:__anon42	access:public
__anon42::stride	/usr/local/gsl/include/gsl/gsl_vector_uchar.h	/^  size_t stride;$/;"	m	struct:__anon42	access:public
__anon43::vector	/usr/local/gsl/include/gsl/gsl_vector_uchar.h	/^  gsl_vector_uchar vector;$/;"	m	struct:__anon43	access:public
__anon44::vector	/usr/local/gsl/include/gsl/gsl_vector_uchar.h	/^  gsl_vector_uchar vector;$/;"	m	struct:__anon44	access:public
__anon45::alist	/usr/local/gsl/include/gsl/gsl_integration.h	/^    double *alist;$/;"	m	struct:__anon45	access:public
__anon45::blist	/usr/local/gsl/include/gsl/gsl_integration.h	/^    double *blist;$/;"	m	struct:__anon45	access:public
__anon45::elist	/usr/local/gsl/include/gsl/gsl_integration.h	/^    double *elist;$/;"	m	struct:__anon45	access:public
__anon45::i	/usr/local/gsl/include/gsl/gsl_integration.h	/^    size_t i;$/;"	m	struct:__anon45	access:public
__anon45::level	/usr/local/gsl/include/gsl/gsl_integration.h	/^    size_t *level;$/;"	m	struct:__anon45	access:public
__anon45::limit	/usr/local/gsl/include/gsl/gsl_integration.h	/^    size_t limit;$/;"	m	struct:__anon45	access:public
__anon45::maximum_level	/usr/local/gsl/include/gsl/gsl_integration.h	/^    size_t maximum_level;$/;"	m	struct:__anon45	access:public
__anon45::nrmax	/usr/local/gsl/include/gsl/gsl_integration.h	/^    size_t nrmax;$/;"	m	struct:__anon45	access:public
__anon45::order	/usr/local/gsl/include/gsl/gsl_integration.h	/^    size_t *order;$/;"	m	struct:__anon45	access:public
__anon45::rlist	/usr/local/gsl/include/gsl/gsl_integration.h	/^    double *rlist;$/;"	m	struct:__anon45	access:public
__anon45::size	/usr/local/gsl/include/gsl/gsl_integration.h	/^    size_t size;$/;"	m	struct:__anon45	access:public
__anon46::alpha	/usr/local/gsl/include/gsl/gsl_integration.h	/^  double alpha;$/;"	m	struct:__anon46	access:public
__anon46::beta	/usr/local/gsl/include/gsl/gsl_integration.h	/^  double beta;$/;"	m	struct:__anon46	access:public
__anon46::mu	/usr/local/gsl/include/gsl/gsl_integration.h	/^  int mu;$/;"	m	struct:__anon46	access:public
__anon46::nu	/usr/local/gsl/include/gsl/gsl_integration.h	/^  int nu;$/;"	m	struct:__anon46	access:public
__anon46::rg	/usr/local/gsl/include/gsl/gsl_integration.h	/^  double rg[25];$/;"	m	struct:__anon46	access:public
__anon46::rh	/usr/local/gsl/include/gsl/gsl_integration.h	/^  double rh[25];$/;"	m	struct:__anon46	access:public
__anon46::ri	/usr/local/gsl/include/gsl/gsl_integration.h	/^  double ri[25];$/;"	m	struct:__anon46	access:public
__anon46::rj	/usr/local/gsl/include/gsl/gsl_integration.h	/^  double rj[25];$/;"	m	struct:__anon46	access:public
__anon47::L	/usr/local/gsl/include/gsl/gsl_integration.h	/^  double L;$/;"	m	struct:__anon47	access:public
__anon47::chebmo	/usr/local/gsl/include/gsl/gsl_integration.h	/^  double *chebmo;$/;"	m	struct:__anon47	access:public
__anon47::n	/usr/local/gsl/include/gsl/gsl_integration.h	/^  size_t n;$/;"	m	struct:__anon47	access:public
__anon47::omega	/usr/local/gsl/include/gsl/gsl_integration.h	/^  double omega;$/;"	m	struct:__anon47	access:public
__anon47::par	/usr/local/gsl/include/gsl/gsl_integration.h	/^  double par;$/;"	m	struct:__anon47	access:public
__anon47::sine	/usr/local/gsl/include/gsl/gsl_integration.h	/^  enum gsl_integration_qawo_enum sine;$/;"	m	struct:__anon47	typeref:enum:__anon47::gsl_integration_qawo_enum	access:public
__anon49::dim	/usr/local/gsl/include/gsl/gsl_monte_plain.h	/^  size_t dim;$/;"	m	struct:__anon49	access:public
__anon49::x	/usr/local/gsl/include/gsl/gsl_monte_plain.h	/^  double *x;$/;"	m	struct:__anon49	access:public
__anon4::alpha	/usr/local/gsl/include/gsl/gsl_monte_miser.h	/^  double alpha;$/;"	m	struct:__anon4	access:public
__anon4::depth	/usr/local/gsl/include/gsl/gsl_monte_miser.h	/^  int depth;$/;"	m	struct:__anon4	access:public
__anon4::dim	/usr/local/gsl/include/gsl/gsl_monte_miser.h	/^  size_t dim;$/;"	m	struct:__anon4	access:public
__anon4::dither	/usr/local/gsl/include/gsl/gsl_monte_miser.h	/^  double dither;$/;"	m	struct:__anon4	access:public
__anon4::estimate_frac	/usr/local/gsl/include/gsl/gsl_monte_miser.h	/^  double estimate_frac;$/;"	m	struct:__anon4	access:public
__anon4::estimate_style	/usr/local/gsl/include/gsl/gsl_monte_miser.h	/^  int estimate_style;$/;"	m	struct:__anon4	access:public
__anon4::fmax_l	/usr/local/gsl/include/gsl/gsl_monte_miser.h	/^  double * fmax_l;$/;"	m	struct:__anon4	access:public
__anon4::fmax_r	/usr/local/gsl/include/gsl/gsl_monte_miser.h	/^  double * fmax_r;$/;"	m	struct:__anon4	access:public
__anon4::fmin_l	/usr/local/gsl/include/gsl/gsl_monte_miser.h	/^  double * fmin_l;$/;"	m	struct:__anon4	access:public
__anon4::fmin_r	/usr/local/gsl/include/gsl/gsl_monte_miser.h	/^  double * fmin_r;$/;"	m	struct:__anon4	access:public
__anon4::fsum2_l	/usr/local/gsl/include/gsl/gsl_monte_miser.h	/^  double * fsum2_l;$/;"	m	struct:__anon4	access:public
__anon4::fsum2_r	/usr/local/gsl/include/gsl/gsl_monte_miser.h	/^  double * fsum2_r;$/;"	m	struct:__anon4	access:public
__anon4::fsum_l	/usr/local/gsl/include/gsl/gsl_monte_miser.h	/^  double * fsum_l;$/;"	m	struct:__anon4	access:public
__anon4::fsum_r	/usr/local/gsl/include/gsl/gsl_monte_miser.h	/^  double * fsum_r;$/;"	m	struct:__anon4	access:public
__anon4::hits_l	/usr/local/gsl/include/gsl/gsl_monte_miser.h	/^  size_t * hits_l;$/;"	m	struct:__anon4	access:public
__anon4::hits_r	/usr/local/gsl/include/gsl/gsl_monte_miser.h	/^  size_t * hits_r;$/;"	m	struct:__anon4	access:public
__anon4::min_calls	/usr/local/gsl/include/gsl/gsl_monte_miser.h	/^  size_t min_calls;$/;"	m	struct:__anon4	access:public
__anon4::min_calls_per_bisection	/usr/local/gsl/include/gsl/gsl_monte_miser.h	/^  size_t min_calls_per_bisection;$/;"	m	struct:__anon4	access:public
__anon4::sigma_l	/usr/local/gsl/include/gsl/gsl_monte_miser.h	/^  double * sigma_l;$/;"	m	struct:__anon4	access:public
__anon4::sigma_r	/usr/local/gsl/include/gsl/gsl_monte_miser.h	/^  double * sigma_r;$/;"	m	struct:__anon4	access:public
__anon4::verbose	/usr/local/gsl/include/gsl/gsl_monte_miser.h	/^  int verbose;$/;"	m	struct:__anon4	access:public
__anon4::x	/usr/local/gsl/include/gsl/gsl_monte_miser.h	/^  double * x;$/;"	m	struct:__anon4	access:public
__anon4::xmid	/usr/local/gsl/include/gsl/gsl_monte_miser.h	/^  double * xmid;$/;"	m	struct:__anon4	access:public
__anon50::block	/usr/local/gsl/include/gsl/gsl_matrix_complex_long_double.h	/^  gsl_block_complex_long_double * block;$/;"	m	struct:__anon50	access:public
__anon50::data	/usr/local/gsl/include/gsl/gsl_matrix_complex_long_double.h	/^  long double * data;$/;"	m	struct:__anon50	access:public
__anon50::owner	/usr/local/gsl/include/gsl/gsl_matrix_complex_long_double.h	/^  int owner;$/;"	m	struct:__anon50	access:public
__anon50::size1	/usr/local/gsl/include/gsl/gsl_matrix_complex_long_double.h	/^  size_t size1;$/;"	m	struct:__anon50	access:public
__anon50::size2	/usr/local/gsl/include/gsl/gsl_matrix_complex_long_double.h	/^  size_t size2;$/;"	m	struct:__anon50	access:public
__anon50::tda	/usr/local/gsl/include/gsl/gsl_matrix_complex_long_double.h	/^  size_t tda;$/;"	m	struct:__anon50	access:public
__anon51::matrix	/usr/local/gsl/include/gsl/gsl_matrix_complex_long_double.h	/^  gsl_matrix_complex_long_double matrix;$/;"	m	struct:__anon51	access:public
__anon52::matrix	/usr/local/gsl/include/gsl/gsl_matrix_complex_long_double.h	/^  gsl_matrix_complex_long_double matrix;$/;"	m	struct:__anon52	access:public
__anon53::dat	/usr/local/gsl/include/gsl/gsl_complex.h	/^    long double dat[2];$/;"	m	struct:__anon53	access:public
__anon54::dat	/usr/local/gsl/include/gsl/gsl_complex.h	/^    double dat[2];$/;"	m	struct:__anon54	access:public
__anon55::dat	/usr/local/gsl/include/gsl/gsl_complex.h	/^    float dat[2];$/;"	m	struct:__anon55	access:public
__anon56::block	/usr/local/gsl/include/gsl/gsl_vector_double.h	/^  gsl_block *block;$/;"	m	struct:__anon56	access:public
__anon56::data	/usr/local/gsl/include/gsl/gsl_vector_double.h	/^  double *data;$/;"	m	struct:__anon56	access:public
__anon56::owner	/usr/local/gsl/include/gsl/gsl_vector_double.h	/^  int owner;$/;"	m	struct:__anon56	access:public
__anon56::size	/usr/local/gsl/include/gsl/gsl_vector_double.h	/^  size_t size;$/;"	m	struct:__anon56	access:public
__anon56::stride	/usr/local/gsl/include/gsl/gsl_vector_double.h	/^  size_t stride;$/;"	m	struct:__anon56	access:public
__anon57::vector	/usr/local/gsl/include/gsl/gsl_vector_double.h	/^  gsl_vector vector;$/;"	m	struct:__anon57	access:public
__anon58::vector	/usr/local/gsl/include/gsl/gsl_vector_double.h	/^  gsl_vector vector;$/;"	m	struct:__anon58	access:public
__anon5::matrix	/usr/local/gsl/include/gsl/gsl_poly.h	/^  double * matrix ; $/;"	m	struct:__anon5	access:public
__anon5::nc	/usr/local/gsl/include/gsl/gsl_poly.h	/^  size_t nc ;$/;"	m	struct:__anon5	access:public
__anon60::block	/usr/local/gsl/include/gsl/gsl_vector_ulong.h	/^  gsl_block_ulong *block;$/;"	m	struct:__anon60	access:public
__anon60::data	/usr/local/gsl/include/gsl/gsl_vector_ulong.h	/^  unsigned long *data;$/;"	m	struct:__anon60	access:public
__anon60::owner	/usr/local/gsl/include/gsl/gsl_vector_ulong.h	/^  int owner;$/;"	m	struct:__anon60	access:public
__anon60::size	/usr/local/gsl/include/gsl/gsl_vector_ulong.h	/^  size_t size;$/;"	m	struct:__anon60	access:public
__anon60::stride	/usr/local/gsl/include/gsl/gsl_vector_ulong.h	/^  size_t stride;$/;"	m	struct:__anon60	access:public
__anon61::vector	/usr/local/gsl/include/gsl/gsl_vector_ulong.h	/^  gsl_vector_ulong vector;$/;"	m	struct:__anon61	access:public
__anon62::vector	/usr/local/gsl/include/gsl/gsl_vector_ulong.h	/^  gsl_vector_ulong vector;$/;"	m	struct:__anon62	access:public
__anon63::block	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	/^  gsl_block_long_double * block;$/;"	m	struct:__anon63	access:public
__anon63::data	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	/^  long double * data;$/;"	m	struct:__anon63	access:public
__anon63::owner	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	/^  int owner;$/;"	m	struct:__anon63	access:public
__anon63::size1	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	/^  size_t size1;$/;"	m	struct:__anon63	access:public
__anon63::size2	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	/^  size_t size2;$/;"	m	struct:__anon63	access:public
__anon63::tda	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	/^  size_t tda;$/;"	m	struct:__anon63	access:public
__anon64::matrix	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	/^  gsl_matrix_long_double matrix;$/;"	m	struct:__anon64	access:public
__anon65::matrix	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	/^  gsl_matrix_long_double matrix;$/;"	m	struct:__anon65	access:public
__anon66::factor	/usr/local/gsl/include/gsl/gsl_fft_real.h	/^    size_t factor[64];$/;"	m	struct:__anon66	access:public
__anon66::n	/usr/local/gsl/include/gsl/gsl_fft_real.h	/^    size_t n;$/;"	m	struct:__anon66	access:public
__anon66::nf	/usr/local/gsl/include/gsl/gsl_fft_real.h	/^    size_t nf;$/;"	m	struct:__anon66	access:public
__anon66::trig	/usr/local/gsl/include/gsl/gsl_fft_real.h	/^    gsl_complex *trig;$/;"	m	struct:__anon66	access:public
__anon66::twiddle	/usr/local/gsl/include/gsl/gsl_fft_real.h	/^    gsl_complex *twiddle[64];$/;"	m	struct:__anon66	access:public
__anon67::n	/usr/local/gsl/include/gsl/gsl_fft_real.h	/^    size_t n;$/;"	m	struct:__anon67	access:public
__anon67::scratch	/usr/local/gsl/include/gsl/gsl_fft_real.h	/^    double *scratch;$/;"	m	struct:__anon67	access:public
__anon68::factor	/usr/local/gsl/include/gsl/gsl_fft_real_float.h	/^    size_t factor[64];$/;"	m	struct:__anon68	access:public
__anon68::n	/usr/local/gsl/include/gsl/gsl_fft_real_float.h	/^    size_t n;$/;"	m	struct:__anon68	access:public
__anon68::nf	/usr/local/gsl/include/gsl/gsl_fft_real_float.h	/^    size_t nf;$/;"	m	struct:__anon68	access:public
__anon68::trig	/usr/local/gsl/include/gsl/gsl_fft_real_float.h	/^    gsl_complex_float *trig;$/;"	m	struct:__anon68	access:public
__anon68::twiddle	/usr/local/gsl/include/gsl/gsl_fft_real_float.h	/^    gsl_complex_float *twiddle[64];$/;"	m	struct:__anon68	access:public
__anon69::n	/usr/local/gsl/include/gsl/gsl_fft_real_float.h	/^    size_t n;$/;"	m	struct:__anon69	access:public
__anon69::scratch	/usr/local/gsl/include/gsl/gsl_fft_real_float.h	/^    float *scratch;$/;"	m	struct:__anon69	access:public
__anon6::alloc	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	/^    int (*alloc) (void *state, size_t n, size_t p);$/;"	m	struct:__anon6	access:public
__anon6::free	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	/^    void (*free) (void *state);$/;"	m	struct:__anon6	access:public
__anon6::iterate	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	/^    int (*iterate) (void *state, gsl_multifit_function * function, gsl_vector * x, gsl_vector * f, gsl_vector * dx);$/;"	m	struct:__anon6	access:public
__anon6::name	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	/^    const char *name;$/;"	m	struct:__anon6	access:public
__anon6::set	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	/^    int (*set) (void *state, gsl_multifit_function * function, gsl_vector * x, gsl_vector * f, gsl_vector * dx);$/;"	m	struct:__anon6	access:public
__anon6::size	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	/^    size_t size;$/;"	m	struct:__anon6	access:public
__anon70::block	/usr/local/gsl/include/gsl/gsl_vector_char.h	/^  gsl_block_char *block;$/;"	m	struct:__anon70	access:public
__anon70::data	/usr/local/gsl/include/gsl/gsl_vector_char.h	/^  char *data;$/;"	m	struct:__anon70	access:public
__anon70::owner	/usr/local/gsl/include/gsl/gsl_vector_char.h	/^  int owner;$/;"	m	struct:__anon70	access:public
__anon70::size	/usr/local/gsl/include/gsl/gsl_vector_char.h	/^  size_t size;$/;"	m	struct:__anon70	access:public
__anon70::stride	/usr/local/gsl/include/gsl/gsl_vector_char.h	/^  size_t stride;$/;"	m	struct:__anon70	access:public
__anon71::vector	/usr/local/gsl/include/gsl/gsl_vector_char.h	/^  gsl_vector_char vector;$/;"	m	struct:__anon71	access:public
__anon72::vector	/usr/local/gsl/include/gsl/gsl_vector_char.h	/^  gsl_vector_char vector;$/;"	m	struct:__anon72	access:public
__anon73::block	/usr/local/gsl/include/gsl/gsl_matrix_double.h	/^  gsl_block * block;$/;"	m	struct:__anon73	access:public
__anon73::data	/usr/local/gsl/include/gsl/gsl_matrix_double.h	/^  double * data;$/;"	m	struct:__anon73	access:public
__anon73::owner	/usr/local/gsl/include/gsl/gsl_matrix_double.h	/^  int owner;$/;"	m	struct:__anon73	access:public
__anon73::size1	/usr/local/gsl/include/gsl/gsl_matrix_double.h	/^  size_t size1;$/;"	m	struct:__anon73	access:public
__anon73::size2	/usr/local/gsl/include/gsl/gsl_matrix_double.h	/^  size_t size2;$/;"	m	struct:__anon73	access:public
__anon73::tda	/usr/local/gsl/include/gsl/gsl_matrix_double.h	/^  size_t tda;$/;"	m	struct:__anon73	access:public
__anon74::matrix	/usr/local/gsl/include/gsl/gsl_matrix_double.h	/^  gsl_matrix matrix;$/;"	m	struct:__anon74	access:public
__anon75::matrix	/usr/local/gsl/include/gsl/gsl_matrix_double.h	/^  gsl_matrix matrix;$/;"	m	struct:__anon75	access:public
__anon76::d	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  double * d;$/;"	m	struct:__anon76	access:public
__anon76::sd	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  double * sd;$/;"	m	struct:__anon76	access:public
__anon76::size	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  size_t size;$/;"	m	struct:__anon76	access:public
__anon77::d	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  double * d;$/;"	m	struct:__anon77	access:public
__anon77::gc	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  double * gc;$/;"	m	struct:__anon77	access:public
__anon77::gs	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  double * gs;$/;"	m	struct:__anon77	access:public
__anon77::sd	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  double * sd;$/;"	m	struct:__anon77	access:public
__anon77::size	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  size_t size;$/;"	m	struct:__anon77	access:public
__anon78::d	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  double * d;$/;"	m	struct:__anon78	access:public
__anon78::sd	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  double * sd;$/;"	m	struct:__anon78	access:public
__anon78::size	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  size_t size;$/;"	m	struct:__anon78	access:public
__anon78::tau	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  double * tau;$/;"	m	struct:__anon78	access:public
__anon79::d	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  double * d;$/;"	m	struct:__anon79	access:public
__anon79::gc	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  double * gc;$/;"	m	struct:__anon79	access:public
__anon79::gs	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  double * gs;$/;"	m	struct:__anon79	access:public
__anon79::sd	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  double * sd;$/;"	m	struct:__anon79	access:public
__anon79::size	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  size_t size;$/;"	m	struct:__anon79	access:public
__anon79::tau	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  double * tau;$/;"	m	struct:__anon79	access:public
__anon7::dx	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	/^    gsl_vector * dx ;$/;"	m	struct:__anon7	access:public
__anon7::f	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	/^    gsl_vector * f ;$/;"	m	struct:__anon7	access:public
__anon7::function	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	/^    gsl_multifit_function * function ;$/;"	m	struct:__anon7	access:public
__anon7::state	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	/^    void *state;$/;"	m	struct:__anon7	access:public
__anon7::type	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	/^    const gsl_multifit_fsolver_type * type;$/;"	m	struct:__anon7	access:public
__anon7::x	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	/^    gsl_vector * x ;$/;"	m	struct:__anon7	access:public
__anon80::H	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  gsl_matrix *H;         \/* pointer to Hessenberg matrix *\/$/;"	m	struct:__anon80	access:public
__anon80::Z	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  gsl_matrix *Z;         \/* pointer to Schur vector matrix *\/$/;"	m	struct:__anon80	access:public
__anon80::compute_t	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  int compute_t;         \/* compute Schur form T = Z^t A Z *\/$/;"	m	struct:__anon80	access:public
__anon80::max_iterations	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  size_t max_iterations; \/* max iterations since last eigenvalue found *\/$/;"	m	struct:__anon80	access:public
__anon80::n_evals	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  size_t n_evals;        \/* number of eigenvalues found so far *\/$/;"	m	struct:__anon80	access:public
__anon80::n_iter	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  size_t n_iter;         \/* number of iterations since last eigenvalue found *\/$/;"	m	struct:__anon80	access:public
__anon80::size	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  size_t size;           \/* matrix size *\/$/;"	m	struct:__anon80	access:public
__anon81::Z	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  gsl_matrix *Z;               \/* pointer to Z matrix *\/$/;"	m	struct:__anon81	access:public
__anon81::diag	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  gsl_vector *diag;            \/* diagonal matrix elements from balancing *\/$/;"	m	struct:__anon81	access:public
__anon81::do_balance	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  int do_balance;              \/* perform balancing transformation? *\/$/;"	m	struct:__anon81	access:public
__anon81::francis_workspace_p	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  gsl_eigen_francis_workspace *francis_workspace_p;$/;"	m	struct:__anon81	access:public
__anon81::n_evals	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  size_t n_evals;              \/* number of eigenvalues found *\/$/;"	m	struct:__anon81	access:public
__anon81::size	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  size_t size;                 \/* size of matrices *\/$/;"	m	struct:__anon81	access:public
__anon81::tau	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  gsl_vector *tau;             \/* Householder coefficients *\/$/;"	m	struct:__anon81	access:public
__anon82::Z	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  gsl_matrix *Z;               \/* pointer to Schur vectors *\/$/;"	m	struct:__anon82	access:public
__anon82::nonsymm_workspace_p	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  gsl_eigen_nonsymm_workspace *nonsymm_workspace_p;$/;"	m	struct:__anon82	access:public
__anon82::size	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  size_t size;                 \/* size of matrices *\/$/;"	m	struct:__anon82	access:public
__anon82::work	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  gsl_vector *work;            \/* scratch workspace *\/$/;"	m	struct:__anon82	access:public
__anon82::work2	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  gsl_vector *work2;           \/* scratch workspace *\/$/;"	m	struct:__anon82	access:public
__anon82::work3	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  gsl_vector *work3;           \/* scratch workspace *\/$/;"	m	struct:__anon82	access:public
__anon83::size	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  size_t size;            \/* size of matrices *\/$/;"	m	struct:__anon83	access:public
__anon83::symm_workspace_p	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  gsl_eigen_symm_workspace *symm_workspace_p;$/;"	m	struct:__anon83	access:public
__anon84::size	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  size_t size;            \/* size of matrices *\/$/;"	m	struct:__anon84	access:public
__anon84::symmv_workspace_p	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  gsl_eigen_symmv_workspace *symmv_workspace_p;$/;"	m	struct:__anon84	access:public
__anon85::herm_workspace_p	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  gsl_eigen_herm_workspace *herm_workspace_p;$/;"	m	struct:__anon85	access:public
__anon85::size	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  size_t size;            \/* size of matrices *\/$/;"	m	struct:__anon85	access:public
__anon86::hermv_workspace_p	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  gsl_eigen_hermv_workspace *hermv_workspace_p;$/;"	m	struct:__anon86	access:public
__anon86::size	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  size_t size;            \/* size of matrices *\/$/;"	m	struct:__anon86	access:public
__anon87::H	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  gsl_matrix *H;          \/* pointer to hessenberg matrix *\/$/;"	m	struct:__anon87	access:public
__anon87::Q	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  gsl_matrix *Q;          \/* pointer to left Schur vectors *\/$/;"	m	struct:__anon87	access:public
__anon87::R	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  gsl_matrix *R;          \/* pointer to upper triangular matrix *\/$/;"	m	struct:__anon87	access:public
__anon87::Z	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  gsl_matrix *Z;          \/* pointer to right Schur vectors *\/$/;"	m	struct:__anon87	access:public
__anon87::ascale	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  double ascale;          \/* scaling factor for shifts *\/$/;"	m	struct:__anon87	access:public
__anon87::atol	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  double atol;            \/* tolerance for splitting A matrix *\/$/;"	m	struct:__anon87	access:public
__anon87::bscale	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  double bscale;          \/* scaling factor for shifts *\/$/;"	m	struct:__anon87	access:public
__anon87::btol	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  double btol;            \/* tolerance for splitting B matrix *\/$/;"	m	struct:__anon87	access:public
__anon87::compute_s	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  int compute_s;          \/* compute generalized Schur form S *\/$/;"	m	struct:__anon87	access:public
__anon87::compute_t	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  int compute_t;          \/* compute generalized Schur form T *\/$/;"	m	struct:__anon87	access:public
__anon87::eshift	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  double eshift;          \/* exceptional shift counter *\/$/;"	m	struct:__anon87	access:public
__anon87::max_iterations	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  size_t max_iterations;  \/* maximum QZ iterations allowed *\/$/;"	m	struct:__anon87	access:public
__anon87::n_evals	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  size_t n_evals;         \/* number of eigenvalues found *\/$/;"	m	struct:__anon87	access:public
__anon87::n_iter	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  size_t n_iter;          \/* number of iterations since last eigenvalue found *\/$/;"	m	struct:__anon87	access:public
__anon87::needtop	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  int needtop;            \/* need to compute top index? *\/$/;"	m	struct:__anon87	access:public
__anon87::size	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  size_t size;            \/* size of matrices *\/$/;"	m	struct:__anon87	access:public
__anon87::work	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  gsl_vector *work;       \/* scratch workspace *\/$/;"	m	struct:__anon87	access:public
__anon88::Q	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  gsl_matrix *Q;          \/* pointer to left Schur vectors *\/$/;"	m	struct:__anon88	access:public
__anon88::Z	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  gsl_matrix *Z;          \/* pointer to right Schur vectors *\/$/;"	m	struct:__anon88	access:public
__anon88::gen_workspace_p	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  gsl_eigen_gen_workspace *gen_workspace_p;$/;"	m	struct:__anon88	access:public
__anon88::size	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  size_t size;            \/* size of matrices *\/$/;"	m	struct:__anon88	access:public
__anon88::work1	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  gsl_vector *work1;      \/* 1-norm of columns of A *\/$/;"	m	struct:__anon88	access:public
__anon88::work2	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  gsl_vector *work2;      \/* 1-norm of columns of B *\/$/;"	m	struct:__anon88	access:public
__anon88::work3	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  gsl_vector *work3;      \/* real part of eigenvector *\/$/;"	m	struct:__anon88	access:public
__anon88::work4	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  gsl_vector *work4;      \/* imag part of eigenvector *\/$/;"	m	struct:__anon88	access:public
__anon88::work5	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  gsl_vector *work5;      \/* real part of back-transformed eigenvector *\/$/;"	m	struct:__anon88	access:public
__anon88::work6	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  gsl_vector *work6;      \/* imag part of back-transformed eigenvector *\/$/;"	m	struct:__anon88	access:public
__anon8::alloc	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	/^    int (*alloc) (void *state, size_t n, size_t p);$/;"	m	struct:__anon8	access:public
__anon8::free	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	/^    void (*free) (void *state);$/;"	m	struct:__anon8	access:public
__anon8::iterate	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	/^    int (*iterate) (void *state, gsl_multifit_function_fdf * fdf, gsl_vector * x, gsl_vector * f, gsl_matrix * J, gsl_vector * dx);$/;"	m	struct:__anon8	access:public
__anon8::name	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	/^    const char *name;$/;"	m	struct:__anon8	access:public
__anon8::set	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	/^    int (*set) (void *state, gsl_multifit_function_fdf * fdf, gsl_vector * x, gsl_vector * f, gsl_matrix * J, gsl_vector * dx);$/;"	m	struct:__anon8	access:public
__anon8::size	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	/^    size_t size;$/;"	m	struct:__anon8	access:public
__anon90::block	/usr/local/gsl/include/gsl/gsl_matrix_int.h	/^  gsl_block_int * block;$/;"	m	struct:__anon90	access:public
__anon90::data	/usr/local/gsl/include/gsl/gsl_matrix_int.h	/^  int * data;$/;"	m	struct:__anon90	access:public
__anon90::owner	/usr/local/gsl/include/gsl/gsl_matrix_int.h	/^  int owner;$/;"	m	struct:__anon90	access:public
__anon90::size1	/usr/local/gsl/include/gsl/gsl_matrix_int.h	/^  size_t size1;$/;"	m	struct:__anon90	access:public
__anon90::size2	/usr/local/gsl/include/gsl/gsl_matrix_int.h	/^  size_t size2;$/;"	m	struct:__anon90	access:public
__anon90::tda	/usr/local/gsl/include/gsl/gsl_matrix_int.h	/^  size_t tda;$/;"	m	struct:__anon90	access:public
__anon91::matrix	/usr/local/gsl/include/gsl/gsl_matrix_int.h	/^  gsl_matrix_int matrix;$/;"	m	struct:__anon91	access:public
__anon92::matrix	/usr/local/gsl/include/gsl/gsl_matrix_int.h	/^  gsl_matrix_int matrix;$/;"	m	struct:__anon92	access:public
__anon93::get	/usr/local/gsl/include/gsl/gsl_rng.h	/^    unsigned long int (*get) (void *state);$/;"	m	struct:__anon93	access:public
__anon93::get_double	/usr/local/gsl/include/gsl/gsl_rng.h	/^    double (*get_double) (void *state);$/;"	m	struct:__anon93	access:public
__anon93::max	/usr/local/gsl/include/gsl/gsl_rng.h	/^    unsigned long int max;$/;"	m	struct:__anon93	access:public
__anon93::min	/usr/local/gsl/include/gsl/gsl_rng.h	/^    unsigned long int min;$/;"	m	struct:__anon93	access:public
__anon93::name	/usr/local/gsl/include/gsl/gsl_rng.h	/^    const char *name;$/;"	m	struct:__anon93	access:public
__anon93::set	/usr/local/gsl/include/gsl/gsl_rng.h	/^    void (*set) (void *state, unsigned long int seed);$/;"	m	struct:__anon93	access:public
__anon93::size	/usr/local/gsl/include/gsl/gsl_rng.h	/^    size_t size;$/;"	m	struct:__anon93	access:public
__anon94::state	/usr/local/gsl/include/gsl/gsl_rng.h	/^    void *state;$/;"	m	struct:__anon94	access:public
__anon94::type	/usr/local/gsl/include/gsl/gsl_rng.h	/^    const gsl_rng_type * type;$/;"	m	struct:__anon94	access:public
__anon95::dimension	/usr/local/gsl/include/gsl/gsl_odeiv.h	/^  size_t dimension;$/;"	m	struct:__anon95	access:public
__anon95::function	/usr/local/gsl/include/gsl/gsl_odeiv.h	/^  int (* function) (double t, const double y[], double dydt[], void * params);$/;"	m	struct:__anon95	access:public
__anon95::jacobian	/usr/local/gsl/include/gsl/gsl_odeiv.h	/^  int (* jacobian) (double t, const double y[], double * dfdy, double dfdt[], void * params);$/;"	m	struct:__anon95	access:public
__anon95::params	/usr/local/gsl/include/gsl/gsl_odeiv.h	/^  void * params;$/;"	m	struct:__anon95	access:public
__anon96::alloc	/usr/local/gsl/include/gsl/gsl_odeiv.h	/^  void * (*alloc) (size_t dim);$/;"	m	struct:__anon96	access:public
__anon96::apply	/usr/local/gsl/include/gsl/gsl_odeiv.h	/^  int  (*apply)  (void * state, size_t dim, double t, double h, double y[], double yerr[], const double dydt_in[], double dydt_out[], const gsl_odeiv_system * dydt);$/;"	m	struct:__anon96	access:public
__anon96::can_use_dydt_in	/usr/local/gsl/include/gsl/gsl_odeiv.h	/^  int can_use_dydt_in;$/;"	m	struct:__anon96	access:public
__anon96::free	/usr/local/gsl/include/gsl/gsl_odeiv.h	/^  void (*free)  (void * state);$/;"	m	struct:__anon96	access:public
__anon96::gives_exact_dydt_out	/usr/local/gsl/include/gsl/gsl_odeiv.h	/^  int gives_exact_dydt_out;$/;"	m	struct:__anon96	access:public
__anon96::name	/usr/local/gsl/include/gsl/gsl_odeiv.h	/^  const char * name;$/;"	m	struct:__anon96	access:public
__anon96::order	/usr/local/gsl/include/gsl/gsl_odeiv.h	/^  unsigned int  (*order) (void * state);$/;"	m	struct:__anon96	access:public
__anon96::reset	/usr/local/gsl/include/gsl/gsl_odeiv.h	/^  int  (*reset) (void * state, size_t dim);$/;"	m	struct:__anon96	access:public
__anon97::dimension	/usr/local/gsl/include/gsl/gsl_odeiv.h	/^  size_t dimension;$/;"	m	struct:__anon97	access:public
__anon97::state	/usr/local/gsl/include/gsl/gsl_odeiv.h	/^  void * state;$/;"	m	struct:__anon97	access:public
__anon97::type	/usr/local/gsl/include/gsl/gsl_odeiv.h	/^  const gsl_odeiv_step_type * type;$/;"	m	struct:__anon97	access:public
__anon98::alloc	/usr/local/gsl/include/gsl/gsl_odeiv.h	/^  void * (*alloc) (void);$/;"	m	struct:__anon98	access:public
__anon98::free	/usr/local/gsl/include/gsl/gsl_odeiv.h	/^  void (*free) (void * state);$/;"	m	struct:__anon98	access:public
__anon98::hadjust	/usr/local/gsl/include/gsl/gsl_odeiv.h	/^  int  (*hadjust) (void * state, size_t dim, unsigned int ord, const double y[], const double yerr[], const double yp[], double * h);$/;"	m	struct:__anon98	access:public
__anon98::init	/usr/local/gsl/include/gsl/gsl_odeiv.h	/^  int  (*init) (void * state, double eps_abs, double eps_rel, double a_y, double a_dydt);$/;"	m	struct:__anon98	access:public
__anon98::name	/usr/local/gsl/include/gsl/gsl_odeiv.h	/^  const char * name;$/;"	m	struct:__anon98	access:public
__anon99::state	/usr/local/gsl/include/gsl/gsl_odeiv.h	/^  void * state;$/;"	m	struct:__anon99	access:public
__anon99::type	/usr/local/gsl/include/gsl/gsl_odeiv.h	/^  const gsl_odeiv_control_type * type;$/;"	m	struct:__anon99	access:public
__anon9::J	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	/^    gsl_matrix * J;$/;"	m	struct:__anon9	access:public
__anon9::dx	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	/^    gsl_vector * dx;$/;"	m	struct:__anon9	access:public
__anon9::f	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	/^    gsl_vector * f;$/;"	m	struct:__anon9	access:public
__anon9::fdf	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	/^    gsl_multifit_function_fdf * fdf ;$/;"	m	struct:__anon9	access:public
__anon9::state	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	/^    void *state;$/;"	m	struct:__anon9	access:public
__anon9::type	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	/^    const gsl_multifit_fdfsolver_type * type;$/;"	m	struct:__anon9	access:public
__anon9::x	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	/^    gsl_vector * x;$/;"	m	struct:__anon9	access:public
_gsl_matrix_char_const_view	/usr/local/gsl/include/gsl/gsl_matrix_char.h	/^} _gsl_matrix_char_const_view;$/;"	t	typeref:struct:__anon150
_gsl_matrix_char_view	/usr/local/gsl/include/gsl/gsl_matrix_char.h	/^} _gsl_matrix_char_view;$/;"	t	typeref:struct:__anon149
_gsl_matrix_complex_const_view	/usr/local/gsl/include/gsl/gsl_matrix_complex_double.h	/^} _gsl_matrix_complex_const_view;$/;"	t	typeref:struct:__anon12
_gsl_matrix_complex_float_const_view	/usr/local/gsl/include/gsl/gsl_matrix_complex_float.h	/^} _gsl_matrix_complex_float_const_view;$/;"	t	typeref:struct:__anon130
_gsl_matrix_complex_float_view	/usr/local/gsl/include/gsl/gsl_matrix_complex_float.h	/^} _gsl_matrix_complex_float_view;$/;"	t	typeref:struct:__anon129
_gsl_matrix_complex_long_double_const_view	/usr/local/gsl/include/gsl/gsl_matrix_complex_long_double.h	/^} _gsl_matrix_complex_long_double_const_view;$/;"	t	typeref:struct:__anon52
_gsl_matrix_complex_long_double_view	/usr/local/gsl/include/gsl/gsl_matrix_complex_long_double.h	/^} _gsl_matrix_complex_long_double_view;$/;"	t	typeref:struct:__anon51
_gsl_matrix_complex_view	/usr/local/gsl/include/gsl/gsl_matrix_complex_double.h	/^} _gsl_matrix_complex_view;$/;"	t	typeref:struct:__anon11
_gsl_matrix_const_view	/usr/local/gsl/include/gsl/gsl_matrix_double.h	/^} _gsl_matrix_const_view;$/;"	t	typeref:struct:__anon75
_gsl_matrix_float_const_view	/usr/local/gsl/include/gsl/gsl_matrix_float.h	/^} _gsl_matrix_float_const_view;$/;"	t	typeref:struct:__anon145
_gsl_matrix_float_view	/usr/local/gsl/include/gsl/gsl_matrix_float.h	/^} _gsl_matrix_float_view;$/;"	t	typeref:struct:__anon144
_gsl_matrix_int_const_view	/usr/local/gsl/include/gsl/gsl_matrix_int.h	/^} _gsl_matrix_int_const_view;$/;"	t	typeref:struct:__anon92
_gsl_matrix_int_view	/usr/local/gsl/include/gsl/gsl_matrix_int.h	/^} _gsl_matrix_int_view;$/;"	t	typeref:struct:__anon91
_gsl_matrix_long_const_view	/usr/local/gsl/include/gsl/gsl_matrix_long.h	/^} _gsl_matrix_long_const_view;$/;"	t	typeref:struct:__anon108
_gsl_matrix_long_double_const_view	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	/^} _gsl_matrix_long_double_const_view;$/;"	t	typeref:struct:__anon65
_gsl_matrix_long_double_view	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	/^} _gsl_matrix_long_double_view;$/;"	t	typeref:struct:__anon64
_gsl_matrix_long_view	/usr/local/gsl/include/gsl/gsl_matrix_long.h	/^} _gsl_matrix_long_view;$/;"	t	typeref:struct:__anon107
_gsl_matrix_short_const_view	/usr/local/gsl/include/gsl/gsl_matrix_short.h	/^} _gsl_matrix_short_const_view;$/;"	t	typeref:struct:__anon40
_gsl_matrix_short_view	/usr/local/gsl/include/gsl/gsl_matrix_short.h	/^} _gsl_matrix_short_view;$/;"	t	typeref:struct:__anon39
_gsl_matrix_uchar_const_view	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	/^} _gsl_matrix_uchar_const_view;$/;"	t	typeref:struct:__anon142
_gsl_matrix_uchar_view	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	/^} _gsl_matrix_uchar_view;$/;"	t	typeref:struct:__anon141
_gsl_matrix_uint_const_view	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	/^} _gsl_matrix_uint_const_view;$/;"	t	typeref:struct:__anon20
_gsl_matrix_uint_view	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	/^} _gsl_matrix_uint_view;$/;"	t	typeref:struct:__anon19
_gsl_matrix_ulong_const_view	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	/^} _gsl_matrix_ulong_const_view;$/;"	t	typeref:struct:__anon30
_gsl_matrix_ulong_view	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	/^} _gsl_matrix_ulong_view;$/;"	t	typeref:struct:__anon29
_gsl_matrix_ushort_const_view	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	/^} _gsl_matrix_ushort_const_view;$/;"	t	typeref:struct:__anon153
_gsl_matrix_ushort_view	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	/^} _gsl_matrix_ushort_view;$/;"	t	typeref:struct:__anon152
_gsl_matrix_view	/usr/local/gsl/include/gsl/gsl_matrix_double.h	/^} _gsl_matrix_view;$/;"	t	typeref:struct:__anon74
_gsl_vector_char_const_view	/usr/local/gsl/include/gsl/gsl_vector_char.h	/^} _gsl_vector_char_const_view;$/;"	t	typeref:struct:__anon72
_gsl_vector_char_view	/usr/local/gsl/include/gsl/gsl_vector_char.h	/^} _gsl_vector_char_view;$/;"	t	typeref:struct:__anon71
_gsl_vector_complex_const_view	/usr/local/gsl/include/gsl/gsl_vector_complex_double.h	/^} _gsl_vector_complex_const_view;$/;"	t	typeref:struct:__anon136
_gsl_vector_complex_float_const_view	/usr/local/gsl/include/gsl/gsl_vector_complex_float.h	/^} _gsl_vector_complex_float_const_view;$/;"	t	typeref:struct:__anon117
_gsl_vector_complex_float_view	/usr/local/gsl/include/gsl/gsl_vector_complex_float.h	/^} _gsl_vector_complex_float_view;$/;"	t	typeref:struct:__anon116
_gsl_vector_complex_long_double_const_view	/usr/local/gsl/include/gsl/gsl_vector_complex_long_double.h	/^} _gsl_vector_complex_long_double_const_view;$/;"	t	typeref:struct:__anon33
_gsl_vector_complex_long_double_view	/usr/local/gsl/include/gsl/gsl_vector_complex_long_double.h	/^} _gsl_vector_complex_long_double_view;$/;"	t	typeref:struct:__anon32
_gsl_vector_complex_view	/usr/local/gsl/include/gsl/gsl_vector_complex_double.h	/^} _gsl_vector_complex_view;$/;"	t	typeref:struct:__anon135
_gsl_vector_const_view	/usr/local/gsl/include/gsl/gsl_vector_double.h	/^} _gsl_vector_const_view;$/;"	t	typeref:struct:__anon58
_gsl_vector_float_const_view	/usr/local/gsl/include/gsl/gsl_vector_float.h	/^} _gsl_vector_float_const_view;$/;"	t	typeref:struct:__anon37
_gsl_vector_float_view	/usr/local/gsl/include/gsl/gsl_vector_float.h	/^} _gsl_vector_float_view;$/;"	t	typeref:struct:__anon36
_gsl_vector_int_const_view	/usr/local/gsl/include/gsl/gsl_vector_int.h	/^} _gsl_vector_int_const_view;$/;"	t	typeref:struct:__anon160
_gsl_vector_int_view	/usr/local/gsl/include/gsl/gsl_vector_int.h	/^} _gsl_vector_int_view;$/;"	t	typeref:struct:__anon159
_gsl_vector_long_const_view	/usr/local/gsl/include/gsl/gsl_vector_long.h	/^} _gsl_vector_long_const_view;$/;"	t	typeref:struct:__anon24
_gsl_vector_long_double_const_view	/usr/local/gsl/include/gsl/gsl_vector_long_double.h	/^} _gsl_vector_long_double_const_view;$/;"	t	typeref:struct:__anon127
_gsl_vector_long_double_view	/usr/local/gsl/include/gsl/gsl_vector_long_double.h	/^} _gsl_vector_long_double_view;$/;"	t	typeref:struct:__anon126
_gsl_vector_long_view	/usr/local/gsl/include/gsl/gsl_vector_long.h	/^} _gsl_vector_long_view;$/;"	t	typeref:struct:__anon23
_gsl_vector_short_const_view	/usr/local/gsl/include/gsl/gsl_vector_short.h	/^} _gsl_vector_short_const_view;$/;"	t	typeref:struct:__anon156
_gsl_vector_short_view	/usr/local/gsl/include/gsl/gsl_vector_short.h	/^} _gsl_vector_short_view;$/;"	t	typeref:struct:__anon155
_gsl_vector_uchar_const_view	/usr/local/gsl/include/gsl/gsl_vector_uchar.h	/^} _gsl_vector_uchar_const_view;$/;"	t	typeref:struct:__anon44
_gsl_vector_uchar_view	/usr/local/gsl/include/gsl/gsl_vector_uchar.h	/^} _gsl_vector_uchar_view;$/;"	t	typeref:struct:__anon43
_gsl_vector_uint_const_view	/usr/local/gsl/include/gsl/gsl_vector_uint.h	/^} _gsl_vector_uint_const_view;$/;"	t	typeref:struct:__anon27
_gsl_vector_uint_view	/usr/local/gsl/include/gsl/gsl_vector_uint.h	/^} _gsl_vector_uint_view;$/;"	t	typeref:struct:__anon26
_gsl_vector_ulong_const_view	/usr/local/gsl/include/gsl/gsl_vector_ulong.h	/^} _gsl_vector_ulong_const_view;$/;"	t	typeref:struct:__anon62
_gsl_vector_ulong_view	/usr/local/gsl/include/gsl/gsl_vector_ulong.h	/^} _gsl_vector_ulong_view;$/;"	t	typeref:struct:__anon61
_gsl_vector_ushort_const_view	/usr/local/gsl/include/gsl/gsl_vector_ushort.h	/^} _gsl_vector_ushort_const_view;$/;"	t	typeref:struct:__anon163
_gsl_vector_ushort_view	/usr/local/gsl/include/gsl/gsl_vector_ushort.h	/^} _gsl_vector_ushort_view;$/;"	t	typeref:struct:__anon162
_gsl_vector_view	/usr/local/gsl/include/gsl/gsl_vector_double.h	/^} _gsl_vector_view;$/;"	t	typeref:struct:__anon57
a	/usr/local/gsl/include/gsl/gsl_chebyshev.h	/^  double a;     \/* lower interval point        *\/$/;"	m	struct:gsl_cheb_series_struct	access:public
aa	/usr/local/gsl/include/gsl/gsl_sf_mathieu.h	/^  double *aa;$/;"	m	struct:__anon177	access:public
alist	/usr/local/gsl/include/gsl/gsl_integration.h	/^    double *alist;$/;"	m	struct:__anon45	access:public
alloc	/usr/local/gsl/include/gsl/gsl_interp.h	/^  void *  (*alloc) (size_t size);$/;"	m	struct:__anon173	access:public
alloc	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	/^    int (*alloc) (void *state, size_t n, size_t p);$/;"	m	struct:__anon6	access:public
alloc	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	/^    int (*alloc) (void *state, size_t n, size_t p);$/;"	m	struct:__anon8	access:public
alloc	/usr/local/gsl/include/gsl/gsl_multimin.h	/^  int (*alloc) (void *state, size_t n);$/;"	m	struct:__anon111	access:public
alloc	/usr/local/gsl/include/gsl/gsl_multimin.h	/^  int (*alloc) (void *state, size_t n);$/;"	m	struct:__anon113	access:public
alloc	/usr/local/gsl/include/gsl/gsl_multiroots.h	/^    int (*alloc) (void *state, size_t n);$/;"	m	struct:__anon178	access:public
alloc	/usr/local/gsl/include/gsl/gsl_multiroots.h	/^    int (*alloc) (void *state, size_t n);$/;"	m	struct:__anon180	access:public
alloc	/usr/local/gsl/include/gsl/gsl_odeiv.h	/^  void * (*alloc) (size_t dim);$/;"	m	struct:__anon96	access:public
alloc	/usr/local/gsl/include/gsl/gsl_odeiv.h	/^  void * (*alloc) (void);$/;"	m	struct:__anon98	access:public
alpha	/usr/local/gsl/include/gsl/gsl_integration.h	/^  double alpha;$/;"	m	struct:__anon46	access:public
alpha	/usr/local/gsl/include/gsl/gsl_monte_miser.h	/^  double alpha;$/;"	m	struct:__anon4	access:public
alpha	/usr/local/gsl/include/gsl/gsl_monte_vegas.h	/^  double alpha;$/;"	m	struct:__anon110	access:public
apply	/usr/local/gsl/include/gsl/gsl_odeiv.h	/^  int  (*apply)  (void * state, size_t dim, double t, double h, double y[], double yerr[], const double dydt_in[], double dydt_out[], const gsl_odeiv_system * dydt);$/;"	m	struct:__anon96	access:public
ascale	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  double ascale;          \/* scaling factor for shifts *\/$/;"	m	struct:__anon87	access:public
atol	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  double atol;            \/* tolerance for splitting A matrix *\/$/;"	m	struct:__anon87	access:public
b	/usr/local/gsl/include/gsl/gsl_chebyshev.h	/^  double b;     \/* upper interval point        *\/$/;"	m	struct:gsl_cheb_series_struct	access:public
backward	/usr/local/gsl/include/gsl/gsl_fft.h	/^    forward = -1, backward = +1,$/;"	e	enum:__anon157
backward	/usr/local/gsl/include/gsl/gsl_wavelet.h	/^  forward = 1, backward = -1,$/;"	e	enum:__anon164
bb	/usr/local/gsl/include/gsl/gsl_sf_mathieu.h	/^  double *bb;$/;"	m	struct:__anon177	access:public
beta	/usr/local/gsl/include/gsl/gsl_integration.h	/^  double beta;$/;"	m	struct:__anon46	access:public
bin	/usr/local/gsl/include/gsl/gsl_histogram.h	/^  double * bin ;$/;"	m	struct:__anon175	access:public
bin	/usr/local/gsl/include/gsl/gsl_histogram2d.h	/^  double * bin ;$/;"	m	struct:__anon132	access:public
bin	/usr/local/gsl/include/gsl/gsl_monte_vegas.h	/^  int * bin;$/;"	m	struct:__anon110	access:public
bins	/usr/local/gsl/include/gsl/gsl_monte_vegas.h	/^  unsigned int bins;$/;"	m	struct:__anon110	access:public
bins_max	/usr/local/gsl/include/gsl/gsl_monte_vegas.h	/^  size_t bins_max;$/;"	m	struct:__anon110	access:public
blist	/usr/local/gsl/include/gsl/gsl_integration.h	/^    double *blist;$/;"	m	struct:__anon45	access:public
block	/usr/local/gsl/include/gsl/gsl_matrix_char.h	/^  gsl_block_char * block;$/;"	m	struct:__anon148	access:public
block	/usr/local/gsl/include/gsl/gsl_matrix_complex_double.h	/^  gsl_block_complex * block;$/;"	m	struct:__anon10	access:public
block	/usr/local/gsl/include/gsl/gsl_matrix_complex_float.h	/^  gsl_block_complex_float * block;$/;"	m	struct:__anon128	access:public
block	/usr/local/gsl/include/gsl/gsl_matrix_complex_long_double.h	/^  gsl_block_complex_long_double * block;$/;"	m	struct:__anon50	access:public
block	/usr/local/gsl/include/gsl/gsl_matrix_double.h	/^  gsl_block * block;$/;"	m	struct:__anon73	access:public
block	/usr/local/gsl/include/gsl/gsl_matrix_float.h	/^  gsl_block_float * block;$/;"	m	struct:__anon143	access:public
block	/usr/local/gsl/include/gsl/gsl_matrix_int.h	/^  gsl_block_int * block;$/;"	m	struct:__anon90	access:public
block	/usr/local/gsl/include/gsl/gsl_matrix_long.h	/^  gsl_block_long * block;$/;"	m	struct:__anon106	access:public
block	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	/^  gsl_block_long_double * block;$/;"	m	struct:__anon63	access:public
block	/usr/local/gsl/include/gsl/gsl_matrix_short.h	/^  gsl_block_short * block;$/;"	m	struct:__anon38	access:public
block	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	/^  gsl_block_uchar * block;$/;"	m	struct:__anon140	access:public
block	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	/^  gsl_block_uint * block;$/;"	m	struct:__anon18	access:public
block	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	/^  gsl_block_ulong * block;$/;"	m	struct:__anon28	access:public
block	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	/^  gsl_block_ushort * block;$/;"	m	struct:__anon151	access:public
block	/usr/local/gsl/include/gsl/gsl_vector_char.h	/^  gsl_block_char *block;$/;"	m	struct:__anon70	access:public
block	/usr/local/gsl/include/gsl/gsl_vector_complex_double.h	/^  gsl_block_complex *block;$/;"	m	struct:__anon134	access:public
block	/usr/local/gsl/include/gsl/gsl_vector_complex_float.h	/^  gsl_block_complex_float *block;$/;"	m	struct:__anon115	access:public
block	/usr/local/gsl/include/gsl/gsl_vector_complex_long_double.h	/^  gsl_block_complex_long_double *block;$/;"	m	struct:__anon31	access:public
block	/usr/local/gsl/include/gsl/gsl_vector_double.h	/^  gsl_block *block;$/;"	m	struct:__anon56	access:public
block	/usr/local/gsl/include/gsl/gsl_vector_float.h	/^  gsl_block_float *block;$/;"	m	struct:__anon35	access:public
block	/usr/local/gsl/include/gsl/gsl_vector_int.h	/^  gsl_block_int *block;$/;"	m	struct:__anon158	access:public
block	/usr/local/gsl/include/gsl/gsl_vector_long.h	/^  gsl_block_long *block;$/;"	m	struct:__anon22	access:public
block	/usr/local/gsl/include/gsl/gsl_vector_long_double.h	/^  gsl_block_long_double *block;$/;"	m	struct:__anon125	access:public
block	/usr/local/gsl/include/gsl/gsl_vector_short.h	/^  gsl_block_short *block;$/;"	m	struct:__anon154	access:public
block	/usr/local/gsl/include/gsl/gsl_vector_uchar.h	/^  gsl_block_uchar *block;$/;"	m	struct:__anon42	access:public
block	/usr/local/gsl/include/gsl/gsl_vector_uint.h	/^  gsl_block_uint *block;$/;"	m	struct:__anon25	access:public
block	/usr/local/gsl/include/gsl/gsl_vector_ulong.h	/^  gsl_block_ulong *block;$/;"	m	struct:__anon60	access:public
block	/usr/local/gsl/include/gsl/gsl_vector_ushort.h	/^  gsl_block_ushort *block;$/;"	m	struct:__anon161	access:public
box	/usr/local/gsl/include/gsl/gsl_monte_vegas.h	/^  int * box;$/;"	m	struct:__anon110	access:public
boxes	/usr/local/gsl/include/gsl/gsl_monte_vegas.h	/^  unsigned int boxes; \/* these are both counted along the axes *\/$/;"	m	struct:__anon110	access:public
bscale	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  double bscale;          \/* scaling factor for shifts *\/$/;"	m	struct:__anon87	access:public
btol	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  double btol;            \/* tolerance for splitting B matrix *\/$/;"	m	struct:__anon87	access:public
c	/usr/local/gsl/include/gsl/gsl_chebyshev.h	/^  double * c;   \/* coefficients                *\/$/;"	m	struct:gsl_cheb_series_struct	access:public
cache	/usr/local/gsl/include/gsl/gsl_interp.h	/^  size_t  cache;        \/* cache of index   *\/$/;"	m	struct:__anon172	access:public
calls_per_box	/usr/local/gsl/include/gsl/gsl_monte_vegas.h	/^  unsigned int calls_per_box;$/;"	m	struct:__anon110	access:public
can_use_dydt_in	/usr/local/gsl/include/gsl/gsl_odeiv.h	/^  int can_use_dydt_in;$/;"	m	struct:__anon96	access:public
cblas_caxpy	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_caxpy(const int N, const void *alpha, const void *X,$/;"	p	signature:(const int N, const void *alpha, const void *X, const int incX, void *Y, const int incY)
cblas_ccopy	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_ccopy(const int N, const void *X, const int incX, $/;"	p	signature:(const int N, const void *X, const int incX, void *Y, const int incY)
cblas_cdotc_sub	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void   cblas_cdotc_sub(const int N, const void *X, const int incX,$/;"	p	signature:(const int N, const void *X, const int incX, const void *Y, const int incY, void *dotc)
cblas_cdotu_sub	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void   cblas_cdotu_sub(const int N, const void *X, const int incX,$/;"	p	signature:(const int N, const void *X, const int incX, const void *Y, const int incY, void *dotu)
cblas_cgbmv	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_cgbmv(const enum CBLAS_ORDER order,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_TRANSPOSE TransA, const int M, const int N, const int KL, const int KU, const void *alpha, const void *A, const int lda, const void *X, const int incX, const void *beta, void *Y, const int incY)
cblas_cgemm	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_cgemm(const enum CBLAS_ORDER Order, const enum CBLAS_TRANSPOSE TransA,$/;"	p	signature:(const enum CBLAS_ORDER Order, const enum CBLAS_TRANSPOSE TransA, const enum CBLAS_TRANSPOSE TransB, const int M, const int N, const int K, const void *alpha, const void *A, const int lda, const void *B, const int ldb, const void *beta, void *C, const int ldc)
cblas_cgemv	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_cgemv(const enum CBLAS_ORDER order,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_TRANSPOSE TransA, const int M, const int N, const void *alpha, const void *A, const int lda, const void *X, const int incX, const void *beta, void *Y, const int incY)
cblas_cgerc	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_cgerc(const enum CBLAS_ORDER order, const int M, const int N,$/;"	p	signature:(const enum CBLAS_ORDER order, const int M, const int N, const void *alpha, const void *X, const int incX, const void *Y, const int incY, void *A, const int lda)
cblas_cgeru	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_cgeru(const enum CBLAS_ORDER order, const int M, const int N,$/;"	p	signature:(const enum CBLAS_ORDER order, const int M, const int N, const void *alpha, const void *X, const int incX, const void *Y, const int incY, void *A, const int lda)
cblas_chbmv	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_chbmv(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const int N, const int K, const void *alpha, const void *A, const int lda, const void *X, const int incX, const void *beta, void *Y, const int incY)
cblas_chemm	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_chemm(const enum CBLAS_ORDER Order, const enum CBLAS_SIDE Side,$/;"	p	signature:(const enum CBLAS_ORDER Order, const enum CBLAS_SIDE Side, const enum CBLAS_UPLO Uplo, const int M, const int N, const void *alpha, const void *A, const int lda, const void *B, const int ldb, const void *beta, void *C, const int ldc)
cblas_chemv	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_chemv(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const int N, const void *alpha, const void *A, const int lda, const void *X, const int incX, const void *beta, void *Y, const int incY)
cblas_cher	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_cher(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const int N, const float alpha, const void *X, const int incX, void *A, const int lda)
cblas_cher2	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_cher2(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const int N,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const int N, const void *alpha, const void *X, const int incX, const void *Y, const int incY, void *A, const int lda)
cblas_cher2k	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_cher2k(const enum CBLAS_ORDER Order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER Order, const enum CBLAS_UPLO Uplo, const enum CBLAS_TRANSPOSE Trans, const int N, const int K, const void *alpha, const void *A, const int lda, const void *B, const int ldb, const float beta, void *C, const int ldc)
cblas_cherk	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_cherk(const enum CBLAS_ORDER Order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER Order, const enum CBLAS_UPLO Uplo, const enum CBLAS_TRANSPOSE Trans, const int N, const int K, const float alpha, const void *A, const int lda, const float beta, void *C, const int ldc)
cblas_chpmv	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_chpmv(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const int N, const void *alpha, const void *Ap, const void *X, const int incX, const void *beta, void *Y, const int incY)
cblas_chpr	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_chpr(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const int N, const float alpha, const void *X, const int incX, void *A)
cblas_chpr2	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_chpr2(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const int N,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const int N, const void *alpha, const void *X, const int incX, const void *Y, const int incY, void *Ap)
cblas_cscal	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_cscal(const int N, const void *alpha, void *X, const int incX);$/;"	p	signature:(const int N, const void *alpha, void *X, const int incX)
cblas_csscal	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_csscal(const int N, const float alpha, void *X, const int incX);$/;"	p	signature:(const int N, const float alpha, void *X, const int incX)
cblas_cswap	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_cswap(const int N, void *X, const int incX, $/;"	p	signature:(const int N, void *X, const int incX, void *Y, const int incY)
cblas_csymm	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_csymm(const enum CBLAS_ORDER Order, const enum CBLAS_SIDE Side,$/;"	p	signature:(const enum CBLAS_ORDER Order, const enum CBLAS_SIDE Side, const enum CBLAS_UPLO Uplo, const int M, const int N, const void *alpha, const void *A, const int lda, const void *B, const int ldb, const void *beta, void *C, const int ldc)
cblas_csyr2k	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_csyr2k(const enum CBLAS_ORDER Order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER Order, const enum CBLAS_UPLO Uplo, const enum CBLAS_TRANSPOSE Trans, const int N, const int K, const void *alpha, const void *A, const int lda, const void *B, const int ldb, const void *beta, void *C, const int ldc)
cblas_csyrk	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_csyrk(const enum CBLAS_ORDER Order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER Order, const enum CBLAS_UPLO Uplo, const enum CBLAS_TRANSPOSE Trans, const int N, const int K, const void *alpha, const void *A, const int lda, const void *beta, void *C, const int ldc)
cblas_ctbmv	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_ctbmv(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const enum CBLAS_TRANSPOSE TransA, const enum CBLAS_DIAG Diag, const int N, const int K, const void *A, const int lda, void *X, const int incX)
cblas_ctbsv	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_ctbsv(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const enum CBLAS_TRANSPOSE TransA, const enum CBLAS_DIAG Diag, const int N, const int K, const void *A, const int lda, void *X, const int incX)
cblas_ctpmv	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_ctpmv(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const enum CBLAS_TRANSPOSE TransA, const enum CBLAS_DIAG Diag, const int N, const void *Ap, void *X, const int incX)
cblas_ctpsv	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_ctpsv(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const enum CBLAS_TRANSPOSE TransA, const enum CBLAS_DIAG Diag, const int N, const void *Ap, void *X, const int incX)
cblas_ctrmm	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_ctrmm(const enum CBLAS_ORDER Order, const enum CBLAS_SIDE Side,$/;"	p	signature:(const enum CBLAS_ORDER Order, const enum CBLAS_SIDE Side, const enum CBLAS_UPLO Uplo, const enum CBLAS_TRANSPOSE TransA, const enum CBLAS_DIAG Diag, const int M, const int N, const void *alpha, const void *A, const int lda, void *B, const int ldb)
cblas_ctrmv	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_ctrmv(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const enum CBLAS_TRANSPOSE TransA, const enum CBLAS_DIAG Diag, const int N, const void *A, const int lda, void *X, const int incX)
cblas_ctrsm	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_ctrsm(const enum CBLAS_ORDER Order, const enum CBLAS_SIDE Side,$/;"	p	signature:(const enum CBLAS_ORDER Order, const enum CBLAS_SIDE Side, const enum CBLAS_UPLO Uplo, const enum CBLAS_TRANSPOSE TransA, const enum CBLAS_DIAG Diag, const int M, const int N, const void *alpha, const void *A, const int lda, void *B, const int ldb)
cblas_ctrsv	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_ctrsv(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const enum CBLAS_TRANSPOSE TransA, const enum CBLAS_DIAG Diag, const int N, const void *A, const int lda, void *X, const int incX)
cblas_dasum	/usr/local/gsl/include/gsl/gsl_cblas.h	/^double cblas_dasum(const int N, const double *X, const int incX);$/;"	p	signature:(const int N, const double *X, const int incX)
cblas_daxpy	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_daxpy(const int N, const double alpha, const double *X,$/;"	p	signature:(const int N, const double alpha, const double *X, const int incX, double *Y, const int incY)
cblas_dcopy	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_dcopy(const int N, const double *X, const int incX, $/;"	p	signature:(const int N, const double *X, const int incX, double *Y, const int incY)
cblas_ddot	/usr/local/gsl/include/gsl/gsl_cblas.h	/^double cblas_ddot(const int N, const double *X, const int incX,$/;"	p	signature:(const int N, const double *X, const int incX, const double *Y, const int incY)
cblas_dgbmv	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_dgbmv(const enum CBLAS_ORDER order,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_TRANSPOSE TransA, const int M, const int N, const int KL, const int KU, const double alpha, const double *A, const int lda, const double *X, const int incX, const double beta, double *Y, const int incY)
cblas_dgemm	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_dgemm(const enum CBLAS_ORDER Order, const enum CBLAS_TRANSPOSE TransA,$/;"	p	signature:(const enum CBLAS_ORDER Order, const enum CBLAS_TRANSPOSE TransA, const enum CBLAS_TRANSPOSE TransB, const int M, const int N, const int K, const double alpha, const double *A, const int lda, const double *B, const int ldb, const double beta, double *C, const int ldc)
cblas_dgemv	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_dgemv(const enum CBLAS_ORDER order,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_TRANSPOSE TransA, const int M, const int N, const double alpha, const double *A, const int lda, const double *X, const int incX, const double beta, double *Y, const int incY)
cblas_dger	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_dger(const enum CBLAS_ORDER order, const int M, const int N,$/;"	p	signature:(const enum CBLAS_ORDER order, const int M, const int N, const double alpha, const double *X, const int incX, const double *Y, const int incY, double *A, const int lda)
cblas_dnrm2	/usr/local/gsl/include/gsl/gsl_cblas.h	/^double cblas_dnrm2(const int N, const double *X, const int incX);$/;"	p	signature:(const int N, const double *X, const int incX)
cblas_drot	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_drot(const int N, double *X, const int incX,$/;"	p	signature:(const int N, double *X, const int incX, double *Y, const int incY, const double c, const double s)
cblas_drotg	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_drotg(double *a, double *b, double *c, double *s);$/;"	p	signature:(double *a, double *b, double *c, double *s)
cblas_drotm	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_drotm(const int N, double *X, const int incX,$/;"	p	signature:(const int N, double *X, const int incX, double *Y, const int incY, const double *P)
cblas_drotmg	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_drotmg(double *d1, double *d2, double *b1, const double b2, double *P);$/;"	p	signature:(double *d1, double *d2, double *b1, const double b2, double *P)
cblas_dsbmv	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_dsbmv(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const int N, const int K, const double alpha, const double *A, const int lda, const double *X, const int incX, const double beta, double *Y, const int incY)
cblas_dscal	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_dscal(const int N, const double alpha, double *X, const int incX);$/;"	p	signature:(const int N, const double alpha, double *X, const int incX)
cblas_dsdot	/usr/local/gsl/include/gsl/gsl_cblas.h	/^double cblas_dsdot(const int N, const float *X, const int incX, const float *Y,$/;"	p	signature:(const int N, const float *X, const int incX, const float *Y, const int incY)
cblas_dspmv	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_dspmv(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const int N, const double alpha, const double *Ap, const double *X, const int incX, const double beta, double *Y, const int incY)
cblas_dspr	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_dspr(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const int N, const double alpha, const double *X, const int incX, double *Ap)
cblas_dspr2	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_dspr2(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const int N, const double alpha, const double *X, const int incX, const double *Y, const int incY, double *A)
cblas_dswap	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_dswap(const int N, double *X, const int incX, $/;"	p	signature:(const int N, double *X, const int incX, double *Y, const int incY)
cblas_dsymm	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_dsymm(const enum CBLAS_ORDER Order, const enum CBLAS_SIDE Side,$/;"	p	signature:(const enum CBLAS_ORDER Order, const enum CBLAS_SIDE Side, const enum CBLAS_UPLO Uplo, const int M, const int N, const double alpha, const double *A, const int lda, const double *B, const int ldb, const double beta, double *C, const int ldc)
cblas_dsymv	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_dsymv(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const int N, const double alpha, const double *A, const int lda, const double *X, const int incX, const double beta, double *Y, const int incY)
cblas_dsyr	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_dsyr(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const int N, const double alpha, const double *X, const int incX, double *A, const int lda)
cblas_dsyr2	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_dsyr2(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const int N, const double alpha, const double *X, const int incX, const double *Y, const int incY, double *A, const int lda)
cblas_dsyr2k	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_dsyr2k(const enum CBLAS_ORDER Order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER Order, const enum CBLAS_UPLO Uplo, const enum CBLAS_TRANSPOSE Trans, const int N, const int K, const double alpha, const double *A, const int lda, const double *B, const int ldb, const double beta, double *C, const int ldc)
cblas_dsyrk	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_dsyrk(const enum CBLAS_ORDER Order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER Order, const enum CBLAS_UPLO Uplo, const enum CBLAS_TRANSPOSE Trans, const int N, const int K, const double alpha, const double *A, const int lda, const double beta, double *C, const int ldc)
cblas_dtbmv	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_dtbmv(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const enum CBLAS_TRANSPOSE TransA, const enum CBLAS_DIAG Diag, const int N, const int K, const double *A, const int lda, double *X, const int incX)
cblas_dtbsv	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_dtbsv(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const enum CBLAS_TRANSPOSE TransA, const enum CBLAS_DIAG Diag, const int N, const int K, const double *A, const int lda, double *X, const int incX)
cblas_dtpmv	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_dtpmv(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const enum CBLAS_TRANSPOSE TransA, const enum CBLAS_DIAG Diag, const int N, const double *Ap, double *X, const int incX)
cblas_dtpsv	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_dtpsv(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const enum CBLAS_TRANSPOSE TransA, const enum CBLAS_DIAG Diag, const int N, const double *Ap, double *X, const int incX)
cblas_dtrmm	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_dtrmm(const enum CBLAS_ORDER Order, const enum CBLAS_SIDE Side,$/;"	p	signature:(const enum CBLAS_ORDER Order, const enum CBLAS_SIDE Side, const enum CBLAS_UPLO Uplo, const enum CBLAS_TRANSPOSE TransA, const enum CBLAS_DIAG Diag, const int M, const int N, const double alpha, const double *A, const int lda, double *B, const int ldb)
cblas_dtrmv	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_dtrmv(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const enum CBLAS_TRANSPOSE TransA, const enum CBLAS_DIAG Diag, const int N, const double *A, const int lda, double *X, const int incX)
cblas_dtrsm	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_dtrsm(const enum CBLAS_ORDER Order, const enum CBLAS_SIDE Side,$/;"	p	signature:(const enum CBLAS_ORDER Order, const enum CBLAS_SIDE Side, const enum CBLAS_UPLO Uplo, const enum CBLAS_TRANSPOSE TransA, const enum CBLAS_DIAG Diag, const int M, const int N, const double alpha, const double *A, const int lda, double *B, const int ldb)
cblas_dtrsv	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_dtrsv(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const enum CBLAS_TRANSPOSE TransA, const enum CBLAS_DIAG Diag, const int N, const double *A, const int lda, double *X, const int incX)
cblas_dzasum	/usr/local/gsl/include/gsl/gsl_cblas.h	/^double cblas_dzasum(const int N, const void *X, const int incX);$/;"	p	signature:(const int N, const void *X, const int incX)
cblas_dznrm2	/usr/local/gsl/include/gsl/gsl_cblas.h	/^double cblas_dznrm2(const int N, const void *X, const int incX);$/;"	p	signature:(const int N, const void *X, const int incX)
cblas_icamax	/usr/local/gsl/include/gsl/gsl_cblas.h	/^CBLAS_INDEX cblas_icamax(const int N, const void   *X, const int incX);$/;"	p	signature:(const int N, const void *X, const int incX)
cblas_idamax	/usr/local/gsl/include/gsl/gsl_cblas.h	/^CBLAS_INDEX cblas_idamax(const int N, const double *X, const int incX);$/;"	p	signature:(const int N, const double *X, const int incX)
cblas_isamax	/usr/local/gsl/include/gsl/gsl_cblas.h	/^CBLAS_INDEX cblas_isamax(const int N, const float  *X, const int incX);$/;"	p	signature:(const int N, const float *X, const int incX)
cblas_izamax	/usr/local/gsl/include/gsl/gsl_cblas.h	/^CBLAS_INDEX cblas_izamax(const int N, const void   *X, const int incX);$/;"	p	signature:(const int N, const void *X, const int incX)
cblas_sasum	/usr/local/gsl/include/gsl/gsl_cblas.h	/^float  cblas_sasum(const int N, const float *X, const int incX);$/;"	p	signature:(const int N, const float *X, const int incX)
cblas_saxpy	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_saxpy(const int N, const float alpha, const float *X,$/;"	p	signature:(const int N, const float alpha, const float *X, const int incX, float *Y, const int incY)
cblas_scasum	/usr/local/gsl/include/gsl/gsl_cblas.h	/^float  cblas_scasum(const int N, const void *X, const int incX);$/;"	p	signature:(const int N, const void *X, const int incX)
cblas_scnrm2	/usr/local/gsl/include/gsl/gsl_cblas.h	/^float  cblas_scnrm2(const int N, const void *X, const int incX);$/;"	p	signature:(const int N, const void *X, const int incX)
cblas_scopy	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_scopy(const int N, const float *X, const int incX, $/;"	p	signature:(const int N, const float *X, const int incX, float *Y, const int incY)
cblas_sdot	/usr/local/gsl/include/gsl/gsl_cblas.h	/^float  cblas_sdot(const int N, const float  *X, const int incX,$/;"	p	signature:(const int N, const float *X, const int incX, const float *Y, const int incY)
cblas_sdsdot	/usr/local/gsl/include/gsl/gsl_cblas.h	/^float  cblas_sdsdot(const int N, const float alpha, const float *X,$/;"	p	signature:(const int N, const float alpha, const float *X, const int incX, const float *Y, const int incY)
cblas_sgbmv	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_sgbmv(const enum CBLAS_ORDER order,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_TRANSPOSE TransA, const int M, const int N, const int KL, const int KU, const float alpha, const float *A, const int lda, const float *X, const int incX, const float beta, float *Y, const int incY)
cblas_sgemm	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_sgemm(const enum CBLAS_ORDER Order, const enum CBLAS_TRANSPOSE TransA,$/;"	p	signature:(const enum CBLAS_ORDER Order, const enum CBLAS_TRANSPOSE TransA, const enum CBLAS_TRANSPOSE TransB, const int M, const int N, const int K, const float alpha, const float *A, const int lda, const float *B, const int ldb, const float beta, float *C, const int ldc)
cblas_sgemv	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_sgemv(const enum CBLAS_ORDER order,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_TRANSPOSE TransA, const int M, const int N, const float alpha, const float *A, const int lda, const float *X, const int incX, const float beta, float *Y, const int incY)
cblas_sger	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_sger(const enum CBLAS_ORDER order, const int M, const int N,$/;"	p	signature:(const enum CBLAS_ORDER order, const int M, const int N, const float alpha, const float *X, const int incX, const float *Y, const int incY, float *A, const int lda)
cblas_snrm2	/usr/local/gsl/include/gsl/gsl_cblas.h	/^float  cblas_snrm2(const int N, const float *X, const int incX);$/;"	p	signature:(const int N, const float *X, const int incX)
cblas_srot	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_srot(const int N, float *X, const int incX,$/;"	p	signature:(const int N, float *X, const int incX, float *Y, const int incY, const float c, const float s)
cblas_srotg	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_srotg(float *a, float *b, float *c, float *s);$/;"	p	signature:(float *a, float *b, float *c, float *s)
cblas_srotm	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_srotm(const int N, float *X, const int incX,$/;"	p	signature:(const int N, float *X, const int incX, float *Y, const int incY, const float *P)
cblas_srotmg	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_srotmg(float *d1, float *d2, float *b1, const float b2, float *P);$/;"	p	signature:(float *d1, float *d2, float *b1, const float b2, float *P)
cblas_ssbmv	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_ssbmv(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const int N, const int K, const float alpha, const float *A, const int lda, const float *X, const int incX, const float beta, float *Y, const int incY)
cblas_sscal	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_sscal(const int N, const float alpha, float *X, const int incX);$/;"	p	signature:(const int N, const float alpha, float *X, const int incX)
cblas_sspmv	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_sspmv(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const int N, const float alpha, const float *Ap, const float *X, const int incX, const float beta, float *Y, const int incY)
cblas_sspr	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_sspr(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const int N, const float alpha, const float *X, const int incX, float *Ap)
cblas_sspr2	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_sspr2(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const int N, const float alpha, const float *X, const int incX, const float *Y, const int incY, float *A)
cblas_sswap	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_sswap(const int N, float *X, const int incX, $/;"	p	signature:(const int N, float *X, const int incX, float *Y, const int incY)
cblas_ssymm	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_ssymm(const enum CBLAS_ORDER Order, const enum CBLAS_SIDE Side,$/;"	p	signature:(const enum CBLAS_ORDER Order, const enum CBLAS_SIDE Side, const enum CBLAS_UPLO Uplo, const int M, const int N, const float alpha, const float *A, const int lda, const float *B, const int ldb, const float beta, float *C, const int ldc)
cblas_ssymv	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_ssymv(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const int N, const float alpha, const float *A, const int lda, const float *X, const int incX, const float beta, float *Y, const int incY)
cblas_ssyr	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_ssyr(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const int N, const float alpha, const float *X, const int incX, float *A, const int lda)
cblas_ssyr2	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_ssyr2(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const int N, const float alpha, const float *X, const int incX, const float *Y, const int incY, float *A, const int lda)
cblas_ssyr2k	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_ssyr2k(const enum CBLAS_ORDER Order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER Order, const enum CBLAS_UPLO Uplo, const enum CBLAS_TRANSPOSE Trans, const int N, const int K, const float alpha, const float *A, const int lda, const float *B, const int ldb, const float beta, float *C, const int ldc)
cblas_ssyrk	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_ssyrk(const enum CBLAS_ORDER Order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER Order, const enum CBLAS_UPLO Uplo, const enum CBLAS_TRANSPOSE Trans, const int N, const int K, const float alpha, const float *A, const int lda, const float beta, float *C, const int ldc)
cblas_stbmv	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_stbmv(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const enum CBLAS_TRANSPOSE TransA, const enum CBLAS_DIAG Diag, const int N, const int K, const float *A, const int lda, float *X, const int incX)
cblas_stbsv	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_stbsv(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const enum CBLAS_TRANSPOSE TransA, const enum CBLAS_DIAG Diag, const int N, const int K, const float *A, const int lda, float *X, const int incX)
cblas_stpmv	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_stpmv(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const enum CBLAS_TRANSPOSE TransA, const enum CBLAS_DIAG Diag, const int N, const float *Ap, float *X, const int incX)
cblas_stpsv	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_stpsv(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const enum CBLAS_TRANSPOSE TransA, const enum CBLAS_DIAG Diag, const int N, const float *Ap, float *X, const int incX)
cblas_strmm	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_strmm(const enum CBLAS_ORDER Order, const enum CBLAS_SIDE Side,$/;"	p	signature:(const enum CBLAS_ORDER Order, const enum CBLAS_SIDE Side, const enum CBLAS_UPLO Uplo, const enum CBLAS_TRANSPOSE TransA, const enum CBLAS_DIAG Diag, const int M, const int N, const float alpha, const float *A, const int lda, float *B, const int ldb)
cblas_strmv	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_strmv(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const enum CBLAS_TRANSPOSE TransA, const enum CBLAS_DIAG Diag, const int N, const float *A, const int lda, float *X, const int incX)
cblas_strsm	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_strsm(const enum CBLAS_ORDER Order, const enum CBLAS_SIDE Side,$/;"	p	signature:(const enum CBLAS_ORDER Order, const enum CBLAS_SIDE Side, const enum CBLAS_UPLO Uplo, const enum CBLAS_TRANSPOSE TransA, const enum CBLAS_DIAG Diag, const int M, const int N, const float alpha, const float *A, const int lda, float *B, const int ldb)
cblas_strsv	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_strsv(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const enum CBLAS_TRANSPOSE TransA, const enum CBLAS_DIAG Diag, const int N, const float *A, const int lda, float *X, const int incX)
cblas_xerbla	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_xerbla(int p, const char *rout, const char *form, ...);$/;"	p	signature:(int p, const char *rout, const char *form, ...)
cblas_zaxpy	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_zaxpy(const int N, const void *alpha, const void *X,$/;"	p	signature:(const int N, const void *alpha, const void *X, const int incX, void *Y, const int incY)
cblas_zcopy	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_zcopy(const int N, const void *X, const int incX, $/;"	p	signature:(const int N, const void *X, const int incX, void *Y, const int incY)
cblas_zdotc_sub	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void   cblas_zdotc_sub(const int N, const void *X, const int incX,$/;"	p	signature:(const int N, const void *X, const int incX, const void *Y, const int incY, void *dotc)
cblas_zdotu_sub	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void   cblas_zdotu_sub(const int N, const void *X, const int incX,$/;"	p	signature:(const int N, const void *X, const int incX, const void *Y, const int incY, void *dotu)
cblas_zdscal	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_zdscal(const int N, const double alpha, void *X, const int incX);$/;"	p	signature:(const int N, const double alpha, void *X, const int incX)
cblas_zgbmv	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_zgbmv(const enum CBLAS_ORDER order,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_TRANSPOSE TransA, const int M, const int N, const int KL, const int KU, const void *alpha, const void *A, const int lda, const void *X, const int incX, const void *beta, void *Y, const int incY)
cblas_zgemm	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_zgemm(const enum CBLAS_ORDER Order, const enum CBLAS_TRANSPOSE TransA,$/;"	p	signature:(const enum CBLAS_ORDER Order, const enum CBLAS_TRANSPOSE TransA, const enum CBLAS_TRANSPOSE TransB, const int M, const int N, const int K, const void *alpha, const void *A, const int lda, const void *B, const int ldb, const void *beta, void *C, const int ldc)
cblas_zgemv	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_zgemv(const enum CBLAS_ORDER order,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_TRANSPOSE TransA, const int M, const int N, const void *alpha, const void *A, const int lda, const void *X, const int incX, const void *beta, void *Y, const int incY)
cblas_zgerc	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_zgerc(const enum CBLAS_ORDER order, const int M, const int N,$/;"	p	signature:(const enum CBLAS_ORDER order, const int M, const int N, const void *alpha, const void *X, const int incX, const void *Y, const int incY, void *A, const int lda)
cblas_zgeru	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_zgeru(const enum CBLAS_ORDER order, const int M, const int N,$/;"	p	signature:(const enum CBLAS_ORDER order, const int M, const int N, const void *alpha, const void *X, const int incX, const void *Y, const int incY, void *A, const int lda)
cblas_zhbmv	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_zhbmv(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const int N, const int K, const void *alpha, const void *A, const int lda, const void *X, const int incX, const void *beta, void *Y, const int incY)
cblas_zhemm	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_zhemm(const enum CBLAS_ORDER Order, const enum CBLAS_SIDE Side,$/;"	p	signature:(const enum CBLAS_ORDER Order, const enum CBLAS_SIDE Side, const enum CBLAS_UPLO Uplo, const int M, const int N, const void *alpha, const void *A, const int lda, const void *B, const int ldb, const void *beta, void *C, const int ldc)
cblas_zhemv	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_zhemv(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const int N, const void *alpha, const void *A, const int lda, const void *X, const int incX, const void *beta, void *Y, const int incY)
cblas_zher	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_zher(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const int N, const double alpha, const void *X, const int incX, void *A, const int lda)
cblas_zher2	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_zher2(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const int N,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const int N, const void *alpha, const void *X, const int incX, const void *Y, const int incY, void *A, const int lda)
cblas_zher2k	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_zher2k(const enum CBLAS_ORDER Order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER Order, const enum CBLAS_UPLO Uplo, const enum CBLAS_TRANSPOSE Trans, const int N, const int K, const void *alpha, const void *A, const int lda, const void *B, const int ldb, const double beta, void *C, const int ldc)
cblas_zherk	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_zherk(const enum CBLAS_ORDER Order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER Order, const enum CBLAS_UPLO Uplo, const enum CBLAS_TRANSPOSE Trans, const int N, const int K, const double alpha, const void *A, const int lda, const double beta, void *C, const int ldc)
cblas_zhpmv	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_zhpmv(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const int N, const void *alpha, const void *Ap, const void *X, const int incX, const void *beta, void *Y, const int incY)
cblas_zhpr	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_zhpr(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const int N, const double alpha, const void *X, const int incX, void *A)
cblas_zhpr2	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_zhpr2(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const int N,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const int N, const void *alpha, const void *X, const int incX, const void *Y, const int incY, void *Ap)
cblas_zscal	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_zscal(const int N, const void *alpha, void *X, const int incX);$/;"	p	signature:(const int N, const void *alpha, void *X, const int incX)
cblas_zswap	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_zswap(const int N, void *X, const int incX, $/;"	p	signature:(const int N, void *X, const int incX, void *Y, const int incY)
cblas_zsymm	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_zsymm(const enum CBLAS_ORDER Order, const enum CBLAS_SIDE Side,$/;"	p	signature:(const enum CBLAS_ORDER Order, const enum CBLAS_SIDE Side, const enum CBLAS_UPLO Uplo, const int M, const int N, const void *alpha, const void *A, const int lda, const void *B, const int ldb, const void *beta, void *C, const int ldc)
cblas_zsyr2k	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_zsyr2k(const enum CBLAS_ORDER Order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER Order, const enum CBLAS_UPLO Uplo, const enum CBLAS_TRANSPOSE Trans, const int N, const int K, const void *alpha, const void *A, const int lda, const void *B, const int ldb, const void *beta, void *C, const int ldc)
cblas_zsyrk	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_zsyrk(const enum CBLAS_ORDER Order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER Order, const enum CBLAS_UPLO Uplo, const enum CBLAS_TRANSPOSE Trans, const int N, const int K, const void *alpha, const void *A, const int lda, const void *beta, void *C, const int ldc)
cblas_ztbmv	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_ztbmv(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const enum CBLAS_TRANSPOSE TransA, const enum CBLAS_DIAG Diag, const int N, const int K, const void *A, const int lda, void *X, const int incX)
cblas_ztbsv	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_ztbsv(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const enum CBLAS_TRANSPOSE TransA, const enum CBLAS_DIAG Diag, const int N, const int K, const void *A, const int lda, void *X, const int incX)
cblas_ztpmv	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_ztpmv(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const enum CBLAS_TRANSPOSE TransA, const enum CBLAS_DIAG Diag, const int N, const void *Ap, void *X, const int incX)
cblas_ztpsv	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_ztpsv(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const enum CBLAS_TRANSPOSE TransA, const enum CBLAS_DIAG Diag, const int N, const void *Ap, void *X, const int incX)
cblas_ztrmm	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_ztrmm(const enum CBLAS_ORDER Order, const enum CBLAS_SIDE Side,$/;"	p	signature:(const enum CBLAS_ORDER Order, const enum CBLAS_SIDE Side, const enum CBLAS_UPLO Uplo, const enum CBLAS_TRANSPOSE TransA, const enum CBLAS_DIAG Diag, const int M, const int N, const void *alpha, const void *A, const int lda, void *B, const int ldb)
cblas_ztrmv	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_ztrmv(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const enum CBLAS_TRANSPOSE TransA, const enum CBLAS_DIAG Diag, const int N, const void *A, const int lda, void *X, const int incX)
cblas_ztrsm	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_ztrsm(const enum CBLAS_ORDER Order, const enum CBLAS_SIDE Side,$/;"	p	signature:(const enum CBLAS_ORDER Order, const enum CBLAS_SIDE Side, const enum CBLAS_UPLO Uplo, const enum CBLAS_TRANSPOSE TransA, const enum CBLAS_DIAG Diag, const int M, const int N, const void *alpha, const void *A, const int lda, void *B, const int ldb)
cblas_ztrsv	/usr/local/gsl/include/gsl/gsl_cblas.h	/^void cblas_ztrsv(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const enum CBLAS_TRANSPOSE TransA, const enum CBLAS_DIAG Diag, const int N, const void *A, const int lda, void *X, const int incX)
chebmo	/usr/local/gsl/include/gsl/gsl_integration.h	/^  double *chebmo;$/;"	m	struct:__anon47	access:public
chi_sum	/usr/local/gsl/include/gsl/gsl_monte_vegas.h	/^  double chi_sum;$/;"	m	struct:__anon110	access:public
chisq	/usr/local/gsl/include/gsl/gsl_monte_vegas.h	/^  double chisq;$/;"	m	struct:__anon110	access:public
compute_s	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  int compute_s;          \/* compute generalized Schur form S *\/$/;"	m	struct:__anon87	access:public
compute_t	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  int compute_t;          \/* compute generalized Schur form T *\/$/;"	m	struct:__anon87	access:public
compute_t	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  int compute_t;         \/* compute Schur form T = Z^t A Z *\/$/;"	m	struct:__anon80	access:public
count	/usr/local/gsl/include/gsl/gsl_odeiv.h	/^  unsigned long int count;$/;"	m	struct:__anon100	access:public
d	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  double * d;$/;"	m	struct:__anon76	access:public
d	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  double * d;$/;"	m	struct:__anon77	access:public
d	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  double * d;$/;"	m	struct:__anon78	access:public
d	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  double * d;$/;"	m	struct:__anon79	access:public
d	/usr/local/gsl/include/gsl/gsl_monte_vegas.h	/^  double * d;$/;"	m	struct:__anon110	access:public
dB	/usr/local/gsl/include/gsl/gsl_bspline.h	/^    gsl_matrix *dB; \/* temporary derivative results *\/$/;"	m	struct:__anon138	access:public
dat	/usr/local/gsl/include/gsl/gsl_complex.h	/^    double dat[2];$/;"	m	struct:__anon54	access:public
dat	/usr/local/gsl/include/gsl/gsl_complex.h	/^    float dat[2];$/;"	m	struct:__anon55	access:public
dat	/usr/local/gsl/include/gsl/gsl_complex.h	/^    long double dat[2];$/;"	m	struct:__anon53	access:public
data	/usr/local/gsl/include/gsl/gsl_block_char.h	/^  char *data;$/;"	m	struct:gsl_block_char_struct	access:public
data	/usr/local/gsl/include/gsl/gsl_block_complex_double.h	/^  double *data;$/;"	m	struct:gsl_block_complex_struct	access:public
data	/usr/local/gsl/include/gsl/gsl_block_complex_float.h	/^  float *data;$/;"	m	struct:gsl_block_complex_float_struct	access:public
data	/usr/local/gsl/include/gsl/gsl_block_complex_long_double.h	/^  long double *data;$/;"	m	struct:gsl_block_complex_long_double_struct	access:public
data	/usr/local/gsl/include/gsl/gsl_block_double.h	/^  double *data;$/;"	m	struct:gsl_block_struct	access:public
data	/usr/local/gsl/include/gsl/gsl_block_float.h	/^  float *data;$/;"	m	struct:gsl_block_float_struct	access:public
data	/usr/local/gsl/include/gsl/gsl_block_int.h	/^  int *data;$/;"	m	struct:gsl_block_int_struct	access:public
data	/usr/local/gsl/include/gsl/gsl_block_long.h	/^  long *data;$/;"	m	struct:gsl_block_long_struct	access:public
data	/usr/local/gsl/include/gsl/gsl_block_long_double.h	/^  long double *data;$/;"	m	struct:gsl_block_long_double_struct	access:public
data	/usr/local/gsl/include/gsl/gsl_block_short.h	/^  short *data;$/;"	m	struct:gsl_block_short_struct	access:public
data	/usr/local/gsl/include/gsl/gsl_block_uchar.h	/^  unsigned char *data;$/;"	m	struct:gsl_block_uchar_struct	access:public
data	/usr/local/gsl/include/gsl/gsl_block_uint.h	/^  unsigned int *data;$/;"	m	struct:gsl_block_uint_struct	access:public
data	/usr/local/gsl/include/gsl/gsl_block_ulong.h	/^  unsigned long *data;$/;"	m	struct:gsl_block_ulong_struct	access:public
data	/usr/local/gsl/include/gsl/gsl_block_ushort.h	/^  unsigned short *data;$/;"	m	struct:gsl_block_ushort_struct	access:public
data	/usr/local/gsl/include/gsl/gsl_combination.h	/^  size_t *data;$/;"	m	struct:gsl_combination_struct	access:public
data	/usr/local/gsl/include/gsl/gsl_matrix_char.h	/^  char * data;$/;"	m	struct:__anon148	access:public
data	/usr/local/gsl/include/gsl/gsl_matrix_complex_double.h	/^  double * data;$/;"	m	struct:__anon10	access:public
data	/usr/local/gsl/include/gsl/gsl_matrix_complex_float.h	/^  float * data;$/;"	m	struct:__anon128	access:public
data	/usr/local/gsl/include/gsl/gsl_matrix_complex_long_double.h	/^  long double * data;$/;"	m	struct:__anon50	access:public
data	/usr/local/gsl/include/gsl/gsl_matrix_double.h	/^  double * data;$/;"	m	struct:__anon73	access:public
data	/usr/local/gsl/include/gsl/gsl_matrix_float.h	/^  float * data;$/;"	m	struct:__anon143	access:public
data	/usr/local/gsl/include/gsl/gsl_matrix_int.h	/^  int * data;$/;"	m	struct:__anon90	access:public
data	/usr/local/gsl/include/gsl/gsl_matrix_long.h	/^  long * data;$/;"	m	struct:__anon106	access:public
data	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	/^  long double * data;$/;"	m	struct:__anon63	access:public
data	/usr/local/gsl/include/gsl/gsl_matrix_short.h	/^  short * data;$/;"	m	struct:__anon38	access:public
data	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	/^  unsigned char * data;$/;"	m	struct:__anon140	access:public
data	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	/^  unsigned int * data;$/;"	m	struct:__anon18	access:public
data	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	/^  unsigned long * data;$/;"	m	struct:__anon28	access:public
data	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	/^  unsigned short * data;$/;"	m	struct:__anon151	access:public
data	/usr/local/gsl/include/gsl/gsl_permutation.h	/^  size_t *data;$/;"	m	struct:gsl_permutation_struct	access:public
data	/usr/local/gsl/include/gsl/gsl_vector_char.h	/^  char *data;$/;"	m	struct:__anon70	access:public
data	/usr/local/gsl/include/gsl/gsl_vector_complex_double.h	/^  double *data;$/;"	m	struct:__anon134	access:public
data	/usr/local/gsl/include/gsl/gsl_vector_complex_float.h	/^  float *data;$/;"	m	struct:__anon115	access:public
data	/usr/local/gsl/include/gsl/gsl_vector_complex_long_double.h	/^  long double *data;$/;"	m	struct:__anon31	access:public
data	/usr/local/gsl/include/gsl/gsl_vector_double.h	/^  double *data;$/;"	m	struct:__anon56	access:public
data	/usr/local/gsl/include/gsl/gsl_vector_float.h	/^  float *data;$/;"	m	struct:__anon35	access:public
data	/usr/local/gsl/include/gsl/gsl_vector_int.h	/^  int *data;$/;"	m	struct:__anon158	access:public
data	/usr/local/gsl/include/gsl/gsl_vector_long.h	/^  long *data;$/;"	m	struct:__anon22	access:public
data	/usr/local/gsl/include/gsl/gsl_vector_long_double.h	/^  long double *data;$/;"	m	struct:__anon125	access:public
data	/usr/local/gsl/include/gsl/gsl_vector_short.h	/^  short *data;$/;"	m	struct:__anon154	access:public
data	/usr/local/gsl/include/gsl/gsl_vector_uchar.h	/^  unsigned char *data;$/;"	m	struct:__anon42	access:public
data	/usr/local/gsl/include/gsl/gsl_vector_uint.h	/^  unsigned int *data;$/;"	m	struct:__anon25	access:public
data	/usr/local/gsl/include/gsl/gsl_vector_ulong.h	/^  unsigned long *data;$/;"	m	struct:__anon60	access:public
data	/usr/local/gsl/include/gsl/gsl_vector_ushort.h	/^  unsigned short *data;$/;"	m	struct:__anon161	access:public
dd	/usr/local/gsl/include/gsl/gsl_sf_mathieu.h	/^  double *dd;$/;"	m	struct:__anon177	access:public
deltal	/usr/local/gsl/include/gsl/gsl_bspline.h	/^    gsl_vector *deltal; \/* left delta *\/$/;"	m	struct:__anon137	access:public
deltar	/usr/local/gsl/include/gsl/gsl_bspline.h	/^    gsl_vector *deltar; \/* right delta *\/$/;"	m	struct:__anon137	access:public
delx	/usr/local/gsl/include/gsl/gsl_monte_vegas.h	/^  double * delx;$/;"	m	struct:__anon110	access:public
depth	/usr/local/gsl/include/gsl/gsl_monte_miser.h	/^  int depth;$/;"	m	struct:__anon4	access:public
df	/usr/local/gsl/include/gsl/gsl_math.h	/^  double (* df) (double x, void * params);$/;"	m	struct:gsl_function_fdf_struct	access:public
df	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	/^  int (* df) (const gsl_vector * x, void * params, gsl_matrix * df);$/;"	m	struct:gsl_multifit_function_fdf_struct	access:public
df	/usr/local/gsl/include/gsl/gsl_multimin.h	/^  void (* df) (const gsl_vector * x, void * params,gsl_vector * df);$/;"	m	struct:gsl_multimin_function_fdf_struct	access:public
df	/usr/local/gsl/include/gsl/gsl_multiroots.h	/^  int (* df) (const gsl_vector * x, void * params, gsl_matrix * df);$/;"	m	struct:gsl_multiroot_function_fdf_struct	access:public
diag	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  gsl_vector *diag;            \/* diagonal matrix elements from balancing *\/$/;"	m	struct:__anon81	access:public
dim	/usr/local/gsl/include/gsl/gsl_monte.h	/^  size_t dim;$/;"	m	struct:gsl_monte_function_struct	access:public
dim	/usr/local/gsl/include/gsl/gsl_monte_miser.h	/^  size_t dim;$/;"	m	struct:__anon4	access:public
dim	/usr/local/gsl/include/gsl/gsl_monte_plain.h	/^  size_t dim;$/;"	m	struct:__anon49	access:public
dim	/usr/local/gsl/include/gsl/gsl_monte_vegas.h	/^  size_t dim;$/;"	m	struct:__anon110	access:public
dimension	/usr/local/gsl/include/gsl/gsl_odeiv.h	/^  size_t dimension;$/;"	m	struct:__anon100	access:public
dimension	/usr/local/gsl/include/gsl/gsl_odeiv.h	/^  size_t dimension;$/;"	m	struct:__anon95	access:public
dimension	/usr/local/gsl/include/gsl/gsl_odeiv.h	/^  size_t dimension;$/;"	m	struct:__anon97	access:public
dimension	/usr/local/gsl/include/gsl/gsl_qrng.h	/^  unsigned int dimension;$/;"	m	struct:__anon169	access:public
dither	/usr/local/gsl/include/gsl/gsl_monte_miser.h	/^  double dither;$/;"	m	struct:__anon4	access:public
do_balance	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  int do_balance;              \/* perform balancing transformation? *\/$/;"	m	struct:__anon81	access:public
dq_den	/usr/local/gsl/include/gsl/gsl_sum.h	/^  double *dq_den;$/;"	m	struct:__anon170	access:public
dq_num	/usr/local/gsl/include/gsl/gsl_sum.h	/^  double *dq_num;$/;"	m	struct:__anon170	access:public
dsum	/usr/local/gsl/include/gsl/gsl_sum.h	/^  double *dsum;$/;"	m	struct:__anon170	access:public
dsum	/usr/local/gsl/include/gsl/gsl_sum.h	/^  double *dsum;$/;"	m	struct:__anon171	access:public
dx	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	/^    gsl_vector * dx ;$/;"	m	struct:__anon7	access:public
dx	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	/^    gsl_vector * dx;$/;"	m	struct:__anon9	access:public
dx	/usr/local/gsl/include/gsl/gsl_multimin.h	/^  gsl_vector * dx;$/;"	m	struct:__anon114	access:public
dx	/usr/local/gsl/include/gsl/gsl_multiroots.h	/^    gsl_vector * dx ;$/;"	m	struct:__anon179	access:public
dx	/usr/local/gsl/include/gsl/gsl_multiroots.h	/^    gsl_vector * dx;$/;"	m	struct:__anon181	access:public
dydt_in	/usr/local/gsl/include/gsl/gsl_odeiv.h	/^  double * dydt_in;$/;"	m	struct:__anon100	access:public
dydt_out	/usr/local/gsl/include/gsl/gsl_odeiv.h	/^  double * dydt_out;$/;"	m	struct:__anon100	access:public
e10	/usr/local/gsl/include/gsl/gsl_sf_result.h	/^  int    e10;$/;"	m	struct:gsl_sf_result_e10_struct	access:public
e2	/usr/local/gsl/include/gsl/gsl_sf_mathieu.h	/^  double *e2;$/;"	m	struct:__anon177	access:public
ee	/usr/local/gsl/include/gsl/gsl_sf_mathieu.h	/^  double *ee;$/;"	m	struct:__anon177	access:public
elist	/usr/local/gsl/include/gsl/gsl_integration.h	/^    double *elist;$/;"	m	struct:__anon45	access:public
err	/usr/local/gsl/include/gsl/gsl_sf_result.h	/^  double err;$/;"	m	struct:gsl_sf_result_e10_struct	access:public
err	/usr/local/gsl/include/gsl/gsl_sf_result.h	/^  double err;$/;"	m	struct:gsl_sf_result_struct	access:public
eshift	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  double eshift;          \/* exceptional shift counter *\/$/;"	m	struct:__anon87	access:public
estimate_frac	/usr/local/gsl/include/gsl/gsl_monte_miser.h	/^  double estimate_frac;$/;"	m	struct:__anon4	access:public
estimate_style	/usr/local/gsl/include/gsl/gsl_monte_miser.h	/^  int estimate_style;$/;"	m	struct:__anon4	access:public
eval	/usr/local/gsl/include/gsl/gsl_interp.h	/^  int     (*eval)    (const void *, const double xa[], const double ya[], size_t size, double x, gsl_interp_accel *, double * y);$/;"	m	struct:__anon173	access:public
eval	/usr/local/gsl/include/gsl/gsl_sf_mathieu.h	/^  gsl_vector *eval;$/;"	m	struct:__anon177	access:public
eval_deriv	/usr/local/gsl/include/gsl/gsl_interp.h	/^  int     (*eval_deriv)  (const void *, const double xa[], const double ya[], size_t size, double x, gsl_interp_accel *, double * y_p);$/;"	m	struct:__anon173	access:public
eval_deriv2	/usr/local/gsl/include/gsl/gsl_interp.h	/^  int     (*eval_deriv2) (const void *, const double xa[], const double ya[], size_t size, double x, gsl_interp_accel *, double * y_pp);$/;"	m	struct:__anon173	access:public
eval_integ	/usr/local/gsl/include/gsl/gsl_interp.h	/^  int     (*eval_integ)  (const void *, const double xa[], const double ya[], size_t size, gsl_interp_accel *, double a, double b, double * result);$/;"	m	struct:__anon173	access:public
evec	/usr/local/gsl/include/gsl/gsl_sf_mathieu.h	/^  gsl_matrix *evec;$/;"	m	struct:__anon177	access:public
even_order	/usr/local/gsl/include/gsl/gsl_sf_mathieu.h	/^  size_t even_order;$/;"	m	struct:__anon177	access:public
exponent	/usr/local/gsl/include/gsl/gsl_ieee_utils.h	/^  int exponent ;$/;"	m	struct:__anon120	access:public
exponent	/usr/local/gsl/include/gsl/gsl_ieee_utils.h	/^  int exponent ;$/;"	m	struct:__anon121	access:public
extra_values	/usr/local/gsl/include/gsl/gsl_sf_mathieu.h	/^  int extra_values;$/;"	m	struct:__anon177	access:public
f	/usr/local/gsl/include/gsl/gsl_chebyshev.h	/^  double * f;   \/* function evaluated at chebyschev points  *\/$/;"	m	struct:gsl_cheb_series_struct	access:public
f	/usr/local/gsl/include/gsl/gsl_math.h	/^  double (* f) (double x, void * params);$/;"	m	struct:gsl_function_fdf_struct	access:public
f	/usr/local/gsl/include/gsl/gsl_monte.h	/^  double (*f)(double * x_array, size_t dim, void * params);$/;"	m	struct:gsl_monte_function_struct	access:public
f	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	/^    gsl_vector * f ;$/;"	m	struct:__anon7	access:public
f	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	/^    gsl_vector * f;$/;"	m	struct:__anon9	access:public
f	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	/^  int (* f) (const gsl_vector * x, void * params, gsl_vector * f);$/;"	m	struct:gsl_multifit_function_fdf_struct	access:public
f	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	/^  int (* f) (const gsl_vector * x, void * params, gsl_vector * f);$/;"	m	struct:gsl_multifit_function_struct	access:public
f	/usr/local/gsl/include/gsl/gsl_multimin.h	/^  double (* f) (const gsl_vector  * x, void * params);$/;"	m	struct:gsl_multimin_function_fdf_struct	access:public
f	/usr/local/gsl/include/gsl/gsl_multimin.h	/^  double (* f) (const gsl_vector * x, void * params);$/;"	m	struct:gsl_multimin_function_struct	access:public
f	/usr/local/gsl/include/gsl/gsl_multimin.h	/^  double f;$/;"	m	struct:__anon114	access:public
f	/usr/local/gsl/include/gsl/gsl_multimin.h	/^  gsl_multimin_function *f;$/;"	m	struct:__anon112	access:public
f	/usr/local/gsl/include/gsl/gsl_multiroots.h	/^    gsl_vector * f ;$/;"	m	struct:__anon179	access:public
f	/usr/local/gsl/include/gsl/gsl_multiroots.h	/^    gsl_vector * f;$/;"	m	struct:__anon181	access:public
f	/usr/local/gsl/include/gsl/gsl_multiroots.h	/^  int (* f) (const gsl_vector * x, void * params, gsl_vector * f);$/;"	m	struct:gsl_multiroot_function_fdf_struct	access:public
f	/usr/local/gsl/include/gsl/gsl_multiroots.h	/^  int (* f) (const gsl_vector * x, void * params, gsl_vector * f);$/;"	m	struct:gsl_multiroot_function_struct	access:public
f_lower	/usr/local/gsl/include/gsl/gsl_min.h	/^    double f_minimum, f_lower, f_upper;$/;"	m	struct:__anon147	access:public
f_minimum	/usr/local/gsl/include/gsl/gsl_min.h	/^    double f_minimum, f_lower, f_upper;$/;"	m	struct:__anon147	access:public
f_upper	/usr/local/gsl/include/gsl/gsl_min.h	/^    double f_minimum, f_lower, f_upper;$/;"	m	struct:__anon147	access:public
factor	/usr/local/gsl/include/gsl/gsl_fft_complex.h	/^    size_t factor[64];$/;"	m	struct:__anon1	access:public
factor	/usr/local/gsl/include/gsl/gsl_fft_complex_float.h	/^    size_t factor[64];$/;"	m	struct:__anon16	access:public
factor	/usr/local/gsl/include/gsl/gsl_fft_halfcomplex.h	/^    size_t factor[64];$/;"	m	struct:__anon105	access:public
factor	/usr/local/gsl/include/gsl/gsl_fft_halfcomplex_float.h	/^    size_t factor[64];$/;"	m	struct:__anon21	access:public
factor	/usr/local/gsl/include/gsl/gsl_fft_real.h	/^    size_t factor[64];$/;"	m	struct:__anon66	access:public
factor	/usr/local/gsl/include/gsl/gsl_fft_real_float.h	/^    size_t factor[64];$/;"	m	struct:__anon68	access:public
failed_steps	/usr/local/gsl/include/gsl/gsl_odeiv.h	/^  unsigned long int failed_steps;$/;"	m	struct:__anon100	access:public
fdf	/usr/local/gsl/include/gsl/gsl_math.h	/^  void (* fdf) (double x, void * params, double * f, double * df);$/;"	m	struct:gsl_function_fdf_struct	access:public
fdf	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	/^    gsl_multifit_function_fdf * fdf ;$/;"	m	struct:__anon9	access:public
fdf	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	/^  int (* fdf) (const gsl_vector * x, void * params, gsl_vector * f, gsl_matrix *df);$/;"	m	struct:gsl_multifit_function_fdf_struct	access:public
fdf	/usr/local/gsl/include/gsl/gsl_multimin.h	/^  gsl_multimin_function_fdf *fdf;$/;"	m	struct:__anon114	access:public
fdf	/usr/local/gsl/include/gsl/gsl_multimin.h	/^  void (* fdf) (const gsl_vector * x, void * params,double *f,gsl_vector * df);$/;"	m	struct:gsl_multimin_function_fdf_struct	access:public
fdf	/usr/local/gsl/include/gsl/gsl_multiroots.h	/^    gsl_multiroot_function_fdf * fdf ;$/;"	m	struct:__anon181	access:public
fdf	/usr/local/gsl/include/gsl/gsl_multiroots.h	/^  int (* fdf) (const gsl_vector * x, void * params, gsl_vector * f, gsl_matrix *df);$/;"	m	struct:gsl_multiroot_function_fdf_struct	access:public
fdf	/usr/local/gsl/include/gsl/gsl_roots.h	/^    gsl_function_fdf * fdf ;$/;"	m	struct:__anon104	access:public
file	/usr/local/gsl/include/gsl/gsl_ntuple.h	/^    FILE * file;$/;"	m	struct:__anon13	access:public
fmax_l	/usr/local/gsl/include/gsl/gsl_monte_miser.h	/^  double * fmax_l;$/;"	m	struct:__anon4	access:public
fmax_r	/usr/local/gsl/include/gsl/gsl_monte_miser.h	/^  double * fmax_r;$/;"	m	struct:__anon4	access:public
fmin_l	/usr/local/gsl/include/gsl/gsl_monte_miser.h	/^  double * fmin_l;$/;"	m	struct:__anon4	access:public
fmin_r	/usr/local/gsl/include/gsl/gsl_monte_miser.h	/^  double * fmin_r;$/;"	m	struct:__anon4	access:public
forward	/usr/local/gsl/include/gsl/gsl_fft.h	/^    forward = -1, backward = +1,$/;"	e	enum:__anon157
forward	/usr/local/gsl/include/gsl/gsl_wavelet.h	/^  forward = 1, backward = -1,$/;"	e	enum:__anon164
francis_workspace_p	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  gsl_eigen_francis_workspace *francis_workspace_p;$/;"	m	struct:__anon81	access:public
free	/usr/local/gsl/include/gsl/gsl_interp.h	/^  void    (*free)         (void *);$/;"	m	struct:__anon173	access:public
free	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	/^    void (*free) (void *state);$/;"	m	struct:__anon6	access:public
free	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	/^    void (*free) (void *state);$/;"	m	struct:__anon8	access:public
free	/usr/local/gsl/include/gsl/gsl_multimin.h	/^  void (*free) (void *state);$/;"	m	struct:__anon111	access:public
free	/usr/local/gsl/include/gsl/gsl_multimin.h	/^  void (*free) (void *state);$/;"	m	struct:__anon113	access:public
free	/usr/local/gsl/include/gsl/gsl_multiroots.h	/^    void (*free) (void *state);$/;"	m	struct:__anon178	access:public
free	/usr/local/gsl/include/gsl/gsl_multiroots.h	/^    void (*free) (void *state);$/;"	m	struct:__anon180	access:public
free	/usr/local/gsl/include/gsl/gsl_odeiv.h	/^  void (*free)  (void * state);$/;"	m	struct:__anon96	access:public
free	/usr/local/gsl/include/gsl/gsl_odeiv.h	/^  void (*free) (void * state);$/;"	m	struct:__anon98	access:public
fsum2_l	/usr/local/gsl/include/gsl/gsl_monte_miser.h	/^  double * fsum2_l;$/;"	m	struct:__anon4	access:public
fsum2_r	/usr/local/gsl/include/gsl/gsl_monte_miser.h	/^  double * fsum2_r;$/;"	m	struct:__anon4	access:public
fsum_l	/usr/local/gsl/include/gsl/gsl_monte_miser.h	/^  double * fsum_l;$/;"	m	struct:__anon4	access:public
fsum_r	/usr/local/gsl/include/gsl/gsl_monte_miser.h	/^  double * fsum_r;$/;"	m	struct:__anon4	access:public
function	/usr/local/gsl/include/gsl/gsl_math.h	/^  double (* function) (double x, void * params);$/;"	m	struct:gsl_function_struct	access:public
function	/usr/local/gsl/include/gsl/gsl_math.h	/^  int (* function) (double x, double y[], void * params);$/;"	m	struct:gsl_function_vec_struct	access:public
function	/usr/local/gsl/include/gsl/gsl_min.h	/^    gsl_function * function ;$/;"	m	struct:__anon147	access:public
function	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	/^    gsl_multifit_function * function ;$/;"	m	struct:__anon7	access:public
function	/usr/local/gsl/include/gsl/gsl_multiroots.h	/^    gsl_multiroot_function * function ;$/;"	m	struct:__anon179	access:public
function	/usr/local/gsl/include/gsl/gsl_ntuple.h	/^  double (* function) (void * ntuple_data, void * params);$/;"	m	struct:__anon15	access:public
function	/usr/local/gsl/include/gsl/gsl_ntuple.h	/^  int (* function) (void * ntuple_data, void * params);$/;"	m	struct:__anon14	access:public
function	/usr/local/gsl/include/gsl/gsl_odeiv.h	/^  int (* function) (double t, const double y[], double dydt[], void * params);$/;"	m	struct:__anon95	access:public
function	/usr/local/gsl/include/gsl/gsl_roots.h	/^    gsl_function * function ;$/;"	m	struct:__anon102	access:public
fval	/usr/local/gsl/include/gsl/gsl_multimin.h	/^  double fval;$/;"	m	struct:__anon112	access:public
g1	/usr/local/gsl/include/gsl/gsl_wavelet.h	/^  const double *g1;$/;"	m	struct:__anon166	access:public
g2	/usr/local/gsl/include/gsl/gsl_wavelet.h	/^  const double *g2;$/;"	m	struct:__anon166	access:public
gc	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  double * gc;$/;"	m	struct:__anon77	access:public
gc	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  double * gc;$/;"	m	struct:__anon79	access:public
gen_workspace_p	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  gsl_eigen_gen_workspace *gen_workspace_p;$/;"	m	struct:__anon88	access:public
get	/usr/local/gsl/include/gsl/gsl_qrng.h	/^  int (*get) (void * state, unsigned int dimension, double x[]);$/;"	m	struct:__anon168	access:public
get	/usr/local/gsl/include/gsl/gsl_rng.h	/^    unsigned long int (*get) (void *state);$/;"	m	struct:__anon93	access:public
get_double	/usr/local/gsl/include/gsl/gsl_rng.h	/^    double (*get_double) (void *state);$/;"	m	struct:__anon93	access:public
gives_exact_dydt_out	/usr/local/gsl/include/gsl/gsl_odeiv.h	/^  int gives_exact_dydt_out;$/;"	m	struct:__anon96	access:public
gradient	/usr/local/gsl/include/gsl/gsl_multimin.h	/^  gsl_vector * gradient;$/;"	m	struct:__anon114	access:public
gs	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  double * gs;$/;"	m	struct:__anon77	access:public
gs	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  double * gs;$/;"	m	struct:__anon79	access:public
gsl_acosh	/usr/local/gsl/include/gsl/gsl_sys.h	/^double gsl_acosh (const double x);$/;"	p	signature:(const double x)
gsl_asinh	/usr/local/gsl/include/gsl/gsl_sys.h	/^double gsl_asinh (const double x);$/;"	p	signature:(const double x)
gsl_atanh	/usr/local/gsl/include/gsl/gsl_sys.h	/^double gsl_atanh (const double x);$/;"	p	signature:(const double x)
gsl_blas_caxpy	/usr/local/gsl/include/gsl/gsl_blas.h	/^int  gsl_blas_caxpy (const gsl_complex_float alpha,$/;"	p	signature:(const gsl_complex_float alpha, const gsl_vector_complex_float * X, gsl_vector_complex_float * Y)
gsl_blas_ccopy	/usr/local/gsl/include/gsl/gsl_blas.h	/^int  gsl_blas_ccopy (const gsl_vector_complex_float * X,$/;"	p	signature:(const gsl_vector_complex_float * X, gsl_vector_complex_float * Y)
gsl_blas_cdotc	/usr/local/gsl/include/gsl/gsl_blas.h	/^int  gsl_blas_cdotc (const gsl_vector_complex_float * X,$/;"	p	signature:(const gsl_vector_complex_float * X, const gsl_vector_complex_float * Y, gsl_complex_float * dotc)
gsl_blas_cdotu	/usr/local/gsl/include/gsl/gsl_blas.h	/^int  gsl_blas_cdotu (const gsl_vector_complex_float * X,$/;"	p	signature:(const gsl_vector_complex_float * X, const gsl_vector_complex_float * Y, gsl_complex_float * dotu)
gsl_blas_cgemm	/usr/local/gsl/include/gsl/gsl_blas.h	/^int  gsl_blas_cgemm (CBLAS_TRANSPOSE_t TransA,$/;"	p	signature:(CBLAS_TRANSPOSE_t TransA, CBLAS_TRANSPOSE_t TransB, const gsl_complex_float alpha, const gsl_matrix_complex_float * A, const gsl_matrix_complex_float * B, const gsl_complex_float beta, gsl_matrix_complex_float * C)
gsl_blas_cgemv	/usr/local/gsl/include/gsl/gsl_blas.h	/^int  gsl_blas_cgemv (CBLAS_TRANSPOSE_t TransA,$/;"	p	signature:(CBLAS_TRANSPOSE_t TransA, const gsl_complex_float alpha, const gsl_matrix_complex_float * A, const gsl_vector_complex_float * X, const gsl_complex_float beta, gsl_vector_complex_float * Y)
gsl_blas_cgerc	/usr/local/gsl/include/gsl/gsl_blas.h	/^int  gsl_blas_cgerc (const gsl_complex_float alpha,$/;"	p	signature:(const gsl_complex_float alpha, const gsl_vector_complex_float * X, const gsl_vector_complex_float * Y, gsl_matrix_complex_float * A)
gsl_blas_cgeru	/usr/local/gsl/include/gsl/gsl_blas.h	/^int  gsl_blas_cgeru (const gsl_complex_float alpha,$/;"	p	signature:(const gsl_complex_float alpha, const gsl_vector_complex_float * X, const gsl_vector_complex_float * Y, gsl_matrix_complex_float * A)
gsl_blas_chemm	/usr/local/gsl/include/gsl/gsl_blas.h	/^int  gsl_blas_chemm (CBLAS_SIDE_t Side,$/;"	p	signature:(CBLAS_SIDE_t Side, CBLAS_UPLO_t Uplo, const gsl_complex_float alpha, const gsl_matrix_complex_float * A, const gsl_matrix_complex_float * B, const gsl_complex_float beta, gsl_matrix_complex_float * C)
gsl_blas_chemv	/usr/local/gsl/include/gsl/gsl_blas.h	/^int  gsl_blas_chemv (CBLAS_UPLO_t Uplo,$/;"	p	signature:(CBLAS_UPLO_t Uplo, const gsl_complex_float alpha, const gsl_matrix_complex_float * A, const gsl_vector_complex_float * X, const gsl_complex_float beta, gsl_vector_complex_float * Y)
gsl_blas_cher	/usr/local/gsl/include/gsl/gsl_blas.h	/^int  gsl_blas_cher (CBLAS_UPLO_t Uplo,$/;"	p	signature:(CBLAS_UPLO_t Uplo, float alpha, const gsl_vector_complex_float * X, gsl_matrix_complex_float * A)
gsl_blas_cher2	/usr/local/gsl/include/gsl/gsl_blas.h	/^int  gsl_blas_cher2 (CBLAS_UPLO_t Uplo,$/;"	p	signature:(CBLAS_UPLO_t Uplo, const gsl_complex_float alpha, const gsl_vector_complex_float * X, const gsl_vector_complex_float * Y, gsl_matrix_complex_float * A)
gsl_blas_cher2k	/usr/local/gsl/include/gsl/gsl_blas.h	/^int  gsl_blas_cher2k (CBLAS_UPLO_t Uplo,$/;"	p	signature:(CBLAS_UPLO_t Uplo, CBLAS_TRANSPOSE_t Trans, const gsl_complex_float alpha, const gsl_matrix_complex_float * A, const gsl_matrix_complex_float * B, float beta, gsl_matrix_complex_float * C)
gsl_blas_cherk	/usr/local/gsl/include/gsl/gsl_blas.h	/^int  gsl_blas_cherk (CBLAS_UPLO_t Uplo,$/;"	p	signature:(CBLAS_UPLO_t Uplo, CBLAS_TRANSPOSE_t Trans, float alpha, const gsl_matrix_complex_float * A, float beta, gsl_matrix_complex_float * C)
gsl_blas_cscal	/usr/local/gsl/include/gsl/gsl_blas.h	/^void gsl_blas_cscal  (const gsl_complex_float alpha, gsl_vector_complex_float * X);$/;"	p	signature:(const gsl_complex_float alpha, gsl_vector_complex_float * X)
gsl_blas_csscal	/usr/local/gsl/include/gsl/gsl_blas.h	/^void gsl_blas_csscal (float  alpha, gsl_vector_complex_float * X);$/;"	p	signature:(float alpha, gsl_vector_complex_float * X)
gsl_blas_cswap	/usr/local/gsl/include/gsl/gsl_blas.h	/^int  gsl_blas_cswap (gsl_vector_complex_float * X,$/;"	p	signature:(gsl_vector_complex_float * X, gsl_vector_complex_float * Y)
gsl_blas_csymm	/usr/local/gsl/include/gsl/gsl_blas.h	/^int  gsl_blas_csymm (CBLAS_SIDE_t Side,$/;"	p	signature:(CBLAS_SIDE_t Side, CBLAS_UPLO_t Uplo, const gsl_complex_float alpha, const gsl_matrix_complex_float * A, const gsl_matrix_complex_float * B, const gsl_complex_float beta, gsl_matrix_complex_float * C)
gsl_blas_csyr2k	/usr/local/gsl/include/gsl/gsl_blas.h	/^int  gsl_blas_csyr2k (CBLAS_UPLO_t Uplo,$/;"	p	signature:(CBLAS_UPLO_t Uplo, CBLAS_TRANSPOSE_t Trans, const gsl_complex_float alpha, const gsl_matrix_complex_float * A, const gsl_matrix_complex_float * B, const gsl_complex_float beta, gsl_matrix_complex_float * C)
gsl_blas_csyrk	/usr/local/gsl/include/gsl/gsl_blas.h	/^int  gsl_blas_csyrk (CBLAS_UPLO_t Uplo,$/;"	p	signature:(CBLAS_UPLO_t Uplo, CBLAS_TRANSPOSE_t Trans, const gsl_complex_float alpha, const gsl_matrix_complex_float * A, const gsl_complex_float beta, gsl_matrix_complex_float * C)
gsl_blas_ctrmm	/usr/local/gsl/include/gsl/gsl_blas.h	/^int  gsl_blas_ctrmm (CBLAS_SIDE_t Side,$/;"	p	signature:(CBLAS_SIDE_t Side, CBLAS_UPLO_t Uplo, CBLAS_TRANSPOSE_t TransA, CBLAS_DIAG_t Diag, const gsl_complex_float alpha, const gsl_matrix_complex_float * A, gsl_matrix_complex_float * B)
gsl_blas_ctrmv	/usr/local/gsl/include/gsl/gsl_blas.h	/^int  gsl_blas_ctrmv (CBLAS_UPLO_t Uplo,$/;"	p	signature:(CBLAS_UPLO_t Uplo, CBLAS_TRANSPOSE_t TransA, CBLAS_DIAG_t Diag, const gsl_matrix_complex_float * A, gsl_vector_complex_float * X)
gsl_blas_ctrsm	/usr/local/gsl/include/gsl/gsl_blas.h	/^int  gsl_blas_ctrsm (CBLAS_SIDE_t Side,$/;"	p	signature:(CBLAS_SIDE_t Side, CBLAS_UPLO_t Uplo, CBLAS_TRANSPOSE_t TransA, CBLAS_DIAG_t Diag, const gsl_complex_float alpha, const gsl_matrix_complex_float * A, gsl_matrix_complex_float * B)
gsl_blas_ctrsv	/usr/local/gsl/include/gsl/gsl_blas.h	/^int  gsl_blas_ctrsv (CBLAS_UPLO_t Uplo,$/;"	p	signature:(CBLAS_UPLO_t Uplo, CBLAS_TRANSPOSE_t TransA, CBLAS_DIAG_t Diag, const gsl_matrix_complex_float * A, gsl_vector_complex_float * X)
gsl_blas_dasum	/usr/local/gsl/include/gsl/gsl_blas.h	/^double gsl_blas_dasum  (const gsl_vector * X);$/;"	p	signature:(const gsl_vector * X)
gsl_blas_daxpy	/usr/local/gsl/include/gsl/gsl_blas.h	/^int  gsl_blas_daxpy (double alpha,$/;"	p	signature:(double alpha, const gsl_vector * X, gsl_vector * Y)
gsl_blas_dcopy	/usr/local/gsl/include/gsl/gsl_blas.h	/^int  gsl_blas_dcopy (const gsl_vector * X,$/;"	p	signature:(const gsl_vector * X, gsl_vector * Y)
gsl_blas_ddot	/usr/local/gsl/include/gsl/gsl_blas.h	/^int gsl_blas_ddot (const gsl_vector * X,$/;"	p	signature:(const gsl_vector * X, const gsl_vector * Y, double * result )
gsl_blas_dgemm	/usr/local/gsl/include/gsl/gsl_blas.h	/^int  gsl_blas_dgemm (CBLAS_TRANSPOSE_t TransA,$/;"	p	signature:(CBLAS_TRANSPOSE_t TransA, CBLAS_TRANSPOSE_t TransB, double alpha, const gsl_matrix * A, const gsl_matrix * B, double beta, gsl_matrix * C)
gsl_blas_dgemv	/usr/local/gsl/include/gsl/gsl_blas.h	/^int  gsl_blas_dgemv (CBLAS_TRANSPOSE_t TransA,$/;"	p	signature:(CBLAS_TRANSPOSE_t TransA, double alpha, const gsl_matrix * A, const gsl_vector * X, double beta, gsl_vector * Y)
gsl_blas_dger	/usr/local/gsl/include/gsl/gsl_blas.h	/^int  gsl_blas_dger (double alpha,$/;"	p	signature:(double alpha, const gsl_vector * X, const gsl_vector * Y, gsl_matrix * A)
gsl_blas_dnrm2	/usr/local/gsl/include/gsl/gsl_blas.h	/^double gsl_blas_dnrm2  (const gsl_vector * X);$/;"	p	signature:(const gsl_vector * X)
gsl_blas_drot	/usr/local/gsl/include/gsl/gsl_blas.h	/^int  gsl_blas_drot (gsl_vector * X,$/;"	p	signature:(gsl_vector * X, gsl_vector * Y, const double c, const double s)
gsl_blas_drotg	/usr/local/gsl/include/gsl/gsl_blas.h	/^int  gsl_blas_drotg (double a[], double b[], double c[], double s[]);$/;"	p	signature:(double a[], double b[], double c[], double s[])
gsl_blas_drotm	/usr/local/gsl/include/gsl/gsl_blas.h	/^int  gsl_blas_drotm (gsl_vector * X,$/;"	p	signature:(gsl_vector * X, gsl_vector * Y, const double P[])
gsl_blas_drotmg	/usr/local/gsl/include/gsl/gsl_blas.h	/^int  gsl_blas_drotmg (double d1[], double d2[], double b1[],$/;"	p	signature:(double d1[], double d2[], double b1[], double b2, double P[])
gsl_blas_dscal	/usr/local/gsl/include/gsl/gsl_blas.h	/^void gsl_blas_dscal  (double alpha, gsl_vector * X);$/;"	p	signature:(double alpha, gsl_vector * X)
gsl_blas_dsdot	/usr/local/gsl/include/gsl/gsl_blas.h	/^int gsl_blas_dsdot (const gsl_vector_float * X,$/;"	p	signature:(const gsl_vector_float * X, const gsl_vector_float * Y, double * result )
gsl_blas_dswap	/usr/local/gsl/include/gsl/gsl_blas.h	/^int  gsl_blas_dswap (gsl_vector * X,$/;"	p	signature:(gsl_vector * X, gsl_vector * Y)
gsl_blas_dsymm	/usr/local/gsl/include/gsl/gsl_blas.h	/^int  gsl_blas_dsymm (CBLAS_SIDE_t Side,$/;"	p	signature:(CBLAS_SIDE_t Side, CBLAS_UPLO_t Uplo, double alpha, const gsl_matrix * A, const gsl_matrix * B, double beta, gsl_matrix * C)
gsl_blas_dsymv	/usr/local/gsl/include/gsl/gsl_blas.h	/^int  gsl_blas_dsymv (CBLAS_UPLO_t Uplo,$/;"	p	signature:(CBLAS_UPLO_t Uplo, double alpha, const gsl_matrix * A, const gsl_vector * X, double beta, gsl_vector * Y)
gsl_blas_dsyr	/usr/local/gsl/include/gsl/gsl_blas.h	/^int  gsl_blas_dsyr (CBLAS_UPLO_t Uplo,$/;"	p	signature:(CBLAS_UPLO_t Uplo, double alpha, const gsl_vector * X, gsl_matrix * A)
gsl_blas_dsyr2	/usr/local/gsl/include/gsl/gsl_blas.h	/^int  gsl_blas_dsyr2 (CBLAS_UPLO_t Uplo,$/;"	p	signature:(CBLAS_UPLO_t Uplo, double alpha, const gsl_vector * X, const gsl_vector * Y, gsl_matrix * A)
gsl_blas_dsyr2k	/usr/local/gsl/include/gsl/gsl_blas.h	/^int  gsl_blas_dsyr2k (CBLAS_UPLO_t Uplo,$/;"	p	signature:(CBLAS_UPLO_t Uplo, CBLAS_TRANSPOSE_t Trans, double alpha, const gsl_matrix * A, const gsl_matrix * B, double beta, gsl_matrix * C)
gsl_blas_dsyrk	/usr/local/gsl/include/gsl/gsl_blas.h	/^int  gsl_blas_dsyrk (CBLAS_UPLO_t Uplo,$/;"	p	signature:(CBLAS_UPLO_t Uplo, CBLAS_TRANSPOSE_t Trans, double alpha, const gsl_matrix * A, double beta, gsl_matrix * C)
gsl_blas_dtrmm	/usr/local/gsl/include/gsl/gsl_blas.h	/^int  gsl_blas_dtrmm (CBLAS_SIDE_t Side,$/;"	p	signature:(CBLAS_SIDE_t Side, CBLAS_UPLO_t Uplo, CBLAS_TRANSPOSE_t TransA, CBLAS_DIAG_t Diag, double alpha, const gsl_matrix * A, gsl_matrix * B)
gsl_blas_dtrmv	/usr/local/gsl/include/gsl/gsl_blas.h	/^int  gsl_blas_dtrmv (CBLAS_UPLO_t Uplo,$/;"	p	signature:(CBLAS_UPLO_t Uplo, CBLAS_TRANSPOSE_t TransA, CBLAS_DIAG_t Diag, const gsl_matrix * A, gsl_vector * X)
gsl_blas_dtrsm	/usr/local/gsl/include/gsl/gsl_blas.h	/^int  gsl_blas_dtrsm (CBLAS_SIDE_t Side,$/;"	p	signature:(CBLAS_SIDE_t Side, CBLAS_UPLO_t Uplo, CBLAS_TRANSPOSE_t TransA, CBLAS_DIAG_t Diag, double alpha, const gsl_matrix * A, gsl_matrix * B)
gsl_blas_dtrsv	/usr/local/gsl/include/gsl/gsl_blas.h	/^int  gsl_blas_dtrsv (CBLAS_UPLO_t Uplo,$/;"	p	signature:(CBLAS_UPLO_t Uplo, CBLAS_TRANSPOSE_t TransA, CBLAS_DIAG_t Diag, const gsl_matrix * A, gsl_vector * X)
gsl_blas_dzasum	/usr/local/gsl/include/gsl/gsl_blas.h	/^double gsl_blas_dzasum (const gsl_vector_complex * X);$/;"	p	signature:(const gsl_vector_complex * X)
gsl_blas_dznrm2	/usr/local/gsl/include/gsl/gsl_blas.h	/^double gsl_blas_dznrm2 (const gsl_vector_complex * X);$/;"	p	signature:(const gsl_vector_complex * X)
gsl_blas_icamax	/usr/local/gsl/include/gsl/gsl_blas.h	/^CBLAS_INDEX_t gsl_blas_icamax (const gsl_vector_complex_float * X);$/;"	p	signature:(const gsl_vector_complex_float * X)
gsl_blas_idamax	/usr/local/gsl/include/gsl/gsl_blas.h	/^CBLAS_INDEX_t gsl_blas_idamax (const gsl_vector * X);$/;"	p	signature:(const gsl_vector * X)
gsl_blas_isamax	/usr/local/gsl/include/gsl/gsl_blas.h	/^CBLAS_INDEX_t gsl_blas_isamax (const gsl_vector_float * X);$/;"	p	signature:(const gsl_vector_float * X)
gsl_blas_izamax	/usr/local/gsl/include/gsl/gsl_blas.h	/^CBLAS_INDEX_t gsl_blas_izamax (const gsl_vector_complex * X);$/;"	p	signature:(const gsl_vector_complex * X)
gsl_blas_sasum	/usr/local/gsl/include/gsl/gsl_blas.h	/^float  gsl_blas_sasum  (const gsl_vector_float * X);$/;"	p	signature:(const gsl_vector_float * X)
gsl_blas_saxpy	/usr/local/gsl/include/gsl/gsl_blas.h	/^int  gsl_blas_saxpy (float alpha,$/;"	p	signature:(float alpha, const gsl_vector_float * X, gsl_vector_float * Y)
gsl_blas_scasum	/usr/local/gsl/include/gsl/gsl_blas.h	/^float  gsl_blas_scasum (const gsl_vector_complex_float * X);$/;"	p	signature:(const gsl_vector_complex_float * X)
gsl_blas_scnrm2	/usr/local/gsl/include/gsl/gsl_blas.h	/^float  gsl_blas_scnrm2 (const gsl_vector_complex_float * X);$/;"	p	signature:(const gsl_vector_complex_float * X)
gsl_blas_scopy	/usr/local/gsl/include/gsl/gsl_blas.h	/^int  gsl_blas_scopy (const gsl_vector_float * X,$/;"	p	signature:(const gsl_vector_float * X, gsl_vector_float * Y)
gsl_blas_sdot	/usr/local/gsl/include/gsl/gsl_blas.h	/^int gsl_blas_sdot (const gsl_vector_float * X,$/;"	p	signature:(const gsl_vector_float * X, const gsl_vector_float * Y, float * result )
gsl_blas_sdsdot	/usr/local/gsl/include/gsl/gsl_blas.h	/^int gsl_blas_sdsdot (float alpha,$/;"	p	signature:(float alpha, const gsl_vector_float * X, const gsl_vector_float * Y, float * result )
gsl_blas_sgemm	/usr/local/gsl/include/gsl/gsl_blas.h	/^int  gsl_blas_sgemm (CBLAS_TRANSPOSE_t TransA,$/;"	p	signature:(CBLAS_TRANSPOSE_t TransA, CBLAS_TRANSPOSE_t TransB, float alpha, const gsl_matrix_float * A, const gsl_matrix_float * B, float beta, gsl_matrix_float * C)
gsl_blas_sgemv	/usr/local/gsl/include/gsl/gsl_blas.h	/^int  gsl_blas_sgemv (CBLAS_TRANSPOSE_t TransA,$/;"	p	signature:(CBLAS_TRANSPOSE_t TransA, float alpha, const gsl_matrix_float * A, const gsl_vector_float * X, float beta, gsl_vector_float * Y)
gsl_blas_sger	/usr/local/gsl/include/gsl/gsl_blas.h	/^int  gsl_blas_sger (float alpha,$/;"	p	signature:(float alpha, const gsl_vector_float * X, const gsl_vector_float * Y, gsl_matrix_float * A)
gsl_blas_snrm2	/usr/local/gsl/include/gsl/gsl_blas.h	/^float  gsl_blas_snrm2  (const gsl_vector_float * X);$/;"	p	signature:(const gsl_vector_float * X)
gsl_blas_srot	/usr/local/gsl/include/gsl/gsl_blas.h	/^int  gsl_blas_srot (gsl_vector_float * X,$/;"	p	signature:(gsl_vector_float * X, gsl_vector_float * Y, float c, float s)
gsl_blas_srotg	/usr/local/gsl/include/gsl/gsl_blas.h	/^int  gsl_blas_srotg (float a[], float b[], float c[], float s[]);$/;"	p	signature:(float a[], float b[], float c[], float s[])
gsl_blas_srotm	/usr/local/gsl/include/gsl/gsl_blas.h	/^int  gsl_blas_srotm (gsl_vector_float * X,$/;"	p	signature:(gsl_vector_float * X, gsl_vector_float * Y, const float P[])
gsl_blas_srotmg	/usr/local/gsl/include/gsl/gsl_blas.h	/^int  gsl_blas_srotmg (float d1[], float d2[], float b1[], float b2, float P[]);$/;"	p	signature:(float d1[], float d2[], float b1[], float b2, float P[])
gsl_blas_sscal	/usr/local/gsl/include/gsl/gsl_blas.h	/^void gsl_blas_sscal  (float  alpha, gsl_vector_float * X);$/;"	p	signature:(float alpha, gsl_vector_float * X)
gsl_blas_sswap	/usr/local/gsl/include/gsl/gsl_blas.h	/^int  gsl_blas_sswap (gsl_vector_float * X,$/;"	p	signature:(gsl_vector_float * X, gsl_vector_float * Y)
gsl_blas_ssymm	/usr/local/gsl/include/gsl/gsl_blas.h	/^int  gsl_blas_ssymm (CBLAS_SIDE_t Side, CBLAS_UPLO_t Uplo,$/;"	p	signature:(CBLAS_SIDE_t Side, CBLAS_UPLO_t Uplo, float alpha, const gsl_matrix_float * A, const gsl_matrix_float * B, float beta, gsl_matrix_float * C)
gsl_blas_ssymv	/usr/local/gsl/include/gsl/gsl_blas.h	/^int  gsl_blas_ssymv (CBLAS_UPLO_t Uplo,$/;"	p	signature:(CBLAS_UPLO_t Uplo, float alpha, const gsl_matrix_float * A, const gsl_vector_float * X, float beta, gsl_vector_float * Y)
gsl_blas_ssyr	/usr/local/gsl/include/gsl/gsl_blas.h	/^int  gsl_blas_ssyr (CBLAS_UPLO_t Uplo,$/;"	p	signature:(CBLAS_UPLO_t Uplo, float alpha, const gsl_vector_float * X, gsl_matrix_float * A)
gsl_blas_ssyr2	/usr/local/gsl/include/gsl/gsl_blas.h	/^int  gsl_blas_ssyr2 (CBLAS_UPLO_t Uplo,$/;"	p	signature:(CBLAS_UPLO_t Uplo, float alpha, const gsl_vector_float * X, const gsl_vector_float * Y, gsl_matrix_float * A)
gsl_blas_ssyr2k	/usr/local/gsl/include/gsl/gsl_blas.h	/^int  gsl_blas_ssyr2k (CBLAS_UPLO_t Uplo, CBLAS_TRANSPOSE_t Trans,$/;"	p	signature:(CBLAS_UPLO_t Uplo, CBLAS_TRANSPOSE_t Trans, float alpha, const gsl_matrix_float * A, const gsl_matrix_float * B, float beta, gsl_matrix_float * C)
gsl_blas_ssyrk	/usr/local/gsl/include/gsl/gsl_blas.h	/^int  gsl_blas_ssyrk (CBLAS_UPLO_t Uplo, CBLAS_TRANSPOSE_t Trans,$/;"	p	signature:(CBLAS_UPLO_t Uplo, CBLAS_TRANSPOSE_t Trans, float alpha, const gsl_matrix_float * A, float beta, gsl_matrix_float * C)
gsl_blas_strmm	/usr/local/gsl/include/gsl/gsl_blas.h	/^int  gsl_blas_strmm (CBLAS_SIDE_t Side,$/;"	p	signature:(CBLAS_SIDE_t Side, CBLAS_UPLO_t Uplo, CBLAS_TRANSPOSE_t TransA, CBLAS_DIAG_t Diag, float alpha, const gsl_matrix_float * A, gsl_matrix_float * B)
gsl_blas_strmv	/usr/local/gsl/include/gsl/gsl_blas.h	/^int  gsl_blas_strmv (CBLAS_UPLO_t Uplo,$/;"	p	signature:(CBLAS_UPLO_t Uplo, CBLAS_TRANSPOSE_t TransA, CBLAS_DIAG_t Diag, const gsl_matrix_float * A, gsl_vector_float * X)
gsl_blas_strsm	/usr/local/gsl/include/gsl/gsl_blas.h	/^int  gsl_blas_strsm (CBLAS_SIDE_t Side,$/;"	p	signature:(CBLAS_SIDE_t Side, CBLAS_UPLO_t Uplo, CBLAS_TRANSPOSE_t TransA, CBLAS_DIAG_t Diag, float alpha, const gsl_matrix_float * A, gsl_matrix_float * B)
gsl_blas_strsv	/usr/local/gsl/include/gsl/gsl_blas.h	/^int  gsl_blas_strsv (CBLAS_UPLO_t Uplo,$/;"	p	signature:(CBLAS_UPLO_t Uplo, CBLAS_TRANSPOSE_t TransA, CBLAS_DIAG_t Diag, const gsl_matrix_float * A, gsl_vector_float * X)
gsl_blas_zaxpy	/usr/local/gsl/include/gsl/gsl_blas.h	/^int  gsl_blas_zaxpy (const gsl_complex alpha,$/;"	p	signature:(const gsl_complex alpha, const gsl_vector_complex * X, gsl_vector_complex * Y)
gsl_blas_zcopy	/usr/local/gsl/include/gsl/gsl_blas.h	/^int  gsl_blas_zcopy (const gsl_vector_complex * X,$/;"	p	signature:(const gsl_vector_complex * X, gsl_vector_complex * Y)
gsl_blas_zdotc	/usr/local/gsl/include/gsl/gsl_blas.h	/^int  gsl_blas_zdotc (const gsl_vector_complex * X,$/;"	p	signature:(const gsl_vector_complex * X, const gsl_vector_complex * Y, gsl_complex * dotc)
gsl_blas_zdotu	/usr/local/gsl/include/gsl/gsl_blas.h	/^int  gsl_blas_zdotu (const gsl_vector_complex * X,$/;"	p	signature:(const gsl_vector_complex * X, const gsl_vector_complex * Y, gsl_complex * dotu)
gsl_blas_zdscal	/usr/local/gsl/include/gsl/gsl_blas.h	/^void gsl_blas_zdscal (double alpha, gsl_vector_complex * X);$/;"	p	signature:(double alpha, gsl_vector_complex * X)
gsl_blas_zgemm	/usr/local/gsl/include/gsl/gsl_blas.h	/^int  gsl_blas_zgemm (CBLAS_TRANSPOSE_t TransA,$/;"	p	signature:(CBLAS_TRANSPOSE_t TransA, CBLAS_TRANSPOSE_t TransB, const gsl_complex alpha, const gsl_matrix_complex * A, const gsl_matrix_complex * B, const gsl_complex beta, gsl_matrix_complex * C)
gsl_blas_zgemv	/usr/local/gsl/include/gsl/gsl_blas.h	/^int  gsl_blas_zgemv (CBLAS_TRANSPOSE_t TransA,$/;"	p	signature:(CBLAS_TRANSPOSE_t TransA, const gsl_complex alpha, const gsl_matrix_complex * A, const gsl_vector_complex * X, const gsl_complex beta, gsl_vector_complex * Y)
gsl_blas_zgerc	/usr/local/gsl/include/gsl/gsl_blas.h	/^int  gsl_blas_zgerc (const gsl_complex alpha,$/;"	p	signature:(const gsl_complex alpha, const gsl_vector_complex * X, const gsl_vector_complex * Y, gsl_matrix_complex * A)
gsl_blas_zgeru	/usr/local/gsl/include/gsl/gsl_blas.h	/^int  gsl_blas_zgeru (const gsl_complex alpha,$/;"	p	signature:(const gsl_complex alpha, const gsl_vector_complex * X, const gsl_vector_complex * Y, gsl_matrix_complex * A)
gsl_blas_zhemm	/usr/local/gsl/include/gsl/gsl_blas.h	/^int  gsl_blas_zhemm (CBLAS_SIDE_t Side,$/;"	p	signature:(CBLAS_SIDE_t Side, CBLAS_UPLO_t Uplo, const gsl_complex alpha, const gsl_matrix_complex * A, const gsl_matrix_complex * B, const gsl_complex beta, gsl_matrix_complex * C)
gsl_blas_zhemv	/usr/local/gsl/include/gsl/gsl_blas.h	/^int  gsl_blas_zhemv (CBLAS_UPLO_t Uplo,$/;"	p	signature:(CBLAS_UPLO_t Uplo, const gsl_complex alpha, const gsl_matrix_complex * A, const gsl_vector_complex * X, const gsl_complex beta, gsl_vector_complex * Y)
gsl_blas_zher	/usr/local/gsl/include/gsl/gsl_blas.h	/^int  gsl_blas_zher (CBLAS_UPLO_t Uplo,$/;"	p	signature:(CBLAS_UPLO_t Uplo, double alpha, const gsl_vector_complex * X, gsl_matrix_complex * A)
gsl_blas_zher2	/usr/local/gsl/include/gsl/gsl_blas.h	/^int  gsl_blas_zher2 (CBLAS_UPLO_t Uplo,$/;"	p	signature:(CBLAS_UPLO_t Uplo, const gsl_complex alpha, const gsl_vector_complex * X, const gsl_vector_complex * Y, gsl_matrix_complex * A)
gsl_blas_zher2k	/usr/local/gsl/include/gsl/gsl_blas.h	/^int  gsl_blas_zher2k (CBLAS_UPLO_t Uplo,$/;"	p	signature:(CBLAS_UPLO_t Uplo, CBLAS_TRANSPOSE_t Trans, const gsl_complex alpha, const gsl_matrix_complex * A, const gsl_matrix_complex * B, double beta, gsl_matrix_complex * C)
gsl_blas_zherk	/usr/local/gsl/include/gsl/gsl_blas.h	/^int  gsl_blas_zherk (CBLAS_UPLO_t Uplo,$/;"	p	signature:(CBLAS_UPLO_t Uplo, CBLAS_TRANSPOSE_t Trans, double alpha, const gsl_matrix_complex * A, double beta, gsl_matrix_complex * C)
gsl_blas_zscal	/usr/local/gsl/include/gsl/gsl_blas.h	/^void gsl_blas_zscal  (const gsl_complex alpha, gsl_vector_complex * X);$/;"	p	signature:(const gsl_complex alpha, gsl_vector_complex * X)
gsl_blas_zswap	/usr/local/gsl/include/gsl/gsl_blas.h	/^int  gsl_blas_zswap (gsl_vector_complex * X,$/;"	p	signature:(gsl_vector_complex * X, gsl_vector_complex * Y)
gsl_blas_zsymm	/usr/local/gsl/include/gsl/gsl_blas.h	/^int  gsl_blas_zsymm (CBLAS_SIDE_t Side,$/;"	p	signature:(CBLAS_SIDE_t Side, CBLAS_UPLO_t Uplo, const gsl_complex alpha, const gsl_matrix_complex * A, const gsl_matrix_complex * B, const gsl_complex beta, gsl_matrix_complex * C)
gsl_blas_zsyr2k	/usr/local/gsl/include/gsl/gsl_blas.h	/^int  gsl_blas_zsyr2k (CBLAS_UPLO_t Uplo,$/;"	p	signature:(CBLAS_UPLO_t Uplo, CBLAS_TRANSPOSE_t Trans, const gsl_complex alpha, const gsl_matrix_complex * A, const gsl_matrix_complex * B, const gsl_complex beta, gsl_matrix_complex *C)
gsl_blas_zsyrk	/usr/local/gsl/include/gsl/gsl_blas.h	/^int  gsl_blas_zsyrk (CBLAS_UPLO_t Uplo,$/;"	p	signature:(CBLAS_UPLO_t Uplo, CBLAS_TRANSPOSE_t Trans, const gsl_complex alpha, const gsl_matrix_complex * A, const gsl_complex beta, gsl_matrix_complex * C)
gsl_blas_ztrmm	/usr/local/gsl/include/gsl/gsl_blas.h	/^int  gsl_blas_ztrmm (CBLAS_SIDE_t Side,$/;"	p	signature:(CBLAS_SIDE_t Side, CBLAS_UPLO_t Uplo, CBLAS_TRANSPOSE_t TransA, CBLAS_DIAG_t Diag, const gsl_complex alpha, const gsl_matrix_complex * A, gsl_matrix_complex * B)
gsl_blas_ztrmv	/usr/local/gsl/include/gsl/gsl_blas.h	/^int  gsl_blas_ztrmv (CBLAS_UPLO_t Uplo,$/;"	p	signature:(CBLAS_UPLO_t Uplo, CBLAS_TRANSPOSE_t TransA, CBLAS_DIAG_t Diag, const gsl_matrix_complex * A, gsl_vector_complex * X)
gsl_blas_ztrsm	/usr/local/gsl/include/gsl/gsl_blas.h	/^int  gsl_blas_ztrsm (CBLAS_SIDE_t Side,$/;"	p	signature:(CBLAS_SIDE_t Side, CBLAS_UPLO_t Uplo, CBLAS_TRANSPOSE_t TransA, CBLAS_DIAG_t Diag, const gsl_complex alpha, const gsl_matrix_complex * A, gsl_matrix_complex * B)
gsl_blas_ztrsv	/usr/local/gsl/include/gsl/gsl_blas.h	/^int  gsl_blas_ztrsv (CBLAS_UPLO_t Uplo,$/;"	p	signature:(CBLAS_UPLO_t Uplo, CBLAS_TRANSPOSE_t TransA, CBLAS_DIAG_t Diag, const gsl_matrix_complex * A, gsl_vector_complex *X)
gsl_block	/usr/local/gsl/include/gsl/gsl_block_double.h	/^typedef struct gsl_block_struct gsl_block;$/;"	t	typeref:struct:gsl_block_struct
gsl_block_alloc	/usr/local/gsl/include/gsl/gsl_block_double.h	/^gsl_block *gsl_block_alloc (const size_t n);$/;"	p	signature:(const size_t n)
gsl_block_calloc	/usr/local/gsl/include/gsl/gsl_block_double.h	/^gsl_block *gsl_block_calloc (const size_t n);$/;"	p	signature:(const size_t n)
gsl_block_char	/usr/local/gsl/include/gsl/gsl_block_char.h	/^typedef struct gsl_block_char_struct gsl_block_char;$/;"	t	typeref:struct:gsl_block_char_struct
gsl_block_char_alloc	/usr/local/gsl/include/gsl/gsl_block_char.h	/^gsl_block_char *gsl_block_char_alloc (const size_t n);$/;"	p	signature:(const size_t n)
gsl_block_char_calloc	/usr/local/gsl/include/gsl/gsl_block_char.h	/^gsl_block_char *gsl_block_char_calloc (const size_t n);$/;"	p	signature:(const size_t n)
gsl_block_char_data	/usr/local/gsl/include/gsl/gsl_block_char.h	/^char * gsl_block_char_data (const gsl_block_char * b);$/;"	p	signature:(const gsl_block_char * b)
gsl_block_char_fprintf	/usr/local/gsl/include/gsl/gsl_block_char.h	/^int gsl_block_char_fprintf (FILE * stream, const gsl_block_char * b, const char *format);$/;"	p	signature:(FILE * stream, const gsl_block_char * b, const char *format)
gsl_block_char_fread	/usr/local/gsl/include/gsl/gsl_block_char.h	/^int gsl_block_char_fread (FILE * stream, gsl_block_char * b);$/;"	p	signature:(FILE * stream, gsl_block_char * b)
gsl_block_char_free	/usr/local/gsl/include/gsl/gsl_block_char.h	/^void gsl_block_char_free (gsl_block_char * b);$/;"	p	signature:(gsl_block_char * b)
gsl_block_char_fscanf	/usr/local/gsl/include/gsl/gsl_block_char.h	/^int gsl_block_char_fscanf (FILE * stream, gsl_block_char * b);$/;"	p	signature:(FILE * stream, gsl_block_char * b)
gsl_block_char_fwrite	/usr/local/gsl/include/gsl/gsl_block_char.h	/^int gsl_block_char_fwrite (FILE * stream, const gsl_block_char * b);$/;"	p	signature:(FILE * stream, const gsl_block_char * b)
gsl_block_char_raw_fprintf	/usr/local/gsl/include/gsl/gsl_block_char.h	/^int gsl_block_char_raw_fprintf (FILE * stream, const char * b, const size_t n, const size_t stride, const char *format);$/;"	p	signature:(FILE * stream, const char * b, const size_t n, const size_t stride, const char *format)
gsl_block_char_raw_fread	/usr/local/gsl/include/gsl/gsl_block_char.h	/^int gsl_block_char_raw_fread (FILE * stream, char * b, const size_t n, const size_t stride);$/;"	p	signature:(FILE * stream, char * b, const size_t n, const size_t stride)
gsl_block_char_raw_fscanf	/usr/local/gsl/include/gsl/gsl_block_char.h	/^int gsl_block_char_raw_fscanf (FILE * stream, char * b, const size_t n, const size_t stride);$/;"	p	signature:(FILE * stream, char * b, const size_t n, const size_t stride)
gsl_block_char_raw_fwrite	/usr/local/gsl/include/gsl/gsl_block_char.h	/^int gsl_block_char_raw_fwrite (FILE * stream, const char * b, const size_t n, const size_t stride);$/;"	p	signature:(FILE * stream, const char * b, const size_t n, const size_t stride)
gsl_block_char_size	/usr/local/gsl/include/gsl/gsl_block_char.h	/^size_t gsl_block_char_size (const gsl_block_char * b);$/;"	p	signature:(const gsl_block_char * b)
gsl_block_char_struct	/usr/local/gsl/include/gsl/gsl_block_char.h	/^struct gsl_block_char_struct$/;"	s
gsl_block_char_struct::data	/usr/local/gsl/include/gsl/gsl_block_char.h	/^  char *data;$/;"	m	struct:gsl_block_char_struct	access:public
gsl_block_char_struct::size	/usr/local/gsl/include/gsl/gsl_block_char.h	/^  size_t size;$/;"	m	struct:gsl_block_char_struct	access:public
gsl_block_complex	/usr/local/gsl/include/gsl/gsl_block_complex_double.h	/^typedef struct gsl_block_complex_struct gsl_block_complex;$/;"	t	typeref:struct:gsl_block_complex_struct
gsl_block_complex_alloc	/usr/local/gsl/include/gsl/gsl_block_complex_double.h	/^gsl_block_complex *gsl_block_complex_alloc (const size_t n);$/;"	p	signature:(const size_t n)
gsl_block_complex_calloc	/usr/local/gsl/include/gsl/gsl_block_complex_double.h	/^gsl_block_complex *gsl_block_complex_calloc (const size_t n);$/;"	p	signature:(const size_t n)
gsl_block_complex_data	/usr/local/gsl/include/gsl/gsl_block_complex_double.h	/^double * gsl_block_complex_data (const gsl_block_complex * b);$/;"	p	signature:(const gsl_block_complex * b)
gsl_block_complex_float	/usr/local/gsl/include/gsl/gsl_block_complex_float.h	/^typedef struct gsl_block_complex_float_struct gsl_block_complex_float;$/;"	t	typeref:struct:gsl_block_complex_float_struct
gsl_block_complex_float_alloc	/usr/local/gsl/include/gsl/gsl_block_complex_float.h	/^gsl_block_complex_float *gsl_block_complex_float_alloc (const size_t n);$/;"	p	signature:(const size_t n)
gsl_block_complex_float_calloc	/usr/local/gsl/include/gsl/gsl_block_complex_float.h	/^gsl_block_complex_float *gsl_block_complex_float_calloc (const size_t n);$/;"	p	signature:(const size_t n)
gsl_block_complex_float_data	/usr/local/gsl/include/gsl/gsl_block_complex_float.h	/^float * gsl_block_complex_float_data (const gsl_block_complex_float * b);$/;"	p	signature:(const gsl_block_complex_float * b)
gsl_block_complex_float_fprintf	/usr/local/gsl/include/gsl/gsl_block_complex_float.h	/^int gsl_block_complex_float_fprintf (FILE * stream, const gsl_block_complex_float * b, const char *format);$/;"	p	signature:(FILE * stream, const gsl_block_complex_float * b, const char *format)
gsl_block_complex_float_fread	/usr/local/gsl/include/gsl/gsl_block_complex_float.h	/^int gsl_block_complex_float_fread (FILE * stream, gsl_block_complex_float * b);$/;"	p	signature:(FILE * stream, gsl_block_complex_float * b)
gsl_block_complex_float_free	/usr/local/gsl/include/gsl/gsl_block_complex_float.h	/^void gsl_block_complex_float_free (gsl_block_complex_float * b);$/;"	p	signature:(gsl_block_complex_float * b)
gsl_block_complex_float_fscanf	/usr/local/gsl/include/gsl/gsl_block_complex_float.h	/^int gsl_block_complex_float_fscanf (FILE * stream, gsl_block_complex_float * b);$/;"	p	signature:(FILE * stream, gsl_block_complex_float * b)
gsl_block_complex_float_fwrite	/usr/local/gsl/include/gsl/gsl_block_complex_float.h	/^int gsl_block_complex_float_fwrite (FILE * stream, const gsl_block_complex_float * b);$/;"	p	signature:(FILE * stream, const gsl_block_complex_float * b)
gsl_block_complex_float_raw_fprintf	/usr/local/gsl/include/gsl/gsl_block_complex_float.h	/^int gsl_block_complex_float_raw_fprintf (FILE * stream, const float * b, const size_t n, const size_t stride, const char *format);$/;"	p	signature:(FILE * stream, const float * b, const size_t n, const size_t stride, const char *format)
gsl_block_complex_float_raw_fread	/usr/local/gsl/include/gsl/gsl_block_complex_float.h	/^int gsl_block_complex_float_raw_fread (FILE * stream, float * b, const size_t n, const size_t stride);$/;"	p	signature:(FILE * stream, float * b, const size_t n, const size_t stride)
gsl_block_complex_float_raw_fscanf	/usr/local/gsl/include/gsl/gsl_block_complex_float.h	/^int gsl_block_complex_float_raw_fscanf (FILE * stream, float * b, const size_t n, const size_t stride);$/;"	p	signature:(FILE * stream, float * b, const size_t n, const size_t stride)
gsl_block_complex_float_raw_fwrite	/usr/local/gsl/include/gsl/gsl_block_complex_float.h	/^int gsl_block_complex_float_raw_fwrite (FILE * stream, const float * b, const size_t n, const size_t stride);$/;"	p	signature:(FILE * stream, const float * b, const size_t n, const size_t stride)
gsl_block_complex_float_size	/usr/local/gsl/include/gsl/gsl_block_complex_float.h	/^size_t gsl_block_complex_float_size (const gsl_block_complex_float * b);$/;"	p	signature:(const gsl_block_complex_float * b)
gsl_block_complex_float_struct	/usr/local/gsl/include/gsl/gsl_block_complex_float.h	/^struct gsl_block_complex_float_struct$/;"	s
gsl_block_complex_float_struct::data	/usr/local/gsl/include/gsl/gsl_block_complex_float.h	/^  float *data;$/;"	m	struct:gsl_block_complex_float_struct	access:public
gsl_block_complex_float_struct::size	/usr/local/gsl/include/gsl/gsl_block_complex_float.h	/^  size_t size;$/;"	m	struct:gsl_block_complex_float_struct	access:public
gsl_block_complex_fprintf	/usr/local/gsl/include/gsl/gsl_block_complex_double.h	/^int gsl_block_complex_fprintf (FILE * stream, const gsl_block_complex * b, const char *format);$/;"	p	signature:(FILE * stream, const gsl_block_complex * b, const char *format)
gsl_block_complex_fread	/usr/local/gsl/include/gsl/gsl_block_complex_double.h	/^int gsl_block_complex_fread (FILE * stream, gsl_block_complex * b);$/;"	p	signature:(FILE * stream, gsl_block_complex * b)
gsl_block_complex_free	/usr/local/gsl/include/gsl/gsl_block_complex_double.h	/^void gsl_block_complex_free (gsl_block_complex * b);$/;"	p	signature:(gsl_block_complex * b)
gsl_block_complex_fscanf	/usr/local/gsl/include/gsl/gsl_block_complex_double.h	/^int gsl_block_complex_fscanf (FILE * stream, gsl_block_complex * b);$/;"	p	signature:(FILE * stream, gsl_block_complex * b)
gsl_block_complex_fwrite	/usr/local/gsl/include/gsl/gsl_block_complex_double.h	/^int gsl_block_complex_fwrite (FILE * stream, const gsl_block_complex * b);$/;"	p	signature:(FILE * stream, const gsl_block_complex * b)
gsl_block_complex_long_double	/usr/local/gsl/include/gsl/gsl_block_complex_long_double.h	/^typedef struct gsl_block_complex_long_double_struct gsl_block_complex_long_double;$/;"	t	typeref:struct:gsl_block_complex_long_double_struct
gsl_block_complex_long_double_alloc	/usr/local/gsl/include/gsl/gsl_block_complex_long_double.h	/^gsl_block_complex_long_double *gsl_block_complex_long_double_alloc (const size_t n);$/;"	p	signature:(const size_t n)
gsl_block_complex_long_double_calloc	/usr/local/gsl/include/gsl/gsl_block_complex_long_double.h	/^gsl_block_complex_long_double *gsl_block_complex_long_double_calloc (const size_t n);$/;"	p	signature:(const size_t n)
gsl_block_complex_long_double_data	/usr/local/gsl/include/gsl/gsl_block_complex_long_double.h	/^long double * gsl_block_complex_long_double_data (const gsl_block_complex_long_double * b);$/;"	p	signature:(const gsl_block_complex_long_double * b)
gsl_block_complex_long_double_fprintf	/usr/local/gsl/include/gsl/gsl_block_complex_long_double.h	/^int gsl_block_complex_long_double_fprintf (FILE * stream, const gsl_block_complex_long_double * b, const char *format);$/;"	p	signature:(FILE * stream, const gsl_block_complex_long_double * b, const char *format)
gsl_block_complex_long_double_fread	/usr/local/gsl/include/gsl/gsl_block_complex_long_double.h	/^int gsl_block_complex_long_double_fread (FILE * stream, gsl_block_complex_long_double * b);$/;"	p	signature:(FILE * stream, gsl_block_complex_long_double * b)
gsl_block_complex_long_double_free	/usr/local/gsl/include/gsl/gsl_block_complex_long_double.h	/^void gsl_block_complex_long_double_free (gsl_block_complex_long_double * b);$/;"	p	signature:(gsl_block_complex_long_double * b)
gsl_block_complex_long_double_fscanf	/usr/local/gsl/include/gsl/gsl_block_complex_long_double.h	/^int gsl_block_complex_long_double_fscanf (FILE * stream, gsl_block_complex_long_double * b);$/;"	p	signature:(FILE * stream, gsl_block_complex_long_double * b)
gsl_block_complex_long_double_fwrite	/usr/local/gsl/include/gsl/gsl_block_complex_long_double.h	/^int gsl_block_complex_long_double_fwrite (FILE * stream, const gsl_block_complex_long_double * b);$/;"	p	signature:(FILE * stream, const gsl_block_complex_long_double * b)
gsl_block_complex_long_double_raw_fprintf	/usr/local/gsl/include/gsl/gsl_block_complex_long_double.h	/^int gsl_block_complex_long_double_raw_fprintf (FILE * stream, const long double * b, const size_t n, const size_t stride, const char *format);$/;"	p	signature:(FILE * stream, const long double * b, const size_t n, const size_t stride, const char *format)
gsl_block_complex_long_double_raw_fread	/usr/local/gsl/include/gsl/gsl_block_complex_long_double.h	/^int gsl_block_complex_long_double_raw_fread (FILE * stream, long double * b, const size_t n, const size_t stride);$/;"	p	signature:(FILE * stream, long double * b, const size_t n, const size_t stride)
gsl_block_complex_long_double_raw_fscanf	/usr/local/gsl/include/gsl/gsl_block_complex_long_double.h	/^int gsl_block_complex_long_double_raw_fscanf (FILE * stream, long double * b, const size_t n, const size_t stride);$/;"	p	signature:(FILE * stream, long double * b, const size_t n, const size_t stride)
gsl_block_complex_long_double_raw_fwrite	/usr/local/gsl/include/gsl/gsl_block_complex_long_double.h	/^int gsl_block_complex_long_double_raw_fwrite (FILE * stream, const long double * b, const size_t n, const size_t stride);$/;"	p	signature:(FILE * stream, const long double * b, const size_t n, const size_t stride)
gsl_block_complex_long_double_size	/usr/local/gsl/include/gsl/gsl_block_complex_long_double.h	/^size_t gsl_block_complex_long_double_size (const gsl_block_complex_long_double * b);$/;"	p	signature:(const gsl_block_complex_long_double * b)
gsl_block_complex_long_double_struct	/usr/local/gsl/include/gsl/gsl_block_complex_long_double.h	/^struct gsl_block_complex_long_double_struct$/;"	s
gsl_block_complex_long_double_struct::data	/usr/local/gsl/include/gsl/gsl_block_complex_long_double.h	/^  long double *data;$/;"	m	struct:gsl_block_complex_long_double_struct	access:public
gsl_block_complex_long_double_struct::size	/usr/local/gsl/include/gsl/gsl_block_complex_long_double.h	/^  size_t size;$/;"	m	struct:gsl_block_complex_long_double_struct	access:public
gsl_block_complex_raw_fprintf	/usr/local/gsl/include/gsl/gsl_block_complex_double.h	/^int gsl_block_complex_raw_fprintf (FILE * stream, const double * b, const size_t n, const size_t stride, const char *format);$/;"	p	signature:(FILE * stream, const double * b, const size_t n, const size_t stride, const char *format)
gsl_block_complex_raw_fread	/usr/local/gsl/include/gsl/gsl_block_complex_double.h	/^int gsl_block_complex_raw_fread (FILE * stream, double * b, const size_t n, const size_t stride);$/;"	p	signature:(FILE * stream, double * b, const size_t n, const size_t stride)
gsl_block_complex_raw_fscanf	/usr/local/gsl/include/gsl/gsl_block_complex_double.h	/^int gsl_block_complex_raw_fscanf (FILE * stream, double * b, const size_t n, const size_t stride);$/;"	p	signature:(FILE * stream, double * b, const size_t n, const size_t stride)
gsl_block_complex_raw_fwrite	/usr/local/gsl/include/gsl/gsl_block_complex_double.h	/^int gsl_block_complex_raw_fwrite (FILE * stream, const double * b, const size_t n, const size_t stride);$/;"	p	signature:(FILE * stream, const double * b, const size_t n, const size_t stride)
gsl_block_complex_size	/usr/local/gsl/include/gsl/gsl_block_complex_double.h	/^size_t gsl_block_complex_size (const gsl_block_complex * b);$/;"	p	signature:(const gsl_block_complex * b)
gsl_block_complex_struct	/usr/local/gsl/include/gsl/gsl_block_complex_double.h	/^struct gsl_block_complex_struct$/;"	s
gsl_block_complex_struct::data	/usr/local/gsl/include/gsl/gsl_block_complex_double.h	/^  double *data;$/;"	m	struct:gsl_block_complex_struct	access:public
gsl_block_complex_struct::size	/usr/local/gsl/include/gsl/gsl_block_complex_double.h	/^  size_t size;$/;"	m	struct:gsl_block_complex_struct	access:public
gsl_block_data	/usr/local/gsl/include/gsl/gsl_block_double.h	/^double * gsl_block_data (const gsl_block * b);$/;"	p	signature:(const gsl_block * b)
gsl_block_float	/usr/local/gsl/include/gsl/gsl_block_float.h	/^typedef struct gsl_block_float_struct gsl_block_float;$/;"	t	typeref:struct:gsl_block_float_struct
gsl_block_float_alloc	/usr/local/gsl/include/gsl/gsl_block_float.h	/^gsl_block_float *gsl_block_float_alloc (const size_t n);$/;"	p	signature:(const size_t n)
gsl_block_float_calloc	/usr/local/gsl/include/gsl/gsl_block_float.h	/^gsl_block_float *gsl_block_float_calloc (const size_t n);$/;"	p	signature:(const size_t n)
gsl_block_float_data	/usr/local/gsl/include/gsl/gsl_block_float.h	/^float * gsl_block_float_data (const gsl_block_float * b);$/;"	p	signature:(const gsl_block_float * b)
gsl_block_float_fprintf	/usr/local/gsl/include/gsl/gsl_block_float.h	/^int gsl_block_float_fprintf (FILE * stream, const gsl_block_float * b, const char *format);$/;"	p	signature:(FILE * stream, const gsl_block_float * b, const char *format)
gsl_block_float_fread	/usr/local/gsl/include/gsl/gsl_block_float.h	/^int gsl_block_float_fread (FILE * stream, gsl_block_float * b);$/;"	p	signature:(FILE * stream, gsl_block_float * b)
gsl_block_float_free	/usr/local/gsl/include/gsl/gsl_block_float.h	/^void gsl_block_float_free (gsl_block_float * b);$/;"	p	signature:(gsl_block_float * b)
gsl_block_float_fscanf	/usr/local/gsl/include/gsl/gsl_block_float.h	/^int gsl_block_float_fscanf (FILE * stream, gsl_block_float * b);$/;"	p	signature:(FILE * stream, gsl_block_float * b)
gsl_block_float_fwrite	/usr/local/gsl/include/gsl/gsl_block_float.h	/^int gsl_block_float_fwrite (FILE * stream, const gsl_block_float * b);$/;"	p	signature:(FILE * stream, const gsl_block_float * b)
gsl_block_float_raw_fprintf	/usr/local/gsl/include/gsl/gsl_block_float.h	/^int gsl_block_float_raw_fprintf (FILE * stream, const float * b, const size_t n, const size_t stride, const char *format);$/;"	p	signature:(FILE * stream, const float * b, const size_t n, const size_t stride, const char *format)
gsl_block_float_raw_fread	/usr/local/gsl/include/gsl/gsl_block_float.h	/^int gsl_block_float_raw_fread (FILE * stream, float * b, const size_t n, const size_t stride);$/;"	p	signature:(FILE * stream, float * b, const size_t n, const size_t stride)
gsl_block_float_raw_fscanf	/usr/local/gsl/include/gsl/gsl_block_float.h	/^int gsl_block_float_raw_fscanf (FILE * stream, float * b, const size_t n, const size_t stride);$/;"	p	signature:(FILE * stream, float * b, const size_t n, const size_t stride)
gsl_block_float_raw_fwrite	/usr/local/gsl/include/gsl/gsl_block_float.h	/^int gsl_block_float_raw_fwrite (FILE * stream, const float * b, const size_t n, const size_t stride);$/;"	p	signature:(FILE * stream, const float * b, const size_t n, const size_t stride)
gsl_block_float_size	/usr/local/gsl/include/gsl/gsl_block_float.h	/^size_t gsl_block_float_size (const gsl_block_float * b);$/;"	p	signature:(const gsl_block_float * b)
gsl_block_float_struct	/usr/local/gsl/include/gsl/gsl_block_float.h	/^struct gsl_block_float_struct$/;"	s
gsl_block_float_struct::data	/usr/local/gsl/include/gsl/gsl_block_float.h	/^  float *data;$/;"	m	struct:gsl_block_float_struct	access:public
gsl_block_float_struct::size	/usr/local/gsl/include/gsl/gsl_block_float.h	/^  size_t size;$/;"	m	struct:gsl_block_float_struct	access:public
gsl_block_fprintf	/usr/local/gsl/include/gsl/gsl_block_double.h	/^int gsl_block_fprintf (FILE * stream, const gsl_block * b, const char *format);$/;"	p	signature:(FILE * stream, const gsl_block * b, const char *format)
gsl_block_fread	/usr/local/gsl/include/gsl/gsl_block_double.h	/^int gsl_block_fread (FILE * stream, gsl_block * b);$/;"	p	signature:(FILE * stream, gsl_block * b)
gsl_block_free	/usr/local/gsl/include/gsl/gsl_block_double.h	/^void gsl_block_free (gsl_block * b);$/;"	p	signature:(gsl_block * b)
gsl_block_fscanf	/usr/local/gsl/include/gsl/gsl_block_double.h	/^int gsl_block_fscanf (FILE * stream, gsl_block * b);$/;"	p	signature:(FILE * stream, gsl_block * b)
gsl_block_fwrite	/usr/local/gsl/include/gsl/gsl_block_double.h	/^int gsl_block_fwrite (FILE * stream, const gsl_block * b);$/;"	p	signature:(FILE * stream, const gsl_block * b)
gsl_block_int	/usr/local/gsl/include/gsl/gsl_block_int.h	/^typedef struct gsl_block_int_struct gsl_block_int;$/;"	t	typeref:struct:gsl_block_int_struct
gsl_block_int_alloc	/usr/local/gsl/include/gsl/gsl_block_int.h	/^gsl_block_int *gsl_block_int_alloc (const size_t n);$/;"	p	signature:(const size_t n)
gsl_block_int_calloc	/usr/local/gsl/include/gsl/gsl_block_int.h	/^gsl_block_int *gsl_block_int_calloc (const size_t n);$/;"	p	signature:(const size_t n)
gsl_block_int_data	/usr/local/gsl/include/gsl/gsl_block_int.h	/^int * gsl_block_int_data (const gsl_block_int * b);$/;"	p	signature:(const gsl_block_int * b)
gsl_block_int_fprintf	/usr/local/gsl/include/gsl/gsl_block_int.h	/^int gsl_block_int_fprintf (FILE * stream, const gsl_block_int * b, const char *format);$/;"	p	signature:(FILE * stream, const gsl_block_int * b, const char *format)
gsl_block_int_fread	/usr/local/gsl/include/gsl/gsl_block_int.h	/^int gsl_block_int_fread (FILE * stream, gsl_block_int * b);$/;"	p	signature:(FILE * stream, gsl_block_int * b)
gsl_block_int_free	/usr/local/gsl/include/gsl/gsl_block_int.h	/^void gsl_block_int_free (gsl_block_int * b);$/;"	p	signature:(gsl_block_int * b)
gsl_block_int_fscanf	/usr/local/gsl/include/gsl/gsl_block_int.h	/^int gsl_block_int_fscanf (FILE * stream, gsl_block_int * b);$/;"	p	signature:(FILE * stream, gsl_block_int * b)
gsl_block_int_fwrite	/usr/local/gsl/include/gsl/gsl_block_int.h	/^int gsl_block_int_fwrite (FILE * stream, const gsl_block_int * b);$/;"	p	signature:(FILE * stream, const gsl_block_int * b)
gsl_block_int_raw_fprintf	/usr/local/gsl/include/gsl/gsl_block_int.h	/^int gsl_block_int_raw_fprintf (FILE * stream, const int * b, const size_t n, const size_t stride, const char *format);$/;"	p	signature:(FILE * stream, const int * b, const size_t n, const size_t stride, const char *format)
gsl_block_int_raw_fread	/usr/local/gsl/include/gsl/gsl_block_int.h	/^int gsl_block_int_raw_fread (FILE * stream, int * b, const size_t n, const size_t stride);$/;"	p	signature:(FILE * stream, int * b, const size_t n, const size_t stride)
gsl_block_int_raw_fscanf	/usr/local/gsl/include/gsl/gsl_block_int.h	/^int gsl_block_int_raw_fscanf (FILE * stream, int * b, const size_t n, const size_t stride);$/;"	p	signature:(FILE * stream, int * b, const size_t n, const size_t stride)
gsl_block_int_raw_fwrite	/usr/local/gsl/include/gsl/gsl_block_int.h	/^int gsl_block_int_raw_fwrite (FILE * stream, const int * b, const size_t n, const size_t stride);$/;"	p	signature:(FILE * stream, const int * b, const size_t n, const size_t stride)
gsl_block_int_size	/usr/local/gsl/include/gsl/gsl_block_int.h	/^size_t gsl_block_int_size (const gsl_block_int * b);$/;"	p	signature:(const gsl_block_int * b)
gsl_block_int_struct	/usr/local/gsl/include/gsl/gsl_block_int.h	/^struct gsl_block_int_struct$/;"	s
gsl_block_int_struct::data	/usr/local/gsl/include/gsl/gsl_block_int.h	/^  int *data;$/;"	m	struct:gsl_block_int_struct	access:public
gsl_block_int_struct::size	/usr/local/gsl/include/gsl/gsl_block_int.h	/^  size_t size;$/;"	m	struct:gsl_block_int_struct	access:public
gsl_block_long	/usr/local/gsl/include/gsl/gsl_block_long.h	/^typedef struct gsl_block_long_struct gsl_block_long;$/;"	t	typeref:struct:gsl_block_long_struct
gsl_block_long_alloc	/usr/local/gsl/include/gsl/gsl_block_long.h	/^gsl_block_long *gsl_block_long_alloc (const size_t n);$/;"	p	signature:(const size_t n)
gsl_block_long_calloc	/usr/local/gsl/include/gsl/gsl_block_long.h	/^gsl_block_long *gsl_block_long_calloc (const size_t n);$/;"	p	signature:(const size_t n)
gsl_block_long_data	/usr/local/gsl/include/gsl/gsl_block_long.h	/^long * gsl_block_long_data (const gsl_block_long * b);$/;"	p	signature:(const gsl_block_long * b)
gsl_block_long_double	/usr/local/gsl/include/gsl/gsl_block_long_double.h	/^typedef struct gsl_block_long_double_struct gsl_block_long_double;$/;"	t	typeref:struct:gsl_block_long_double_struct
gsl_block_long_double_alloc	/usr/local/gsl/include/gsl/gsl_block_long_double.h	/^gsl_block_long_double *gsl_block_long_double_alloc (const size_t n);$/;"	p	signature:(const size_t n)
gsl_block_long_double_calloc	/usr/local/gsl/include/gsl/gsl_block_long_double.h	/^gsl_block_long_double *gsl_block_long_double_calloc (const size_t n);$/;"	p	signature:(const size_t n)
gsl_block_long_double_data	/usr/local/gsl/include/gsl/gsl_block_long_double.h	/^long double * gsl_block_long_double_data (const gsl_block_long_double * b);$/;"	p	signature:(const gsl_block_long_double * b)
gsl_block_long_double_fprintf	/usr/local/gsl/include/gsl/gsl_block_long_double.h	/^int gsl_block_long_double_fprintf (FILE * stream, const gsl_block_long_double * b, const char *format);$/;"	p	signature:(FILE * stream, const gsl_block_long_double * b, const char *format)
gsl_block_long_double_fread	/usr/local/gsl/include/gsl/gsl_block_long_double.h	/^int gsl_block_long_double_fread (FILE * stream, gsl_block_long_double * b);$/;"	p	signature:(FILE * stream, gsl_block_long_double * b)
gsl_block_long_double_free	/usr/local/gsl/include/gsl/gsl_block_long_double.h	/^void gsl_block_long_double_free (gsl_block_long_double * b);$/;"	p	signature:(gsl_block_long_double * b)
gsl_block_long_double_fscanf	/usr/local/gsl/include/gsl/gsl_block_long_double.h	/^int gsl_block_long_double_fscanf (FILE * stream, gsl_block_long_double * b);$/;"	p	signature:(FILE * stream, gsl_block_long_double * b)
gsl_block_long_double_fwrite	/usr/local/gsl/include/gsl/gsl_block_long_double.h	/^int gsl_block_long_double_fwrite (FILE * stream, const gsl_block_long_double * b);$/;"	p	signature:(FILE * stream, const gsl_block_long_double * b)
gsl_block_long_double_raw_fprintf	/usr/local/gsl/include/gsl/gsl_block_long_double.h	/^int gsl_block_long_double_raw_fprintf (FILE * stream, const long double * b, const size_t n, const size_t stride, const char *format);$/;"	p	signature:(FILE * stream, const long double * b, const size_t n, const size_t stride, const char *format)
gsl_block_long_double_raw_fread	/usr/local/gsl/include/gsl/gsl_block_long_double.h	/^int gsl_block_long_double_raw_fread (FILE * stream, long double * b, const size_t n, const size_t stride);$/;"	p	signature:(FILE * stream, long double * b, const size_t n, const size_t stride)
gsl_block_long_double_raw_fscanf	/usr/local/gsl/include/gsl/gsl_block_long_double.h	/^int gsl_block_long_double_raw_fscanf (FILE * stream, long double * b, const size_t n, const size_t stride);$/;"	p	signature:(FILE * stream, long double * b, const size_t n, const size_t stride)
gsl_block_long_double_raw_fwrite	/usr/local/gsl/include/gsl/gsl_block_long_double.h	/^int gsl_block_long_double_raw_fwrite (FILE * stream, const long double * b, const size_t n, const size_t stride);$/;"	p	signature:(FILE * stream, const long double * b, const size_t n, const size_t stride)
gsl_block_long_double_size	/usr/local/gsl/include/gsl/gsl_block_long_double.h	/^size_t gsl_block_long_double_size (const gsl_block_long_double * b);$/;"	p	signature:(const gsl_block_long_double * b)
gsl_block_long_double_struct	/usr/local/gsl/include/gsl/gsl_block_long_double.h	/^struct gsl_block_long_double_struct$/;"	s
gsl_block_long_double_struct::data	/usr/local/gsl/include/gsl/gsl_block_long_double.h	/^  long double *data;$/;"	m	struct:gsl_block_long_double_struct	access:public
gsl_block_long_double_struct::size	/usr/local/gsl/include/gsl/gsl_block_long_double.h	/^  size_t size;$/;"	m	struct:gsl_block_long_double_struct	access:public
gsl_block_long_fprintf	/usr/local/gsl/include/gsl/gsl_block_long.h	/^int gsl_block_long_fprintf (FILE * stream, const gsl_block_long * b, const char *format);$/;"	p	signature:(FILE * stream, const gsl_block_long * b, const char *format)
gsl_block_long_fread	/usr/local/gsl/include/gsl/gsl_block_long.h	/^int gsl_block_long_fread (FILE * stream, gsl_block_long * b);$/;"	p	signature:(FILE * stream, gsl_block_long * b)
gsl_block_long_free	/usr/local/gsl/include/gsl/gsl_block_long.h	/^void gsl_block_long_free (gsl_block_long * b);$/;"	p	signature:(gsl_block_long * b)
gsl_block_long_fscanf	/usr/local/gsl/include/gsl/gsl_block_long.h	/^int gsl_block_long_fscanf (FILE * stream, gsl_block_long * b);$/;"	p	signature:(FILE * stream, gsl_block_long * b)
gsl_block_long_fwrite	/usr/local/gsl/include/gsl/gsl_block_long.h	/^int gsl_block_long_fwrite (FILE * stream, const gsl_block_long * b);$/;"	p	signature:(FILE * stream, const gsl_block_long * b)
gsl_block_long_raw_fprintf	/usr/local/gsl/include/gsl/gsl_block_long.h	/^int gsl_block_long_raw_fprintf (FILE * stream, const long * b, const size_t n, const size_t stride, const char *format);$/;"	p	signature:(FILE * stream, const long * b, const size_t n, const size_t stride, const char *format)
gsl_block_long_raw_fread	/usr/local/gsl/include/gsl/gsl_block_long.h	/^int gsl_block_long_raw_fread (FILE * stream, long * b, const size_t n, const size_t stride);$/;"	p	signature:(FILE * stream, long * b, const size_t n, const size_t stride)
gsl_block_long_raw_fscanf	/usr/local/gsl/include/gsl/gsl_block_long.h	/^int gsl_block_long_raw_fscanf (FILE * stream, long * b, const size_t n, const size_t stride);$/;"	p	signature:(FILE * stream, long * b, const size_t n, const size_t stride)
gsl_block_long_raw_fwrite	/usr/local/gsl/include/gsl/gsl_block_long.h	/^int gsl_block_long_raw_fwrite (FILE * stream, const long * b, const size_t n, const size_t stride);$/;"	p	signature:(FILE * stream, const long * b, const size_t n, const size_t stride)
gsl_block_long_size	/usr/local/gsl/include/gsl/gsl_block_long.h	/^size_t gsl_block_long_size (const gsl_block_long * b);$/;"	p	signature:(const gsl_block_long * b)
gsl_block_long_struct	/usr/local/gsl/include/gsl/gsl_block_long.h	/^struct gsl_block_long_struct$/;"	s
gsl_block_long_struct::data	/usr/local/gsl/include/gsl/gsl_block_long.h	/^  long *data;$/;"	m	struct:gsl_block_long_struct	access:public
gsl_block_long_struct::size	/usr/local/gsl/include/gsl/gsl_block_long.h	/^  size_t size;$/;"	m	struct:gsl_block_long_struct	access:public
gsl_block_raw_fprintf	/usr/local/gsl/include/gsl/gsl_block_double.h	/^int gsl_block_raw_fprintf (FILE * stream, const double * b, const size_t n, const size_t stride, const char *format);$/;"	p	signature:(FILE * stream, const double * b, const size_t n, const size_t stride, const char *format)
gsl_block_raw_fread	/usr/local/gsl/include/gsl/gsl_block_double.h	/^int gsl_block_raw_fread (FILE * stream, double * b, const size_t n, const size_t stride);$/;"	p	signature:(FILE * stream, double * b, const size_t n, const size_t stride)
gsl_block_raw_fscanf	/usr/local/gsl/include/gsl/gsl_block_double.h	/^int gsl_block_raw_fscanf (FILE * stream, double * b, const size_t n, const size_t stride);$/;"	p	signature:(FILE * stream, double * b, const size_t n, const size_t stride)
gsl_block_raw_fwrite	/usr/local/gsl/include/gsl/gsl_block_double.h	/^int gsl_block_raw_fwrite (FILE * stream, const double * b, const size_t n, const size_t stride);$/;"	p	signature:(FILE * stream, const double * b, const size_t n, const size_t stride)
gsl_block_short	/usr/local/gsl/include/gsl/gsl_block_short.h	/^typedef struct gsl_block_short_struct gsl_block_short;$/;"	t	typeref:struct:gsl_block_short_struct
gsl_block_short_alloc	/usr/local/gsl/include/gsl/gsl_block_short.h	/^gsl_block_short *gsl_block_short_alloc (const size_t n);$/;"	p	signature:(const size_t n)
gsl_block_short_calloc	/usr/local/gsl/include/gsl/gsl_block_short.h	/^gsl_block_short *gsl_block_short_calloc (const size_t n);$/;"	p	signature:(const size_t n)
gsl_block_short_data	/usr/local/gsl/include/gsl/gsl_block_short.h	/^short * gsl_block_short_data (const gsl_block_short * b);$/;"	p	signature:(const gsl_block_short * b)
gsl_block_short_fprintf	/usr/local/gsl/include/gsl/gsl_block_short.h	/^int gsl_block_short_fprintf (FILE * stream, const gsl_block_short * b, const char *format);$/;"	p	signature:(FILE * stream, const gsl_block_short * b, const char *format)
gsl_block_short_fread	/usr/local/gsl/include/gsl/gsl_block_short.h	/^int gsl_block_short_fread (FILE * stream, gsl_block_short * b);$/;"	p	signature:(FILE * stream, gsl_block_short * b)
gsl_block_short_free	/usr/local/gsl/include/gsl/gsl_block_short.h	/^void gsl_block_short_free (gsl_block_short * b);$/;"	p	signature:(gsl_block_short * b)
gsl_block_short_fscanf	/usr/local/gsl/include/gsl/gsl_block_short.h	/^int gsl_block_short_fscanf (FILE * stream, gsl_block_short * b);$/;"	p	signature:(FILE * stream, gsl_block_short * b)
gsl_block_short_fwrite	/usr/local/gsl/include/gsl/gsl_block_short.h	/^int gsl_block_short_fwrite (FILE * stream, const gsl_block_short * b);$/;"	p	signature:(FILE * stream, const gsl_block_short * b)
gsl_block_short_raw_fprintf	/usr/local/gsl/include/gsl/gsl_block_short.h	/^int gsl_block_short_raw_fprintf (FILE * stream, const short * b, const size_t n, const size_t stride, const char *format);$/;"	p	signature:(FILE * stream, const short * b, const size_t n, const size_t stride, const char *format)
gsl_block_short_raw_fread	/usr/local/gsl/include/gsl/gsl_block_short.h	/^int gsl_block_short_raw_fread (FILE * stream, short * b, const size_t n, const size_t stride);$/;"	p	signature:(FILE * stream, short * b, const size_t n, const size_t stride)
gsl_block_short_raw_fscanf	/usr/local/gsl/include/gsl/gsl_block_short.h	/^int gsl_block_short_raw_fscanf (FILE * stream, short * b, const size_t n, const size_t stride);$/;"	p	signature:(FILE * stream, short * b, const size_t n, const size_t stride)
gsl_block_short_raw_fwrite	/usr/local/gsl/include/gsl/gsl_block_short.h	/^int gsl_block_short_raw_fwrite (FILE * stream, const short * b, const size_t n, const size_t stride);$/;"	p	signature:(FILE * stream, const short * b, const size_t n, const size_t stride)
gsl_block_short_size	/usr/local/gsl/include/gsl/gsl_block_short.h	/^size_t gsl_block_short_size (const gsl_block_short * b);$/;"	p	signature:(const gsl_block_short * b)
gsl_block_short_struct	/usr/local/gsl/include/gsl/gsl_block_short.h	/^struct gsl_block_short_struct$/;"	s
gsl_block_short_struct::data	/usr/local/gsl/include/gsl/gsl_block_short.h	/^  short *data;$/;"	m	struct:gsl_block_short_struct	access:public
gsl_block_short_struct::size	/usr/local/gsl/include/gsl/gsl_block_short.h	/^  size_t size;$/;"	m	struct:gsl_block_short_struct	access:public
gsl_block_size	/usr/local/gsl/include/gsl/gsl_block_double.h	/^size_t gsl_block_size (const gsl_block * b);$/;"	p	signature:(const gsl_block * b)
gsl_block_struct	/usr/local/gsl/include/gsl/gsl_block_double.h	/^struct gsl_block_struct$/;"	s
gsl_block_struct::data	/usr/local/gsl/include/gsl/gsl_block_double.h	/^  double *data;$/;"	m	struct:gsl_block_struct	access:public
gsl_block_struct::size	/usr/local/gsl/include/gsl/gsl_block_double.h	/^  size_t size;$/;"	m	struct:gsl_block_struct	access:public
gsl_block_uchar	/usr/local/gsl/include/gsl/gsl_block_uchar.h	/^typedef struct gsl_block_uchar_struct gsl_block_uchar;$/;"	t	typeref:struct:gsl_block_uchar_struct
gsl_block_uchar_alloc	/usr/local/gsl/include/gsl/gsl_block_uchar.h	/^gsl_block_uchar *gsl_block_uchar_alloc (const size_t n);$/;"	p	signature:(const size_t n)
gsl_block_uchar_calloc	/usr/local/gsl/include/gsl/gsl_block_uchar.h	/^gsl_block_uchar *gsl_block_uchar_calloc (const size_t n);$/;"	p	signature:(const size_t n)
gsl_block_uchar_data	/usr/local/gsl/include/gsl/gsl_block_uchar.h	/^unsigned char * gsl_block_uchar_data (const gsl_block_uchar * b);$/;"	p	signature:(const gsl_block_uchar * b)
gsl_block_uchar_fprintf	/usr/local/gsl/include/gsl/gsl_block_uchar.h	/^int gsl_block_uchar_fprintf (FILE * stream, const gsl_block_uchar * b, const char *format);$/;"	p	signature:(FILE * stream, const gsl_block_uchar * b, const char *format)
gsl_block_uchar_fread	/usr/local/gsl/include/gsl/gsl_block_uchar.h	/^int gsl_block_uchar_fread (FILE * stream, gsl_block_uchar * b);$/;"	p	signature:(FILE * stream, gsl_block_uchar * b)
gsl_block_uchar_free	/usr/local/gsl/include/gsl/gsl_block_uchar.h	/^void gsl_block_uchar_free (gsl_block_uchar * b);$/;"	p	signature:(gsl_block_uchar * b)
gsl_block_uchar_fscanf	/usr/local/gsl/include/gsl/gsl_block_uchar.h	/^int gsl_block_uchar_fscanf (FILE * stream, gsl_block_uchar * b);$/;"	p	signature:(FILE * stream, gsl_block_uchar * b)
gsl_block_uchar_fwrite	/usr/local/gsl/include/gsl/gsl_block_uchar.h	/^int gsl_block_uchar_fwrite (FILE * stream, const gsl_block_uchar * b);$/;"	p	signature:(FILE * stream, const gsl_block_uchar * b)
gsl_block_uchar_raw_fprintf	/usr/local/gsl/include/gsl/gsl_block_uchar.h	/^int gsl_block_uchar_raw_fprintf (FILE * stream, const unsigned char * b, const size_t n, const size_t stride, const char *format);$/;"	p	signature:(FILE * stream, const unsigned char * b, const size_t n, const size_t stride, const char *format)
gsl_block_uchar_raw_fread	/usr/local/gsl/include/gsl/gsl_block_uchar.h	/^int gsl_block_uchar_raw_fread (FILE * stream, unsigned char * b, const size_t n, const size_t stride);$/;"	p	signature:(FILE * stream, unsigned char * b, const size_t n, const size_t stride)
gsl_block_uchar_raw_fscanf	/usr/local/gsl/include/gsl/gsl_block_uchar.h	/^int gsl_block_uchar_raw_fscanf (FILE * stream, unsigned char * b, const size_t n, const size_t stride);$/;"	p	signature:(FILE * stream, unsigned char * b, const size_t n, const size_t stride)
gsl_block_uchar_raw_fwrite	/usr/local/gsl/include/gsl/gsl_block_uchar.h	/^int gsl_block_uchar_raw_fwrite (FILE * stream, const unsigned char * b, const size_t n, const size_t stride);$/;"	p	signature:(FILE * stream, const unsigned char * b, const size_t n, const size_t stride)
gsl_block_uchar_size	/usr/local/gsl/include/gsl/gsl_block_uchar.h	/^size_t gsl_block_uchar_size (const gsl_block_uchar * b);$/;"	p	signature:(const gsl_block_uchar * b)
gsl_block_uchar_struct	/usr/local/gsl/include/gsl/gsl_block_uchar.h	/^struct gsl_block_uchar_struct$/;"	s
gsl_block_uchar_struct::data	/usr/local/gsl/include/gsl/gsl_block_uchar.h	/^  unsigned char *data;$/;"	m	struct:gsl_block_uchar_struct	access:public
gsl_block_uchar_struct::size	/usr/local/gsl/include/gsl/gsl_block_uchar.h	/^  size_t size;$/;"	m	struct:gsl_block_uchar_struct	access:public
gsl_block_uint	/usr/local/gsl/include/gsl/gsl_block_uint.h	/^typedef struct gsl_block_uint_struct gsl_block_uint;$/;"	t	typeref:struct:gsl_block_uint_struct
gsl_block_uint_alloc	/usr/local/gsl/include/gsl/gsl_block_uint.h	/^gsl_block_uint *gsl_block_uint_alloc (const size_t n);$/;"	p	signature:(const size_t n)
gsl_block_uint_calloc	/usr/local/gsl/include/gsl/gsl_block_uint.h	/^gsl_block_uint *gsl_block_uint_calloc (const size_t n);$/;"	p	signature:(const size_t n)
gsl_block_uint_data	/usr/local/gsl/include/gsl/gsl_block_uint.h	/^unsigned int * gsl_block_uint_data (const gsl_block_uint * b);$/;"	p	signature:(const gsl_block_uint * b)
gsl_block_uint_fprintf	/usr/local/gsl/include/gsl/gsl_block_uint.h	/^int gsl_block_uint_fprintf (FILE * stream, const gsl_block_uint * b, const char *format);$/;"	p	signature:(FILE * stream, const gsl_block_uint * b, const char *format)
gsl_block_uint_fread	/usr/local/gsl/include/gsl/gsl_block_uint.h	/^int gsl_block_uint_fread (FILE * stream, gsl_block_uint * b);$/;"	p	signature:(FILE * stream, gsl_block_uint * b)
gsl_block_uint_free	/usr/local/gsl/include/gsl/gsl_block_uint.h	/^void gsl_block_uint_free (gsl_block_uint * b);$/;"	p	signature:(gsl_block_uint * b)
gsl_block_uint_fscanf	/usr/local/gsl/include/gsl/gsl_block_uint.h	/^int gsl_block_uint_fscanf (FILE * stream, gsl_block_uint * b);$/;"	p	signature:(FILE * stream, gsl_block_uint * b)
gsl_block_uint_fwrite	/usr/local/gsl/include/gsl/gsl_block_uint.h	/^int gsl_block_uint_fwrite (FILE * stream, const gsl_block_uint * b);$/;"	p	signature:(FILE * stream, const gsl_block_uint * b)
gsl_block_uint_raw_fprintf	/usr/local/gsl/include/gsl/gsl_block_uint.h	/^int gsl_block_uint_raw_fprintf (FILE * stream, const unsigned int * b, const size_t n, const size_t stride, const char *format);$/;"	p	signature:(FILE * stream, const unsigned int * b, const size_t n, const size_t stride, const char *format)
gsl_block_uint_raw_fread	/usr/local/gsl/include/gsl/gsl_block_uint.h	/^int gsl_block_uint_raw_fread (FILE * stream, unsigned int * b, const size_t n, const size_t stride);$/;"	p	signature:(FILE * stream, unsigned int * b, const size_t n, const size_t stride)
gsl_block_uint_raw_fscanf	/usr/local/gsl/include/gsl/gsl_block_uint.h	/^int gsl_block_uint_raw_fscanf (FILE * stream, unsigned int * b, const size_t n, const size_t stride);$/;"	p	signature:(FILE * stream, unsigned int * b, const size_t n, const size_t stride)
gsl_block_uint_raw_fwrite	/usr/local/gsl/include/gsl/gsl_block_uint.h	/^int gsl_block_uint_raw_fwrite (FILE * stream, const unsigned int * b, const size_t n, const size_t stride);$/;"	p	signature:(FILE * stream, const unsigned int * b, const size_t n, const size_t stride)
gsl_block_uint_size	/usr/local/gsl/include/gsl/gsl_block_uint.h	/^size_t gsl_block_uint_size (const gsl_block_uint * b);$/;"	p	signature:(const gsl_block_uint * b)
gsl_block_uint_struct	/usr/local/gsl/include/gsl/gsl_block_uint.h	/^struct gsl_block_uint_struct$/;"	s
gsl_block_uint_struct::data	/usr/local/gsl/include/gsl/gsl_block_uint.h	/^  unsigned int *data;$/;"	m	struct:gsl_block_uint_struct	access:public
gsl_block_uint_struct::size	/usr/local/gsl/include/gsl/gsl_block_uint.h	/^  size_t size;$/;"	m	struct:gsl_block_uint_struct	access:public
gsl_block_ulong	/usr/local/gsl/include/gsl/gsl_block_ulong.h	/^typedef struct gsl_block_ulong_struct gsl_block_ulong;$/;"	t	typeref:struct:gsl_block_ulong_struct
gsl_block_ulong_alloc	/usr/local/gsl/include/gsl/gsl_block_ulong.h	/^gsl_block_ulong *gsl_block_ulong_alloc (const size_t n);$/;"	p	signature:(const size_t n)
gsl_block_ulong_calloc	/usr/local/gsl/include/gsl/gsl_block_ulong.h	/^gsl_block_ulong *gsl_block_ulong_calloc (const size_t n);$/;"	p	signature:(const size_t n)
gsl_block_ulong_data	/usr/local/gsl/include/gsl/gsl_block_ulong.h	/^unsigned long * gsl_block_ulong_data (const gsl_block_ulong * b);$/;"	p	signature:(const gsl_block_ulong * b)
gsl_block_ulong_fprintf	/usr/local/gsl/include/gsl/gsl_block_ulong.h	/^int gsl_block_ulong_fprintf (FILE * stream, const gsl_block_ulong * b, const char *format);$/;"	p	signature:(FILE * stream, const gsl_block_ulong * b, const char *format)
gsl_block_ulong_fread	/usr/local/gsl/include/gsl/gsl_block_ulong.h	/^int gsl_block_ulong_fread (FILE * stream, gsl_block_ulong * b);$/;"	p	signature:(FILE * stream, gsl_block_ulong * b)
gsl_block_ulong_free	/usr/local/gsl/include/gsl/gsl_block_ulong.h	/^void gsl_block_ulong_free (gsl_block_ulong * b);$/;"	p	signature:(gsl_block_ulong * b)
gsl_block_ulong_fscanf	/usr/local/gsl/include/gsl/gsl_block_ulong.h	/^int gsl_block_ulong_fscanf (FILE * stream, gsl_block_ulong * b);$/;"	p	signature:(FILE * stream, gsl_block_ulong * b)
gsl_block_ulong_fwrite	/usr/local/gsl/include/gsl/gsl_block_ulong.h	/^int gsl_block_ulong_fwrite (FILE * stream, const gsl_block_ulong * b);$/;"	p	signature:(FILE * stream, const gsl_block_ulong * b)
gsl_block_ulong_raw_fprintf	/usr/local/gsl/include/gsl/gsl_block_ulong.h	/^int gsl_block_ulong_raw_fprintf (FILE * stream, const unsigned long * b, const size_t n, const size_t stride, const char *format);$/;"	p	signature:(FILE * stream, const unsigned long * b, const size_t n, const size_t stride, const char *format)
gsl_block_ulong_raw_fread	/usr/local/gsl/include/gsl/gsl_block_ulong.h	/^int gsl_block_ulong_raw_fread (FILE * stream, unsigned long * b, const size_t n, const size_t stride);$/;"	p	signature:(FILE * stream, unsigned long * b, const size_t n, const size_t stride)
gsl_block_ulong_raw_fscanf	/usr/local/gsl/include/gsl/gsl_block_ulong.h	/^int gsl_block_ulong_raw_fscanf (FILE * stream, unsigned long * b, const size_t n, const size_t stride);$/;"	p	signature:(FILE * stream, unsigned long * b, const size_t n, const size_t stride)
gsl_block_ulong_raw_fwrite	/usr/local/gsl/include/gsl/gsl_block_ulong.h	/^int gsl_block_ulong_raw_fwrite (FILE * stream, const unsigned long * b, const size_t n, const size_t stride);$/;"	p	signature:(FILE * stream, const unsigned long * b, const size_t n, const size_t stride)
gsl_block_ulong_size	/usr/local/gsl/include/gsl/gsl_block_ulong.h	/^size_t gsl_block_ulong_size (const gsl_block_ulong * b);$/;"	p	signature:(const gsl_block_ulong * b)
gsl_block_ulong_struct	/usr/local/gsl/include/gsl/gsl_block_ulong.h	/^struct gsl_block_ulong_struct$/;"	s
gsl_block_ulong_struct::data	/usr/local/gsl/include/gsl/gsl_block_ulong.h	/^  unsigned long *data;$/;"	m	struct:gsl_block_ulong_struct	access:public
gsl_block_ulong_struct::size	/usr/local/gsl/include/gsl/gsl_block_ulong.h	/^  size_t size;$/;"	m	struct:gsl_block_ulong_struct	access:public
gsl_block_ushort	/usr/local/gsl/include/gsl/gsl_block_ushort.h	/^typedef struct gsl_block_ushort_struct gsl_block_ushort;$/;"	t	typeref:struct:gsl_block_ushort_struct
gsl_block_ushort_alloc	/usr/local/gsl/include/gsl/gsl_block_ushort.h	/^gsl_block_ushort *gsl_block_ushort_alloc (const size_t n);$/;"	p	signature:(const size_t n)
gsl_block_ushort_calloc	/usr/local/gsl/include/gsl/gsl_block_ushort.h	/^gsl_block_ushort *gsl_block_ushort_calloc (const size_t n);$/;"	p	signature:(const size_t n)
gsl_block_ushort_data	/usr/local/gsl/include/gsl/gsl_block_ushort.h	/^unsigned short * gsl_block_ushort_data (const gsl_block_ushort * b);$/;"	p	signature:(const gsl_block_ushort * b)
gsl_block_ushort_fprintf	/usr/local/gsl/include/gsl/gsl_block_ushort.h	/^int gsl_block_ushort_fprintf (FILE * stream, const gsl_block_ushort * b, const char *format);$/;"	p	signature:(FILE * stream, const gsl_block_ushort * b, const char *format)
gsl_block_ushort_fread	/usr/local/gsl/include/gsl/gsl_block_ushort.h	/^int gsl_block_ushort_fread (FILE * stream, gsl_block_ushort * b);$/;"	p	signature:(FILE * stream, gsl_block_ushort * b)
gsl_block_ushort_free	/usr/local/gsl/include/gsl/gsl_block_ushort.h	/^void gsl_block_ushort_free (gsl_block_ushort * b);$/;"	p	signature:(gsl_block_ushort * b)
gsl_block_ushort_fscanf	/usr/local/gsl/include/gsl/gsl_block_ushort.h	/^int gsl_block_ushort_fscanf (FILE * stream, gsl_block_ushort * b);$/;"	p	signature:(FILE * stream, gsl_block_ushort * b)
gsl_block_ushort_fwrite	/usr/local/gsl/include/gsl/gsl_block_ushort.h	/^int gsl_block_ushort_fwrite (FILE * stream, const gsl_block_ushort * b);$/;"	p	signature:(FILE * stream, const gsl_block_ushort * b)
gsl_block_ushort_raw_fprintf	/usr/local/gsl/include/gsl/gsl_block_ushort.h	/^int gsl_block_ushort_raw_fprintf (FILE * stream, const unsigned short * b, const size_t n, const size_t stride, const char *format);$/;"	p	signature:(FILE * stream, const unsigned short * b, const size_t n, const size_t stride, const char *format)
gsl_block_ushort_raw_fread	/usr/local/gsl/include/gsl/gsl_block_ushort.h	/^int gsl_block_ushort_raw_fread (FILE * stream, unsigned short * b, const size_t n, const size_t stride);$/;"	p	signature:(FILE * stream, unsigned short * b, const size_t n, const size_t stride)
gsl_block_ushort_raw_fscanf	/usr/local/gsl/include/gsl/gsl_block_ushort.h	/^int gsl_block_ushort_raw_fscanf (FILE * stream, unsigned short * b, const size_t n, const size_t stride);$/;"	p	signature:(FILE * stream, unsigned short * b, const size_t n, const size_t stride)
gsl_block_ushort_raw_fwrite	/usr/local/gsl/include/gsl/gsl_block_ushort.h	/^int gsl_block_ushort_raw_fwrite (FILE * stream, const unsigned short * b, const size_t n, const size_t stride);$/;"	p	signature:(FILE * stream, const unsigned short * b, const size_t n, const size_t stride)
gsl_block_ushort_size	/usr/local/gsl/include/gsl/gsl_block_ushort.h	/^size_t gsl_block_ushort_size (const gsl_block_ushort * b);$/;"	p	signature:(const gsl_block_ushort * b)
gsl_block_ushort_struct	/usr/local/gsl/include/gsl/gsl_block_ushort.h	/^struct gsl_block_ushort_struct$/;"	s
gsl_block_ushort_struct::data	/usr/local/gsl/include/gsl/gsl_block_ushort.h	/^  unsigned short *data;$/;"	m	struct:gsl_block_ushort_struct	access:public
gsl_block_ushort_struct::size	/usr/local/gsl/include/gsl/gsl_block_ushort.h	/^  size_t size;$/;"	m	struct:gsl_block_ushort_struct	access:public
gsl_bspline_alloc	/usr/local/gsl/include/gsl/gsl_bspline.h	/^gsl_bspline_alloc(const size_t k, const size_t nbreak);$/;"	p	signature:(const size_t k, const size_t nbreak)
gsl_bspline_breakpoint	/usr/local/gsl/include/gsl/gsl_bspline.h	/^double gsl_bspline_breakpoint(size_t i, gsl_bspline_workspace * w);$/;"	p	signature:(size_t i, gsl_bspline_workspace * w)
gsl_bspline_deriv_alloc	/usr/local/gsl/include/gsl/gsl_bspline.h	/^gsl_bspline_deriv_alloc(const size_t k);$/;"	p	signature:(const size_t k)
gsl_bspline_deriv_eval	/usr/local/gsl/include/gsl/gsl_bspline.h	/^gsl_bspline_deriv_eval(const double x,$/;"	p	signature:(const double x, const size_t nderiv, gsl_matrix *dB, gsl_bspline_workspace *w, gsl_bspline_deriv_workspace *dw)
gsl_bspline_deriv_eval_nonzero	/usr/local/gsl/include/gsl/gsl_bspline.h	/^gsl_bspline_deriv_eval_nonzero(const double x,$/;"	p	signature:(const double x, const size_t nderiv, gsl_matrix *dB, size_t *istart, size_t *iend, gsl_bspline_workspace *w, gsl_bspline_deriv_workspace *dw)
gsl_bspline_deriv_free	/usr/local/gsl/include/gsl/gsl_bspline.h	/^gsl_bspline_deriv_free(gsl_bspline_deriv_workspace *w);$/;"	p	signature:(gsl_bspline_deriv_workspace *w)
gsl_bspline_deriv_workspace	/usr/local/gsl/include/gsl/gsl_bspline.h	/^} gsl_bspline_deriv_workspace;$/;"	t	typeref:struct:__anon138
gsl_bspline_eval	/usr/local/gsl/include/gsl/gsl_bspline.h	/^gsl_bspline_eval(const double x, gsl_vector *B, $/;"	p	signature:(const double x, gsl_vector *B, gsl_bspline_workspace *w)
gsl_bspline_eval_nonzero	/usr/local/gsl/include/gsl/gsl_bspline.h	/^gsl_bspline_eval_nonzero(const double x,$/;"	p	signature:(const double x, gsl_vector *Bk, size_t *istart, size_t *iend, gsl_bspline_workspace *w)
gsl_bspline_free	/usr/local/gsl/include/gsl/gsl_bspline.h	/^void gsl_bspline_free(gsl_bspline_workspace *w);$/;"	p	signature:(gsl_bspline_workspace *w)
gsl_bspline_knots	/usr/local/gsl/include/gsl/gsl_bspline.h	/^gsl_bspline_knots(const gsl_vector *breakpts, gsl_bspline_workspace *w);$/;"	p	signature:(const gsl_vector *breakpts, gsl_bspline_workspace *w)
gsl_bspline_knots_uniform	/usr/local/gsl/include/gsl/gsl_bspline.h	/^int gsl_bspline_knots_uniform(const double a, const double b,$/;"	p	signature:(const double a, const double b, gsl_bspline_workspace *w)
gsl_bspline_nbreak	/usr/local/gsl/include/gsl/gsl_bspline.h	/^size_t gsl_bspline_nbreak(gsl_bspline_workspace * w);$/;"	p	signature:(gsl_bspline_workspace * w)
gsl_bspline_ncoeffs	/usr/local/gsl/include/gsl/gsl_bspline.h	/^size_t gsl_bspline_ncoeffs(gsl_bspline_workspace * w);$/;"	p	signature:(gsl_bspline_workspace * w)
gsl_bspline_order	/usr/local/gsl/include/gsl/gsl_bspline.h	/^size_t gsl_bspline_order(gsl_bspline_workspace * w);$/;"	p	signature:(gsl_bspline_workspace * w)
gsl_bspline_workspace	/usr/local/gsl/include/gsl/gsl_bspline.h	/^} gsl_bspline_workspace;$/;"	t	typeref:struct:__anon137
gsl_cdf_beta_P	/usr/local/gsl/include/gsl/gsl_cdf.h	/^double gsl_cdf_beta_P (const double x, const double a, const double b);$/;"	p	signature:(const double x, const double a, const double b)
gsl_cdf_beta_Pinv	/usr/local/gsl/include/gsl/gsl_cdf.h	/^double gsl_cdf_beta_Pinv (const double P, const double a, const double b);$/;"	p	signature:(const double P, const double a, const double b)
gsl_cdf_beta_Q	/usr/local/gsl/include/gsl/gsl_cdf.h	/^double gsl_cdf_beta_Q (const double x, const double a, const double b);$/;"	p	signature:(const double x, const double a, const double b)
gsl_cdf_beta_Qinv	/usr/local/gsl/include/gsl/gsl_cdf.h	/^double gsl_cdf_beta_Qinv (const double Q, const double a, const double b);$/;"	p	signature:(const double Q, const double a, const double b)
gsl_cdf_binomial_P	/usr/local/gsl/include/gsl/gsl_cdf.h	/^double gsl_cdf_binomial_P (const unsigned int k, const double p, const unsigned int n);$/;"	p	signature:(const unsigned int k, const double p, const unsigned int n)
gsl_cdf_binomial_Q	/usr/local/gsl/include/gsl/gsl_cdf.h	/^double gsl_cdf_binomial_Q (const unsigned int k, const double p, const unsigned int n);$/;"	p	signature:(const unsigned int k, const double p, const unsigned int n)
gsl_cdf_cauchy_P	/usr/local/gsl/include/gsl/gsl_cdf.h	/^double gsl_cdf_cauchy_P (const double x, const double a);$/;"	p	signature:(const double x, const double a)
gsl_cdf_cauchy_Pinv	/usr/local/gsl/include/gsl/gsl_cdf.h	/^double gsl_cdf_cauchy_Pinv (const double P, const double a);$/;"	p	signature:(const double P, const double a)
gsl_cdf_cauchy_Q	/usr/local/gsl/include/gsl/gsl_cdf.h	/^double gsl_cdf_cauchy_Q (const double x, const double a);$/;"	p	signature:(const double x, const double a)
gsl_cdf_cauchy_Qinv	/usr/local/gsl/include/gsl/gsl_cdf.h	/^double gsl_cdf_cauchy_Qinv (const double Q, const double a);$/;"	p	signature:(const double Q, const double a)
gsl_cdf_chisq_P	/usr/local/gsl/include/gsl/gsl_cdf.h	/^double gsl_cdf_chisq_P (const double x, const double nu);$/;"	p	signature:(const double x, const double nu)
gsl_cdf_chisq_Pinv	/usr/local/gsl/include/gsl/gsl_cdf.h	/^double gsl_cdf_chisq_Pinv (const double P, const double nu);$/;"	p	signature:(const double P, const double nu)
gsl_cdf_chisq_Q	/usr/local/gsl/include/gsl/gsl_cdf.h	/^double gsl_cdf_chisq_Q (const double x, const double nu);$/;"	p	signature:(const double x, const double nu)
gsl_cdf_chisq_Qinv	/usr/local/gsl/include/gsl/gsl_cdf.h	/^double gsl_cdf_chisq_Qinv (const double Q, const double nu);$/;"	p	signature:(const double Q, const double nu)
gsl_cdf_exponential_P	/usr/local/gsl/include/gsl/gsl_cdf.h	/^double gsl_cdf_exponential_P (const double x, const double mu);$/;"	p	signature:(const double x, const double mu)
gsl_cdf_exponential_Pinv	/usr/local/gsl/include/gsl/gsl_cdf.h	/^double gsl_cdf_exponential_Pinv (const double P, const double mu);$/;"	p	signature:(const double P, const double mu)
gsl_cdf_exponential_Q	/usr/local/gsl/include/gsl/gsl_cdf.h	/^double gsl_cdf_exponential_Q (const double x, const double mu);$/;"	p	signature:(const double x, const double mu)
gsl_cdf_exponential_Qinv	/usr/local/gsl/include/gsl/gsl_cdf.h	/^double gsl_cdf_exponential_Qinv (const double Q, const double mu);$/;"	p	signature:(const double Q, const double mu)
gsl_cdf_exppow_P	/usr/local/gsl/include/gsl/gsl_cdf.h	/^double gsl_cdf_exppow_P (const double x, const double a, const double b);$/;"	p	signature:(const double x, const double a, const double b)
gsl_cdf_exppow_Q	/usr/local/gsl/include/gsl/gsl_cdf.h	/^double gsl_cdf_exppow_Q (const double x, const double a, const double b);$/;"	p	signature:(const double x, const double a, const double b)
gsl_cdf_fdist_P	/usr/local/gsl/include/gsl/gsl_cdf.h	/^double gsl_cdf_fdist_P (const double x, const double nu1, const double nu2);$/;"	p	signature:(const double x, const double nu1, const double nu2)
gsl_cdf_fdist_Pinv	/usr/local/gsl/include/gsl/gsl_cdf.h	/^double gsl_cdf_fdist_Pinv (const double P, const double nu1, const double nu2);$/;"	p	signature:(const double P, const double nu1, const double nu2)
gsl_cdf_fdist_Q	/usr/local/gsl/include/gsl/gsl_cdf.h	/^double gsl_cdf_fdist_Q (const double x, const double nu1, const double nu2);$/;"	p	signature:(const double x, const double nu1, const double nu2)
gsl_cdf_fdist_Qinv	/usr/local/gsl/include/gsl/gsl_cdf.h	/^double gsl_cdf_fdist_Qinv (const double Q, const double nu1, const double nu2);$/;"	p	signature:(const double Q, const double nu1, const double nu2)
gsl_cdf_flat_P	/usr/local/gsl/include/gsl/gsl_cdf.h	/^double gsl_cdf_flat_P (const double x, const double a, const double b);$/;"	p	signature:(const double x, const double a, const double b)
gsl_cdf_flat_Pinv	/usr/local/gsl/include/gsl/gsl_cdf.h	/^double gsl_cdf_flat_Pinv (const double P, const double a, const double b);$/;"	p	signature:(const double P, const double a, const double b)
gsl_cdf_flat_Q	/usr/local/gsl/include/gsl/gsl_cdf.h	/^double gsl_cdf_flat_Q (const double x, const double a, const double b);$/;"	p	signature:(const double x, const double a, const double b)
gsl_cdf_flat_Qinv	/usr/local/gsl/include/gsl/gsl_cdf.h	/^double gsl_cdf_flat_Qinv (const double Q, const double a, const double b);$/;"	p	signature:(const double Q, const double a, const double b)
gsl_cdf_gamma_P	/usr/local/gsl/include/gsl/gsl_cdf.h	/^double gsl_cdf_gamma_P (const double x, const double a, const double b);$/;"	p	signature:(const double x, const double a, const double b)
gsl_cdf_gamma_Pinv	/usr/local/gsl/include/gsl/gsl_cdf.h	/^double gsl_cdf_gamma_Pinv (const double P, const double a, const double b);$/;"	p	signature:(const double P, const double a, const double b)
gsl_cdf_gamma_Q	/usr/local/gsl/include/gsl/gsl_cdf.h	/^double gsl_cdf_gamma_Q (const double x, const double a, const double b);$/;"	p	signature:(const double x, const double a, const double b)
gsl_cdf_gamma_Qinv	/usr/local/gsl/include/gsl/gsl_cdf.h	/^double gsl_cdf_gamma_Qinv (const double Q, const double a, const double b);$/;"	p	signature:(const double Q, const double a, const double b)
gsl_cdf_gaussian_P	/usr/local/gsl/include/gsl/gsl_cdf.h	/^double gsl_cdf_gaussian_P (const double x, const double sigma);$/;"	p	signature:(const double x, const double sigma)
gsl_cdf_gaussian_Pinv	/usr/local/gsl/include/gsl/gsl_cdf.h	/^double gsl_cdf_gaussian_Pinv (const double P, const double sigma);$/;"	p	signature:(const double P, const double sigma)
gsl_cdf_gaussian_Q	/usr/local/gsl/include/gsl/gsl_cdf.h	/^double gsl_cdf_gaussian_Q (const double x, const double sigma);$/;"	p	signature:(const double x, const double sigma)
gsl_cdf_gaussian_Qinv	/usr/local/gsl/include/gsl/gsl_cdf.h	/^double gsl_cdf_gaussian_Qinv (const double Q, const double sigma);$/;"	p	signature:(const double Q, const double sigma)
gsl_cdf_geometric_P	/usr/local/gsl/include/gsl/gsl_cdf.h	/^double gsl_cdf_geometric_P (const unsigned int k, const double p);$/;"	p	signature:(const unsigned int k, const double p)
gsl_cdf_geometric_Q	/usr/local/gsl/include/gsl/gsl_cdf.h	/^double gsl_cdf_geometric_Q (const unsigned int k, const double p);$/;"	p	signature:(const unsigned int k, const double p)
gsl_cdf_gumbel1_P	/usr/local/gsl/include/gsl/gsl_cdf.h	/^double gsl_cdf_gumbel1_P (const double x, const double a, const double b);$/;"	p	signature:(const double x, const double a, const double b)
gsl_cdf_gumbel1_Pinv	/usr/local/gsl/include/gsl/gsl_cdf.h	/^double gsl_cdf_gumbel1_Pinv (const double P, const double a, const double b);$/;"	p	signature:(const double P, const double a, const double b)
gsl_cdf_gumbel1_Q	/usr/local/gsl/include/gsl/gsl_cdf.h	/^double gsl_cdf_gumbel1_Q (const double x, const double a, const double b);$/;"	p	signature:(const double x, const double a, const double b)
gsl_cdf_gumbel1_Qinv	/usr/local/gsl/include/gsl/gsl_cdf.h	/^double gsl_cdf_gumbel1_Qinv (const double Q, const double a, const double b);$/;"	p	signature:(const double Q, const double a, const double b)
gsl_cdf_gumbel2_P	/usr/local/gsl/include/gsl/gsl_cdf.h	/^double gsl_cdf_gumbel2_P (const double x, const double a, const double b);$/;"	p	signature:(const double x, const double a, const double b)
gsl_cdf_gumbel2_Pinv	/usr/local/gsl/include/gsl/gsl_cdf.h	/^double gsl_cdf_gumbel2_Pinv (const double P, const double a, const double b);$/;"	p	signature:(const double P, const double a, const double b)
gsl_cdf_gumbel2_Q	/usr/local/gsl/include/gsl/gsl_cdf.h	/^double gsl_cdf_gumbel2_Q (const double x, const double a, const double b);$/;"	p	signature:(const double x, const double a, const double b)
gsl_cdf_gumbel2_Qinv	/usr/local/gsl/include/gsl/gsl_cdf.h	/^double gsl_cdf_gumbel2_Qinv (const double Q, const double a, const double b);$/;"	p	signature:(const double Q, const double a, const double b)
gsl_cdf_hypergeometric_P	/usr/local/gsl/include/gsl/gsl_cdf.h	/^double gsl_cdf_hypergeometric_P (const unsigned int k, const unsigned int n1,$/;"	p	signature:(const unsigned int k, const unsigned int n1, const unsigned int n2, const unsigned int t)
gsl_cdf_hypergeometric_Q	/usr/local/gsl/include/gsl/gsl_cdf.h	/^double gsl_cdf_hypergeometric_Q (const unsigned int k, const unsigned int n1,$/;"	p	signature:(const unsigned int k, const unsigned int n1, const unsigned int n2, const unsigned int t)
gsl_cdf_laplace_P	/usr/local/gsl/include/gsl/gsl_cdf.h	/^double gsl_cdf_laplace_P (const double x, const double a);$/;"	p	signature:(const double x, const double a)
gsl_cdf_laplace_Pinv	/usr/local/gsl/include/gsl/gsl_cdf.h	/^double gsl_cdf_laplace_Pinv (const double P, const double a);$/;"	p	signature:(const double P, const double a)
gsl_cdf_laplace_Q	/usr/local/gsl/include/gsl/gsl_cdf.h	/^double gsl_cdf_laplace_Q (const double x, const double a);$/;"	p	signature:(const double x, const double a)
gsl_cdf_laplace_Qinv	/usr/local/gsl/include/gsl/gsl_cdf.h	/^double gsl_cdf_laplace_Qinv (const double Q, const double a);$/;"	p	signature:(const double Q, const double a)
gsl_cdf_logistic_P	/usr/local/gsl/include/gsl/gsl_cdf.h	/^double gsl_cdf_logistic_P (const double x, const double a);$/;"	p	signature:(const double x, const double a)
gsl_cdf_logistic_Pinv	/usr/local/gsl/include/gsl/gsl_cdf.h	/^double gsl_cdf_logistic_Pinv (const double P, const double a);$/;"	p	signature:(const double P, const double a)
gsl_cdf_logistic_Q	/usr/local/gsl/include/gsl/gsl_cdf.h	/^double gsl_cdf_logistic_Q (const double x, const double a);$/;"	p	signature:(const double x, const double a)
gsl_cdf_logistic_Qinv	/usr/local/gsl/include/gsl/gsl_cdf.h	/^double gsl_cdf_logistic_Qinv (const double Q, const double a);$/;"	p	signature:(const double Q, const double a)
gsl_cdf_lognormal_P	/usr/local/gsl/include/gsl/gsl_cdf.h	/^double gsl_cdf_lognormal_P (const double x, const double zeta, const double sigma);$/;"	p	signature:(const double x, const double zeta, const double sigma)
gsl_cdf_lognormal_Pinv	/usr/local/gsl/include/gsl/gsl_cdf.h	/^double gsl_cdf_lognormal_Pinv (const double P, const double zeta, const double sigma);$/;"	p	signature:(const double P, const double zeta, const double sigma)
gsl_cdf_lognormal_Q	/usr/local/gsl/include/gsl/gsl_cdf.h	/^double gsl_cdf_lognormal_Q (const double x, const double zeta, const double sigma);$/;"	p	signature:(const double x, const double zeta, const double sigma)
gsl_cdf_lognormal_Qinv	/usr/local/gsl/include/gsl/gsl_cdf.h	/^double gsl_cdf_lognormal_Qinv (const double Q, const double zeta, const double sigma);$/;"	p	signature:(const double Q, const double zeta, const double sigma)
gsl_cdf_negative_binomial_P	/usr/local/gsl/include/gsl/gsl_cdf.h	/^double gsl_cdf_negative_binomial_P (const unsigned int k, const double p, const double n);$/;"	p	signature:(const unsigned int k, const double p, const double n)
gsl_cdf_negative_binomial_Q	/usr/local/gsl/include/gsl/gsl_cdf.h	/^double gsl_cdf_negative_binomial_Q (const unsigned int k, const double p, const double n);$/;"	p	signature:(const unsigned int k, const double p, const double n)
gsl_cdf_pareto_P	/usr/local/gsl/include/gsl/gsl_cdf.h	/^double gsl_cdf_pareto_P (const double x, const double a, const double b);$/;"	p	signature:(const double x, const double a, const double b)
gsl_cdf_pareto_Pinv	/usr/local/gsl/include/gsl/gsl_cdf.h	/^double gsl_cdf_pareto_Pinv (const double P, const double a, const double b);$/;"	p	signature:(const double P, const double a, const double b)
gsl_cdf_pareto_Q	/usr/local/gsl/include/gsl/gsl_cdf.h	/^double gsl_cdf_pareto_Q (const double x, const double a, const double b);$/;"	p	signature:(const double x, const double a, const double b)
gsl_cdf_pareto_Qinv	/usr/local/gsl/include/gsl/gsl_cdf.h	/^double gsl_cdf_pareto_Qinv (const double Q, const double a, const double b);$/;"	p	signature:(const double Q, const double a, const double b)
gsl_cdf_pascal_P	/usr/local/gsl/include/gsl/gsl_cdf.h	/^double gsl_cdf_pascal_P (const unsigned int k, const double p, const unsigned int n);$/;"	p	signature:(const unsigned int k, const double p, const unsigned int n)
gsl_cdf_pascal_Q	/usr/local/gsl/include/gsl/gsl_cdf.h	/^double gsl_cdf_pascal_Q (const unsigned int k, const double p, const unsigned int n);$/;"	p	signature:(const unsigned int k, const double p, const unsigned int n)
gsl_cdf_poisson_P	/usr/local/gsl/include/gsl/gsl_cdf.h	/^double gsl_cdf_poisson_P (const unsigned int k, const double mu);$/;"	p	signature:(const unsigned int k, const double mu)
gsl_cdf_poisson_Q	/usr/local/gsl/include/gsl/gsl_cdf.h	/^double gsl_cdf_poisson_Q (const unsigned int k, const double mu);$/;"	p	signature:(const unsigned int k, const double mu)
gsl_cdf_rayleigh_P	/usr/local/gsl/include/gsl/gsl_cdf.h	/^double gsl_cdf_rayleigh_P (const double x, const double sigma);$/;"	p	signature:(const double x, const double sigma)
gsl_cdf_rayleigh_Pinv	/usr/local/gsl/include/gsl/gsl_cdf.h	/^double gsl_cdf_rayleigh_Pinv (const double P, const double sigma);$/;"	p	signature:(const double P, const double sigma)
gsl_cdf_rayleigh_Q	/usr/local/gsl/include/gsl/gsl_cdf.h	/^double gsl_cdf_rayleigh_Q (const double x, const double sigma);$/;"	p	signature:(const double x, const double sigma)
gsl_cdf_rayleigh_Qinv	/usr/local/gsl/include/gsl/gsl_cdf.h	/^double gsl_cdf_rayleigh_Qinv (const double Q, const double sigma);$/;"	p	signature:(const double Q, const double sigma)
gsl_cdf_tdist_P	/usr/local/gsl/include/gsl/gsl_cdf.h	/^double gsl_cdf_tdist_P (const double x, const double nu);$/;"	p	signature:(const double x, const double nu)
gsl_cdf_tdist_Pinv	/usr/local/gsl/include/gsl/gsl_cdf.h	/^double gsl_cdf_tdist_Pinv (const double P, const double nu);$/;"	p	signature:(const double P, const double nu)
gsl_cdf_tdist_Q	/usr/local/gsl/include/gsl/gsl_cdf.h	/^double gsl_cdf_tdist_Q (const double x, const double nu);$/;"	p	signature:(const double x, const double nu)
gsl_cdf_tdist_Qinv	/usr/local/gsl/include/gsl/gsl_cdf.h	/^double gsl_cdf_tdist_Qinv (const double Q, const double nu);$/;"	p	signature:(const double Q, const double nu)
gsl_cdf_ugaussian_P	/usr/local/gsl/include/gsl/gsl_cdf.h	/^double gsl_cdf_ugaussian_P (const double x);$/;"	p	signature:(const double x)
gsl_cdf_ugaussian_Pinv	/usr/local/gsl/include/gsl/gsl_cdf.h	/^double gsl_cdf_ugaussian_Pinv (const double P);$/;"	p	signature:(const double P)
gsl_cdf_ugaussian_Q	/usr/local/gsl/include/gsl/gsl_cdf.h	/^double gsl_cdf_ugaussian_Q (const double x);$/;"	p	signature:(const double x)
gsl_cdf_ugaussian_Qinv	/usr/local/gsl/include/gsl/gsl_cdf.h	/^double gsl_cdf_ugaussian_Qinv (const double Q);$/;"	p	signature:(const double Q)
gsl_cdf_weibull_P	/usr/local/gsl/include/gsl/gsl_cdf.h	/^double gsl_cdf_weibull_P (const double x, const double a, const double b);$/;"	p	signature:(const double x, const double a, const double b)
gsl_cdf_weibull_Pinv	/usr/local/gsl/include/gsl/gsl_cdf.h	/^double gsl_cdf_weibull_Pinv (const double P, const double a, const double b);$/;"	p	signature:(const double P, const double a, const double b)
gsl_cdf_weibull_Q	/usr/local/gsl/include/gsl/gsl_cdf.h	/^double gsl_cdf_weibull_Q (const double x, const double a, const double b);$/;"	p	signature:(const double x, const double a, const double b)
gsl_cdf_weibull_Qinv	/usr/local/gsl/include/gsl/gsl_cdf.h	/^double gsl_cdf_weibull_Qinv (const double Q, const double a, const double b);$/;"	p	signature:(const double Q, const double a, const double b)
gsl_cheb_alloc	/usr/local/gsl/include/gsl/gsl_chebyshev.h	/^gsl_cheb_series * gsl_cheb_alloc(const size_t order);$/;"	p	signature:(const size_t order)
gsl_cheb_calc_deriv	/usr/local/gsl/include/gsl/gsl_chebyshev.h	/^int gsl_cheb_calc_deriv(gsl_cheb_series * deriv, const gsl_cheb_series * cs);$/;"	p	signature:(gsl_cheb_series * deriv, const gsl_cheb_series * cs)
gsl_cheb_calc_integ	/usr/local/gsl/include/gsl/gsl_chebyshev.h	/^int gsl_cheb_calc_integ(gsl_cheb_series * integ, const gsl_cheb_series * cs);$/;"	p	signature:(gsl_cheb_series * integ, const gsl_cheb_series * cs)
gsl_cheb_coeffs	/usr/local/gsl/include/gsl/gsl_chebyshev.h	/^double *gsl_cheb_coeffs (const gsl_cheb_series * cs);$/;"	p	signature:(const gsl_cheb_series * cs)
gsl_cheb_eval	/usr/local/gsl/include/gsl/gsl_chebyshev.h	/^double gsl_cheb_eval(const gsl_cheb_series * cs, const double x);$/;"	p	signature:(const gsl_cheb_series * cs, const double x)
gsl_cheb_eval_err	/usr/local/gsl/include/gsl/gsl_chebyshev.h	/^int gsl_cheb_eval_err(const gsl_cheb_series * cs, const double x, $/;"	p	signature:(const gsl_cheb_series * cs, const double x, double * result, double * abserr)
gsl_cheb_eval_mode	/usr/local/gsl/include/gsl/gsl_chebyshev.h	/^double gsl_cheb_eval_mode(const gsl_cheb_series * cs, const double x, gsl_mode_t mode);$/;"	p	signature:(const gsl_cheb_series * cs, const double x, gsl_mode_t mode)
gsl_cheb_eval_mode_e	/usr/local/gsl/include/gsl/gsl_chebyshev.h	/^int gsl_cheb_eval_mode_e(const gsl_cheb_series * cs, const double x, gsl_mode_t mode, double * result, double * abserr);$/;"	p	signature:(const gsl_cheb_series * cs, const double x, gsl_mode_t mode, double * result, double * abserr)
gsl_cheb_eval_n	/usr/local/gsl/include/gsl/gsl_chebyshev.h	/^double gsl_cheb_eval_n(const gsl_cheb_series * cs, const size_t order, $/;"	p	signature:(const gsl_cheb_series * cs, const size_t order, const double x)
gsl_cheb_eval_n_err	/usr/local/gsl/include/gsl/gsl_chebyshev.h	/^int gsl_cheb_eval_n_err(const gsl_cheb_series * cs, const size_t order, $/;"	p	signature:(const gsl_cheb_series * cs, const size_t order, const double x, double * result, double * abserr)
gsl_cheb_free	/usr/local/gsl/include/gsl/gsl_chebyshev.h	/^void gsl_cheb_free(gsl_cheb_series * cs);$/;"	p	signature:(gsl_cheb_series * cs)
gsl_cheb_init	/usr/local/gsl/include/gsl/gsl_chebyshev.h	/^int gsl_cheb_init(gsl_cheb_series * cs, const gsl_function * func,$/;"	p	signature:(gsl_cheb_series * cs, const gsl_function * func, const double a, const double b)
gsl_cheb_order	/usr/local/gsl/include/gsl/gsl_chebyshev.h	/^size_t gsl_cheb_order (const gsl_cheb_series * cs);$/;"	p	signature:(const gsl_cheb_series * cs)
gsl_cheb_series	/usr/local/gsl/include/gsl/gsl_chebyshev.h	/^typedef struct gsl_cheb_series_struct gsl_cheb_series;$/;"	t	typeref:struct:gsl_cheb_series_struct
gsl_cheb_series_struct	/usr/local/gsl/include/gsl/gsl_chebyshev.h	/^struct gsl_cheb_series_struct {$/;"	s
gsl_cheb_series_struct::a	/usr/local/gsl/include/gsl/gsl_chebyshev.h	/^  double a;     \/* lower interval point        *\/$/;"	m	struct:gsl_cheb_series_struct	access:public
gsl_cheb_series_struct::b	/usr/local/gsl/include/gsl/gsl_chebyshev.h	/^  double b;     \/* upper interval point        *\/$/;"	m	struct:gsl_cheb_series_struct	access:public
gsl_cheb_series_struct::c	/usr/local/gsl/include/gsl/gsl_chebyshev.h	/^  double * c;   \/* coefficients                *\/$/;"	m	struct:gsl_cheb_series_struct	access:public
gsl_cheb_series_struct::f	/usr/local/gsl/include/gsl/gsl_chebyshev.h	/^  double * f;   \/* function evaluated at chebyschev points  *\/$/;"	m	struct:gsl_cheb_series_struct	access:public
gsl_cheb_series_struct::order	/usr/local/gsl/include/gsl/gsl_chebyshev.h	/^  size_t order; \/* order of expansion          *\/$/;"	m	struct:gsl_cheb_series_struct	access:public
gsl_cheb_series_struct::order_sp	/usr/local/gsl/include/gsl/gsl_chebyshev.h	/^  size_t order_sp;$/;"	m	struct:gsl_cheb_series_struct	access:public
gsl_cheb_size	/usr/local/gsl/include/gsl/gsl_chebyshev.h	/^size_t gsl_cheb_size (const gsl_cheb_series * cs);$/;"	p	signature:(const gsl_cheb_series * cs)
gsl_check_range	/usr/local/gsl/include/gsl/gsl_check_range.h	/^GSL_VAR int gsl_check_range;$/;"	v
gsl_coerce_double	/usr/local/gsl/include/gsl/gsl_sys.h	/^double gsl_coerce_double (const double x);$/;"	p	signature:(const double x)
gsl_coerce_float	/usr/local/gsl/include/gsl/gsl_sys.h	/^float gsl_coerce_float (const float x);$/;"	p	signature:(const float x)
gsl_coerce_long_double	/usr/local/gsl/include/gsl/gsl_sys.h	/^long double gsl_coerce_long_double (const long double x);$/;"	p	signature:(const long double x)
gsl_combination	/usr/local/gsl/include/gsl/gsl_combination.h	/^typedef struct gsl_combination_struct gsl_combination;$/;"	t	typeref:struct:gsl_combination_struct
gsl_combination_alloc	/usr/local/gsl/include/gsl/gsl_combination.h	/^gsl_combination *gsl_combination_alloc (const size_t n, const size_t k);$/;"	p	signature:(const size_t n, const size_t k)
gsl_combination_calloc	/usr/local/gsl/include/gsl/gsl_combination.h	/^gsl_combination *gsl_combination_calloc (const size_t n, const size_t k);$/;"	p	signature:(const size_t n, const size_t k)
gsl_combination_data	/usr/local/gsl/include/gsl/gsl_combination.h	/^size_t * gsl_combination_data (const gsl_combination * c);$/;"	p	signature:(const gsl_combination * c)
gsl_combination_fprintf	/usr/local/gsl/include/gsl/gsl_combination.h	/^int gsl_combination_fprintf (FILE * stream, const gsl_combination * c, const char *format);$/;"	p	signature:(FILE * stream, const gsl_combination * c, const char *format)
gsl_combination_fread	/usr/local/gsl/include/gsl/gsl_combination.h	/^int gsl_combination_fread (FILE * stream, gsl_combination * c);$/;"	p	signature:(FILE * stream, gsl_combination * c)
gsl_combination_free	/usr/local/gsl/include/gsl/gsl_combination.h	/^void gsl_combination_free (gsl_combination * c);$/;"	p	signature:(gsl_combination * c)
gsl_combination_fscanf	/usr/local/gsl/include/gsl/gsl_combination.h	/^int gsl_combination_fscanf (FILE * stream, gsl_combination * c);$/;"	p	signature:(FILE * stream, gsl_combination * c)
gsl_combination_fwrite	/usr/local/gsl/include/gsl/gsl_combination.h	/^int gsl_combination_fwrite (FILE * stream, const gsl_combination * c);$/;"	p	signature:(FILE * stream, const gsl_combination * c)
gsl_combination_get	/usr/local/gsl/include/gsl/gsl_combination.h	/^INLINE_DECL size_t gsl_combination_get (const gsl_combination * c, const size_t i);$/;"	p	signature:(const gsl_combination * c, const size_t i)
gsl_combination_get	/usr/local/gsl/include/gsl/gsl_combination.h	/^gsl_combination_get (const gsl_combination * c, const size_t i)$/;"	f	signature:(const gsl_combination * c, const size_t i)
gsl_combination_init_first	/usr/local/gsl/include/gsl/gsl_combination.h	/^void gsl_combination_init_first (gsl_combination * c);$/;"	p	signature:(gsl_combination * c)
gsl_combination_init_last	/usr/local/gsl/include/gsl/gsl_combination.h	/^void gsl_combination_init_last (gsl_combination * c);$/;"	p	signature:(gsl_combination * c)
gsl_combination_k	/usr/local/gsl/include/gsl/gsl_combination.h	/^size_t gsl_combination_k (const gsl_combination * c);$/;"	p	signature:(const gsl_combination * c)
gsl_combination_memcpy	/usr/local/gsl/include/gsl/gsl_combination.h	/^int gsl_combination_memcpy (gsl_combination * dest, const gsl_combination * src); $/;"	p	signature:(gsl_combination * dest, const gsl_combination * src)
gsl_combination_n	/usr/local/gsl/include/gsl/gsl_combination.h	/^size_t gsl_combination_n (const gsl_combination * c);$/;"	p	signature:(const gsl_combination * c)
gsl_combination_next	/usr/local/gsl/include/gsl/gsl_combination.h	/^int gsl_combination_next (gsl_combination * c);$/;"	p	signature:(gsl_combination * c)
gsl_combination_prev	/usr/local/gsl/include/gsl/gsl_combination.h	/^int gsl_combination_prev (gsl_combination * c);$/;"	p	signature:(gsl_combination * c)
gsl_combination_struct	/usr/local/gsl/include/gsl/gsl_combination.h	/^struct gsl_combination_struct$/;"	s
gsl_combination_struct::data	/usr/local/gsl/include/gsl/gsl_combination.h	/^  size_t *data;$/;"	m	struct:gsl_combination_struct	access:public
gsl_combination_struct::k	/usr/local/gsl/include/gsl/gsl_combination.h	/^  size_t k;$/;"	m	struct:gsl_combination_struct	access:public
gsl_combination_struct::n	/usr/local/gsl/include/gsl/gsl_combination.h	/^  size_t n;$/;"	m	struct:gsl_combination_struct	access:public
gsl_combination_valid	/usr/local/gsl/include/gsl/gsl_combination.h	/^int gsl_combination_valid (gsl_combination * c);$/;"	p	signature:(gsl_combination * c)
gsl_comparison_fn_t	/usr/local/gsl/include/gsl/gsl_heapsort.h	/^typedef int (*gsl_comparison_fn_t) (const void *, const void *);$/;"	t
gsl_complex	/usr/local/gsl/include/gsl/gsl_complex.h	/^gsl_complex;$/;"	t	typeref:struct:__anon54
gsl_complex_abs	/usr/local/gsl/include/gsl/gsl_complex_math.h	/^double gsl_complex_abs (gsl_complex z);   \/* return |z|   *\/$/;"	p	signature:(gsl_complex z)
gsl_complex_abs2	/usr/local/gsl/include/gsl/gsl_complex_math.h	/^double gsl_complex_abs2 (gsl_complex z);  \/* return |z|^2 *\/$/;"	p	signature:(gsl_complex z)
gsl_complex_add	/usr/local/gsl/include/gsl/gsl_complex_math.h	/^gsl_complex gsl_complex_add (gsl_complex a, gsl_complex b);  \/* r=a+b *\/$/;"	p	signature:(gsl_complex a, gsl_complex b)
gsl_complex_add_imag	/usr/local/gsl/include/gsl/gsl_complex_math.h	/^gsl_complex gsl_complex_add_imag (gsl_complex a, double y);  \/* r=a+iy *\/$/;"	p	signature:(gsl_complex a, double y)
gsl_complex_add_real	/usr/local/gsl/include/gsl/gsl_complex_math.h	/^gsl_complex gsl_complex_add_real (gsl_complex a, double x);  \/* r=a+x *\/$/;"	p	signature:(gsl_complex a, double x)
gsl_complex_arccos	/usr/local/gsl/include/gsl/gsl_complex_math.h	/^gsl_complex gsl_complex_arccos (gsl_complex a);  \/* r=arccos(a) *\/$/;"	p	signature:(gsl_complex a)
gsl_complex_arccos_real	/usr/local/gsl/include/gsl/gsl_complex_math.h	/^gsl_complex gsl_complex_arccos_real (double a);  \/* r=arccos(a) *\/$/;"	p	signature:(double a)
gsl_complex_arccosh	/usr/local/gsl/include/gsl/gsl_complex_math.h	/^gsl_complex gsl_complex_arccosh (gsl_complex a);  \/* r=arccosh(a) *\/$/;"	p	signature:(gsl_complex a)
gsl_complex_arccosh_real	/usr/local/gsl/include/gsl/gsl_complex_math.h	/^gsl_complex gsl_complex_arccosh_real (double a);  \/* r=arccosh(a) *\/$/;"	p	signature:(double a)
gsl_complex_arccot	/usr/local/gsl/include/gsl/gsl_complex_math.h	/^gsl_complex gsl_complex_arccot (gsl_complex a);  \/* r=arccot(a) *\/$/;"	p	signature:(gsl_complex a)
gsl_complex_arccoth	/usr/local/gsl/include/gsl/gsl_complex_math.h	/^gsl_complex gsl_complex_arccoth (gsl_complex a);  \/* r=arccoth(a) *\/$/;"	p	signature:(gsl_complex a)
gsl_complex_arccsc	/usr/local/gsl/include/gsl/gsl_complex_math.h	/^gsl_complex gsl_complex_arccsc (gsl_complex a);  \/* r=arccsc(a) *\/$/;"	p	signature:(gsl_complex a)
gsl_complex_arccsc_real	/usr/local/gsl/include/gsl/gsl_complex_math.h	/^gsl_complex gsl_complex_arccsc_real (double a);  \/* r=arccsc(a) *\/$/;"	p	signature:(double a)
gsl_complex_arccsch	/usr/local/gsl/include/gsl/gsl_complex_math.h	/^gsl_complex gsl_complex_arccsch (gsl_complex a);  \/* r=arccsch(a) *\/$/;"	p	signature:(gsl_complex a)
gsl_complex_arcsec	/usr/local/gsl/include/gsl/gsl_complex_math.h	/^gsl_complex gsl_complex_arcsec (gsl_complex a);  \/* r=arcsec(a) *\/$/;"	p	signature:(gsl_complex a)
gsl_complex_arcsec_real	/usr/local/gsl/include/gsl/gsl_complex_math.h	/^gsl_complex gsl_complex_arcsec_real (double a);  \/* r=arcsec(a) *\/$/;"	p	signature:(double a)
gsl_complex_arcsech	/usr/local/gsl/include/gsl/gsl_complex_math.h	/^gsl_complex gsl_complex_arcsech (gsl_complex a);  \/* r=arcsech(a) *\/$/;"	p	signature:(gsl_complex a)
gsl_complex_arcsin	/usr/local/gsl/include/gsl/gsl_complex_math.h	/^gsl_complex gsl_complex_arcsin (gsl_complex a);  \/* r=arcsin(a) *\/$/;"	p	signature:(gsl_complex a)
gsl_complex_arcsin_real	/usr/local/gsl/include/gsl/gsl_complex_math.h	/^gsl_complex gsl_complex_arcsin_real (double a);  \/* r=arcsin(a) *\/$/;"	p	signature:(double a)
gsl_complex_arcsinh	/usr/local/gsl/include/gsl/gsl_complex_math.h	/^gsl_complex gsl_complex_arcsinh (gsl_complex a);  \/* r=arcsinh(a) *\/$/;"	p	signature:(gsl_complex a)
gsl_complex_arctan	/usr/local/gsl/include/gsl/gsl_complex_math.h	/^gsl_complex gsl_complex_arctan (gsl_complex a);  \/* r=arctan(a) *\/$/;"	p	signature:(gsl_complex a)
gsl_complex_arctanh	/usr/local/gsl/include/gsl/gsl_complex_math.h	/^gsl_complex gsl_complex_arctanh (gsl_complex a);  \/* r=arctanh(a) *\/$/;"	p	signature:(gsl_complex a)
gsl_complex_arctanh_real	/usr/local/gsl/include/gsl/gsl_complex_math.h	/^gsl_complex gsl_complex_arctanh_real (double a);  \/* r=arctanh(a) *\/$/;"	p	signature:(double a)
gsl_complex_arg	/usr/local/gsl/include/gsl/gsl_complex_math.h	/^double gsl_complex_arg (gsl_complex z); \/* return arg(z), -pi< arg(z) <=+pi *\/$/;"	p	signature:(gsl_complex z)
gsl_complex_conjugate	/usr/local/gsl/include/gsl/gsl_complex_math.h	/^gsl_complex gsl_complex_conjugate (gsl_complex z);  \/* r=conj(z) *\/$/;"	p	signature:(gsl_complex z)
gsl_complex_cos	/usr/local/gsl/include/gsl/gsl_complex_math.h	/^gsl_complex gsl_complex_cos (gsl_complex a);  \/* r=cos(a) *\/$/;"	p	signature:(gsl_complex a)
gsl_complex_cosh	/usr/local/gsl/include/gsl/gsl_complex_math.h	/^gsl_complex gsl_complex_cosh (gsl_complex a);  \/* r=coshh(a) *\/$/;"	p	signature:(gsl_complex a)
gsl_complex_cot	/usr/local/gsl/include/gsl/gsl_complex_math.h	/^gsl_complex gsl_complex_cot (gsl_complex a);  \/* r=cot(a) *\/$/;"	p	signature:(gsl_complex a)
gsl_complex_coth	/usr/local/gsl/include/gsl/gsl_complex_math.h	/^gsl_complex gsl_complex_coth (gsl_complex a);  \/* r=coth(a) *\/$/;"	p	signature:(gsl_complex a)
gsl_complex_csc	/usr/local/gsl/include/gsl/gsl_complex_math.h	/^gsl_complex gsl_complex_csc (gsl_complex a);  \/* r=csc(a) *\/$/;"	p	signature:(gsl_complex a)
gsl_complex_csch	/usr/local/gsl/include/gsl/gsl_complex_math.h	/^gsl_complex gsl_complex_csch (gsl_complex a);  \/* r=csch(a) *\/$/;"	p	signature:(gsl_complex a)
gsl_complex_div	/usr/local/gsl/include/gsl/gsl_complex_math.h	/^gsl_complex gsl_complex_div (gsl_complex a, gsl_complex b);  \/* r=a\/b *\/$/;"	p	signature:(gsl_complex a, gsl_complex b)
gsl_complex_div_imag	/usr/local/gsl/include/gsl/gsl_complex_math.h	/^gsl_complex gsl_complex_div_imag (gsl_complex a, double y);  \/* r=a\/iy *\/$/;"	p	signature:(gsl_complex a, double y)
gsl_complex_div_real	/usr/local/gsl/include/gsl/gsl_complex_math.h	/^gsl_complex gsl_complex_div_real (gsl_complex a, double x);  \/* r=a\/x *\/$/;"	p	signature:(gsl_complex a, double x)
gsl_complex_exp	/usr/local/gsl/include/gsl/gsl_complex_math.h	/^gsl_complex gsl_complex_exp (gsl_complex a);    \/* r=exp(a) *\/$/;"	p	signature:(gsl_complex a)
gsl_complex_float	/usr/local/gsl/include/gsl/gsl_complex.h	/^gsl_complex_float;$/;"	t	typeref:struct:__anon55
gsl_complex_inverse	/usr/local/gsl/include/gsl/gsl_complex_math.h	/^gsl_complex gsl_complex_inverse (gsl_complex a);    \/* r=1\/a *\/$/;"	p	signature:(gsl_complex a)
gsl_complex_log	/usr/local/gsl/include/gsl/gsl_complex_math.h	/^gsl_complex gsl_complex_log (gsl_complex a);    \/* r=log(a) (base e) *\/$/;"	p	signature:(gsl_complex a)
gsl_complex_log10	/usr/local/gsl/include/gsl/gsl_complex_math.h	/^gsl_complex gsl_complex_log10 (gsl_complex a);  \/* r=log10(a) (base 10) *\/$/;"	p	signature:(gsl_complex a)
gsl_complex_log_b	/usr/local/gsl/include/gsl/gsl_complex_math.h	/^gsl_complex gsl_complex_log_b (gsl_complex a, gsl_complex b);   \/* r=log_b(a) (base=b) *\/$/;"	p	signature:(gsl_complex a, gsl_complex b)
gsl_complex_logabs	/usr/local/gsl/include/gsl/gsl_complex_math.h	/^double gsl_complex_logabs (gsl_complex z); \/* return log|z| *\/$/;"	p	signature:(gsl_complex z)
gsl_complex_long_double	/usr/local/gsl/include/gsl/gsl_complex.h	/^gsl_complex_long_double;$/;"	t	typeref:struct:__anon53
gsl_complex_mul	/usr/local/gsl/include/gsl/gsl_complex_math.h	/^gsl_complex gsl_complex_mul (gsl_complex a, gsl_complex b);  \/* r=a*b *\/$/;"	p	signature:(gsl_complex a, gsl_complex b)
gsl_complex_mul_imag	/usr/local/gsl/include/gsl/gsl_complex_math.h	/^gsl_complex gsl_complex_mul_imag (gsl_complex a, double y);  \/* r=a*iy *\/$/;"	p	signature:(gsl_complex a, double y)
gsl_complex_mul_real	/usr/local/gsl/include/gsl/gsl_complex_math.h	/^gsl_complex gsl_complex_mul_real (gsl_complex a, double x);  \/* r=a*x *\/$/;"	p	signature:(gsl_complex a, double x)
gsl_complex_negative	/usr/local/gsl/include/gsl/gsl_complex_math.h	/^gsl_complex gsl_complex_negative (gsl_complex a);    \/* r=-a *\/$/;"	p	signature:(gsl_complex a)
gsl_complex_packed	/usr/local/gsl/include/gsl/gsl_complex.h	/^typedef double *       gsl_complex_packed ;$/;"	t
gsl_complex_packed_array	/usr/local/gsl/include/gsl/gsl_complex.h	/^typedef double *       gsl_complex_packed_array ;$/;"	t
gsl_complex_packed_array_float	/usr/local/gsl/include/gsl/gsl_complex.h	/^typedef float *        gsl_complex_packed_array_float  ;$/;"	t
gsl_complex_packed_array_long_double	/usr/local/gsl/include/gsl/gsl_complex.h	/^typedef long double *  gsl_complex_packed_array_long_double ;$/;"	t
gsl_complex_packed_float	/usr/local/gsl/include/gsl/gsl_complex.h	/^typedef float *        gsl_complex_packed_float  ;$/;"	t
gsl_complex_packed_float_ptr	/usr/local/gsl/include/gsl/gsl_complex.h	/^typedef float *        gsl_complex_packed_float_ptr  ;$/;"	t
gsl_complex_packed_long_double	/usr/local/gsl/include/gsl/gsl_complex.h	/^typedef long double *  gsl_complex_packed_long_double ;$/;"	t
gsl_complex_packed_long_double_ptr	/usr/local/gsl/include/gsl/gsl_complex.h	/^typedef long double *  gsl_complex_packed_long_double_ptr ;$/;"	t
gsl_complex_packed_ptr	/usr/local/gsl/include/gsl/gsl_complex.h	/^typedef double *       gsl_complex_packed_ptr ;$/;"	t
gsl_complex_polar	/usr/local/gsl/include/gsl/gsl_complex_math.h	/^gsl_complex gsl_complex_polar (double r, double theta); \/* r= r e^(i theta) *\/$/;"	p	signature:(double r, double theta)
gsl_complex_poly_complex_eval	/usr/local/gsl/include/gsl/gsl_poly.h	/^INLINE_DECL gsl_complex gsl_complex_poly_complex_eval (const gsl_complex c [], const int len, const gsl_complex z);$/;"	p	signature:(const gsl_complex c [], const int len, const gsl_complex z)
gsl_complex_poly_complex_eval	/usr/local/gsl/include/gsl/gsl_poly.h	/^gsl_complex_poly_complex_eval(const gsl_complex c[], const int len, const gsl_complex z)$/;"	f	signature:(const gsl_complex c[], const int len, const gsl_complex z)
gsl_complex_pow	/usr/local/gsl/include/gsl/gsl_complex_math.h	/^gsl_complex gsl_complex_pow (gsl_complex a, gsl_complex b);  \/* r=a^b *\/$/;"	p	signature:(gsl_complex a, gsl_complex b)
gsl_complex_pow_real	/usr/local/gsl/include/gsl/gsl_complex_math.h	/^gsl_complex gsl_complex_pow_real (gsl_complex a, double b);  \/* r=a^b *\/$/;"	p	signature:(gsl_complex a, double b)
gsl_complex_rect	/usr/local/gsl/include/gsl/gsl_complex_math.h	/^INLINE_DECL gsl_complex gsl_complex_rect (double x, double y);  \/* r= real+i*imag *\/$/;"	p	signature:(double x, double y)
gsl_complex_rect	/usr/local/gsl/include/gsl/gsl_complex_math.h	/^gsl_complex_rect (double x, double y)$/;"	f	signature:(double x, double y)
gsl_complex_sec	/usr/local/gsl/include/gsl/gsl_complex_math.h	/^gsl_complex gsl_complex_sec (gsl_complex a);  \/* r=sec(a) *\/$/;"	p	signature:(gsl_complex a)
gsl_complex_sech	/usr/local/gsl/include/gsl/gsl_complex_math.h	/^gsl_complex gsl_complex_sech (gsl_complex a);  \/* r=sech(a) *\/$/;"	p	signature:(gsl_complex a)
gsl_complex_sin	/usr/local/gsl/include/gsl/gsl_complex_math.h	/^gsl_complex gsl_complex_sin (gsl_complex a);  \/* r=sin(a) *\/$/;"	p	signature:(gsl_complex a)
gsl_complex_sinh	/usr/local/gsl/include/gsl/gsl_complex_math.h	/^gsl_complex gsl_complex_sinh (gsl_complex a);  \/* r=sinh(a) *\/$/;"	p	signature:(gsl_complex a)
gsl_complex_sqrt	/usr/local/gsl/include/gsl/gsl_complex_math.h	/^gsl_complex gsl_complex_sqrt (gsl_complex z);  \/* r=sqrt(z) *\/$/;"	p	signature:(gsl_complex z)
gsl_complex_sqrt_real	/usr/local/gsl/include/gsl/gsl_complex_math.h	/^gsl_complex gsl_complex_sqrt_real (double x);  \/* r=sqrt(x) (x<0 ok) *\/$/;"	p	signature:(double x)
gsl_complex_sub	/usr/local/gsl/include/gsl/gsl_complex_math.h	/^gsl_complex gsl_complex_sub (gsl_complex a, gsl_complex b);  \/* r=a-b *\/$/;"	p	signature:(gsl_complex a, gsl_complex b)
gsl_complex_sub_imag	/usr/local/gsl/include/gsl/gsl_complex_math.h	/^gsl_complex gsl_complex_sub_imag (gsl_complex a, double y);  \/* r=a-iy *\/$/;"	p	signature:(gsl_complex a, double y)
gsl_complex_sub_real	/usr/local/gsl/include/gsl/gsl_complex_math.h	/^gsl_complex gsl_complex_sub_real (gsl_complex a, double x);  \/* r=a-x *\/$/;"	p	signature:(gsl_complex a, double x)
gsl_complex_tan	/usr/local/gsl/include/gsl/gsl_complex_math.h	/^gsl_complex gsl_complex_tan (gsl_complex a);  \/* r=tan(a) *\/$/;"	p	signature:(gsl_complex a)
gsl_complex_tanh	/usr/local/gsl/include/gsl/gsl_complex_math.h	/^gsl_complex gsl_complex_tanh (gsl_complex a);  \/* r=tanh(a) *\/$/;"	p	signature:(gsl_complex a)
gsl_const_complex_packed	/usr/local/gsl/include/gsl/gsl_complex.h	/^typedef const double *       gsl_const_complex_packed ;$/;"	t
gsl_const_complex_packed_array	/usr/local/gsl/include/gsl/gsl_complex.h	/^typedef const double *       gsl_const_complex_packed_array ;$/;"	t
gsl_const_complex_packed_array_float	/usr/local/gsl/include/gsl/gsl_complex.h	/^typedef const float *        gsl_const_complex_packed_array_float  ;$/;"	t
gsl_const_complex_packed_array_long_double	/usr/local/gsl/include/gsl/gsl_complex.h	/^typedef const long double *  gsl_const_complex_packed_array_long_double ;$/;"	t
gsl_const_complex_packed_float	/usr/local/gsl/include/gsl/gsl_complex.h	/^typedef const float *        gsl_const_complex_packed_float  ;$/;"	t
gsl_const_complex_packed_float_ptr	/usr/local/gsl/include/gsl/gsl_complex.h	/^typedef const float *        gsl_const_complex_packed_float_ptr  ;$/;"	t
gsl_const_complex_packed_long_double	/usr/local/gsl/include/gsl/gsl_complex.h	/^typedef const long double *  gsl_const_complex_packed_long_double ;$/;"	t
gsl_const_complex_packed_long_double_ptr	/usr/local/gsl/include/gsl/gsl_complex.h	/^typedef const long double *  gsl_const_complex_packed_long_double_ptr ;$/;"	t
gsl_const_complex_packed_ptr	/usr/local/gsl/include/gsl/gsl_complex.h	/^typedef const double *       gsl_const_complex_packed_ptr ;$/;"	t
gsl_deriv_backward	/usr/local/gsl/include/gsl/gsl_deriv.h	/^int gsl_deriv_backward (const gsl_function *f,$/;"	p	signature:(const gsl_function *f, double x, double h, double *result, double *abserr)
gsl_deriv_central	/usr/local/gsl/include/gsl/gsl_deriv.h	/^int gsl_deriv_central (const gsl_function *f,$/;"	p	signature:(const gsl_function *f, double x, double h, double *result, double *abserr)
gsl_deriv_forward	/usr/local/gsl/include/gsl/gsl_deriv.h	/^int gsl_deriv_forward (const gsl_function *f,$/;"	p	signature:(const gsl_function *f, double x, double h, double *result, double *abserr)
gsl_dft_complex_backward	/usr/local/gsl/include/gsl/gsl_dft_complex.h	/^int gsl_dft_complex_backward (const double data[], const size_t stride, const size_t n,$/;"	p	signature:(const double data[], const size_t stride, const size_t n, double result[])
gsl_dft_complex_float_backward	/usr/local/gsl/include/gsl/gsl_dft_complex_float.h	/^int gsl_dft_complex_float_backward (const float data[], const size_t stride, const size_t n,$/;"	p	signature:(const float data[], const size_t stride, const size_t n, float result[])
gsl_dft_complex_float_forward	/usr/local/gsl/include/gsl/gsl_dft_complex_float.h	/^int gsl_dft_complex_float_forward (const float data[], const size_t stride, const size_t n,$/;"	p	signature:(const float data[], const size_t stride, const size_t n, float result[])
gsl_dft_complex_float_inverse	/usr/local/gsl/include/gsl/gsl_dft_complex_float.h	/^int gsl_dft_complex_float_inverse (const float data[], const size_t stride, const size_t n,$/;"	p	signature:(const float data[], const size_t stride, const size_t n, float result[])
gsl_dft_complex_float_transform	/usr/local/gsl/include/gsl/gsl_dft_complex_float.h	/^int gsl_dft_complex_float_transform (const float data[], const size_t stride, const size_t n,$/;"	p	signature:(const float data[], const size_t stride, const size_t n, float result[], const gsl_fft_direction sign)
gsl_dft_complex_forward	/usr/local/gsl/include/gsl/gsl_dft_complex.h	/^int gsl_dft_complex_forward (const double data[], const size_t stride, const size_t n,$/;"	p	signature:(const double data[], const size_t stride, const size_t n, double result[])
gsl_dft_complex_inverse	/usr/local/gsl/include/gsl/gsl_dft_complex.h	/^int gsl_dft_complex_inverse (const double data[], const size_t stride, const size_t n,$/;"	p	signature:(const double data[], const size_t stride, const size_t n, double result[])
gsl_dft_complex_transform	/usr/local/gsl/include/gsl/gsl_dft_complex.h	/^int gsl_dft_complex_transform (const double data[], const size_t stride, const size_t n,$/;"	p	signature:(const double data[], const size_t stride, const size_t n, double result[], const gsl_fft_direction sign)
gsl_dht	/usr/local/gsl/include/gsl/gsl_dht.h	/^typedef struct gsl_dht_struct gsl_dht;$/;"	t	typeref:struct:gsl_dht_struct
gsl_dht_alloc	/usr/local/gsl/include/gsl/gsl_dht.h	/^gsl_dht * gsl_dht_alloc(size_t size);$/;"	p	signature:(size_t size)
gsl_dht_apply	/usr/local/gsl/include/gsl/gsl_dht.h	/^int gsl_dht_apply(const gsl_dht * t, double * f_in, double * f_out);$/;"	p	signature:(const gsl_dht * t, double * f_in, double * f_out)
gsl_dht_free	/usr/local/gsl/include/gsl/gsl_dht.h	/^void gsl_dht_free(gsl_dht * t);$/;"	p	signature:(gsl_dht * t)
gsl_dht_init	/usr/local/gsl/include/gsl/gsl_dht.h	/^int gsl_dht_init(gsl_dht * t, double nu, double xmax);$/;"	p	signature:(gsl_dht * t, double nu, double xmax)
gsl_dht_k_sample	/usr/local/gsl/include/gsl/gsl_dht.h	/^double gsl_dht_k_sample(const gsl_dht * t, int n);$/;"	p	signature:(const gsl_dht * t, int n)
gsl_dht_new	/usr/local/gsl/include/gsl/gsl_dht.h	/^gsl_dht * gsl_dht_new(size_t size, double nu, double xmax);$/;"	p	signature:(size_t size, double nu, double xmax)
gsl_dht_struct	/usr/local/gsl/include/gsl/gsl_dht.h	/^struct gsl_dht_struct {$/;"	s
gsl_dht_struct::J2	/usr/local/gsl/include/gsl/gsl_dht.h	/^  double *  J2;    \/* transform denominator, J_{nu+1}^2(j_m)         *\/$/;"	m	struct:gsl_dht_struct	access:public
gsl_dht_struct::Jjj	/usr/local/gsl/include/gsl/gsl_dht.h	/^  double *  Jjj;   \/* transform numerator, J_nu(j_i j_m \/ j_N)       *\/$/;"	m	struct:gsl_dht_struct	access:public
gsl_dht_struct::j	/usr/local/gsl/include/gsl/gsl_dht.h	/^  double *  j;     \/* array of computed J_nu zeros, j_{nu,s} = j[s]  *\/$/;"	m	struct:gsl_dht_struct	access:public
gsl_dht_struct::kmax	/usr/local/gsl/include/gsl/gsl_dht.h	/^  double    kmax;  \/* the upper limit to the k-sampling domain       *\/$/;"	m	struct:gsl_dht_struct	access:public
gsl_dht_struct::nu	/usr/local/gsl/include/gsl/gsl_dht.h	/^  double    nu;    \/* Bessel function order                          *\/$/;"	m	struct:gsl_dht_struct	access:public
gsl_dht_struct::size	/usr/local/gsl/include/gsl/gsl_dht.h	/^  size_t    size;  \/* size of the sample arrays to be transformed    *\/$/;"	m	struct:gsl_dht_struct	access:public
gsl_dht_struct::xmax	/usr/local/gsl/include/gsl/gsl_dht.h	/^  double    xmax;  \/* the upper limit to the x-sampling domain       *\/$/;"	m	struct:gsl_dht_struct	access:public
gsl_dht_x_sample	/usr/local/gsl/include/gsl/gsl_dht.h	/^double gsl_dht_x_sample(const gsl_dht * t, int n);$/;"	p	signature:(const gsl_dht * t, int n)
gsl_diff_backward	/usr/local/gsl/include/gsl/gsl_diff.h	/^int gsl_diff_backward (const gsl_function *f,$/;"	p	signature:(const gsl_function *f, double x, double *result, double *abserr)
gsl_diff_central	/usr/local/gsl/include/gsl/gsl_diff.h	/^int gsl_diff_central (const gsl_function *f,$/;"	p	signature:(const gsl_function *f, double x, double *result, double *abserr)
gsl_diff_forward	/usr/local/gsl/include/gsl/gsl_diff.h	/^int gsl_diff_forward (const gsl_function *f,$/;"	p	signature:(const gsl_function *f, double x, double *result, double *abserr)
gsl_eigen_francis	/usr/local/gsl/include/gsl/gsl_eigen.h	/^int gsl_eigen_francis (gsl_matrix * H, gsl_vector_complex * eval,$/;"	p	signature:(gsl_matrix * H, gsl_vector_complex * eval, gsl_eigen_francis_workspace * w)
gsl_eigen_francis_T	/usr/local/gsl/include/gsl/gsl_eigen.h	/^void gsl_eigen_francis_T (const int compute_t,$/;"	p	signature:(const int compute_t, gsl_eigen_francis_workspace * w)
gsl_eigen_francis_Z	/usr/local/gsl/include/gsl/gsl_eigen.h	/^int gsl_eigen_francis_Z (gsl_matrix * H, gsl_vector_complex * eval,$/;"	p	signature:(gsl_matrix * H, gsl_vector_complex * eval, gsl_matrix * Z, gsl_eigen_francis_workspace * w)
gsl_eigen_francis_alloc	/usr/local/gsl/include/gsl/gsl_eigen.h	/^gsl_eigen_francis_workspace * gsl_eigen_francis_alloc (void);$/;"	p	signature:(void)
gsl_eigen_francis_free	/usr/local/gsl/include/gsl/gsl_eigen.h	/^void gsl_eigen_francis_free (gsl_eigen_francis_workspace * w);$/;"	p	signature:(gsl_eigen_francis_workspace * w)
gsl_eigen_francis_workspace	/usr/local/gsl/include/gsl/gsl_eigen.h	/^} gsl_eigen_francis_workspace;$/;"	t	typeref:struct:__anon80
gsl_eigen_gen	/usr/local/gsl/include/gsl/gsl_eigen.h	/^int gsl_eigen_gen (gsl_matrix * A, gsl_matrix * B,$/;"	p	signature:(gsl_matrix * A, gsl_matrix * B, gsl_vector_complex * alpha, gsl_vector * beta, gsl_eigen_gen_workspace * w)
gsl_eigen_gen_QZ	/usr/local/gsl/include/gsl/gsl_eigen.h	/^int gsl_eigen_gen_QZ (gsl_matrix * A, gsl_matrix * B,$/;"	p	signature:(gsl_matrix * A, gsl_matrix * B, gsl_vector_complex * alpha, gsl_vector * beta, gsl_matrix * Q, gsl_matrix * Z, gsl_eigen_gen_workspace * w)
gsl_eigen_gen_alloc	/usr/local/gsl/include/gsl/gsl_eigen.h	/^gsl_eigen_gen_workspace * gsl_eigen_gen_alloc (const size_t n);$/;"	p	signature:(const size_t n)
gsl_eigen_gen_free	/usr/local/gsl/include/gsl/gsl_eigen.h	/^void gsl_eigen_gen_free (gsl_eigen_gen_workspace * w);$/;"	p	signature:(gsl_eigen_gen_workspace * w)
gsl_eigen_gen_params	/usr/local/gsl/include/gsl/gsl_eigen.h	/^void gsl_eigen_gen_params (const int compute_s, const int compute_t,$/;"	p	signature:(const int compute_s, const int compute_t, const int balance, gsl_eigen_gen_workspace * w)
gsl_eigen_gen_workspace	/usr/local/gsl/include/gsl/gsl_eigen.h	/^} gsl_eigen_gen_workspace;$/;"	t	typeref:struct:__anon87
gsl_eigen_genherm	/usr/local/gsl/include/gsl/gsl_eigen.h	/^int gsl_eigen_genherm (gsl_matrix_complex * A, gsl_matrix_complex * B,$/;"	p	signature:(gsl_matrix_complex * A, gsl_matrix_complex * B, gsl_vector * eval, gsl_eigen_genherm_workspace * w)
gsl_eigen_genherm_alloc	/usr/local/gsl/include/gsl/gsl_eigen.h	/^gsl_eigen_genherm_workspace * gsl_eigen_genherm_alloc (const size_t n);$/;"	p	signature:(const size_t n)
gsl_eigen_genherm_free	/usr/local/gsl/include/gsl/gsl_eigen.h	/^void gsl_eigen_genherm_free (gsl_eigen_genherm_workspace * w);$/;"	p	signature:(gsl_eigen_genherm_workspace * w)
gsl_eigen_genherm_standardize	/usr/local/gsl/include/gsl/gsl_eigen.h	/^int gsl_eigen_genherm_standardize (gsl_matrix_complex * A,$/;"	p	signature:(gsl_matrix_complex * A, const gsl_matrix_complex * B)
gsl_eigen_genherm_workspace	/usr/local/gsl/include/gsl/gsl_eigen.h	/^} gsl_eigen_genherm_workspace;$/;"	t	typeref:struct:__anon85
gsl_eigen_genhermv	/usr/local/gsl/include/gsl/gsl_eigen.h	/^int gsl_eigen_genhermv (gsl_matrix_complex * A, gsl_matrix_complex * B,$/;"	p	signature:(gsl_matrix_complex * A, gsl_matrix_complex * B, gsl_vector * eval, gsl_matrix_complex * evec, gsl_eigen_genhermv_workspace * w)
gsl_eigen_genhermv_alloc	/usr/local/gsl/include/gsl/gsl_eigen.h	/^gsl_eigen_genhermv_workspace * gsl_eigen_genhermv_alloc (const size_t n);$/;"	p	signature:(const size_t n)
gsl_eigen_genhermv_free	/usr/local/gsl/include/gsl/gsl_eigen.h	/^void gsl_eigen_genhermv_free (gsl_eigen_genhermv_workspace * w);$/;"	p	signature:(gsl_eigen_genhermv_workspace * w)
gsl_eigen_genhermv_sort	/usr/local/gsl/include/gsl/gsl_eigen.h	/^int gsl_eigen_genhermv_sort (gsl_vector * eval, gsl_matrix_complex * evec, $/;"	p	signature:(gsl_vector * eval, gsl_matrix_complex * evec, gsl_eigen_sort_t sort_type)
gsl_eigen_genhermv_workspace	/usr/local/gsl/include/gsl/gsl_eigen.h	/^} gsl_eigen_genhermv_workspace;$/;"	t	typeref:struct:__anon86
gsl_eigen_gensymm	/usr/local/gsl/include/gsl/gsl_eigen.h	/^int gsl_eigen_gensymm (gsl_matrix * A, gsl_matrix * B,$/;"	p	signature:(gsl_matrix * A, gsl_matrix * B, gsl_vector * eval, gsl_eigen_gensymm_workspace * w)
gsl_eigen_gensymm_alloc	/usr/local/gsl/include/gsl/gsl_eigen.h	/^gsl_eigen_gensymm_workspace * gsl_eigen_gensymm_alloc (const size_t n);$/;"	p	signature:(const size_t n)
gsl_eigen_gensymm_free	/usr/local/gsl/include/gsl/gsl_eigen.h	/^void gsl_eigen_gensymm_free (gsl_eigen_gensymm_workspace * w);$/;"	p	signature:(gsl_eigen_gensymm_workspace * w)
gsl_eigen_gensymm_standardize	/usr/local/gsl/include/gsl/gsl_eigen.h	/^int gsl_eigen_gensymm_standardize (gsl_matrix * A, const gsl_matrix * B);$/;"	p	signature:(gsl_matrix * A, const gsl_matrix * B)
gsl_eigen_gensymm_workspace	/usr/local/gsl/include/gsl/gsl_eigen.h	/^} gsl_eigen_gensymm_workspace;$/;"	t	typeref:struct:__anon83
gsl_eigen_gensymmv	/usr/local/gsl/include/gsl/gsl_eigen.h	/^int gsl_eigen_gensymmv (gsl_matrix * A, gsl_matrix * B,$/;"	p	signature:(gsl_matrix * A, gsl_matrix * B, gsl_vector * eval, gsl_matrix * evec, gsl_eigen_gensymmv_workspace * w)
gsl_eigen_gensymmv_alloc	/usr/local/gsl/include/gsl/gsl_eigen.h	/^gsl_eigen_gensymmv_workspace * gsl_eigen_gensymmv_alloc (const size_t n);$/;"	p	signature:(const size_t n)
gsl_eigen_gensymmv_free	/usr/local/gsl/include/gsl/gsl_eigen.h	/^void gsl_eigen_gensymmv_free (gsl_eigen_gensymmv_workspace * w);$/;"	p	signature:(gsl_eigen_gensymmv_workspace * w)
gsl_eigen_gensymmv_sort	/usr/local/gsl/include/gsl/gsl_eigen.h	/^int gsl_eigen_gensymmv_sort (gsl_vector * eval, gsl_matrix * evec, $/;"	p	signature:(gsl_vector * eval, gsl_matrix * evec, gsl_eigen_sort_t sort_type)
gsl_eigen_gensymmv_workspace	/usr/local/gsl/include/gsl/gsl_eigen.h	/^} gsl_eigen_gensymmv_workspace;$/;"	t	typeref:struct:__anon84
gsl_eigen_genv	/usr/local/gsl/include/gsl/gsl_eigen.h	/^int gsl_eigen_genv (gsl_matrix * A, gsl_matrix * B,$/;"	p	signature:(gsl_matrix * A, gsl_matrix * B, gsl_vector_complex * alpha, gsl_vector * beta, gsl_matrix_complex * evec, gsl_eigen_genv_workspace * w)
gsl_eigen_genv_QZ	/usr/local/gsl/include/gsl/gsl_eigen.h	/^int gsl_eigen_genv_QZ (gsl_matrix * A, gsl_matrix * B,$/;"	p	signature:(gsl_matrix * A, gsl_matrix * B, gsl_vector_complex * alpha, gsl_vector * beta, gsl_matrix_complex * evec, gsl_matrix * Q, gsl_matrix * Z, gsl_eigen_genv_workspace * w)
gsl_eigen_genv_alloc	/usr/local/gsl/include/gsl/gsl_eigen.h	/^gsl_eigen_genv_workspace * gsl_eigen_genv_alloc (const size_t n);$/;"	p	signature:(const size_t n)
gsl_eigen_genv_free	/usr/local/gsl/include/gsl/gsl_eigen.h	/^void gsl_eigen_genv_free (gsl_eigen_genv_workspace * w);$/;"	p	signature:(gsl_eigen_genv_workspace * w)
gsl_eigen_genv_sort	/usr/local/gsl/include/gsl/gsl_eigen.h	/^int gsl_eigen_genv_sort (gsl_vector_complex * alpha, gsl_vector * beta,$/;"	p	signature:(gsl_vector_complex * alpha, gsl_vector * beta, gsl_matrix_complex * evec, gsl_eigen_sort_t sort_type)
gsl_eigen_genv_workspace	/usr/local/gsl/include/gsl/gsl_eigen.h	/^} gsl_eigen_genv_workspace;$/;"	t	typeref:struct:__anon88
gsl_eigen_herm	/usr/local/gsl/include/gsl/gsl_eigen.h	/^int gsl_eigen_herm (gsl_matrix_complex * A, gsl_vector * eval,$/;"	p	signature:(gsl_matrix_complex * A, gsl_vector * eval, gsl_eigen_herm_workspace * w)
gsl_eigen_herm_alloc	/usr/local/gsl/include/gsl/gsl_eigen.h	/^gsl_eigen_herm_workspace * gsl_eigen_herm_alloc (const size_t n);$/;"	p	signature:(const size_t n)
gsl_eigen_herm_free	/usr/local/gsl/include/gsl/gsl_eigen.h	/^void gsl_eigen_herm_free (gsl_eigen_herm_workspace * w);$/;"	p	signature:(gsl_eigen_herm_workspace * w)
gsl_eigen_herm_workspace	/usr/local/gsl/include/gsl/gsl_eigen.h	/^} gsl_eigen_herm_workspace;$/;"	t	typeref:struct:__anon78
gsl_eigen_hermv	/usr/local/gsl/include/gsl/gsl_eigen.h	/^int gsl_eigen_hermv (gsl_matrix_complex * A, gsl_vector * eval, $/;"	p	signature:(gsl_matrix_complex * A, gsl_vector * eval, gsl_matrix_complex * evec, gsl_eigen_hermv_workspace * w)
gsl_eigen_hermv_alloc	/usr/local/gsl/include/gsl/gsl_eigen.h	/^gsl_eigen_hermv_workspace * gsl_eigen_hermv_alloc (const size_t n);$/;"	p	signature:(const size_t n)
gsl_eigen_hermv_free	/usr/local/gsl/include/gsl/gsl_eigen.h	/^void gsl_eigen_hermv_free (gsl_eigen_hermv_workspace * w);$/;"	p	signature:(gsl_eigen_hermv_workspace * w)
gsl_eigen_hermv_sort	/usr/local/gsl/include/gsl/gsl_eigen.h	/^int gsl_eigen_hermv_sort(gsl_vector * eval, gsl_matrix_complex * evec,$/;"	p	signature:(gsl_vector * eval, gsl_matrix_complex * evec, gsl_eigen_sort_t sort_type)
gsl_eigen_hermv_workspace	/usr/local/gsl/include/gsl/gsl_eigen.h	/^} gsl_eigen_hermv_workspace;$/;"	t	typeref:struct:__anon79
gsl_eigen_invert_jacobi	/usr/local/gsl/include/gsl/gsl_eigen.h	/^gsl_eigen_invert_jacobi(const gsl_matrix * matrix,$/;"	p	signature:(const gsl_matrix * matrix, gsl_matrix * ainv, unsigned int max_rot)
gsl_eigen_jacobi	/usr/local/gsl/include/gsl/gsl_eigen.h	/^gsl_eigen_jacobi(gsl_matrix * matrix,$/;"	p	signature:(gsl_matrix * matrix, gsl_vector * eval, gsl_matrix * evec, unsigned int max_rot, unsigned int * nrot)
gsl_eigen_nonsymm	/usr/local/gsl/include/gsl/gsl_eigen.h	/^int gsl_eigen_nonsymm (gsl_matrix * A, gsl_vector_complex * eval,$/;"	p	signature:(gsl_matrix * A, gsl_vector_complex * eval, gsl_eigen_nonsymm_workspace * w)
gsl_eigen_nonsymm_Z	/usr/local/gsl/include/gsl/gsl_eigen.h	/^int gsl_eigen_nonsymm_Z (gsl_matrix * A, gsl_vector_complex * eval,$/;"	p	signature:(gsl_matrix * A, gsl_vector_complex * eval, gsl_matrix * Z, gsl_eigen_nonsymm_workspace * w)
gsl_eigen_nonsymm_alloc	/usr/local/gsl/include/gsl/gsl_eigen.h	/^gsl_eigen_nonsymm_workspace * gsl_eigen_nonsymm_alloc (const size_t n);$/;"	p	signature:(const size_t n)
gsl_eigen_nonsymm_free	/usr/local/gsl/include/gsl/gsl_eigen.h	/^void gsl_eigen_nonsymm_free (gsl_eigen_nonsymm_workspace * w);$/;"	p	signature:(gsl_eigen_nonsymm_workspace * w)
gsl_eigen_nonsymm_params	/usr/local/gsl/include/gsl/gsl_eigen.h	/^void gsl_eigen_nonsymm_params (const int compute_t, const int balance,$/;"	p	signature:(const int compute_t, const int balance, gsl_eigen_nonsymm_workspace *w)
gsl_eigen_nonsymm_workspace	/usr/local/gsl/include/gsl/gsl_eigen.h	/^} gsl_eigen_nonsymm_workspace;$/;"	t	typeref:struct:__anon81
gsl_eigen_nonsymmv	/usr/local/gsl/include/gsl/gsl_eigen.h	/^int gsl_eigen_nonsymmv (gsl_matrix * A, gsl_vector_complex * eval,$/;"	p	signature:(gsl_matrix * A, gsl_vector_complex * eval, gsl_matrix_complex * evec, gsl_eigen_nonsymmv_workspace * w)
gsl_eigen_nonsymmv_Z	/usr/local/gsl/include/gsl/gsl_eigen.h	/^int gsl_eigen_nonsymmv_Z (gsl_matrix * A, gsl_vector_complex * eval,$/;"	p	signature:(gsl_matrix * A, gsl_vector_complex * eval, gsl_matrix_complex * evec, gsl_matrix * Z, gsl_eigen_nonsymmv_workspace * w)
gsl_eigen_nonsymmv_alloc	/usr/local/gsl/include/gsl/gsl_eigen.h	/^gsl_eigen_nonsymmv_workspace * gsl_eigen_nonsymmv_alloc (const size_t n);$/;"	p	signature:(const size_t n)
gsl_eigen_nonsymmv_free	/usr/local/gsl/include/gsl/gsl_eigen.h	/^void gsl_eigen_nonsymmv_free (gsl_eigen_nonsymmv_workspace * w);$/;"	p	signature:(gsl_eigen_nonsymmv_workspace * w)
gsl_eigen_nonsymmv_sort	/usr/local/gsl/include/gsl/gsl_eigen.h	/^int gsl_eigen_nonsymmv_sort(gsl_vector_complex * eval,$/;"	p	signature:(gsl_vector_complex * eval, gsl_matrix_complex * evec, gsl_eigen_sort_t sort_type)
gsl_eigen_nonsymmv_workspace	/usr/local/gsl/include/gsl/gsl_eigen.h	/^} gsl_eigen_nonsymmv_workspace;$/;"	t	typeref:struct:__anon82
gsl_eigen_sort_t	/usr/local/gsl/include/gsl/gsl_eigen.h	/^gsl_eigen_sort_t;$/;"	t	typeref:enum:__anon89
gsl_eigen_symm	/usr/local/gsl/include/gsl/gsl_eigen.h	/^int gsl_eigen_symm (gsl_matrix * A, gsl_vector * eval, gsl_eigen_symm_workspace * w);$/;"	p	signature:(gsl_matrix * A, gsl_vector * eval, gsl_eigen_symm_workspace * w)
gsl_eigen_symm_alloc	/usr/local/gsl/include/gsl/gsl_eigen.h	/^gsl_eigen_symm_workspace * gsl_eigen_symm_alloc (const size_t n);$/;"	p	signature:(const size_t n)
gsl_eigen_symm_free	/usr/local/gsl/include/gsl/gsl_eigen.h	/^void gsl_eigen_symm_free (gsl_eigen_symm_workspace * w);$/;"	p	signature:(gsl_eigen_symm_workspace * w)
gsl_eigen_symm_workspace	/usr/local/gsl/include/gsl/gsl_eigen.h	/^} gsl_eigen_symm_workspace;$/;"	t	typeref:struct:__anon76
gsl_eigen_symmv	/usr/local/gsl/include/gsl/gsl_eigen.h	/^int gsl_eigen_symmv (gsl_matrix * A, gsl_vector * eval, gsl_matrix * evec, gsl_eigen_symmv_workspace * w);$/;"	p	signature:(gsl_matrix * A, gsl_vector * eval, gsl_matrix * evec, gsl_eigen_symmv_workspace * w)
gsl_eigen_symmv_alloc	/usr/local/gsl/include/gsl/gsl_eigen.h	/^gsl_eigen_symmv_workspace * gsl_eigen_symmv_alloc (const size_t n);$/;"	p	signature:(const size_t n)
gsl_eigen_symmv_free	/usr/local/gsl/include/gsl/gsl_eigen.h	/^void gsl_eigen_symmv_free (gsl_eigen_symmv_workspace * w);$/;"	p	signature:(gsl_eigen_symmv_workspace * w)
gsl_eigen_symmv_sort	/usr/local/gsl/include/gsl/gsl_eigen.h	/^int gsl_eigen_symmv_sort(gsl_vector * eval, gsl_matrix * evec,$/;"	p	signature:(gsl_vector * eval, gsl_matrix * evec, gsl_eigen_sort_t sort_type)
gsl_eigen_symmv_workspace	/usr/local/gsl/include/gsl/gsl_eigen.h	/^} gsl_eigen_symmv_workspace;$/;"	t	typeref:struct:__anon77
gsl_error	/usr/local/gsl/include/gsl/gsl_errno.h	/^void gsl_error (const char * reason, const char * file, int line,$/;"	p	signature:(const char * reason, const char * file, int line, int gsl_errno)
gsl_error_handler_t	/usr/local/gsl/include/gsl/gsl_errno.h	/^typedef void gsl_error_handler_t (const char * reason, const char * file,$/;"	t
gsl_expm1	/usr/local/gsl/include/gsl/gsl_sys.h	/^double gsl_expm1 (const double x);$/;"	p	signature:(const double x)
gsl_fcmp	/usr/local/gsl/include/gsl/gsl_sys.h	/^int gsl_fcmp (const double x1, const double x2, const double epsilon);$/;"	p	signature:(const double x1, const double x2, const double epsilon)
gsl_fdiv	/usr/local/gsl/include/gsl/gsl_sys.h	/^double gsl_fdiv (const double x, const double y);$/;"	p	signature:(const double x, const double y)
gsl_fft_backward	/usr/local/gsl/include/gsl/gsl_fft.h	/^    gsl_fft_forward = -1, gsl_fft_backward = +1      $/;"	e	enum:__anon157
gsl_fft_complex_backward	/usr/local/gsl/include/gsl/gsl_fft_complex.h	/^int gsl_fft_complex_backward (gsl_complex_packed_array data,$/;"	p	signature:(gsl_complex_packed_array data, const size_t stride, const size_t n, const gsl_fft_complex_wavetable * wavetable, gsl_fft_complex_workspace * work)
gsl_fft_complex_float_backward	/usr/local/gsl/include/gsl/gsl_fft_complex_float.h	/^int gsl_fft_complex_float_backward (gsl_complex_packed_array_float data,$/;"	p	signature:(gsl_complex_packed_array_float data, const size_t stride, const size_t n, const gsl_fft_complex_wavetable_float * wavetable, gsl_fft_complex_workspace_float * work)
gsl_fft_complex_float_forward	/usr/local/gsl/include/gsl/gsl_fft_complex_float.h	/^int gsl_fft_complex_float_forward (gsl_complex_packed_array_float data,$/;"	p	signature:(gsl_complex_packed_array_float data, const size_t stride, const size_t n, const gsl_fft_complex_wavetable_float * wavetable, gsl_fft_complex_workspace_float * work)
gsl_fft_complex_float_inverse	/usr/local/gsl/include/gsl/gsl_fft_complex_float.h	/^int gsl_fft_complex_float_inverse (gsl_complex_packed_array_float data,$/;"	p	signature:(gsl_complex_packed_array_float data, const size_t stride, const size_t n, const gsl_fft_complex_wavetable_float * wavetable, gsl_fft_complex_workspace_float * work)
gsl_fft_complex_float_memcpy	/usr/local/gsl/include/gsl/gsl_fft_complex_float.h	/^int gsl_fft_complex_float_memcpy (gsl_fft_complex_wavetable_float * dest,$/;"	p	signature:(gsl_fft_complex_wavetable_float * dest, gsl_fft_complex_wavetable_float * src)
gsl_fft_complex_float_radix2_backward	/usr/local/gsl/include/gsl/gsl_fft_complex_float.h	/^int gsl_fft_complex_float_radix2_backward (gsl_complex_packed_array_float data,$/;"	p	signature:(gsl_complex_packed_array_float data, const size_t stride, const size_t n)
gsl_fft_complex_float_radix2_dif_backward	/usr/local/gsl/include/gsl/gsl_fft_complex_float.h	/^int gsl_fft_complex_float_radix2_dif_backward (gsl_complex_packed_array_float data,$/;"	p	signature:(gsl_complex_packed_array_float data, const size_t stride, const size_t n)
gsl_fft_complex_float_radix2_dif_forward	/usr/local/gsl/include/gsl/gsl_fft_complex_float.h	/^int gsl_fft_complex_float_radix2_dif_forward (gsl_complex_packed_array_float data,$/;"	p	signature:(gsl_complex_packed_array_float data, const size_t stride, const size_t n)
gsl_fft_complex_float_radix2_dif_inverse	/usr/local/gsl/include/gsl/gsl_fft_complex_float.h	/^int gsl_fft_complex_float_radix2_dif_inverse (gsl_complex_packed_array_float data,$/;"	p	signature:(gsl_complex_packed_array_float data, const size_t stride, const size_t n)
gsl_fft_complex_float_radix2_dif_transform	/usr/local/gsl/include/gsl/gsl_fft_complex_float.h	/^int gsl_fft_complex_float_radix2_dif_transform (gsl_complex_packed_array_float data,$/;"	p	signature:(gsl_complex_packed_array_float data, const size_t stride, const size_t n, const gsl_fft_direction sign)
gsl_fft_complex_float_radix2_forward	/usr/local/gsl/include/gsl/gsl_fft_complex_float.h	/^int gsl_fft_complex_float_radix2_forward (gsl_complex_packed_array_float data,$/;"	p	signature:(gsl_complex_packed_array_float data, const size_t stride, const size_t n)
gsl_fft_complex_float_radix2_inverse	/usr/local/gsl/include/gsl/gsl_fft_complex_float.h	/^int gsl_fft_complex_float_radix2_inverse (gsl_complex_packed_array_float data,$/;"	p	signature:(gsl_complex_packed_array_float data, const size_t stride, const size_t n)
gsl_fft_complex_float_radix2_transform	/usr/local/gsl/include/gsl/gsl_fft_complex_float.h	/^int gsl_fft_complex_float_radix2_transform (gsl_complex_packed_array_float data,$/;"	p	signature:(gsl_complex_packed_array_float data, const size_t stride, const size_t n, const gsl_fft_direction sign)
gsl_fft_complex_float_transform	/usr/local/gsl/include/gsl/gsl_fft_complex_float.h	/^int gsl_fft_complex_float_transform (gsl_complex_packed_array_float data,$/;"	p	signature:(gsl_complex_packed_array_float data, const size_t stride, const size_t n, const gsl_fft_complex_wavetable_float * wavetable, gsl_fft_complex_workspace_float * work, const gsl_fft_direction sign)
gsl_fft_complex_forward	/usr/local/gsl/include/gsl/gsl_fft_complex.h	/^int gsl_fft_complex_forward (gsl_complex_packed_array data,$/;"	p	signature:(gsl_complex_packed_array data, const size_t stride, const size_t n, const gsl_fft_complex_wavetable * wavetable, gsl_fft_complex_workspace * work)
gsl_fft_complex_inverse	/usr/local/gsl/include/gsl/gsl_fft_complex.h	/^int gsl_fft_complex_inverse (gsl_complex_packed_array data,$/;"	p	signature:(gsl_complex_packed_array data, const size_t stride, const size_t n, const gsl_fft_complex_wavetable * wavetable, gsl_fft_complex_workspace * work)
gsl_fft_complex_memcpy	/usr/local/gsl/include/gsl/gsl_fft_complex.h	/^int gsl_fft_complex_memcpy (gsl_fft_complex_wavetable * dest,$/;"	p	signature:(gsl_fft_complex_wavetable * dest, gsl_fft_complex_wavetable * src)
gsl_fft_complex_radix2_backward	/usr/local/gsl/include/gsl/gsl_fft_complex.h	/^int gsl_fft_complex_radix2_backward (gsl_complex_packed_array data,$/;"	p	signature:(gsl_complex_packed_array data, const size_t stride, const size_t n)
gsl_fft_complex_radix2_dif_backward	/usr/local/gsl/include/gsl/gsl_fft_complex.h	/^int gsl_fft_complex_radix2_dif_backward (gsl_complex_packed_array data,$/;"	p	signature:(gsl_complex_packed_array data, const size_t stride, const size_t n)
gsl_fft_complex_radix2_dif_forward	/usr/local/gsl/include/gsl/gsl_fft_complex.h	/^int gsl_fft_complex_radix2_dif_forward (gsl_complex_packed_array data,$/;"	p	signature:(gsl_complex_packed_array data, const size_t stride, const size_t n)
gsl_fft_complex_radix2_dif_inverse	/usr/local/gsl/include/gsl/gsl_fft_complex.h	/^int gsl_fft_complex_radix2_dif_inverse (gsl_complex_packed_array data,$/;"	p	signature:(gsl_complex_packed_array data, const size_t stride, const size_t n)
gsl_fft_complex_radix2_dif_transform	/usr/local/gsl/include/gsl/gsl_fft_complex.h	/^int gsl_fft_complex_radix2_dif_transform (gsl_complex_packed_array data,$/;"	p	signature:(gsl_complex_packed_array data, const size_t stride, const size_t n, const gsl_fft_direction sign)
gsl_fft_complex_radix2_forward	/usr/local/gsl/include/gsl/gsl_fft_complex.h	/^int gsl_fft_complex_radix2_forward (gsl_complex_packed_array data,$/;"	p	signature:(gsl_complex_packed_array data, const size_t stride, const size_t n)
gsl_fft_complex_radix2_inverse	/usr/local/gsl/include/gsl/gsl_fft_complex.h	/^int gsl_fft_complex_radix2_inverse (gsl_complex_packed_array data,$/;"	p	signature:(gsl_complex_packed_array data, const size_t stride, const size_t n)
gsl_fft_complex_radix2_transform	/usr/local/gsl/include/gsl/gsl_fft_complex.h	/^int gsl_fft_complex_radix2_transform (gsl_complex_packed_array data,$/;"	p	signature:(gsl_complex_packed_array data, const size_t stride, const size_t n, const gsl_fft_direction sign)
gsl_fft_complex_transform	/usr/local/gsl/include/gsl/gsl_fft_complex.h	/^int gsl_fft_complex_transform (gsl_complex_packed_array data,$/;"	p	signature:(gsl_complex_packed_array data, const size_t stride, const size_t n, const gsl_fft_complex_wavetable * wavetable, gsl_fft_complex_workspace * work, const gsl_fft_direction sign)
gsl_fft_complex_wavetable	/usr/local/gsl/include/gsl/gsl_fft_complex.h	/^gsl_fft_complex_wavetable;$/;"	t	typeref:struct:__anon1
gsl_fft_complex_wavetable_alloc	/usr/local/gsl/include/gsl/gsl_fft_complex.h	/^gsl_fft_complex_wavetable *gsl_fft_complex_wavetable_alloc (size_t n);$/;"	p	signature:(size_t n)
gsl_fft_complex_wavetable_float	/usr/local/gsl/include/gsl/gsl_fft_complex_float.h	/^gsl_fft_complex_wavetable_float;$/;"	t	typeref:struct:__anon16
gsl_fft_complex_wavetable_float_alloc	/usr/local/gsl/include/gsl/gsl_fft_complex_float.h	/^gsl_fft_complex_wavetable_float *gsl_fft_complex_wavetable_float_alloc (size_t n);$/;"	p	signature:(size_t n)
gsl_fft_complex_wavetable_float_free	/usr/local/gsl/include/gsl/gsl_fft_complex_float.h	/^void gsl_fft_complex_wavetable_float_free (gsl_fft_complex_wavetable_float * wavetable);$/;"	p	signature:(gsl_fft_complex_wavetable_float * wavetable)
gsl_fft_complex_wavetable_free	/usr/local/gsl/include/gsl/gsl_fft_complex.h	/^void gsl_fft_complex_wavetable_free (gsl_fft_complex_wavetable * wavetable);$/;"	p	signature:(gsl_fft_complex_wavetable * wavetable)
gsl_fft_complex_workspace	/usr/local/gsl/include/gsl/gsl_fft_complex.h	/^gsl_fft_complex_workspace;$/;"	t	typeref:struct:__anon2
gsl_fft_complex_workspace_alloc	/usr/local/gsl/include/gsl/gsl_fft_complex.h	/^gsl_fft_complex_workspace *gsl_fft_complex_workspace_alloc (size_t n);$/;"	p	signature:(size_t n)
gsl_fft_complex_workspace_float	/usr/local/gsl/include/gsl/gsl_fft_complex_float.h	/^gsl_fft_complex_workspace_float;$/;"	t	typeref:struct:__anon17
gsl_fft_complex_workspace_float_alloc	/usr/local/gsl/include/gsl/gsl_fft_complex_float.h	/^gsl_fft_complex_workspace_float *gsl_fft_complex_workspace_float_alloc (size_t n);$/;"	p	signature:(size_t n)
gsl_fft_complex_workspace_float_free	/usr/local/gsl/include/gsl/gsl_fft_complex_float.h	/^void gsl_fft_complex_workspace_float_free (gsl_fft_complex_workspace_float * workspace);$/;"	p	signature:(gsl_fft_complex_workspace_float * workspace)
gsl_fft_complex_workspace_free	/usr/local/gsl/include/gsl/gsl_fft_complex.h	/^void gsl_fft_complex_workspace_free (gsl_fft_complex_workspace * workspace);$/;"	p	signature:(gsl_fft_complex_workspace * workspace)
gsl_fft_direction	/usr/local/gsl/include/gsl/gsl_fft.h	/^gsl_fft_direction;$/;"	t	typeref:enum:__anon157
gsl_fft_forward	/usr/local/gsl/include/gsl/gsl_fft.h	/^    gsl_fft_forward = -1, gsl_fft_backward = +1      $/;"	e	enum:__anon157
gsl_fft_halfcomplex_backward	/usr/local/gsl/include/gsl/gsl_fft_halfcomplex.h	/^int gsl_fft_halfcomplex_backward (double data[], const size_t stride, const size_t n,$/;"	p	signature:(double data[], const size_t stride, const size_t n, const gsl_fft_halfcomplex_wavetable * wavetable, gsl_fft_real_workspace * work)
gsl_fft_halfcomplex_float_backward	/usr/local/gsl/include/gsl/gsl_fft_halfcomplex_float.h	/^int gsl_fft_halfcomplex_float_backward (float data[], const size_t stride, const size_t n,$/;"	p	signature:(float data[], const size_t stride, const size_t n, const gsl_fft_halfcomplex_wavetable_float * wavetable, gsl_fft_real_workspace_float * work)
gsl_fft_halfcomplex_float_inverse	/usr/local/gsl/include/gsl/gsl_fft_halfcomplex_float.h	/^int gsl_fft_halfcomplex_float_inverse (float data[], const size_t stride, const size_t n,$/;"	p	signature:(float data[], const size_t stride, const size_t n, const gsl_fft_halfcomplex_wavetable_float * wavetable, gsl_fft_real_workspace_float * work)
gsl_fft_halfcomplex_float_radix2_backward	/usr/local/gsl/include/gsl/gsl_fft_halfcomplex_float.h	/^int gsl_fft_halfcomplex_float_radix2_backward (float data[], const size_t stride, const size_t n);$/;"	p	signature:(float data[], const size_t stride, const size_t n)
gsl_fft_halfcomplex_float_radix2_inverse	/usr/local/gsl/include/gsl/gsl_fft_halfcomplex_float.h	/^int gsl_fft_halfcomplex_float_radix2_inverse (float data[], const size_t stride, const size_t n);$/;"	p	signature:(float data[], const size_t stride, const size_t n)
gsl_fft_halfcomplex_float_radix2_transform	/usr/local/gsl/include/gsl/gsl_fft_halfcomplex_float.h	/^int gsl_fft_halfcomplex_float_radix2_transform (float data[], const size_t stride, const size_t n);$/;"	p	signature:(float data[], const size_t stride, const size_t n)
gsl_fft_halfcomplex_float_radix2_unpack	/usr/local/gsl/include/gsl/gsl_fft_halfcomplex_float.h	/^gsl_fft_halfcomplex_float_radix2_unpack (const float halfcomplex_coefficient[],$/;"	p	signature:(const float halfcomplex_coefficient[], float complex_coefficient[], const size_t stride, const size_t n)
gsl_fft_halfcomplex_float_transform	/usr/local/gsl/include/gsl/gsl_fft_halfcomplex_float.h	/^int gsl_fft_halfcomplex_float_transform (float data[], const size_t stride, const size_t n,$/;"	p	signature:(float data[], const size_t stride, const size_t n, const gsl_fft_halfcomplex_wavetable_float * wavetable, gsl_fft_real_workspace_float * work)
gsl_fft_halfcomplex_float_unpack	/usr/local/gsl/include/gsl/gsl_fft_halfcomplex_float.h	/^gsl_fft_halfcomplex_float_unpack (const float halfcomplex_coefficient[],$/;"	p	signature:(const float halfcomplex_coefficient[], float complex_coefficient[], const size_t stride, const size_t n)
gsl_fft_halfcomplex_inverse	/usr/local/gsl/include/gsl/gsl_fft_halfcomplex.h	/^int gsl_fft_halfcomplex_inverse (double data[], const size_t stride, const size_t n,$/;"	p	signature:(double data[], const size_t stride, const size_t n, const gsl_fft_halfcomplex_wavetable * wavetable, gsl_fft_real_workspace * work)
gsl_fft_halfcomplex_radix2_backward	/usr/local/gsl/include/gsl/gsl_fft_halfcomplex.h	/^int gsl_fft_halfcomplex_radix2_backward (double data[], const size_t stride, const size_t n);$/;"	p	signature:(double data[], const size_t stride, const size_t n)
gsl_fft_halfcomplex_radix2_inverse	/usr/local/gsl/include/gsl/gsl_fft_halfcomplex.h	/^int gsl_fft_halfcomplex_radix2_inverse (double data[], const size_t stride, const size_t n);$/;"	p	signature:(double data[], const size_t stride, const size_t n)
gsl_fft_halfcomplex_radix2_transform	/usr/local/gsl/include/gsl/gsl_fft_halfcomplex.h	/^int gsl_fft_halfcomplex_radix2_transform (double data[], const size_t stride, const size_t n);$/;"	p	signature:(double data[], const size_t stride, const size_t n)
gsl_fft_halfcomplex_radix2_unpack	/usr/local/gsl/include/gsl/gsl_fft_halfcomplex.h	/^gsl_fft_halfcomplex_radix2_unpack (const double halfcomplex_coefficient[],$/;"	p	signature:(const double halfcomplex_coefficient[], double complex_coefficient[], const size_t stride, const size_t n)
gsl_fft_halfcomplex_transform	/usr/local/gsl/include/gsl/gsl_fft_halfcomplex.h	/^int gsl_fft_halfcomplex_transform (double data[], const size_t stride, const size_t n,$/;"	p	signature:(double data[], const size_t stride, const size_t n, const gsl_fft_halfcomplex_wavetable * wavetable, gsl_fft_real_workspace * work)
gsl_fft_halfcomplex_unpack	/usr/local/gsl/include/gsl/gsl_fft_halfcomplex.h	/^gsl_fft_halfcomplex_unpack (const double halfcomplex_coefficient[],$/;"	p	signature:(const double halfcomplex_coefficient[], double complex_coefficient[], const size_t stride, const size_t n)
gsl_fft_halfcomplex_wavetable	/usr/local/gsl/include/gsl/gsl_fft_halfcomplex.h	/^gsl_fft_halfcomplex_wavetable;$/;"	t	typeref:struct:__anon105
gsl_fft_halfcomplex_wavetable_alloc	/usr/local/gsl/include/gsl/gsl_fft_halfcomplex.h	/^gsl_fft_halfcomplex_wavetable * gsl_fft_halfcomplex_wavetable_alloc (size_t n);$/;"	p	signature:(size_t n)
gsl_fft_halfcomplex_wavetable_float	/usr/local/gsl/include/gsl/gsl_fft_halfcomplex_float.h	/^gsl_fft_halfcomplex_wavetable_float;$/;"	t	typeref:struct:__anon21
gsl_fft_halfcomplex_wavetable_float_alloc	/usr/local/gsl/include/gsl/gsl_fft_halfcomplex_float.h	/^gsl_fft_halfcomplex_wavetable_float * gsl_fft_halfcomplex_wavetable_float_alloc (size_t n);$/;"	p	signature:(size_t n)
gsl_fft_halfcomplex_wavetable_float_free	/usr/local/gsl/include/gsl/gsl_fft_halfcomplex_float.h	/^gsl_fft_halfcomplex_wavetable_float_free (gsl_fft_halfcomplex_wavetable_float * wavetable);$/;"	p	signature:(gsl_fft_halfcomplex_wavetable_float * wavetable)
gsl_fft_halfcomplex_wavetable_free	/usr/local/gsl/include/gsl/gsl_fft_halfcomplex.h	/^gsl_fft_halfcomplex_wavetable_free (gsl_fft_halfcomplex_wavetable * wavetable);$/;"	p	signature:(gsl_fft_halfcomplex_wavetable * wavetable)
gsl_fft_real_float_radix2_transform	/usr/local/gsl/include/gsl/gsl_fft_real_float.h	/^int gsl_fft_real_float_radix2_transform (float data[], const size_t stride, const size_t n) ;$/;"	p	signature:(float data[], const size_t stride, const size_t n)
gsl_fft_real_float_transform	/usr/local/gsl/include/gsl/gsl_fft_real_float.h	/^int gsl_fft_real_float_transform (float data[], const size_t stride, const size_t n,$/;"	p	signature:(float data[], const size_t stride, const size_t n, const gsl_fft_real_wavetable_float * wavetable, gsl_fft_real_workspace_float * work)
gsl_fft_real_float_unpack	/usr/local/gsl/include/gsl/gsl_fft_real_float.h	/^int gsl_fft_real_float_unpack (const float real_float_coefficient[],$/;"	p	signature:(const float real_float_coefficient[], float complex_coefficient[], const size_t stride, const size_t n)
gsl_fft_real_radix2_transform	/usr/local/gsl/include/gsl/gsl_fft_real.h	/^int gsl_fft_real_radix2_transform (double data[], const size_t stride, const size_t n) ;$/;"	p	signature:(double data[], const size_t stride, const size_t n)
gsl_fft_real_transform	/usr/local/gsl/include/gsl/gsl_fft_real.h	/^int gsl_fft_real_transform (double data[], const size_t stride, const size_t n,$/;"	p	signature:(double data[], const size_t stride, const size_t n, const gsl_fft_real_wavetable * wavetable, gsl_fft_real_workspace * work)
gsl_fft_real_unpack	/usr/local/gsl/include/gsl/gsl_fft_real.h	/^int gsl_fft_real_unpack (const double real_coefficient[],$/;"	p	signature:(const double real_coefficient[], double complex_coefficient[], const size_t stride, const size_t n)
gsl_fft_real_wavetable	/usr/local/gsl/include/gsl/gsl_fft_real.h	/^gsl_fft_real_wavetable;$/;"	t	typeref:struct:__anon66
gsl_fft_real_wavetable_alloc	/usr/local/gsl/include/gsl/gsl_fft_real.h	/^gsl_fft_real_wavetable * gsl_fft_real_wavetable_alloc (size_t n);$/;"	p	signature:(size_t n)
gsl_fft_real_wavetable_float	/usr/local/gsl/include/gsl/gsl_fft_real_float.h	/^gsl_fft_real_wavetable_float;$/;"	t	typeref:struct:__anon68
gsl_fft_real_wavetable_float_alloc	/usr/local/gsl/include/gsl/gsl_fft_real_float.h	/^gsl_fft_real_wavetable_float * gsl_fft_real_wavetable_float_alloc (size_t n);$/;"	p	signature:(size_t n)
gsl_fft_real_wavetable_float_free	/usr/local/gsl/include/gsl/gsl_fft_real_float.h	/^void  gsl_fft_real_wavetable_float_free (gsl_fft_real_wavetable_float * wavetable);$/;"	p	signature:(gsl_fft_real_wavetable_float * wavetable)
gsl_fft_real_wavetable_free	/usr/local/gsl/include/gsl/gsl_fft_real.h	/^void  gsl_fft_real_wavetable_free (gsl_fft_real_wavetable * wavetable);$/;"	p	signature:(gsl_fft_real_wavetable * wavetable)
gsl_fft_real_workspace	/usr/local/gsl/include/gsl/gsl_fft_real.h	/^gsl_fft_real_workspace;$/;"	t	typeref:struct:__anon67
gsl_fft_real_workspace_alloc	/usr/local/gsl/include/gsl/gsl_fft_real.h	/^gsl_fft_real_workspace * gsl_fft_real_workspace_alloc (size_t n);$/;"	p	signature:(size_t n)
gsl_fft_real_workspace_float	/usr/local/gsl/include/gsl/gsl_fft_real_float.h	/^gsl_fft_real_workspace_float;$/;"	t	typeref:struct:__anon69
gsl_fft_real_workspace_float_alloc	/usr/local/gsl/include/gsl/gsl_fft_real_float.h	/^gsl_fft_real_workspace_float * gsl_fft_real_workspace_float_alloc (size_t n);$/;"	p	signature:(size_t n)
gsl_fft_real_workspace_float_free	/usr/local/gsl/include/gsl/gsl_fft_real_float.h	/^void  gsl_fft_real_workspace_float_free (gsl_fft_real_workspace_float * workspace);$/;"	p	signature:(gsl_fft_real_workspace_float * workspace)
gsl_fft_real_workspace_free	/usr/local/gsl/include/gsl/gsl_fft_real.h	/^void  gsl_fft_real_workspace_free (gsl_fft_real_workspace * workspace);$/;"	p	signature:(gsl_fft_real_workspace * workspace)
gsl_finite	/usr/local/gsl/include/gsl/gsl_sys.h	/^int gsl_finite (const double x);$/;"	p	signature:(const double x)
gsl_fit_linear	/usr/local/gsl/include/gsl/gsl_fit.h	/^int gsl_fit_linear (const double * x, const size_t xstride,$/;"	p	signature:(const double * x, const size_t xstride, const double * y, const size_t ystride, const size_t n, double * c0, double * c1, double * cov00, double * cov01, double * cov11, double * sumsq)
gsl_fit_linear_est	/usr/local/gsl/include/gsl/gsl_fit.h	/^gsl_fit_linear_est (const double x, $/;"	p	signature:(const double x, const double c0, const double c1, const double cov00, const double cov01, const double cov11, double *y, double *y_err)
gsl_fit_mul	/usr/local/gsl/include/gsl/gsl_fit.h	/^int gsl_fit_mul (const double * x, const size_t xstride,$/;"	p	signature:(const double * x, const size_t xstride, const double * y, const size_t ystride, const size_t n, double * c1, double * cov11, double * sumsq)
gsl_fit_mul_est	/usr/local/gsl/include/gsl/gsl_fit.h	/^gsl_fit_mul_est (const double x, $/;"	p	signature:(const double x, const double c1, const double cov11, double *y, double *y_err)
gsl_fit_wlinear	/usr/local/gsl/include/gsl/gsl_fit.h	/^int gsl_fit_wlinear (const double * x, const size_t xstride,$/;"	p	signature:(const double * x, const size_t xstride, const double * w, const size_t wstride, const double * y, const size_t ystride, const size_t n, double * c0, double * c1, double * cov00, double * cov01, double * cov11, double * chisq)
gsl_fit_wmul	/usr/local/gsl/include/gsl/gsl_fit.h	/^int gsl_fit_wmul (const double * x, const size_t xstride,$/;"	p	signature:(const double * x, const size_t xstride, const double * w, const size_t wstride, const double * y, const size_t ystride, const size_t n, double * c1, double * cov11, double * sumsq)
gsl_frexp	/usr/local/gsl/include/gsl/gsl_sys.h	/^double gsl_frexp(const double x, int * e);$/;"	p	signature:(const double x, int * e)
gsl_function	/usr/local/gsl/include/gsl/gsl_math.h	/^typedef struct gsl_function_struct gsl_function ;$/;"	t	typeref:struct:gsl_function_struct
gsl_function_fdf	/usr/local/gsl/include/gsl/gsl_math.h	/^typedef struct gsl_function_fdf_struct gsl_function_fdf ;$/;"	t	typeref:struct:gsl_function_fdf_struct
gsl_function_fdf_struct	/usr/local/gsl/include/gsl/gsl_math.h	/^struct gsl_function_fdf_struct $/;"	s
gsl_function_fdf_struct::df	/usr/local/gsl/include/gsl/gsl_math.h	/^  double (* df) (double x, void * params);$/;"	m	struct:gsl_function_fdf_struct	access:public
gsl_function_fdf_struct::f	/usr/local/gsl/include/gsl/gsl_math.h	/^  double (* f) (double x, void * params);$/;"	m	struct:gsl_function_fdf_struct	access:public
gsl_function_fdf_struct::fdf	/usr/local/gsl/include/gsl/gsl_math.h	/^  void (* fdf) (double x, void * params, double * f, double * df);$/;"	m	struct:gsl_function_fdf_struct	access:public
gsl_function_fdf_struct::params	/usr/local/gsl/include/gsl/gsl_math.h	/^  void * params;$/;"	m	struct:gsl_function_fdf_struct	access:public
gsl_function_struct	/usr/local/gsl/include/gsl/gsl_math.h	/^struct gsl_function_struct $/;"	s
gsl_function_struct::function	/usr/local/gsl/include/gsl/gsl_math.h	/^  double (* function) (double x, void * params);$/;"	m	struct:gsl_function_struct	access:public
gsl_function_struct::params	/usr/local/gsl/include/gsl/gsl_math.h	/^  void * params;$/;"	m	struct:gsl_function_struct	access:public
gsl_function_vec	/usr/local/gsl/include/gsl/gsl_math.h	/^typedef struct gsl_function_vec_struct gsl_function_vec ;$/;"	t	typeref:struct:gsl_function_vec_struct
gsl_function_vec_struct	/usr/local/gsl/include/gsl/gsl_math.h	/^struct gsl_function_vec_struct $/;"	s
gsl_function_vec_struct::function	/usr/local/gsl/include/gsl/gsl_math.h	/^  int (* function) (double x, double y[], void * params);$/;"	m	struct:gsl_function_vec_struct	access:public
gsl_function_vec_struct::params	/usr/local/gsl/include/gsl/gsl_math.h	/^  void * params;$/;"	m	struct:gsl_function_vec_struct	access:public
gsl_heapsort	/usr/local/gsl/include/gsl/gsl_heapsort.h	/^void gsl_heapsort (void * array, size_t count, size_t size, gsl_comparison_fn_t compare);$/;"	p	signature:(void * array, size_t count, size_t size, gsl_comparison_fn_t compare)
gsl_heapsort_index	/usr/local/gsl/include/gsl/gsl_heapsort.h	/^int gsl_heapsort_index (size_t * p, const void * array, size_t count, size_t size, gsl_comparison_fn_t compare);$/;"	p	signature:(size_t * p, const void * array, size_t count, size_t size, gsl_comparison_fn_t compare)
gsl_histogram	/usr/local/gsl/include/gsl/gsl_histogram.h	/^} gsl_histogram ;$/;"	t	typeref:struct:__anon175
gsl_histogram2d	/usr/local/gsl/include/gsl/gsl_histogram2d.h	/^} gsl_histogram2d ;$/;"	t	typeref:struct:__anon132
gsl_histogram2d_accumulate	/usr/local/gsl/include/gsl/gsl_histogram2d.h	/^int gsl_histogram2d_accumulate (gsl_histogram2d * h, $/;"	p	signature:(gsl_histogram2d * h, double x, double y, double weight)
gsl_histogram2d_add	/usr/local/gsl/include/gsl/gsl_histogram2d.h	/^gsl_histogram2d_add(gsl_histogram2d *h1, const gsl_histogram2d *h2);$/;"	p	signature:(gsl_histogram2d *h1, const gsl_histogram2d *h2)
gsl_histogram2d_alloc	/usr/local/gsl/include/gsl/gsl_histogram2d.h	/^gsl_histogram2d * gsl_histogram2d_alloc (const size_t nx, const size_t ny);$/;"	p	signature:(const size_t nx, const size_t ny)
gsl_histogram2d_calloc	/usr/local/gsl/include/gsl/gsl_histogram2d.h	/^gsl_histogram2d * gsl_histogram2d_calloc (const size_t nx, const size_t ny);$/;"	p	signature:(const size_t nx, const size_t ny)
gsl_histogram2d_calloc_range	/usr/local/gsl/include/gsl/gsl_histogram2d.h	/^gsl_histogram2d_calloc_range(size_t nx, size_t ny, $/;"	p	signature:(size_t nx, size_t ny, double *xrange, double *yrange)
gsl_histogram2d_calloc_uniform	/usr/local/gsl/include/gsl/gsl_histogram2d.h	/^gsl_histogram2d * gsl_histogram2d_calloc_uniform (const size_t nx, const size_t ny,$/;"	p	signature:(const size_t nx, const size_t ny, const double xmin, const double xmax, const double ymin, const double ymax)
gsl_histogram2d_clone	/usr/local/gsl/include/gsl/gsl_histogram2d.h	/^gsl_histogram2d_clone(const gsl_histogram2d * source);$/;"	p	signature:(const gsl_histogram2d * source)
gsl_histogram2d_cov	/usr/local/gsl/include/gsl/gsl_histogram2d.h	/^gsl_histogram2d_cov (const gsl_histogram2d * h);$/;"	p	signature:(const gsl_histogram2d * h)
gsl_histogram2d_div	/usr/local/gsl/include/gsl/gsl_histogram2d.h	/^gsl_histogram2d_div(gsl_histogram2d *h1, const gsl_histogram2d *h2);$/;"	p	signature:(gsl_histogram2d *h1, const gsl_histogram2d *h2)
gsl_histogram2d_equal_bins_p	/usr/local/gsl/include/gsl/gsl_histogram2d.h	/^gsl_histogram2d_equal_bins_p(const gsl_histogram2d *h1,$/;"	p	signature:(const gsl_histogram2d *h1, const gsl_histogram2d *h2)
gsl_histogram2d_find	/usr/local/gsl/include/gsl/gsl_histogram2d.h	/^int gsl_histogram2d_find (const gsl_histogram2d * h, $/;"	p	signature:(const gsl_histogram2d * h, const double x, const double y, size_t * i, size_t * j)
gsl_histogram2d_fprintf	/usr/local/gsl/include/gsl/gsl_histogram2d.h	/^int gsl_histogram2d_fprintf (FILE * stream, const gsl_histogram2d * h, $/;"	p	signature:(FILE * stream, const gsl_histogram2d * h, const char * range_format, const char * bin_format)
gsl_histogram2d_fread	/usr/local/gsl/include/gsl/gsl_histogram2d.h	/^int gsl_histogram2d_fread (FILE * stream, gsl_histogram2d * h);$/;"	p	signature:(FILE * stream, gsl_histogram2d * h)
gsl_histogram2d_free	/usr/local/gsl/include/gsl/gsl_histogram2d.h	/^void gsl_histogram2d_free (gsl_histogram2d * h);$/;"	p	signature:(gsl_histogram2d * h)
gsl_histogram2d_fscanf	/usr/local/gsl/include/gsl/gsl_histogram2d.h	/^int gsl_histogram2d_fscanf (FILE * stream, gsl_histogram2d * h);$/;"	p	signature:(FILE * stream, gsl_histogram2d * h)
gsl_histogram2d_fwrite	/usr/local/gsl/include/gsl/gsl_histogram2d.h	/^int gsl_histogram2d_fwrite (FILE * stream, const gsl_histogram2d * h) ;$/;"	p	signature:(FILE * stream, const gsl_histogram2d * h)
gsl_histogram2d_get	/usr/local/gsl/include/gsl/gsl_histogram2d.h	/^double gsl_histogram2d_get (const gsl_histogram2d * h, const size_t i, const size_t j);$/;"	p	signature:(const gsl_histogram2d * h, const size_t i, const size_t j)
gsl_histogram2d_get_xrange	/usr/local/gsl/include/gsl/gsl_histogram2d.h	/^int gsl_histogram2d_get_xrange (const gsl_histogram2d * h, const size_t i,$/;"	p	signature:(const gsl_histogram2d * h, const size_t i, double * xlower, double * xupper)
gsl_histogram2d_get_yrange	/usr/local/gsl/include/gsl/gsl_histogram2d.h	/^int gsl_histogram2d_get_yrange (const gsl_histogram2d * h, const size_t j,$/;"	p	signature:(const gsl_histogram2d * h, const size_t j, double * ylower, double * yupper)
gsl_histogram2d_increment	/usr/local/gsl/include/gsl/gsl_histogram2d.h	/^int gsl_histogram2d_increment (gsl_histogram2d * h, double x, double y);$/;"	p	signature:(gsl_histogram2d * h, double x, double y)
gsl_histogram2d_max_bin	/usr/local/gsl/include/gsl/gsl_histogram2d.h	/^gsl_histogram2d_max_bin (const gsl_histogram2d *h, size_t *i, size_t *j);$/;"	p	signature:(const gsl_histogram2d *h, size_t *i, size_t *j)
gsl_histogram2d_max_val	/usr/local/gsl/include/gsl/gsl_histogram2d.h	/^gsl_histogram2d_max_val(const gsl_histogram2d *h);$/;"	p	signature:(const gsl_histogram2d *h)
gsl_histogram2d_memcpy	/usr/local/gsl/include/gsl/gsl_histogram2d.h	/^gsl_histogram2d_memcpy(gsl_histogram2d *dest, const gsl_histogram2d *source);$/;"	p	signature:(gsl_histogram2d *dest, const gsl_histogram2d *source)
gsl_histogram2d_min_bin	/usr/local/gsl/include/gsl/gsl_histogram2d.h	/^gsl_histogram2d_min_bin (const gsl_histogram2d *h, size_t *i, size_t *j);$/;"	p	signature:(const gsl_histogram2d *h, size_t *i, size_t *j)
gsl_histogram2d_min_val	/usr/local/gsl/include/gsl/gsl_histogram2d.h	/^gsl_histogram2d_min_val(const gsl_histogram2d *h);$/;"	p	signature:(const gsl_histogram2d *h)
gsl_histogram2d_mul	/usr/local/gsl/include/gsl/gsl_histogram2d.h	/^gsl_histogram2d_mul(gsl_histogram2d *h1, const gsl_histogram2d *h2);$/;"	p	signature:(gsl_histogram2d *h1, const gsl_histogram2d *h2)
gsl_histogram2d_nx	/usr/local/gsl/include/gsl/gsl_histogram2d.h	/^size_t gsl_histogram2d_nx (const gsl_histogram2d * h);$/;"	p	signature:(const gsl_histogram2d * h)
gsl_histogram2d_ny	/usr/local/gsl/include/gsl/gsl_histogram2d.h	/^size_t gsl_histogram2d_ny (const gsl_histogram2d * h);$/;"	p	signature:(const gsl_histogram2d * h)
gsl_histogram2d_pdf	/usr/local/gsl/include/gsl/gsl_histogram2d.h	/^} gsl_histogram2d_pdf ;$/;"	t	typeref:struct:__anon133
gsl_histogram2d_pdf_alloc	/usr/local/gsl/include/gsl/gsl_histogram2d.h	/^gsl_histogram2d_pdf * gsl_histogram2d_pdf_alloc (const size_t nx, const size_t ny);$/;"	p	signature:(const size_t nx, const size_t ny)
gsl_histogram2d_pdf_free	/usr/local/gsl/include/gsl/gsl_histogram2d.h	/^void gsl_histogram2d_pdf_free (gsl_histogram2d_pdf * p);$/;"	p	signature:(gsl_histogram2d_pdf * p)
gsl_histogram2d_pdf_init	/usr/local/gsl/include/gsl/gsl_histogram2d.h	/^int gsl_histogram2d_pdf_init (gsl_histogram2d_pdf * p, const gsl_histogram2d * h);$/;"	p	signature:(gsl_histogram2d_pdf * p, const gsl_histogram2d * h)
gsl_histogram2d_pdf_sample	/usr/local/gsl/include/gsl/gsl_histogram2d.h	/^int gsl_histogram2d_pdf_sample (const gsl_histogram2d_pdf * p, $/;"	p	signature:(const gsl_histogram2d_pdf * p, double r1, double r2, double * x, double * y)
gsl_histogram2d_reset	/usr/local/gsl/include/gsl/gsl_histogram2d.h	/^void gsl_histogram2d_reset (gsl_histogram2d * h);$/;"	p	signature:(gsl_histogram2d * h)
gsl_histogram2d_scale	/usr/local/gsl/include/gsl/gsl_histogram2d.h	/^gsl_histogram2d_scale(gsl_histogram2d *h, double scale);$/;"	p	signature:(gsl_histogram2d *h, double scale)
gsl_histogram2d_set_ranges	/usr/local/gsl/include/gsl/gsl_histogram2d.h	/^gsl_histogram2d_set_ranges (gsl_histogram2d * h, $/;"	p	signature:(gsl_histogram2d * h, const double xrange[], size_t xsize, const double yrange[], size_t ysize)
gsl_histogram2d_set_ranges_uniform	/usr/local/gsl/include/gsl/gsl_histogram2d.h	/^gsl_histogram2d_set_ranges_uniform (gsl_histogram2d * h, $/;"	p	signature:(gsl_histogram2d * h, double xmin, double xmax, double ymin, double ymax)
gsl_histogram2d_shift	/usr/local/gsl/include/gsl/gsl_histogram2d.h	/^gsl_histogram2d_shift(gsl_histogram2d *h, double shift);$/;"	p	signature:(gsl_histogram2d *h, double shift)
gsl_histogram2d_sub	/usr/local/gsl/include/gsl/gsl_histogram2d.h	/^gsl_histogram2d_sub(gsl_histogram2d *h1, const gsl_histogram2d *h2);$/;"	p	signature:(gsl_histogram2d *h1, const gsl_histogram2d *h2)
gsl_histogram2d_sum	/usr/local/gsl/include/gsl/gsl_histogram2d.h	/^gsl_histogram2d_sum (const gsl_histogram2d *h);$/;"	p	signature:(const gsl_histogram2d *h)
gsl_histogram2d_xmax	/usr/local/gsl/include/gsl/gsl_histogram2d.h	/^double gsl_histogram2d_xmax (const gsl_histogram2d * h);$/;"	p	signature:(const gsl_histogram2d * h)
gsl_histogram2d_xmean	/usr/local/gsl/include/gsl/gsl_histogram2d.h	/^gsl_histogram2d_xmean (const gsl_histogram2d * h);$/;"	p	signature:(const gsl_histogram2d * h)
gsl_histogram2d_xmin	/usr/local/gsl/include/gsl/gsl_histogram2d.h	/^double gsl_histogram2d_xmin (const gsl_histogram2d * h);$/;"	p	signature:(const gsl_histogram2d * h)
gsl_histogram2d_xsigma	/usr/local/gsl/include/gsl/gsl_histogram2d.h	/^gsl_histogram2d_xsigma (const gsl_histogram2d * h);$/;"	p	signature:(const gsl_histogram2d * h)
gsl_histogram2d_ymax	/usr/local/gsl/include/gsl/gsl_histogram2d.h	/^double gsl_histogram2d_ymax (const gsl_histogram2d * h);$/;"	p	signature:(const gsl_histogram2d * h)
gsl_histogram2d_ymean	/usr/local/gsl/include/gsl/gsl_histogram2d.h	/^gsl_histogram2d_ymean (const gsl_histogram2d * h);$/;"	p	signature:(const gsl_histogram2d * h)
gsl_histogram2d_ymin	/usr/local/gsl/include/gsl/gsl_histogram2d.h	/^double gsl_histogram2d_ymin (const gsl_histogram2d * h);$/;"	p	signature:(const gsl_histogram2d * h)
gsl_histogram2d_ysigma	/usr/local/gsl/include/gsl/gsl_histogram2d.h	/^gsl_histogram2d_ysigma (const gsl_histogram2d * h);$/;"	p	signature:(const gsl_histogram2d * h)
gsl_histogram_accumulate	/usr/local/gsl/include/gsl/gsl_histogram.h	/^int gsl_histogram_accumulate (gsl_histogram * h, double x, double weight);$/;"	p	signature:(gsl_histogram * h, double x, double weight)
gsl_histogram_add	/usr/local/gsl/include/gsl/gsl_histogram.h	/^gsl_histogram_add(gsl_histogram *h1, const gsl_histogram *h2);$/;"	p	signature:(gsl_histogram *h1, const gsl_histogram *h2)
gsl_histogram_alloc	/usr/local/gsl/include/gsl/gsl_histogram.h	/^gsl_histogram * gsl_histogram_alloc (size_t n);$/;"	p	signature:(size_t n)
gsl_histogram_bins	/usr/local/gsl/include/gsl/gsl_histogram.h	/^size_t gsl_histogram_bins (const gsl_histogram * h);$/;"	p	signature:(const gsl_histogram * h)
gsl_histogram_calloc	/usr/local/gsl/include/gsl/gsl_histogram.h	/^gsl_histogram * gsl_histogram_calloc (size_t n);$/;"	p	signature:(size_t n)
gsl_histogram_calloc_range	/usr/local/gsl/include/gsl/gsl_histogram.h	/^gsl_histogram * gsl_histogram_calloc_range(size_t n, double * range);$/;"	p	signature:(size_t n, double * range)
gsl_histogram_calloc_uniform	/usr/local/gsl/include/gsl/gsl_histogram.h	/^gsl_histogram * gsl_histogram_calloc_uniform (const size_t n, const double xmin, const double xmax);$/;"	p	signature:(const size_t n, const double xmin, const double xmax)
gsl_histogram_clone	/usr/local/gsl/include/gsl/gsl_histogram.h	/^gsl_histogram_clone(const gsl_histogram * source);$/;"	p	signature:(const gsl_histogram * source)
gsl_histogram_div	/usr/local/gsl/include/gsl/gsl_histogram.h	/^gsl_histogram_div(gsl_histogram *h1, const gsl_histogram *h2);$/;"	p	signature:(gsl_histogram *h1, const gsl_histogram *h2)
gsl_histogram_equal_bins_p	/usr/local/gsl/include/gsl/gsl_histogram.h	/^gsl_histogram_equal_bins_p(const gsl_histogram *h1, const gsl_histogram *h2);$/;"	p	signature:(const gsl_histogram *h1, const gsl_histogram *h2)
gsl_histogram_find	/usr/local/gsl/include/gsl/gsl_histogram.h	/^int gsl_histogram_find (const gsl_histogram * h, $/;"	p	signature:(const gsl_histogram * h, const double x, size_t * i)
gsl_histogram_fprintf	/usr/local/gsl/include/gsl/gsl_histogram.h	/^int gsl_histogram_fprintf (FILE * stream, const gsl_histogram * h, $/;"	p	signature:(FILE * stream, const gsl_histogram * h, const char * range_format, const char * bin_format)
gsl_histogram_fread	/usr/local/gsl/include/gsl/gsl_histogram.h	/^int gsl_histogram_fread (FILE * stream, gsl_histogram * h);$/;"	p	signature:(FILE * stream, gsl_histogram * h)
gsl_histogram_free	/usr/local/gsl/include/gsl/gsl_histogram.h	/^void gsl_histogram_free (gsl_histogram * h);$/;"	p	signature:(gsl_histogram * h)
gsl_histogram_fscanf	/usr/local/gsl/include/gsl/gsl_histogram.h	/^int gsl_histogram_fscanf (FILE * stream, gsl_histogram * h);$/;"	p	signature:(FILE * stream, gsl_histogram * h)
gsl_histogram_fwrite	/usr/local/gsl/include/gsl/gsl_histogram.h	/^int gsl_histogram_fwrite (FILE * stream, const gsl_histogram * h) ;$/;"	p	signature:(FILE * stream, const gsl_histogram * h)
gsl_histogram_get	/usr/local/gsl/include/gsl/gsl_histogram.h	/^double gsl_histogram_get (const gsl_histogram * h, size_t i);$/;"	p	signature:(const gsl_histogram * h, size_t i)
gsl_histogram_get_range	/usr/local/gsl/include/gsl/gsl_histogram.h	/^int gsl_histogram_get_range (const gsl_histogram * h, size_t i, $/;"	p	signature:(const gsl_histogram * h, size_t i, double * lower, double * upper)
gsl_histogram_increment	/usr/local/gsl/include/gsl/gsl_histogram.h	/^int gsl_histogram_increment (gsl_histogram * h, double x);$/;"	p	signature:(gsl_histogram * h, double x)
gsl_histogram_max	/usr/local/gsl/include/gsl/gsl_histogram.h	/^double gsl_histogram_max (const gsl_histogram * h);$/;"	p	signature:(const gsl_histogram * h)
gsl_histogram_max_bin	/usr/local/gsl/include/gsl/gsl_histogram.h	/^size_t gsl_histogram_max_bin (const gsl_histogram * h);$/;"	p	signature:(const gsl_histogram * h)
gsl_histogram_max_val	/usr/local/gsl/include/gsl/gsl_histogram.h	/^double gsl_histogram_max_val (const gsl_histogram * h);$/;"	p	signature:(const gsl_histogram * h)
gsl_histogram_mean	/usr/local/gsl/include/gsl/gsl_histogram.h	/^double gsl_histogram_mean (const gsl_histogram * h);$/;"	p	signature:(const gsl_histogram * h)
gsl_histogram_memcpy	/usr/local/gsl/include/gsl/gsl_histogram.h	/^gsl_histogram_memcpy(gsl_histogram * dest, const gsl_histogram * source);$/;"	p	signature:(gsl_histogram * dest, const gsl_histogram * source)
gsl_histogram_min	/usr/local/gsl/include/gsl/gsl_histogram.h	/^double gsl_histogram_min (const gsl_histogram * h);$/;"	p	signature:(const gsl_histogram * h)
gsl_histogram_min_bin	/usr/local/gsl/include/gsl/gsl_histogram.h	/^size_t gsl_histogram_min_bin (const gsl_histogram * h);$/;"	p	signature:(const gsl_histogram * h)
gsl_histogram_min_val	/usr/local/gsl/include/gsl/gsl_histogram.h	/^double gsl_histogram_min_val (const gsl_histogram * h);$/;"	p	signature:(const gsl_histogram * h)
gsl_histogram_mul	/usr/local/gsl/include/gsl/gsl_histogram.h	/^gsl_histogram_mul(gsl_histogram *h1, const gsl_histogram *h2);$/;"	p	signature:(gsl_histogram *h1, const gsl_histogram *h2)
gsl_histogram_pdf	/usr/local/gsl/include/gsl/gsl_histogram.h	/^} gsl_histogram_pdf ;$/;"	t	typeref:struct:__anon176
gsl_histogram_pdf_alloc	/usr/local/gsl/include/gsl/gsl_histogram.h	/^gsl_histogram_pdf * gsl_histogram_pdf_alloc (const size_t n);$/;"	p	signature:(const size_t n)
gsl_histogram_pdf_free	/usr/local/gsl/include/gsl/gsl_histogram.h	/^void gsl_histogram_pdf_free (gsl_histogram_pdf * p);$/;"	p	signature:(gsl_histogram_pdf * p)
gsl_histogram_pdf_init	/usr/local/gsl/include/gsl/gsl_histogram.h	/^int gsl_histogram_pdf_init (gsl_histogram_pdf * p, const gsl_histogram * h);$/;"	p	signature:(gsl_histogram_pdf * p, const gsl_histogram * h)
gsl_histogram_pdf_sample	/usr/local/gsl/include/gsl/gsl_histogram.h	/^double gsl_histogram_pdf_sample (const gsl_histogram_pdf * p, double r);$/;"	p	signature:(const gsl_histogram_pdf * p, double r)
gsl_histogram_reset	/usr/local/gsl/include/gsl/gsl_histogram.h	/^void gsl_histogram_reset (gsl_histogram * h);$/;"	p	signature:(gsl_histogram * h)
gsl_histogram_scale	/usr/local/gsl/include/gsl/gsl_histogram.h	/^gsl_histogram_scale(gsl_histogram *h, double scale);$/;"	p	signature:(gsl_histogram *h, double scale)
gsl_histogram_set_ranges	/usr/local/gsl/include/gsl/gsl_histogram.h	/^gsl_histogram_set_ranges (gsl_histogram * h, const double range[], size_t size);$/;"	p	signature:(gsl_histogram * h, const double range[], size_t size)
gsl_histogram_set_ranges_uniform	/usr/local/gsl/include/gsl/gsl_histogram.h	/^gsl_histogram_set_ranges_uniform (gsl_histogram * h, double xmin, double xmax);$/;"	p	signature:(gsl_histogram * h, double xmin, double xmax)
gsl_histogram_shift	/usr/local/gsl/include/gsl/gsl_histogram.h	/^gsl_histogram_shift (gsl_histogram * h, double shift);$/;"	p	signature:(gsl_histogram * h, double shift)
gsl_histogram_sigma	/usr/local/gsl/include/gsl/gsl_histogram.h	/^double gsl_histogram_sigma (const gsl_histogram * h);$/;"	p	signature:(const gsl_histogram * h)
gsl_histogram_sub	/usr/local/gsl/include/gsl/gsl_histogram.h	/^gsl_histogram_sub(gsl_histogram *h1, const gsl_histogram *h2);$/;"	p	signature:(gsl_histogram *h1, const gsl_histogram *h2)
gsl_histogram_sum	/usr/local/gsl/include/gsl/gsl_histogram.h	/^double gsl_histogram_sum (const gsl_histogram * h);$/;"	p	signature:(const gsl_histogram * h)
gsl_hypot	/usr/local/gsl/include/gsl/gsl_sys.h	/^double gsl_hypot (const double x, const double y);$/;"	p	signature:(const double x, const double y)
gsl_hypot3	/usr/local/gsl/include/gsl/gsl_sys.h	/^double gsl_hypot3 (const double x, const double y, const double z);$/;"	p	signature:(const double x, const double y, const double z)
gsl_ieee_double_rep	/usr/local/gsl/include/gsl/gsl_ieee_utils.h	/^} gsl_ieee_double_rep ;$/;"	t	typeref:struct:__anon121
gsl_ieee_double_to_rep	/usr/local/gsl/include/gsl/gsl_ieee_utils.h	/^void gsl_ieee_double_to_rep (const double * x, gsl_ieee_double_rep * r) ;$/;"	p	signature:(const double * x, gsl_ieee_double_rep * r)
gsl_ieee_env_setup	/usr/local/gsl/include/gsl/gsl_ieee_utils.h	/^void gsl_ieee_env_setup (void) ;$/;"	p	signature:(void)
gsl_ieee_float_rep	/usr/local/gsl/include/gsl/gsl_ieee_utils.h	/^} gsl_ieee_float_rep ;$/;"	t	typeref:struct:__anon120
gsl_ieee_float_to_rep	/usr/local/gsl/include/gsl/gsl_ieee_utils.h	/^void gsl_ieee_float_to_rep (const float * x, gsl_ieee_float_rep * r) ;$/;"	p	signature:(const float * x, gsl_ieee_float_rep * r)
gsl_ieee_fprintf_double	/usr/local/gsl/include/gsl/gsl_ieee_utils.h	/^void gsl_ieee_fprintf_double (FILE * stream, const double * x) ;$/;"	p	signature:(FILE * stream, const double * x)
gsl_ieee_fprintf_float	/usr/local/gsl/include/gsl/gsl_ieee_utils.h	/^void gsl_ieee_fprintf_float (FILE * stream, const float * x) ;$/;"	p	signature:(FILE * stream, const float * x)
gsl_ieee_printf_double	/usr/local/gsl/include/gsl/gsl_ieee_utils.h	/^void gsl_ieee_printf_double (const double * x) ;$/;"	p	signature:(const double * x)
gsl_ieee_printf_float	/usr/local/gsl/include/gsl/gsl_ieee_utils.h	/^void gsl_ieee_printf_float (const float * x) ;$/;"	p	signature:(const float * x)
gsl_ieee_read_mode_string	/usr/local/gsl/include/gsl/gsl_ieee_utils.h	/^int gsl_ieee_read_mode_string (const char * description, int * precision,$/;"	p	signature:(const char * description, int * precision, int * rounding, int * exception_mask)
gsl_ieee_set_mode	/usr/local/gsl/include/gsl/gsl_ieee_utils.h	/^int gsl_ieee_set_mode (int precision, int rounding, int exception_mask) ;$/;"	p	signature:(int precision, int rounding, int exception_mask)
gsl_integration_qag	/usr/local/gsl/include/gsl/gsl_integration.h	/^int gsl_integration_qag (const gsl_function * f,$/;"	p	signature:(const gsl_function * f, double a, double b, double epsabs, double epsrel, size_t limit, int key, gsl_integration_workspace * workspace, double *result, double *abserr)
gsl_integration_qagi	/usr/local/gsl/include/gsl/gsl_integration.h	/^int gsl_integration_qagi (gsl_function * f,$/;"	p	signature:(gsl_function * f, double epsabs, double epsrel, size_t limit, gsl_integration_workspace * workspace, double *result, double *abserr)
gsl_integration_qagil	/usr/local/gsl/include/gsl/gsl_integration.h	/^int gsl_integration_qagil (gsl_function * f,$/;"	p	signature:(gsl_function * f, double b, double epsabs, double epsrel, size_t limit, gsl_integration_workspace * workspace, double *result, double *abserr)
gsl_integration_qagiu	/usr/local/gsl/include/gsl/gsl_integration.h	/^int gsl_integration_qagiu (gsl_function * f,$/;"	p	signature:(gsl_function * f, double a, double epsabs, double epsrel, size_t limit, gsl_integration_workspace * workspace, double *result, double *abserr)
gsl_integration_qagp	/usr/local/gsl/include/gsl/gsl_integration.h	/^int gsl_integration_qagp (const gsl_function * f,$/;"	p	signature:(const gsl_function * f, double *pts, size_t npts, double epsabs, double epsrel, size_t limit, gsl_integration_workspace * workspace, double *result, double *abserr)
gsl_integration_qags	/usr/local/gsl/include/gsl/gsl_integration.h	/^int gsl_integration_qags (const gsl_function * f,$/;"	p	signature:(const gsl_function * f, double a, double b, double epsabs, double epsrel, size_t limit, gsl_integration_workspace * workspace, double *result, double *abserr)
gsl_integration_qawc	/usr/local/gsl/include/gsl/gsl_integration.h	/^int gsl_integration_qawc (gsl_function *f,$/;"	p	signature:(gsl_function *f, const double a, const double b, const double c, const double epsabs, const double epsrel, const size_t limit, gsl_integration_workspace * workspace, double * result, double * abserr)
gsl_integration_qawf	/usr/local/gsl/include/gsl/gsl_integration.h	/^int gsl_integration_qawf (gsl_function * f,$/;"	p	signature:(gsl_function * f, const double a, const double epsabs, const size_t limit, gsl_integration_workspace * workspace, gsl_integration_workspace * cycle_workspace, gsl_integration_qawo_table * wf, double *result, double *abserr)
gsl_integration_qawo	/usr/local/gsl/include/gsl/gsl_integration.h	/^int gsl_integration_qawo (gsl_function * f,$/;"	p	signature:(gsl_function * f, const double a, const double epsabs, const double epsrel, const size_t limit, gsl_integration_workspace * workspace, gsl_integration_qawo_table * wf, double *result, double *abserr)
gsl_integration_qawo_enum	/usr/local/gsl/include/gsl/gsl_integration.h	/^enum gsl_integration_qawo_enum { GSL_INTEG_COSINE, GSL_INTEG_SINE };$/;"	g
gsl_integration_qawo_table	/usr/local/gsl/include/gsl/gsl_integration.h	/^gsl_integration_qawo_table;$/;"	t	typeref:struct:__anon47
gsl_integration_qawo_table_alloc	/usr/local/gsl/include/gsl/gsl_integration.h	/^gsl_integration_qawo_table_alloc (double omega, double L, $/;"	p	signature:(double omega, double L, enum gsl_integration_qawo_enum sine, size_t n)
gsl_integration_qawo_table_free	/usr/local/gsl/include/gsl/gsl_integration.h	/^gsl_integration_qawo_table_free (gsl_integration_qawo_table * t);$/;"	p	signature:(gsl_integration_qawo_table * t)
gsl_integration_qawo_table_set	/usr/local/gsl/include/gsl/gsl_integration.h	/^gsl_integration_qawo_table_set (gsl_integration_qawo_table * t,$/;"	p	signature:(gsl_integration_qawo_table * t, double omega, double L, enum gsl_integration_qawo_enum sine)
gsl_integration_qawo_table_set_length	/usr/local/gsl/include/gsl/gsl_integration.h	/^gsl_integration_qawo_table_set_length (gsl_integration_qawo_table * t,$/;"	p	signature:(gsl_integration_qawo_table * t, double L)
gsl_integration_qaws	/usr/local/gsl/include/gsl/gsl_integration.h	/^int gsl_integration_qaws (gsl_function * f,$/;"	p	signature:(gsl_function * f, const double a, const double b, gsl_integration_qaws_table * t, const double epsabs, const double epsrel, const size_t limit, gsl_integration_workspace * workspace, double *result, double *abserr)
gsl_integration_qaws_table	/usr/local/gsl/include/gsl/gsl_integration.h	/^gsl_integration_qaws_table;$/;"	t	typeref:struct:__anon46
gsl_integration_qaws_table_alloc	/usr/local/gsl/include/gsl/gsl_integration.h	/^gsl_integration_qaws_table_alloc (double alpha, double beta, int mu, int nu);$/;"	p	signature:(double alpha, double beta, int mu, int nu)
gsl_integration_qaws_table_free	/usr/local/gsl/include/gsl/gsl_integration.h	/^gsl_integration_qaws_table_free (gsl_integration_qaws_table * t);$/;"	p	signature:(gsl_integration_qaws_table * t)
gsl_integration_qaws_table_set	/usr/local/gsl/include/gsl/gsl_integration.h	/^gsl_integration_qaws_table_set (gsl_integration_qaws_table * t,$/;"	p	signature:(gsl_integration_qaws_table * t, double alpha, double beta, int mu, int nu)
gsl_integration_qcheb	/usr/local/gsl/include/gsl/gsl_integration.h	/^void gsl_integration_qcheb (gsl_function * f, double a, double b, $/;"	p	signature:(gsl_function * f, double a, double b, double *cheb12, double *cheb24)
gsl_integration_qk	/usr/local/gsl/include/gsl/gsl_integration.h	/^gsl_integration_qk (const int n, const double xgk[], $/;"	p	signature:(const int n, const double xgk[], const double wg[], const double wgk[], double fv1[], double fv2[], const gsl_function *f, double a, double b, double * result, double * abserr, double * resabs, double * resasc)
gsl_integration_qk15	/usr/local/gsl/include/gsl/gsl_integration.h	/^void gsl_integration_qk15 (const gsl_function * f, double a, double b,$/;"	p	signature:(const gsl_function * f, double a, double b, double *result, double *abserr, double *resabs, double *resasc)
gsl_integration_qk21	/usr/local/gsl/include/gsl/gsl_integration.h	/^void gsl_integration_qk21 (const gsl_function * f, double a, double b,$/;"	p	signature:(const gsl_function * f, double a, double b, double *result, double *abserr, double *resabs, double *resasc)
gsl_integration_qk31	/usr/local/gsl/include/gsl/gsl_integration.h	/^void gsl_integration_qk31 (const gsl_function * f, double a, double b,$/;"	p	signature:(const gsl_function * f, double a, double b, double *result, double *abserr, double *resabs, double *resasc)
gsl_integration_qk41	/usr/local/gsl/include/gsl/gsl_integration.h	/^void gsl_integration_qk41 (const gsl_function * f, double a, double b,$/;"	p	signature:(const gsl_function * f, double a, double b, double *result, double *abserr, double *resabs, double *resasc)
gsl_integration_qk51	/usr/local/gsl/include/gsl/gsl_integration.h	/^void gsl_integration_qk51 (const gsl_function * f, double a, double b,$/;"	p	signature:(const gsl_function * f, double a, double b, double *result, double *abserr, double *resabs, double *resasc)
gsl_integration_qk61	/usr/local/gsl/include/gsl/gsl_integration.h	/^void gsl_integration_qk61 (const gsl_function * f, double a, double b,$/;"	p	signature:(const gsl_function * f, double a, double b, double *result, double *abserr, double *resabs, double *resasc)
gsl_integration_qng	/usr/local/gsl/include/gsl/gsl_integration.h	/^int gsl_integration_qng (const gsl_function * f,$/;"	p	signature:(const gsl_function * f, double a, double b, double epsabs, double epsrel, double *result, double *abserr, size_t * neval)
gsl_integration_rule	/usr/local/gsl/include/gsl/gsl_integration.h	/^typedef void gsl_integration_rule (const gsl_function * f,$/;"	t
gsl_integration_workspace	/usr/local/gsl/include/gsl/gsl_integration.h	/^gsl_integration_workspace;$/;"	t	typeref:struct:__anon45
gsl_integration_workspace_alloc	/usr/local/gsl/include/gsl/gsl_integration.h	/^  gsl_integration_workspace_alloc (const size_t n);$/;"	p	signature:(const size_t n)
gsl_integration_workspace_free	/usr/local/gsl/include/gsl/gsl_integration.h	/^  gsl_integration_workspace_free (gsl_integration_workspace * w);$/;"	p	signature:(gsl_integration_workspace * w)
gsl_interp	/usr/local/gsl/include/gsl/gsl_interp.h	/^} gsl_interp;$/;"	t	typeref:struct:__anon174
gsl_interp_accel	/usr/local/gsl/include/gsl/gsl_interp.h	/^gsl_interp_accel;$/;"	t	typeref:struct:__anon172
gsl_interp_accel_alloc	/usr/local/gsl/include/gsl/gsl_interp.h	/^gsl_interp_accel_alloc(void);$/;"	p	signature:(void)
gsl_interp_accel_find	/usr/local/gsl/include/gsl/gsl_interp.h	/^gsl_interp_accel_find(gsl_interp_accel * a, const double x_array[], size_t size, double x);$/;"	p	signature:(gsl_interp_accel * a, const double x_array[], size_t size, double x)
gsl_interp_accel_find	/usr/local/gsl/include/gsl/gsl_interp.h	/^gsl_interp_accel_find(gsl_interp_accel * a, const double xa[], size_t len, double x)$/;"	f	signature:(gsl_interp_accel * a, const double xa[], size_t len, double x)
gsl_interp_accel_free	/usr/local/gsl/include/gsl/gsl_interp.h	/^gsl_interp_accel_free(gsl_interp_accel * a);$/;"	p	signature:(gsl_interp_accel * a)
gsl_interp_accel_reset	/usr/local/gsl/include/gsl/gsl_interp.h	/^gsl_interp_accel_reset (gsl_interp_accel * a);$/;"	p	signature:(gsl_interp_accel * a)
gsl_interp_akima	/usr/local/gsl/include/gsl/gsl_interp.h	/^GSL_VAR const gsl_interp_type * gsl_interp_akima;$/;"	v
gsl_interp_akima_periodic	/usr/local/gsl/include/gsl/gsl_interp.h	/^GSL_VAR const gsl_interp_type * gsl_interp_akima_periodic;$/;"	v
gsl_interp_alloc	/usr/local/gsl/include/gsl/gsl_interp.h	/^gsl_interp_alloc(const gsl_interp_type * T, size_t n);$/;"	p	signature:(const gsl_interp_type * T, size_t n)
gsl_interp_bsearch	/usr/local/gsl/include/gsl/gsl_interp.h	/^gsl_interp_bsearch(const double x_array[], double x,$/;"	f	signature:(const double x_array[], double x, size_t index_lo, size_t index_hi)
gsl_interp_bsearch	/usr/local/gsl/include/gsl/gsl_interp.h	/^gsl_interp_bsearch(const double x_array[], double x,$/;"	p	signature:(const double x_array[], double x, size_t index_lo, size_t index_hi)
gsl_interp_cspline	/usr/local/gsl/include/gsl/gsl_interp.h	/^GSL_VAR const gsl_interp_type * gsl_interp_cspline;$/;"	v
gsl_interp_cspline_periodic	/usr/local/gsl/include/gsl/gsl_interp.h	/^GSL_VAR const gsl_interp_type * gsl_interp_cspline_periodic;$/;"	v
gsl_interp_eval	/usr/local/gsl/include/gsl/gsl_interp.h	/^gsl_interp_eval(const gsl_interp * obj,$/;"	p	signature:(const gsl_interp * obj, const double xa[], const double ya[], double x, gsl_interp_accel * a)
gsl_interp_eval_deriv	/usr/local/gsl/include/gsl/gsl_interp.h	/^gsl_interp_eval_deriv(const gsl_interp * obj,$/;"	p	signature:(const gsl_interp * obj, const double xa[], const double ya[], double x, gsl_interp_accel * a)
gsl_interp_eval_deriv2	/usr/local/gsl/include/gsl/gsl_interp.h	/^gsl_interp_eval_deriv2(const gsl_interp * obj,$/;"	p	signature:(const gsl_interp * obj, const double xa[], const double ya[], double x, gsl_interp_accel * a)
gsl_interp_eval_deriv2_e	/usr/local/gsl/include/gsl/gsl_interp.h	/^gsl_interp_eval_deriv2_e(const gsl_interp * obj,$/;"	p	signature:(const gsl_interp * obj, const double xa[], const double ya[], double x, gsl_interp_accel * a, double * d2)
gsl_interp_eval_deriv_e	/usr/local/gsl/include/gsl/gsl_interp.h	/^gsl_interp_eval_deriv_e(const gsl_interp * obj,$/;"	p	signature:(const gsl_interp * obj, const double xa[], const double ya[], double x, gsl_interp_accel * a, double * d)
gsl_interp_eval_e	/usr/local/gsl/include/gsl/gsl_interp.h	/^gsl_interp_eval_e(const gsl_interp * obj,$/;"	p	signature:(const gsl_interp * obj, const double xa[], const double ya[], double x, gsl_interp_accel * a, double * y)
gsl_interp_eval_integ	/usr/local/gsl/include/gsl/gsl_interp.h	/^gsl_interp_eval_integ(const gsl_interp * obj,$/;"	p	signature:(const gsl_interp * obj, const double xa[], const double ya[], double a, double b, gsl_interp_accel * acc)
gsl_interp_eval_integ_e	/usr/local/gsl/include/gsl/gsl_interp.h	/^gsl_interp_eval_integ_e(const gsl_interp * obj,$/;"	p	signature:(const gsl_interp * obj, const double xa[], const double ya[], double a, double b, gsl_interp_accel * acc, double * result)
gsl_interp_free	/usr/local/gsl/include/gsl/gsl_interp.h	/^gsl_interp_free(gsl_interp * interp);$/;"	p	signature:(gsl_interp * interp)
gsl_interp_init	/usr/local/gsl/include/gsl/gsl_interp.h	/^gsl_interp_init(gsl_interp * obj, const double xa[], const double ya[], size_t size);$/;"	p	signature:(gsl_interp * obj, const double xa[], const double ya[], size_t size)
gsl_interp_linear	/usr/local/gsl/include/gsl/gsl_interp.h	/^GSL_VAR const gsl_interp_type * gsl_interp_linear;$/;"	v
gsl_interp_min_size	/usr/local/gsl/include/gsl/gsl_interp.h	/^unsigned int gsl_interp_min_size(const gsl_interp * interp);$/;"	p	signature:(const gsl_interp * interp)
gsl_interp_name	/usr/local/gsl/include/gsl/gsl_interp.h	/^const char * gsl_interp_name(const gsl_interp * interp);$/;"	p	signature:(const gsl_interp * interp)
gsl_interp_polynomial	/usr/local/gsl/include/gsl/gsl_interp.h	/^GSL_VAR const gsl_interp_type * gsl_interp_polynomial;$/;"	v
gsl_interp_type	/usr/local/gsl/include/gsl/gsl_interp.h	/^} gsl_interp_type;$/;"	t	typeref:struct:__anon173
gsl_isinf	/usr/local/gsl/include/gsl/gsl_sys.h	/^int gsl_isinf (const double x);$/;"	p	signature:(const double x)
gsl_isnan	/usr/local/gsl/include/gsl/gsl_sys.h	/^int gsl_isnan (const double x);$/;"	p	signature:(const double x)
gsl_ldexp	/usr/local/gsl/include/gsl/gsl_sys.h	/^double gsl_ldexp(const double x, const int e);$/;"	p	signature:(const double x, const int e)
gsl_linalg_HH_solve	/usr/local/gsl/include/gsl/gsl_linalg.h	/^int gsl_linalg_HH_solve (gsl_matrix * A, const gsl_vector * b, gsl_vector * x);$/;"	p	signature:(gsl_matrix * A, const gsl_vector * b, gsl_vector * x)
gsl_linalg_HH_svx	/usr/local/gsl/include/gsl/gsl_linalg.h	/^int gsl_linalg_HH_svx (gsl_matrix * A, gsl_vector * x);$/;"	p	signature:(gsl_matrix * A, gsl_vector * x)
gsl_linalg_LQ_LQsolve	/usr/local/gsl/include/gsl/gsl_linalg.h	/^int gsl_linalg_LQ_LQsolve (gsl_matrix * Q, gsl_matrix * L, $/;"	p	signature:(gsl_matrix * Q, gsl_matrix * L, const gsl_vector * b, gsl_vector * x)
gsl_linalg_LQ_Lsolve_T	/usr/local/gsl/include/gsl/gsl_linalg.h	/^int gsl_linalg_LQ_Lsolve_T (const gsl_matrix * LQ, const gsl_vector * b, $/;"	p	signature:(const gsl_matrix * LQ, const gsl_vector * b, gsl_vector * x)
gsl_linalg_LQ_Lsvx_T	/usr/local/gsl/include/gsl/gsl_linalg.h	/^int gsl_linalg_LQ_Lsvx_T (const gsl_matrix * LQ, gsl_vector * x);$/;"	p	signature:(const gsl_matrix * LQ, gsl_vector * x)
gsl_linalg_LQ_decomp	/usr/local/gsl/include/gsl/gsl_linalg.h	/^int gsl_linalg_LQ_decomp (gsl_matrix * A, gsl_vector * tau);$/;"	p	signature:(gsl_matrix * A, gsl_vector * tau)
gsl_linalg_LQ_lssolve_T	/usr/local/gsl/include/gsl/gsl_linalg.h	/^int gsl_linalg_LQ_lssolve_T (const gsl_matrix * LQ, const gsl_vector * tau, $/;"	p	signature:(const gsl_matrix * LQ, const gsl_vector * tau, const gsl_vector * b, gsl_vector * x, gsl_vector * residual)
gsl_linalg_LQ_solve_T	/usr/local/gsl/include/gsl/gsl_linalg.h	/^int gsl_linalg_LQ_solve_T (const gsl_matrix * LQ, const gsl_vector * tau, $/;"	p	signature:(const gsl_matrix * LQ, const gsl_vector * tau, const gsl_vector * b, gsl_vector * x)
gsl_linalg_LQ_svx_T	/usr/local/gsl/include/gsl/gsl_linalg.h	/^int gsl_linalg_LQ_svx_T (const gsl_matrix * LQ, const gsl_vector * tau, $/;"	p	signature:(const gsl_matrix * LQ, const gsl_vector * tau, gsl_vector * x)
gsl_linalg_LQ_unpack	/usr/local/gsl/include/gsl/gsl_linalg.h	/^int gsl_linalg_LQ_unpack (const gsl_matrix * LQ, const gsl_vector * tau, $/;"	p	signature:(const gsl_matrix * LQ, const gsl_vector * tau, gsl_matrix * Q, gsl_matrix * L)
gsl_linalg_LQ_update	/usr/local/gsl/include/gsl/gsl_linalg.h	/^int gsl_linalg_LQ_update (gsl_matrix * Q, gsl_matrix * R,$/;"	p	signature:(gsl_matrix * Q, gsl_matrix * R, const gsl_vector * v, gsl_vector * w)
gsl_linalg_LQ_vecQ	/usr/local/gsl/include/gsl/gsl_linalg.h	/^int gsl_linalg_LQ_vecQ (const gsl_matrix * LQ, const gsl_vector * tau, $/;"	p	signature:(const gsl_matrix * LQ, const gsl_vector * tau, gsl_vector * v)
gsl_linalg_LQ_vecQT	/usr/local/gsl/include/gsl/gsl_linalg.h	/^int gsl_linalg_LQ_vecQT (const gsl_matrix * LQ, const gsl_vector * tau, $/;"	p	signature:(const gsl_matrix * LQ, const gsl_vector * tau, gsl_vector * v)
gsl_linalg_LU_decomp	/usr/local/gsl/include/gsl/gsl_linalg.h	/^int gsl_linalg_LU_decomp (gsl_matrix * A, gsl_permutation * p, int *signum);$/;"	p	signature:(gsl_matrix * A, gsl_permutation * p, int *signum)
gsl_linalg_LU_det	/usr/local/gsl/include/gsl/gsl_linalg.h	/^double gsl_linalg_LU_det (gsl_matrix * LU, int signum);$/;"	p	signature:(gsl_matrix * LU, int signum)
gsl_linalg_LU_invert	/usr/local/gsl/include/gsl/gsl_linalg.h	/^int gsl_linalg_LU_invert (const gsl_matrix * LU,$/;"	p	signature:(const gsl_matrix * LU, const gsl_permutation * p, gsl_matrix * inverse)
gsl_linalg_LU_lndet	/usr/local/gsl/include/gsl/gsl_linalg.h	/^double gsl_linalg_LU_lndet (gsl_matrix * LU);$/;"	p	signature:(gsl_matrix * LU)
gsl_linalg_LU_refine	/usr/local/gsl/include/gsl/gsl_linalg.h	/^int gsl_linalg_LU_refine (const gsl_matrix * A,$/;"	p	signature:(const gsl_matrix * A, const gsl_matrix * LU, const gsl_permutation * p, const gsl_vector * b, gsl_vector * x, gsl_vector * residual)
gsl_linalg_LU_sgndet	/usr/local/gsl/include/gsl/gsl_linalg.h	/^int gsl_linalg_LU_sgndet (gsl_matrix * lu, int signum);$/;"	p	signature:(gsl_matrix * lu, int signum)
gsl_linalg_LU_solve	/usr/local/gsl/include/gsl/gsl_linalg.h	/^int gsl_linalg_LU_solve (const gsl_matrix * LU,$/;"	p	signature:(const gsl_matrix * LU, const gsl_permutation * p, const gsl_vector * b, gsl_vector * x)
gsl_linalg_LU_svx	/usr/local/gsl/include/gsl/gsl_linalg.h	/^int gsl_linalg_LU_svx (const gsl_matrix * LU,$/;"	p	signature:(const gsl_matrix * LU, const gsl_permutation * p, gsl_vector * x)
gsl_linalg_L_solve_T	/usr/local/gsl/include/gsl/gsl_linalg.h	/^int gsl_linalg_L_solve_T (const gsl_matrix * L, const gsl_vector * b, $/;"	p	signature:(const gsl_matrix * L, const gsl_vector * b, gsl_vector * x)
gsl_linalg_PTLQ_LQsolve_T	/usr/local/gsl/include/gsl/gsl_linalg.h	/^int gsl_linalg_PTLQ_LQsolve_T (const gsl_matrix * Q, const gsl_matrix * L,$/;"	p	signature:(const gsl_matrix * Q, const gsl_matrix * L, const gsl_permutation * p, const gsl_vector * b, gsl_vector * x)
gsl_linalg_PTLQ_Lsolve_T	/usr/local/gsl/include/gsl/gsl_linalg.h	/^int gsl_linalg_PTLQ_Lsolve_T (const gsl_matrix * LQ,$/;"	p	signature:(const gsl_matrix * LQ, const gsl_permutation * p, const gsl_vector * b, gsl_vector * x)
gsl_linalg_PTLQ_Lsvx_T	/usr/local/gsl/include/gsl/gsl_linalg.h	/^int gsl_linalg_PTLQ_Lsvx_T (const gsl_matrix * LQ,$/;"	p	signature:(const gsl_matrix * LQ, const gsl_permutation * p, gsl_vector * x)
gsl_linalg_PTLQ_decomp	/usr/local/gsl/include/gsl/gsl_linalg.h	/^int gsl_linalg_PTLQ_decomp (gsl_matrix * A, gsl_vector * tau, $/;"	p	signature:(gsl_matrix * A, gsl_vector * tau, gsl_permutation * p, int *signum, gsl_vector * norm)
gsl_linalg_PTLQ_decomp2	/usr/local/gsl/include/gsl/gsl_linalg.h	/^int gsl_linalg_PTLQ_decomp2 (const gsl_matrix * A, gsl_matrix * q, $/;"	p	signature:(const gsl_matrix * A, gsl_matrix * q, gsl_matrix * r, gsl_vector * tau, gsl_permutation * p, int *signum, gsl_vector * norm)
gsl_linalg_PTLQ_solve_T	/usr/local/gsl/include/gsl/gsl_linalg.h	/^int gsl_linalg_PTLQ_solve_T (const gsl_matrix * QR,$/;"	p	signature:(const gsl_matrix * QR, const gsl_vector * tau, const gsl_permutation * p, const gsl_vector * b, gsl_vector * x)
gsl_linalg_PTLQ_svx_T	/usr/local/gsl/include/gsl/gsl_linalg.h	/^int gsl_linalg_PTLQ_svx_T (const gsl_matrix * LQ,$/;"	p	signature:(const gsl_matrix * LQ, const gsl_vector * tau, const gsl_permutation * p, gsl_vector * x)
gsl_linalg_PTLQ_update	/usr/local/gsl/include/gsl/gsl_linalg.h	/^int gsl_linalg_PTLQ_update (gsl_matrix * Q, gsl_matrix * L,$/;"	p	signature:(gsl_matrix * Q, gsl_matrix * L, const gsl_permutation * p, const gsl_vector * v, gsl_vector * w)
gsl_linalg_QRPT_QRsolve	/usr/local/gsl/include/gsl/gsl_linalg.h	/^int gsl_linalg_QRPT_QRsolve (const gsl_matrix * Q,$/;"	p	signature:(const gsl_matrix * Q, const gsl_matrix * R, const gsl_permutation * p, const gsl_vector * b, gsl_vector * x)
gsl_linalg_QRPT_Rsolve	/usr/local/gsl/include/gsl/gsl_linalg.h	/^int gsl_linalg_QRPT_Rsolve (const gsl_matrix * QR,$/;"	p	signature:(const gsl_matrix * QR, const gsl_permutation * p, const gsl_vector * b, gsl_vector * x)
gsl_linalg_QRPT_Rsvx	/usr/local/gsl/include/gsl/gsl_linalg.h	/^int gsl_linalg_QRPT_Rsvx (const gsl_matrix * QR,$/;"	p	signature:(const gsl_matrix * QR, const gsl_permutation * p, gsl_vector * x)
gsl_linalg_QRPT_decomp	/usr/local/gsl/include/gsl/gsl_linalg.h	/^int gsl_linalg_QRPT_decomp (gsl_matrix * A,$/;"	p	signature:(gsl_matrix * A, gsl_vector * tau, gsl_permutation * p, int *signum, gsl_vector * norm)
gsl_linalg_QRPT_decomp2	/usr/local/gsl/include/gsl/gsl_linalg.h	/^int gsl_linalg_QRPT_decomp2 (const gsl_matrix * A, $/;"	p	signature:(const gsl_matrix * A, gsl_matrix * q, gsl_matrix * r, gsl_vector * tau, gsl_permutation * p, int *signum, gsl_vector * norm)
gsl_linalg_QRPT_solve	/usr/local/gsl/include/gsl/gsl_linalg.h	/^int gsl_linalg_QRPT_solve (const gsl_matrix * QR,$/;"	p	signature:(const gsl_matrix * QR, const gsl_vector * tau, const gsl_permutation * p, const gsl_vector * b, gsl_vector * x)
gsl_linalg_QRPT_svx	/usr/local/gsl/include/gsl/gsl_linalg.h	/^int gsl_linalg_QRPT_svx (const gsl_matrix * QR,$/;"	p	signature:(const gsl_matrix * QR, const gsl_vector * tau, const gsl_permutation * p, gsl_vector * x)
gsl_linalg_QRPT_update	/usr/local/gsl/include/gsl/gsl_linalg.h	/^int gsl_linalg_QRPT_update (gsl_matrix * Q,$/;"	p	signature:(gsl_matrix * Q, gsl_matrix * R, const gsl_permutation * p, gsl_vector * u, const gsl_vector * v)
gsl_linalg_QR_QRsolve	/usr/local/gsl/include/gsl/gsl_linalg.h	/^int gsl_linalg_QR_QRsolve (gsl_matrix * Q,$/;"	p	signature:(gsl_matrix * Q, gsl_matrix * R, const gsl_vector * b, gsl_vector * x)
gsl_linalg_QR_QTmat	/usr/local/gsl/include/gsl/gsl_linalg.h	/^int gsl_linalg_QR_QTmat (const gsl_matrix * QR,$/;"	p	signature:(const gsl_matrix * QR, const gsl_vector * tau, gsl_matrix * A)
gsl_linalg_QR_QTvec	/usr/local/gsl/include/gsl/gsl_linalg.h	/^int gsl_linalg_QR_QTvec (const gsl_matrix * QR,$/;"	p	signature:(const gsl_matrix * QR, const gsl_vector * tau, gsl_vector * v)
gsl_linalg_QR_Qvec	/usr/local/gsl/include/gsl/gsl_linalg.h	/^int gsl_linalg_QR_Qvec (const gsl_matrix * QR,$/;"	p	signature:(const gsl_matrix * QR, const gsl_vector * tau, gsl_vector * v)
gsl_linalg_QR_Rsolve	/usr/local/gsl/include/gsl/gsl_linalg.h	/^int gsl_linalg_QR_Rsolve (const gsl_matrix * QR,$/;"	p	signature:(const gsl_matrix * QR, const gsl_vector * b, gsl_vector * x)
gsl_linalg_QR_Rsvx	/usr/local/gsl/include/gsl/gsl_linalg.h	/^int gsl_linalg_QR_Rsvx (const gsl_matrix * QR,$/;"	p	signature:(const gsl_matrix * QR, gsl_vector * x)
gsl_linalg_QR_decomp	/usr/local/gsl/include/gsl/gsl_linalg.h	/^int gsl_linalg_QR_decomp (gsl_matrix * A,$/;"	p	signature:(gsl_matrix * A, gsl_vector * tau)
gsl_linalg_QR_lssolve	/usr/local/gsl/include/gsl/gsl_linalg.h	/^int gsl_linalg_QR_lssolve (const gsl_matrix * QR, $/;"	p	signature:(const gsl_matrix * QR, const gsl_vector * tau, const gsl_vector * b, gsl_vector * x, gsl_vector * residual)
gsl_linalg_QR_solve	/usr/local/gsl/include/gsl/gsl_linalg.h	/^int gsl_linalg_QR_solve (const gsl_matrix * QR,$/;"	p	signature:(const gsl_matrix * QR, const gsl_vector * tau, const gsl_vector * b, gsl_vector * x)
gsl_linalg_QR_svx	/usr/local/gsl/include/gsl/gsl_linalg.h	/^int gsl_linalg_QR_svx (const gsl_matrix * QR,$/;"	p	signature:(const gsl_matrix * QR, const gsl_vector * tau, gsl_vector * x)
gsl_linalg_QR_unpack	/usr/local/gsl/include/gsl/gsl_linalg.h	/^int gsl_linalg_QR_unpack (const gsl_matrix * QR,$/;"	p	signature:(const gsl_matrix * QR, const gsl_vector * tau, gsl_matrix * Q, gsl_matrix * R)
gsl_linalg_QR_update	/usr/local/gsl/include/gsl/gsl_linalg.h	/^int gsl_linalg_QR_update (gsl_matrix * Q,$/;"	p	signature:(gsl_matrix * Q, gsl_matrix * R, gsl_vector * w, const gsl_vector * v)
gsl_linalg_R_solve	/usr/local/gsl/include/gsl/gsl_linalg.h	/^int gsl_linalg_R_solve (const gsl_matrix * R,$/;"	p	signature:(const gsl_matrix * R, const gsl_vector * b, gsl_vector * x)
gsl_linalg_R_svx	/usr/local/gsl/include/gsl/gsl_linalg.h	/^int gsl_linalg_R_svx (const gsl_matrix * R,$/;"	p	signature:(const gsl_matrix * R, gsl_vector * x)
gsl_linalg_SV_decomp	/usr/local/gsl/include/gsl/gsl_linalg.h	/^gsl_linalg_SV_decomp (gsl_matrix * A,$/;"	p	signature:(gsl_matrix * A, gsl_matrix * V, gsl_vector * S, gsl_vector * work)
gsl_linalg_SV_decomp_jacobi	/usr/local/gsl/include/gsl/gsl_linalg.h	/^int gsl_linalg_SV_decomp_jacobi (gsl_matrix * A,$/;"	p	signature:(gsl_matrix * A, gsl_matrix * Q, gsl_vector * S)
gsl_linalg_SV_decomp_mod	/usr/local/gsl/include/gsl/gsl_linalg.h	/^gsl_linalg_SV_decomp_mod (gsl_matrix * A,$/;"	p	signature:(gsl_matrix * A, gsl_matrix * X, gsl_matrix * V, gsl_vector * S, gsl_vector * work)
gsl_linalg_SV_solve	/usr/local/gsl/include/gsl/gsl_linalg.h	/^gsl_linalg_SV_solve (const gsl_matrix * U,$/;"	p	signature:(const gsl_matrix * U, const gsl_matrix * Q, const gsl_vector * S, const gsl_vector * b, gsl_vector * x)
gsl_linalg_balance_accum	/usr/local/gsl/include/gsl/gsl_linalg.h	/^int gsl_linalg_balance_accum (gsl_matrix * A, gsl_vector * D);$/;"	p	signature:(gsl_matrix * A, gsl_vector * D)
gsl_linalg_balance_columns	/usr/local/gsl/include/gsl/gsl_linalg.h	/^int gsl_linalg_balance_columns (gsl_matrix * A, gsl_vector * D);$/;"	p	signature:(gsl_matrix * A, gsl_vector * D)
gsl_linalg_balance_matrix	/usr/local/gsl/include/gsl/gsl_linalg.h	/^int gsl_linalg_balance_matrix (gsl_matrix * A, gsl_vector * D);$/;"	p	signature:(gsl_matrix * A, gsl_vector * D)
gsl_linalg_bidiag_decomp	/usr/local/gsl/include/gsl/gsl_linalg.h	/^int gsl_linalg_bidiag_decomp (gsl_matrix * A, $/;"	p	signature:(gsl_matrix * A, gsl_vector * tau_U, gsl_vector * tau_V)
gsl_linalg_bidiag_unpack	/usr/local/gsl/include/gsl/gsl_linalg.h	/^int gsl_linalg_bidiag_unpack (const gsl_matrix * A, $/;"	p	signature:(const gsl_matrix * A, const gsl_vector * tau_U, gsl_matrix * U, const gsl_vector * tau_V, gsl_matrix * V, gsl_vector * diag, gsl_vector * superdiag)
gsl_linalg_bidiag_unpack2	/usr/local/gsl/include/gsl/gsl_linalg.h	/^int gsl_linalg_bidiag_unpack2 (gsl_matrix * A, $/;"	p	signature:(gsl_matrix * A, gsl_vector * tau_U, gsl_vector * tau_V, gsl_matrix * V)
gsl_linalg_bidiag_unpack_B	/usr/local/gsl/include/gsl/gsl_linalg.h	/^int gsl_linalg_bidiag_unpack_B (const gsl_matrix * A, $/;"	p	signature:(const gsl_matrix * A, gsl_vector * diag, gsl_vector * superdiag)
gsl_linalg_cholesky_decomp	/usr/local/gsl/include/gsl/gsl_linalg.h	/^int gsl_linalg_cholesky_decomp (gsl_matrix * A);$/;"	p	signature:(gsl_matrix * A)
gsl_linalg_cholesky_decomp_unit	/usr/local/gsl/include/gsl/gsl_linalg.h	/^int gsl_linalg_cholesky_decomp_unit(gsl_matrix * A, gsl_vector * D);$/;"	p	signature:(gsl_matrix * A, gsl_vector * D)
gsl_linalg_cholesky_invert	/usr/local/gsl/include/gsl/gsl_linalg.h	/^int gsl_linalg_cholesky_invert(gsl_matrix * cholesky);$/;"	p	signature:(gsl_matrix * cholesky)
gsl_linalg_cholesky_solve	/usr/local/gsl/include/gsl/gsl_linalg.h	/^int gsl_linalg_cholesky_solve (const gsl_matrix * cholesky,$/;"	p	signature:(const gsl_matrix * cholesky, const gsl_vector * b, gsl_vector * x)
gsl_linalg_cholesky_svx	/usr/local/gsl/include/gsl/gsl_linalg.h	/^int gsl_linalg_cholesky_svx (const gsl_matrix * cholesky,$/;"	p	signature:(const gsl_matrix * cholesky, gsl_vector * x)
gsl_linalg_complex_LU_decomp	/usr/local/gsl/include/gsl/gsl_linalg.h	/^int gsl_linalg_complex_LU_decomp (gsl_matrix_complex * A, $/;"	p	signature:(gsl_matrix_complex * A, gsl_permutation * p, int *signum)
gsl_linalg_complex_LU_det	/usr/local/gsl/include/gsl/gsl_linalg.h	/^gsl_complex gsl_linalg_complex_LU_det (gsl_matrix_complex * LU,$/;"	p	signature:(gsl_matrix_complex * LU, int signum)
gsl_linalg_complex_LU_invert	/usr/local/gsl/include/gsl/gsl_linalg.h	/^int gsl_linalg_complex_LU_invert (const gsl_matrix_complex * LU,$/;"	p	signature:(const gsl_matrix_complex * LU, const gsl_permutation * p, gsl_matrix_complex * inverse)
gsl_linalg_complex_LU_lndet	/usr/local/gsl/include/gsl/gsl_linalg.h	/^double gsl_linalg_complex_LU_lndet (gsl_matrix_complex * LU);$/;"	p	signature:(gsl_matrix_complex * LU)
gsl_linalg_complex_LU_refine	/usr/local/gsl/include/gsl/gsl_linalg.h	/^int gsl_linalg_complex_LU_refine (const gsl_matrix_complex * A,$/;"	p	signature:(const gsl_matrix_complex * A, const gsl_matrix_complex * LU, const gsl_permutation * p, const gsl_vector_complex * b, gsl_vector_complex * x, gsl_vector_complex * residual)
gsl_linalg_complex_LU_sgndet	/usr/local/gsl/include/gsl/gsl_linalg.h	/^gsl_complex gsl_linalg_complex_LU_sgndet (gsl_matrix_complex * LU,$/;"	p	signature:(gsl_matrix_complex * LU, int signum)
gsl_linalg_complex_LU_solve	/usr/local/gsl/include/gsl/gsl_linalg.h	/^int gsl_linalg_complex_LU_solve (const gsl_matrix_complex * LU,$/;"	p	signature:(const gsl_matrix_complex * LU, const gsl_permutation * p, const gsl_vector_complex * b, gsl_vector_complex * x)
gsl_linalg_complex_LU_svx	/usr/local/gsl/include/gsl/gsl_linalg.h	/^int gsl_linalg_complex_LU_svx (const gsl_matrix_complex * LU,$/;"	p	signature:(const gsl_matrix_complex * LU, const gsl_permutation * p, gsl_vector_complex * x)
gsl_linalg_complex_cholesky_decomp	/usr/local/gsl/include/gsl/gsl_linalg.h	/^int gsl_linalg_complex_cholesky_decomp (gsl_matrix_complex * A);$/;"	p	signature:(gsl_matrix_complex * A)
gsl_linalg_complex_cholesky_solve	/usr/local/gsl/include/gsl/gsl_linalg.h	/^int gsl_linalg_complex_cholesky_solve (const gsl_matrix_complex * cholesky,$/;"	p	signature:(const gsl_matrix_complex * cholesky, const gsl_vector_complex * b, gsl_vector_complex * x)
gsl_linalg_complex_cholesky_svx	/usr/local/gsl/include/gsl/gsl_linalg.h	/^int gsl_linalg_complex_cholesky_svx (const gsl_matrix_complex * cholesky,$/;"	p	signature:(const gsl_matrix_complex * cholesky, gsl_vector_complex * x)
gsl_linalg_complex_householder_hm	/usr/local/gsl/include/gsl/gsl_linalg.h	/^int gsl_linalg_complex_householder_hm (gsl_complex tau, $/;"	p	signature:(gsl_complex tau, const gsl_vector_complex * v, gsl_matrix_complex * A)
gsl_linalg_complex_householder_hv	/usr/local/gsl/include/gsl/gsl_linalg.h	/^int gsl_linalg_complex_householder_hv (gsl_complex tau, $/;"	p	signature:(gsl_complex tau, const gsl_vector_complex * v, gsl_vector_complex * w)
gsl_linalg_complex_householder_mh	/usr/local/gsl/include/gsl/gsl_linalg.h	/^int gsl_linalg_complex_householder_mh (gsl_complex tau,$/;"	p	signature:(gsl_complex tau, const gsl_vector_complex * v, gsl_matrix_complex * A)
gsl_linalg_complex_householder_transform	/usr/local/gsl/include/gsl/gsl_linalg.h	/^gsl_complex gsl_linalg_complex_householder_transform (gsl_vector_complex * v);$/;"	p	signature:(gsl_vector_complex * v)
gsl_linalg_exponential_ss	/usr/local/gsl/include/gsl/gsl_linalg.h	/^int gsl_linalg_exponential_ss($/;"	p	signature:( const gsl_matrix * A, gsl_matrix * eA, gsl_mode_t mode )
gsl_linalg_hermtd_decomp	/usr/local/gsl/include/gsl/gsl_linalg.h	/^int gsl_linalg_hermtd_decomp (gsl_matrix_complex * A, $/;"	p	signature:(gsl_matrix_complex * A, gsl_vector_complex * tau)
gsl_linalg_hermtd_unpack	/usr/local/gsl/include/gsl/gsl_linalg.h	/^int gsl_linalg_hermtd_unpack (const gsl_matrix_complex * A, $/;"	p	signature:(const gsl_matrix_complex * A, const gsl_vector_complex * tau, gsl_matrix_complex * Q, gsl_vector * diag, gsl_vector * sudiag)
gsl_linalg_hermtd_unpack_T	/usr/local/gsl/include/gsl/gsl_linalg.h	/^int gsl_linalg_hermtd_unpack_T (const gsl_matrix_complex * A, $/;"	p	signature:(const gsl_matrix_complex * A, gsl_vector * diag, gsl_vector * subdiag)
gsl_linalg_hessenberg	/usr/local/gsl/include/gsl/gsl_linalg.h	/^int gsl_linalg_hessenberg(gsl_matrix *A, gsl_vector *tau);$/;"	p	signature:(gsl_matrix *A, gsl_vector *tau)
gsl_linalg_hessenberg_decomp	/usr/local/gsl/include/gsl/gsl_linalg.h	/^int gsl_linalg_hessenberg_decomp(gsl_matrix *A, gsl_vector *tau);$/;"	p	signature:(gsl_matrix *A, gsl_vector *tau)
gsl_linalg_hessenberg_set_zero	/usr/local/gsl/include/gsl/gsl_linalg.h	/^int gsl_linalg_hessenberg_set_zero(gsl_matrix * H);$/;"	p	signature:(gsl_matrix * H)
gsl_linalg_hessenberg_submatrix	/usr/local/gsl/include/gsl/gsl_linalg.h	/^int gsl_linalg_hessenberg_submatrix(gsl_matrix *M, gsl_matrix *A,$/;"	p	signature:(gsl_matrix *M, gsl_matrix *A, size_t top, gsl_vector *tau)
gsl_linalg_hessenberg_unpack	/usr/local/gsl/include/gsl/gsl_linalg.h	/^int gsl_linalg_hessenberg_unpack(gsl_matrix * H, gsl_vector * tau,$/;"	p	signature:(gsl_matrix * H, gsl_vector * tau, gsl_matrix * U)
gsl_linalg_hessenberg_unpack_accum	/usr/local/gsl/include/gsl/gsl_linalg.h	/^int gsl_linalg_hessenberg_unpack_accum(gsl_matrix * H, gsl_vector * tau,$/;"	p	signature:(gsl_matrix * H, gsl_vector * tau, gsl_matrix * U)
gsl_linalg_hesstri_decomp	/usr/local/gsl/include/gsl/gsl_linalg.h	/^int gsl_linalg_hesstri_decomp(gsl_matrix * A, gsl_matrix * B,$/;"	p	signature:(gsl_matrix * A, gsl_matrix * B, gsl_matrix * U, gsl_matrix * V, gsl_vector * work)
gsl_linalg_householder_hm	/usr/local/gsl/include/gsl/gsl_linalg.h	/^int gsl_linalg_householder_hm (double tau, $/;"	p	signature:(double tau, const gsl_vector * v, gsl_matrix * A)
gsl_linalg_householder_hm1	/usr/local/gsl/include/gsl/gsl_linalg.h	/^int gsl_linalg_householder_hm1 (double tau, $/;"	p	signature:(double tau, gsl_matrix * A)
gsl_linalg_householder_hv	/usr/local/gsl/include/gsl/gsl_linalg.h	/^int gsl_linalg_householder_hv (double tau, $/;"	p	signature:(double tau, const gsl_vector * v, gsl_vector * w)
gsl_linalg_householder_mh	/usr/local/gsl/include/gsl/gsl_linalg.h	/^int gsl_linalg_householder_mh (double tau, $/;"	p	signature:(double tau, const gsl_vector * v, gsl_matrix * A)
gsl_linalg_householder_transform	/usr/local/gsl/include/gsl/gsl_linalg.h	/^double gsl_linalg_householder_transform (gsl_vector * v);$/;"	p	signature:(gsl_vector * v)
gsl_linalg_matmult	/usr/local/gsl/include/gsl/gsl_linalg.h	/^int gsl_linalg_matmult (const gsl_matrix * A,$/;"	p	signature:(const gsl_matrix * A, const gsl_matrix * B, gsl_matrix * C)
gsl_linalg_matmult_mod	/usr/local/gsl/include/gsl/gsl_linalg.h	/^int gsl_linalg_matmult_mod (const gsl_matrix * A,$/;"	p	signature:(const gsl_matrix * A, gsl_linalg_matrix_mod_t modA, const gsl_matrix * B, gsl_linalg_matrix_mod_t modB, gsl_matrix * C)
gsl_linalg_matrix_mod_t	/usr/local/gsl/include/gsl/gsl_linalg.h	/^gsl_linalg_matrix_mod_t;$/;"	t	typeref:enum:__anon131
gsl_linalg_solve_cyc_tridiag	/usr/local/gsl/include/gsl/gsl_linalg.h	/^int gsl_linalg_solve_cyc_tridiag (const gsl_vector * diag,$/;"	p	signature:(const gsl_vector * diag, const gsl_vector * abovediag, const gsl_vector * belowdiag, const gsl_vector * b, gsl_vector * x)
gsl_linalg_solve_symm_cyc_tridiag	/usr/local/gsl/include/gsl/gsl_linalg.h	/^int gsl_linalg_solve_symm_cyc_tridiag (const gsl_vector * diag,$/;"	p	signature:(const gsl_vector * diag, const gsl_vector * offdiag, const gsl_vector * b, gsl_vector * x)
gsl_linalg_solve_symm_tridiag	/usr/local/gsl/include/gsl/gsl_linalg.h	/^int gsl_linalg_solve_symm_tridiag (const gsl_vector * diag,$/;"	p	signature:(const gsl_vector * diag, const gsl_vector * offdiag, const gsl_vector * b, gsl_vector * x)
gsl_linalg_solve_tridiag	/usr/local/gsl/include/gsl/gsl_linalg.h	/^int gsl_linalg_solve_tridiag (const gsl_vector * diag,$/;"	p	signature:(const gsl_vector * diag, const gsl_vector * abovediag, const gsl_vector * belowdiag, const gsl_vector * b, gsl_vector * x)
gsl_linalg_symmtd_decomp	/usr/local/gsl/include/gsl/gsl_linalg.h	/^int gsl_linalg_symmtd_decomp (gsl_matrix * A, $/;"	p	signature:(gsl_matrix * A, gsl_vector * tau)
gsl_linalg_symmtd_unpack	/usr/local/gsl/include/gsl/gsl_linalg.h	/^int gsl_linalg_symmtd_unpack (const gsl_matrix * A, $/;"	p	signature:(const gsl_matrix * A, const gsl_vector * tau, gsl_matrix * Q, gsl_vector * diag, gsl_vector * subdiag)
gsl_linalg_symmtd_unpack_T	/usr/local/gsl/include/gsl/gsl_linalg.h	/^int gsl_linalg_symmtd_unpack_T (const gsl_matrix * A,$/;"	p	signature:(const gsl_matrix * A, gsl_vector * diag, gsl_vector * subdiag)
gsl_log1p	/usr/local/gsl/include/gsl/gsl_sys.h	/^double gsl_log1p (const double x);$/;"	p	signature:(const double x)
gsl_matrix	/usr/local/gsl/include/gsl/gsl_matrix_double.h	/^} gsl_matrix;$/;"	t	typeref:struct:__anon73
gsl_matrix_add	/usr/local/gsl/include/gsl/gsl_matrix_double.h	/^int gsl_matrix_add (gsl_matrix * a, const gsl_matrix * b);$/;"	p	signature:(gsl_matrix * a, const gsl_matrix * b)
gsl_matrix_add_constant	/usr/local/gsl/include/gsl/gsl_matrix_double.h	/^int gsl_matrix_add_constant (gsl_matrix * a, const double x);$/;"	p	signature:(gsl_matrix * a, const double x)
gsl_matrix_add_diagonal	/usr/local/gsl/include/gsl/gsl_matrix_double.h	/^int gsl_matrix_add_diagonal (gsl_matrix * a, const double x);$/;"	p	signature:(gsl_matrix * a, const double x)
gsl_matrix_alloc	/usr/local/gsl/include/gsl/gsl_matrix_double.h	/^gsl_matrix_alloc (const size_t n1, const size_t n2);$/;"	p	signature:(const size_t n1, const size_t n2)
gsl_matrix_alloc_from_block	/usr/local/gsl/include/gsl/gsl_matrix_double.h	/^gsl_matrix_alloc_from_block (gsl_block * b, $/;"	p	signature:(gsl_block * b, const size_t offset, const size_t n1, const size_t n2, const size_t d2)
gsl_matrix_alloc_from_matrix	/usr/local/gsl/include/gsl/gsl_matrix_double.h	/^gsl_matrix_alloc_from_matrix (gsl_matrix * m,$/;"	p	signature:(gsl_matrix * m, const size_t k1, const size_t k2, const size_t n1, const size_t n2)
gsl_matrix_calloc	/usr/local/gsl/include/gsl/gsl_matrix_double.h	/^gsl_matrix_calloc (const size_t n1, const size_t n2);$/;"	p	signature:(const size_t n1, const size_t n2)
gsl_matrix_char	/usr/local/gsl/include/gsl/gsl_matrix_char.h	/^} gsl_matrix_char;$/;"	t	typeref:struct:__anon148
gsl_matrix_char_add	/usr/local/gsl/include/gsl/gsl_matrix_char.h	/^int gsl_matrix_char_add (gsl_matrix_char * a, const gsl_matrix_char * b);$/;"	p	signature:(gsl_matrix_char * a, const gsl_matrix_char * b)
gsl_matrix_char_add_constant	/usr/local/gsl/include/gsl/gsl_matrix_char.h	/^int gsl_matrix_char_add_constant (gsl_matrix_char * a, const double x);$/;"	p	signature:(gsl_matrix_char * a, const double x)
gsl_matrix_char_add_diagonal	/usr/local/gsl/include/gsl/gsl_matrix_char.h	/^int gsl_matrix_char_add_diagonal (gsl_matrix_char * a, const double x);$/;"	p	signature:(gsl_matrix_char * a, const double x)
gsl_matrix_char_alloc	/usr/local/gsl/include/gsl/gsl_matrix_char.h	/^gsl_matrix_char_alloc (const size_t n1, const size_t n2);$/;"	p	signature:(const size_t n1, const size_t n2)
gsl_matrix_char_alloc_from_block	/usr/local/gsl/include/gsl/gsl_matrix_char.h	/^gsl_matrix_char_alloc_from_block (gsl_block_char * b, $/;"	p	signature:(gsl_block_char * b, const size_t offset, const size_t n1, const size_t n2, const size_t d2)
gsl_matrix_char_alloc_from_matrix	/usr/local/gsl/include/gsl/gsl_matrix_char.h	/^gsl_matrix_char_alloc_from_matrix (gsl_matrix_char * m,$/;"	p	signature:(gsl_matrix_char * m, const size_t k1, const size_t k2, const size_t n1, const size_t n2)
gsl_matrix_char_calloc	/usr/local/gsl/include/gsl/gsl_matrix_char.h	/^gsl_matrix_char_calloc (const size_t n1, const size_t n2);$/;"	p	signature:(const size_t n1, const size_t n2)
gsl_matrix_char_column	/usr/local/gsl/include/gsl/gsl_matrix_char.h	/^gsl_matrix_char_column (gsl_matrix_char * m, const size_t j);$/;"	p	signature:(gsl_matrix_char * m, const size_t j)
gsl_matrix_char_const_column	/usr/local/gsl/include/gsl/gsl_matrix_char.h	/^gsl_matrix_char_const_column (const gsl_matrix_char * m, $/;"	p	signature:(const gsl_matrix_char * m, const size_t j)
gsl_matrix_char_const_diagonal	/usr/local/gsl/include/gsl/gsl_matrix_char.h	/^gsl_matrix_char_const_diagonal (const gsl_matrix_char * m);$/;"	p	signature:(const gsl_matrix_char * m)
gsl_matrix_char_const_ptr	/usr/local/gsl/include/gsl/gsl_matrix_char.h	/^INLINE_DECL const char * gsl_matrix_char_const_ptr(const gsl_matrix_char * m, const size_t i, const size_t j);$/;"	p	signature:(const gsl_matrix_char * m, const size_t i, const size_t j)
gsl_matrix_char_const_ptr	/usr/local/gsl/include/gsl/gsl_matrix_char.h	/^gsl_matrix_char_const_ptr(const gsl_matrix_char * m, const size_t i, const size_t j)$/;"	f	signature:(const gsl_matrix_char * m, const size_t i, const size_t j)
gsl_matrix_char_const_row	/usr/local/gsl/include/gsl/gsl_matrix_char.h	/^gsl_matrix_char_const_row (const gsl_matrix_char * m, $/;"	p	signature:(const gsl_matrix_char * m, const size_t i)
gsl_matrix_char_const_subcolumn	/usr/local/gsl/include/gsl/gsl_matrix_char.h	/^gsl_matrix_char_const_subcolumn (const gsl_matrix_char * m, const size_t j,$/;"	p	signature:(const gsl_matrix_char * m, const size_t j, const size_t offset, const size_t n)
gsl_matrix_char_const_subdiagonal	/usr/local/gsl/include/gsl/gsl_matrix_char.h	/^gsl_matrix_char_const_subdiagonal (const gsl_matrix_char * m, $/;"	p	signature:(const gsl_matrix_char * m, const size_t k)
gsl_matrix_char_const_submatrix	/usr/local/gsl/include/gsl/gsl_matrix_char.h	/^gsl_matrix_char_const_submatrix (const gsl_matrix_char * m, $/;"	p	signature:(const gsl_matrix_char * m, const size_t i, const size_t j, const size_t n1, const size_t n2)
gsl_matrix_char_const_subrow	/usr/local/gsl/include/gsl/gsl_matrix_char.h	/^gsl_matrix_char_const_subrow (const gsl_matrix_char * m, const size_t i,$/;"	p	signature:(const gsl_matrix_char * m, const size_t i, const size_t offset, const size_t n)
gsl_matrix_char_const_superdiagonal	/usr/local/gsl/include/gsl/gsl_matrix_char.h	/^gsl_matrix_char_const_superdiagonal (const gsl_matrix_char * m, $/;"	p	signature:(const gsl_matrix_char * m, const size_t k)
gsl_matrix_char_const_view	/usr/local/gsl/include/gsl/gsl_matrix_char.h	/^typedef const _gsl_matrix_char_const_view gsl_matrix_char_const_view;$/;"	t
gsl_matrix_char_const_view_array	/usr/local/gsl/include/gsl/gsl_matrix_char.h	/^gsl_matrix_char_const_view_array (const char * base,$/;"	p	signature:(const char * base, const size_t n1, const size_t n2)
gsl_matrix_char_const_view_array_with_tda	/usr/local/gsl/include/gsl/gsl_matrix_char.h	/^gsl_matrix_char_const_view_array_with_tda (const char * base, $/;"	p	signature:(const char * base, const size_t n1, const size_t n2, const size_t tda)
gsl_matrix_char_const_view_vector	/usr/local/gsl/include/gsl/gsl_matrix_char.h	/^gsl_matrix_char_const_view_vector (const gsl_vector_char * v,$/;"	p	signature:(const gsl_vector_char * v, const size_t n1, const size_t n2)
gsl_matrix_char_const_view_vector_with_tda	/usr/local/gsl/include/gsl/gsl_matrix_char.h	/^gsl_matrix_char_const_view_vector_with_tda (const gsl_vector_char * v,$/;"	p	signature:(const gsl_vector_char * v, const size_t n1, const size_t n2, const size_t tda)
gsl_matrix_char_diagonal	/usr/local/gsl/include/gsl/gsl_matrix_char.h	/^gsl_matrix_char_diagonal (gsl_matrix_char * m);$/;"	p	signature:(gsl_matrix_char * m)
gsl_matrix_char_div_elements	/usr/local/gsl/include/gsl/gsl_matrix_char.h	/^int gsl_matrix_char_div_elements (gsl_matrix_char * a, const gsl_matrix_char * b);$/;"	p	signature:(gsl_matrix_char * a, const gsl_matrix_char * b)
gsl_matrix_char_fprintf	/usr/local/gsl/include/gsl/gsl_matrix_char.h	/^int gsl_matrix_char_fprintf (FILE * stream, const gsl_matrix_char * m, const char * format);$/;"	p	signature:(FILE * stream, const gsl_matrix_char * m, const char * format)
gsl_matrix_char_fread	/usr/local/gsl/include/gsl/gsl_matrix_char.h	/^int gsl_matrix_char_fread (FILE * stream, gsl_matrix_char * m) ;$/;"	p	signature:(FILE * stream, gsl_matrix_char * m)
gsl_matrix_char_free	/usr/local/gsl/include/gsl/gsl_matrix_char.h	/^void gsl_matrix_char_free (gsl_matrix_char * m);$/;"	p	signature:(gsl_matrix_char * m)
gsl_matrix_char_fscanf	/usr/local/gsl/include/gsl/gsl_matrix_char.h	/^int gsl_matrix_char_fscanf (FILE * stream, gsl_matrix_char * m);$/;"	p	signature:(FILE * stream, gsl_matrix_char * m)
gsl_matrix_char_fwrite	/usr/local/gsl/include/gsl/gsl_matrix_char.h	/^int gsl_matrix_char_fwrite (FILE * stream, const gsl_matrix_char * m) ;$/;"	p	signature:(FILE * stream, const gsl_matrix_char * m)
gsl_matrix_char_get	/usr/local/gsl/include/gsl/gsl_matrix_char.h	/^INLINE_DECL char   gsl_matrix_char_get(const gsl_matrix_char * m, const size_t i, const size_t j);$/;"	p	signature:(const gsl_matrix_char * m, const size_t i, const size_t j)
gsl_matrix_char_get	/usr/local/gsl/include/gsl/gsl_matrix_char.h	/^gsl_matrix_char_get(const gsl_matrix_char * m, const size_t i, const size_t j)$/;"	f	signature:(const gsl_matrix_char * m, const size_t i, const size_t j)
gsl_matrix_char_get_col	/usr/local/gsl/include/gsl/gsl_matrix_char.h	/^int gsl_matrix_char_get_col(gsl_vector_char * v, const gsl_matrix_char * m, const size_t j);$/;"	p	signature:(gsl_vector_char * v, const gsl_matrix_char * m, const size_t j)
gsl_matrix_char_get_row	/usr/local/gsl/include/gsl/gsl_matrix_char.h	/^int gsl_matrix_char_get_row(gsl_vector_char * v, const gsl_matrix_char * m, const size_t i);$/;"	p	signature:(gsl_vector_char * v, const gsl_matrix_char * m, const size_t i)
gsl_matrix_char_isneg	/usr/local/gsl/include/gsl/gsl_matrix_char.h	/^int gsl_matrix_char_isneg (const gsl_matrix_char * m);$/;"	p	signature:(const gsl_matrix_char * m)
gsl_matrix_char_isnonneg	/usr/local/gsl/include/gsl/gsl_matrix_char.h	/^int gsl_matrix_char_isnonneg (const gsl_matrix_char * m);$/;"	p	signature:(const gsl_matrix_char * m)
gsl_matrix_char_isnull	/usr/local/gsl/include/gsl/gsl_matrix_char.h	/^int gsl_matrix_char_isnull (const gsl_matrix_char * m);$/;"	p	signature:(const gsl_matrix_char * m)
gsl_matrix_char_ispos	/usr/local/gsl/include/gsl/gsl_matrix_char.h	/^int gsl_matrix_char_ispos (const gsl_matrix_char * m);$/;"	p	signature:(const gsl_matrix_char * m)
gsl_matrix_char_max	/usr/local/gsl/include/gsl/gsl_matrix_char.h	/^char gsl_matrix_char_max (const gsl_matrix_char * m);$/;"	p	signature:(const gsl_matrix_char * m)
gsl_matrix_char_max_index	/usr/local/gsl/include/gsl/gsl_matrix_char.h	/^void gsl_matrix_char_max_index (const gsl_matrix_char * m, size_t * imax, size_t *jmax);$/;"	p	signature:(const gsl_matrix_char * m, size_t * imax, size_t *jmax)
gsl_matrix_char_memcpy	/usr/local/gsl/include/gsl/gsl_matrix_char.h	/^int gsl_matrix_char_memcpy(gsl_matrix_char * dest, const gsl_matrix_char * src);$/;"	p	signature:(gsl_matrix_char * dest, const gsl_matrix_char * src)
gsl_matrix_char_min	/usr/local/gsl/include/gsl/gsl_matrix_char.h	/^char gsl_matrix_char_min (const gsl_matrix_char * m);$/;"	p	signature:(const gsl_matrix_char * m)
gsl_matrix_char_min_index	/usr/local/gsl/include/gsl/gsl_matrix_char.h	/^void gsl_matrix_char_min_index (const gsl_matrix_char * m, size_t * imin, size_t *jmin);$/;"	p	signature:(const gsl_matrix_char * m, size_t * imin, size_t *jmin)
gsl_matrix_char_minmax	/usr/local/gsl/include/gsl/gsl_matrix_char.h	/^void gsl_matrix_char_minmax (const gsl_matrix_char * m, char * min_out, char * max_out);$/;"	p	signature:(const gsl_matrix_char * m, char * min_out, char * max_out)
gsl_matrix_char_minmax_index	/usr/local/gsl/include/gsl/gsl_matrix_char.h	/^void gsl_matrix_char_minmax_index (const gsl_matrix_char * m, size_t * imin, size_t * jmin, size_t * imax, size_t * jmax);$/;"	p	signature:(const gsl_matrix_char * m, size_t * imin, size_t * jmin, size_t * imax, size_t * jmax)
gsl_matrix_char_mul_elements	/usr/local/gsl/include/gsl/gsl_matrix_char.h	/^int gsl_matrix_char_mul_elements (gsl_matrix_char * a, const gsl_matrix_char * b);$/;"	p	signature:(gsl_matrix_char * a, const gsl_matrix_char * b)
gsl_matrix_char_ptr	/usr/local/gsl/include/gsl/gsl_matrix_char.h	/^INLINE_DECL char * gsl_matrix_char_ptr(gsl_matrix_char * m, const size_t i, const size_t j);$/;"	p	signature:(gsl_matrix_char * m, const size_t i, const size_t j)
gsl_matrix_char_ptr	/usr/local/gsl/include/gsl/gsl_matrix_char.h	/^gsl_matrix_char_ptr(gsl_matrix_char * m, const size_t i, const size_t j)$/;"	f	signature:(gsl_matrix_char * m, const size_t i, const size_t j)
gsl_matrix_char_row	/usr/local/gsl/include/gsl/gsl_matrix_char.h	/^gsl_matrix_char_row (gsl_matrix_char * m, const size_t i);$/;"	p	signature:(gsl_matrix_char * m, const size_t i)
gsl_matrix_char_scale	/usr/local/gsl/include/gsl/gsl_matrix_char.h	/^int gsl_matrix_char_scale (gsl_matrix_char * a, const double x);$/;"	p	signature:(gsl_matrix_char * a, const double x)
gsl_matrix_char_set	/usr/local/gsl/include/gsl/gsl_matrix_char.h	/^INLINE_DECL void    gsl_matrix_char_set(gsl_matrix_char * m, const size_t i, const size_t j, const char x);$/;"	p	signature:(gsl_matrix_char * m, const size_t i, const size_t j, const char x)
gsl_matrix_char_set	/usr/local/gsl/include/gsl/gsl_matrix_char.h	/^gsl_matrix_char_set(gsl_matrix_char * m, const size_t i, const size_t j, const char x)$/;"	f	signature:(gsl_matrix_char * m, const size_t i, const size_t j, const char x)
gsl_matrix_char_set_all	/usr/local/gsl/include/gsl/gsl_matrix_char.h	/^void gsl_matrix_char_set_all (gsl_matrix_char * m, char x);$/;"	p	signature:(gsl_matrix_char * m, char x)
gsl_matrix_char_set_col	/usr/local/gsl/include/gsl/gsl_matrix_char.h	/^int gsl_matrix_char_set_col(gsl_matrix_char * m, const size_t j, const gsl_vector_char * v);$/;"	p	signature:(gsl_matrix_char * m, const size_t j, const gsl_vector_char * v)
gsl_matrix_char_set_identity	/usr/local/gsl/include/gsl/gsl_matrix_char.h	/^void gsl_matrix_char_set_identity (gsl_matrix_char * m);$/;"	p	signature:(gsl_matrix_char * m)
gsl_matrix_char_set_row	/usr/local/gsl/include/gsl/gsl_matrix_char.h	/^int gsl_matrix_char_set_row(gsl_matrix_char * m, const size_t i, const gsl_vector_char * v);$/;"	p	signature:(gsl_matrix_char * m, const size_t i, const gsl_vector_char * v)
gsl_matrix_char_set_zero	/usr/local/gsl/include/gsl/gsl_matrix_char.h	/^void gsl_matrix_char_set_zero (gsl_matrix_char * m);$/;"	p	signature:(gsl_matrix_char * m)
gsl_matrix_char_sub	/usr/local/gsl/include/gsl/gsl_matrix_char.h	/^int gsl_matrix_char_sub (gsl_matrix_char * a, const gsl_matrix_char * b);$/;"	p	signature:(gsl_matrix_char * a, const gsl_matrix_char * b)
gsl_matrix_char_subcolumn	/usr/local/gsl/include/gsl/gsl_matrix_char.h	/^gsl_matrix_char_subcolumn (gsl_matrix_char * m, const size_t j,$/;"	p	signature:(gsl_matrix_char * m, const size_t j, const size_t offset, const size_t n)
gsl_matrix_char_subdiagonal	/usr/local/gsl/include/gsl/gsl_matrix_char.h	/^gsl_matrix_char_subdiagonal (gsl_matrix_char * m, const size_t k);$/;"	p	signature:(gsl_matrix_char * m, const size_t k)
gsl_matrix_char_submatrix	/usr/local/gsl/include/gsl/gsl_matrix_char.h	/^gsl_matrix_char_submatrix (gsl_matrix_char * m, $/;"	p	signature:(gsl_matrix_char * m, const size_t i, const size_t j, const size_t n1, const size_t n2)
gsl_matrix_char_subrow	/usr/local/gsl/include/gsl/gsl_matrix_char.h	/^gsl_matrix_char_subrow (gsl_matrix_char * m, const size_t i,$/;"	p	signature:(gsl_matrix_char * m, const size_t i, const size_t offset, const size_t n)
gsl_matrix_char_superdiagonal	/usr/local/gsl/include/gsl/gsl_matrix_char.h	/^gsl_matrix_char_superdiagonal (gsl_matrix_char * m, const size_t k);$/;"	p	signature:(gsl_matrix_char * m, const size_t k)
gsl_matrix_char_swap	/usr/local/gsl/include/gsl/gsl_matrix_char.h	/^int gsl_matrix_char_swap(gsl_matrix_char * m1, gsl_matrix_char * m2);$/;"	p	signature:(gsl_matrix_char * m1, gsl_matrix_char * m2)
gsl_matrix_char_swap_columns	/usr/local/gsl/include/gsl/gsl_matrix_char.h	/^int gsl_matrix_char_swap_columns(gsl_matrix_char * m, const size_t i, const size_t j);$/;"	p	signature:(gsl_matrix_char * m, const size_t i, const size_t j)
gsl_matrix_char_swap_rowcol	/usr/local/gsl/include/gsl/gsl_matrix_char.h	/^int gsl_matrix_char_swap_rowcol(gsl_matrix_char * m, const size_t i, const size_t j);$/;"	p	signature:(gsl_matrix_char * m, const size_t i, const size_t j)
gsl_matrix_char_swap_rows	/usr/local/gsl/include/gsl/gsl_matrix_char.h	/^int gsl_matrix_char_swap_rows(gsl_matrix_char * m, const size_t i, const size_t j);$/;"	p	signature:(gsl_matrix_char * m, const size_t i, const size_t j)
gsl_matrix_char_transpose	/usr/local/gsl/include/gsl/gsl_matrix_char.h	/^int gsl_matrix_char_transpose (gsl_matrix_char * m);$/;"	p	signature:(gsl_matrix_char * m)
gsl_matrix_char_transpose_memcpy	/usr/local/gsl/include/gsl/gsl_matrix_char.h	/^int gsl_matrix_char_transpose_memcpy (gsl_matrix_char * dest, const gsl_matrix_char * src);$/;"	p	signature:(gsl_matrix_char * dest, const gsl_matrix_char * src)
gsl_matrix_char_view	/usr/local/gsl/include/gsl/gsl_matrix_char.h	/^typedef _gsl_matrix_char_view gsl_matrix_char_view;$/;"	t
gsl_matrix_char_view_array	/usr/local/gsl/include/gsl/gsl_matrix_char.h	/^gsl_matrix_char_view_array (char * base,$/;"	p	signature:(char * base, const size_t n1, const size_t n2)
gsl_matrix_char_view_array_with_tda	/usr/local/gsl/include/gsl/gsl_matrix_char.h	/^gsl_matrix_char_view_array_with_tda (char * base, $/;"	p	signature:(char * base, const size_t n1, const size_t n2, const size_t tda)
gsl_matrix_char_view_vector	/usr/local/gsl/include/gsl/gsl_matrix_char.h	/^gsl_matrix_char_view_vector (gsl_vector_char * v,$/;"	p	signature:(gsl_vector_char * v, const size_t n1, const size_t n2)
gsl_matrix_char_view_vector_with_tda	/usr/local/gsl/include/gsl/gsl_matrix_char.h	/^gsl_matrix_char_view_vector_with_tda (gsl_vector_char * v,$/;"	p	signature:(gsl_vector_char * v, const size_t n1, const size_t n2, const size_t tda)
gsl_matrix_column	/usr/local/gsl/include/gsl/gsl_matrix_double.h	/^gsl_matrix_column (gsl_matrix * m, const size_t j);$/;"	p	signature:(gsl_matrix * m, const size_t j)
gsl_matrix_complex	/usr/local/gsl/include/gsl/gsl_matrix_complex_double.h	/^} gsl_matrix_complex ;$/;"	t	typeref:struct:__anon10
gsl_matrix_complex_add	/usr/local/gsl/include/gsl/gsl_matrix_complex_double.h	/^int gsl_matrix_complex_add (gsl_matrix_complex * a, const gsl_matrix_complex * b);$/;"	p	signature:(gsl_matrix_complex * a, const gsl_matrix_complex * b)
gsl_matrix_complex_add_constant	/usr/local/gsl/include/gsl/gsl_matrix_complex_double.h	/^int gsl_matrix_complex_add_constant (gsl_matrix_complex * a, const gsl_complex x);$/;"	p	signature:(gsl_matrix_complex * a, const gsl_complex x)
gsl_matrix_complex_add_diagonal	/usr/local/gsl/include/gsl/gsl_matrix_complex_double.h	/^int gsl_matrix_complex_add_diagonal (gsl_matrix_complex * a, const gsl_complex x);$/;"	p	signature:(gsl_matrix_complex * a, const gsl_complex x)
gsl_matrix_complex_alloc	/usr/local/gsl/include/gsl/gsl_matrix_complex_double.h	/^gsl_matrix_complex_alloc (const size_t n1, const size_t n2);$/;"	p	signature:(const size_t n1, const size_t n2)
gsl_matrix_complex_alloc_from_block	/usr/local/gsl/include/gsl/gsl_matrix_complex_double.h	/^gsl_matrix_complex_alloc_from_block (gsl_block_complex * b, $/;"	p	signature:(gsl_block_complex * b, const size_t offset, const size_t n1, const size_t n2, const size_t d2)
gsl_matrix_complex_alloc_from_matrix	/usr/local/gsl/include/gsl/gsl_matrix_complex_double.h	/^gsl_matrix_complex_alloc_from_matrix (gsl_matrix_complex * b,$/;"	p	signature:(gsl_matrix_complex * b, const size_t k1, const size_t k2, const size_t n1, const size_t n2)
gsl_matrix_complex_calloc	/usr/local/gsl/include/gsl/gsl_matrix_complex_double.h	/^gsl_matrix_complex_calloc (const size_t n1, const size_t n2);$/;"	p	signature:(const size_t n1, const size_t n2)
gsl_matrix_complex_column	/usr/local/gsl/include/gsl/gsl_matrix_complex_double.h	/^gsl_matrix_complex_column (gsl_matrix_complex * m, const size_t j);$/;"	p	signature:(gsl_matrix_complex * m, const size_t j)
gsl_matrix_complex_const_column	/usr/local/gsl/include/gsl/gsl_matrix_complex_double.h	/^gsl_matrix_complex_const_column (const gsl_matrix_complex * m, $/;"	p	signature:(const gsl_matrix_complex * m, const size_t j)
gsl_matrix_complex_const_diagonal	/usr/local/gsl/include/gsl/gsl_matrix_complex_double.h	/^gsl_matrix_complex_const_diagonal (const gsl_matrix_complex * m);$/;"	p	signature:(const gsl_matrix_complex * m)
gsl_matrix_complex_const_ptr	/usr/local/gsl/include/gsl/gsl_matrix_complex_double.h	/^INLINE_DECL const gsl_complex * gsl_matrix_complex_const_ptr(const gsl_matrix_complex * m, const size_t i, const size_t j);$/;"	p	signature:(const gsl_matrix_complex * m, const size_t i, const size_t j)
gsl_matrix_complex_const_ptr	/usr/local/gsl/include/gsl/gsl_matrix_complex_double.h	/^gsl_matrix_complex_const_ptr(const gsl_matrix_complex * m, $/;"	f	signature:(const gsl_matrix_complex * m, const size_t i, const size_t j)
gsl_matrix_complex_const_row	/usr/local/gsl/include/gsl/gsl_matrix_complex_double.h	/^gsl_matrix_complex_const_row (const gsl_matrix_complex * m, $/;"	p	signature:(const gsl_matrix_complex * m, const size_t i)
gsl_matrix_complex_const_subcolumn	/usr/local/gsl/include/gsl/gsl_matrix_complex_double.h	/^gsl_matrix_complex_const_subcolumn (const gsl_matrix_complex * m,$/;"	p	signature:(const gsl_matrix_complex * m, const size_t j, const size_t offset, const size_t n)
gsl_matrix_complex_const_subdiagonal	/usr/local/gsl/include/gsl/gsl_matrix_complex_double.h	/^gsl_matrix_complex_const_subdiagonal (const gsl_matrix_complex * m, $/;"	p	signature:(const gsl_matrix_complex * m, const size_t k)
gsl_matrix_complex_const_submatrix	/usr/local/gsl/include/gsl/gsl_matrix_complex_double.h	/^gsl_matrix_complex_const_submatrix (const gsl_matrix_complex * m, $/;"	p	signature:(const gsl_matrix_complex * m, const size_t i, const size_t j, const size_t n1, const size_t n2)
gsl_matrix_complex_const_subrow	/usr/local/gsl/include/gsl/gsl_matrix_complex_double.h	/^gsl_matrix_complex_const_subrow (const gsl_matrix_complex * m,$/;"	p	signature:(const gsl_matrix_complex * m, const size_t i, const size_t offset, const size_t n)
gsl_matrix_complex_const_superdiagonal	/usr/local/gsl/include/gsl/gsl_matrix_complex_double.h	/^gsl_matrix_complex_const_superdiagonal (const gsl_matrix_complex * m, $/;"	p	signature:(const gsl_matrix_complex * m, const size_t k)
gsl_matrix_complex_const_view	/usr/local/gsl/include/gsl/gsl_matrix_complex_double.h	/^typedef const _gsl_matrix_complex_const_view gsl_matrix_complex_const_view;$/;"	t
gsl_matrix_complex_const_view_array	/usr/local/gsl/include/gsl/gsl_matrix_complex_double.h	/^gsl_matrix_complex_const_view_array (const double * base,$/;"	p	signature:(const double * base, const size_t n1, const size_t n2)
gsl_matrix_complex_const_view_array_with_tda	/usr/local/gsl/include/gsl/gsl_matrix_complex_double.h	/^gsl_matrix_complex_const_view_array_with_tda (const double * base, $/;"	p	signature:(const double * base, const size_t n1, const size_t n2, const size_t tda)
gsl_matrix_complex_const_view_vector	/usr/local/gsl/include/gsl/gsl_matrix_complex_double.h	/^gsl_matrix_complex_const_view_vector (const gsl_vector_complex * v,$/;"	p	signature:(const gsl_vector_complex * v, const size_t n1, const size_t n2)
gsl_matrix_complex_const_view_vector_with_tda	/usr/local/gsl/include/gsl/gsl_matrix_complex_double.h	/^gsl_matrix_complex_const_view_vector_with_tda (const gsl_vector_complex * v,$/;"	p	signature:(const gsl_vector_complex * v, const size_t n1, const size_t n2, const size_t tda)
gsl_matrix_complex_diagonal	/usr/local/gsl/include/gsl/gsl_matrix_complex_double.h	/^gsl_matrix_complex_diagonal (gsl_matrix_complex * m);$/;"	p	signature:(gsl_matrix_complex * m)
gsl_matrix_complex_div_elements	/usr/local/gsl/include/gsl/gsl_matrix_complex_double.h	/^int gsl_matrix_complex_div_elements (gsl_matrix_complex * a, const gsl_matrix_complex * b);$/;"	p	signature:(gsl_matrix_complex * a, const gsl_matrix_complex * b)
gsl_matrix_complex_float	/usr/local/gsl/include/gsl/gsl_matrix_complex_float.h	/^} gsl_matrix_complex_float ;$/;"	t	typeref:struct:__anon128
gsl_matrix_complex_float_add	/usr/local/gsl/include/gsl/gsl_matrix_complex_float.h	/^int gsl_matrix_complex_float_add (gsl_matrix_complex_float * a, const gsl_matrix_complex_float * b);$/;"	p	signature:(gsl_matrix_complex_float * a, const gsl_matrix_complex_float * b)
gsl_matrix_complex_float_add_constant	/usr/local/gsl/include/gsl/gsl_matrix_complex_float.h	/^int gsl_matrix_complex_float_add_constant (gsl_matrix_complex_float * a, const gsl_complex_float x);$/;"	p	signature:(gsl_matrix_complex_float * a, const gsl_complex_float x)
gsl_matrix_complex_float_add_diagonal	/usr/local/gsl/include/gsl/gsl_matrix_complex_float.h	/^int gsl_matrix_complex_float_add_diagonal (gsl_matrix_complex_float * a, const gsl_complex_float x);$/;"	p	signature:(gsl_matrix_complex_float * a, const gsl_complex_float x)
gsl_matrix_complex_float_alloc	/usr/local/gsl/include/gsl/gsl_matrix_complex_float.h	/^gsl_matrix_complex_float_alloc (const size_t n1, const size_t n2);$/;"	p	signature:(const size_t n1, const size_t n2)
gsl_matrix_complex_float_alloc_from_block	/usr/local/gsl/include/gsl/gsl_matrix_complex_float.h	/^gsl_matrix_complex_float_alloc_from_block (gsl_block_complex_float * b, $/;"	p	signature:(gsl_block_complex_float * b, const size_t offset, const size_t n1, const size_t n2, const size_t d2)
gsl_matrix_complex_float_alloc_from_matrix	/usr/local/gsl/include/gsl/gsl_matrix_complex_float.h	/^gsl_matrix_complex_float_alloc_from_matrix (gsl_matrix_complex_float * b,$/;"	p	signature:(gsl_matrix_complex_float * b, const size_t k1, const size_t k2, const size_t n1, const size_t n2)
gsl_matrix_complex_float_calloc	/usr/local/gsl/include/gsl/gsl_matrix_complex_float.h	/^gsl_matrix_complex_float_calloc (const size_t n1, const size_t n2);$/;"	p	signature:(const size_t n1, const size_t n2)
gsl_matrix_complex_float_column	/usr/local/gsl/include/gsl/gsl_matrix_complex_float.h	/^gsl_matrix_complex_float_column (gsl_matrix_complex_float * m, const size_t j);$/;"	p	signature:(gsl_matrix_complex_float * m, const size_t j)
gsl_matrix_complex_float_const_column	/usr/local/gsl/include/gsl/gsl_matrix_complex_float.h	/^gsl_matrix_complex_float_const_column (const gsl_matrix_complex_float * m, $/;"	p	signature:(const gsl_matrix_complex_float * m, const size_t j)
gsl_matrix_complex_float_const_diagonal	/usr/local/gsl/include/gsl/gsl_matrix_complex_float.h	/^gsl_matrix_complex_float_const_diagonal (const gsl_matrix_complex_float * m);$/;"	p	signature:(const gsl_matrix_complex_float * m)
gsl_matrix_complex_float_const_ptr	/usr/local/gsl/include/gsl/gsl_matrix_complex_float.h	/^INLINE_DECL const gsl_complex_float * gsl_matrix_complex_float_const_ptr(const gsl_matrix_complex_float * m, const size_t i, const size_t j);$/;"	p	signature:(const gsl_matrix_complex_float * m, const size_t i, const size_t j)
gsl_matrix_complex_float_const_ptr	/usr/local/gsl/include/gsl/gsl_matrix_complex_float.h	/^gsl_matrix_complex_float_const_ptr(const gsl_matrix_complex_float * m, $/;"	f	signature:(const gsl_matrix_complex_float * m, const size_t i, const size_t j)
gsl_matrix_complex_float_const_row	/usr/local/gsl/include/gsl/gsl_matrix_complex_float.h	/^gsl_matrix_complex_float_const_row (const gsl_matrix_complex_float * m, $/;"	p	signature:(const gsl_matrix_complex_float * m, const size_t i)
gsl_matrix_complex_float_const_subcolumn	/usr/local/gsl/include/gsl/gsl_matrix_complex_float.h	/^gsl_matrix_complex_float_const_subcolumn (const gsl_matrix_complex_float * m,$/;"	p	signature:(const gsl_matrix_complex_float * m, const size_t j, const size_t offset, const size_t n)
gsl_matrix_complex_float_const_subdiagonal	/usr/local/gsl/include/gsl/gsl_matrix_complex_float.h	/^gsl_matrix_complex_float_const_subdiagonal (const gsl_matrix_complex_float * m, $/;"	p	signature:(const gsl_matrix_complex_float * m, const size_t k)
gsl_matrix_complex_float_const_submatrix	/usr/local/gsl/include/gsl/gsl_matrix_complex_float.h	/^gsl_matrix_complex_float_const_submatrix (const gsl_matrix_complex_float * m, $/;"	p	signature:(const gsl_matrix_complex_float * m, const size_t i, const size_t j, const size_t n1, const size_t n2)
gsl_matrix_complex_float_const_subrow	/usr/local/gsl/include/gsl/gsl_matrix_complex_float.h	/^gsl_matrix_complex_float_const_subrow (const gsl_matrix_complex_float * m,$/;"	p	signature:(const gsl_matrix_complex_float * m, const size_t i, const size_t offset, const size_t n)
gsl_matrix_complex_float_const_superdiagonal	/usr/local/gsl/include/gsl/gsl_matrix_complex_float.h	/^gsl_matrix_complex_float_const_superdiagonal (const gsl_matrix_complex_float * m, $/;"	p	signature:(const gsl_matrix_complex_float * m, const size_t k)
gsl_matrix_complex_float_const_view	/usr/local/gsl/include/gsl/gsl_matrix_complex_float.h	/^typedef const _gsl_matrix_complex_float_const_view gsl_matrix_complex_float_const_view;$/;"	t
gsl_matrix_complex_float_const_view_array	/usr/local/gsl/include/gsl/gsl_matrix_complex_float.h	/^gsl_matrix_complex_float_const_view_array (const float * base,$/;"	p	signature:(const float * base, const size_t n1, const size_t n2)
gsl_matrix_complex_float_const_view_array_with_tda	/usr/local/gsl/include/gsl/gsl_matrix_complex_float.h	/^gsl_matrix_complex_float_const_view_array_with_tda (const float * base, $/;"	p	signature:(const float * base, const size_t n1, const size_t n2, const size_t tda)
gsl_matrix_complex_float_const_view_vector	/usr/local/gsl/include/gsl/gsl_matrix_complex_float.h	/^gsl_matrix_complex_float_const_view_vector (const gsl_vector_complex_float * v,$/;"	p	signature:(const gsl_vector_complex_float * v, const size_t n1, const size_t n2)
gsl_matrix_complex_float_const_view_vector_with_tda	/usr/local/gsl/include/gsl/gsl_matrix_complex_float.h	/^gsl_matrix_complex_float_const_view_vector_with_tda (const gsl_vector_complex_float * v,$/;"	p	signature:(const gsl_vector_complex_float * v, const size_t n1, const size_t n2, const size_t tda)
gsl_matrix_complex_float_diagonal	/usr/local/gsl/include/gsl/gsl_matrix_complex_float.h	/^gsl_matrix_complex_float_diagonal (gsl_matrix_complex_float * m);$/;"	p	signature:(gsl_matrix_complex_float * m)
gsl_matrix_complex_float_div_elements	/usr/local/gsl/include/gsl/gsl_matrix_complex_float.h	/^int gsl_matrix_complex_float_div_elements (gsl_matrix_complex_float * a, const gsl_matrix_complex_float * b);$/;"	p	signature:(gsl_matrix_complex_float * a, const gsl_matrix_complex_float * b)
gsl_matrix_complex_float_fprintf	/usr/local/gsl/include/gsl/gsl_matrix_complex_float.h	/^int gsl_matrix_complex_float_fprintf (FILE * stream, const gsl_matrix_complex_float * m, const char * format);$/;"	p	signature:(FILE * stream, const gsl_matrix_complex_float * m, const char * format)
gsl_matrix_complex_float_fread	/usr/local/gsl/include/gsl/gsl_matrix_complex_float.h	/^int gsl_matrix_complex_float_fread (FILE * stream, gsl_matrix_complex_float * m) ;$/;"	p	signature:(FILE * stream, gsl_matrix_complex_float * m)
gsl_matrix_complex_float_free	/usr/local/gsl/include/gsl/gsl_matrix_complex_float.h	/^void gsl_matrix_complex_float_free (gsl_matrix_complex_float * m);$/;"	p	signature:(gsl_matrix_complex_float * m)
gsl_matrix_complex_float_fscanf	/usr/local/gsl/include/gsl/gsl_matrix_complex_float.h	/^int gsl_matrix_complex_float_fscanf (FILE * stream, gsl_matrix_complex_float * m);$/;"	p	signature:(FILE * stream, gsl_matrix_complex_float * m)
gsl_matrix_complex_float_fwrite	/usr/local/gsl/include/gsl/gsl_matrix_complex_float.h	/^int gsl_matrix_complex_float_fwrite (FILE * stream, const gsl_matrix_complex_float * m) ;$/;"	p	signature:(FILE * stream, const gsl_matrix_complex_float * m)
gsl_matrix_complex_float_get	/usr/local/gsl/include/gsl/gsl_matrix_complex_float.h	/^INLINE_DECL gsl_complex_float gsl_matrix_complex_float_get(const gsl_matrix_complex_float * m, const size_t i, const size_t j);$/;"	p	signature:(const gsl_matrix_complex_float * m, const size_t i, const size_t j)
gsl_matrix_complex_float_get	/usr/local/gsl/include/gsl/gsl_matrix_complex_float.h	/^gsl_matrix_complex_float_get(const gsl_matrix_complex_float * m, $/;"	f	signature:(const gsl_matrix_complex_float * m, const size_t i, const size_t j)
gsl_matrix_complex_float_get_col	/usr/local/gsl/include/gsl/gsl_matrix_complex_float.h	/^int gsl_matrix_complex_float_get_col(gsl_vector_complex_float * v, const gsl_matrix_complex_float * m, const size_t j);$/;"	p	signature:(gsl_vector_complex_float * v, const gsl_matrix_complex_float * m, const size_t j)
gsl_matrix_complex_float_get_row	/usr/local/gsl/include/gsl/gsl_matrix_complex_float.h	/^int gsl_matrix_complex_float_get_row(gsl_vector_complex_float * v, const gsl_matrix_complex_float * m, const size_t i);$/;"	p	signature:(gsl_vector_complex_float * v, const gsl_matrix_complex_float * m, const size_t i)
gsl_matrix_complex_float_isneg	/usr/local/gsl/include/gsl/gsl_matrix_complex_float.h	/^int gsl_matrix_complex_float_isneg (const gsl_matrix_complex_float * m);$/;"	p	signature:(const gsl_matrix_complex_float * m)
gsl_matrix_complex_float_isnonneg	/usr/local/gsl/include/gsl/gsl_matrix_complex_float.h	/^int gsl_matrix_complex_float_isnonneg (const gsl_matrix_complex_float * m);$/;"	p	signature:(const gsl_matrix_complex_float * m)
gsl_matrix_complex_float_isnull	/usr/local/gsl/include/gsl/gsl_matrix_complex_float.h	/^int gsl_matrix_complex_float_isnull (const gsl_matrix_complex_float * m);$/;"	p	signature:(const gsl_matrix_complex_float * m)
gsl_matrix_complex_float_ispos	/usr/local/gsl/include/gsl/gsl_matrix_complex_float.h	/^int gsl_matrix_complex_float_ispos (const gsl_matrix_complex_float * m);$/;"	p	signature:(const gsl_matrix_complex_float * m)
gsl_matrix_complex_float_memcpy	/usr/local/gsl/include/gsl/gsl_matrix_complex_float.h	/^int gsl_matrix_complex_float_memcpy(gsl_matrix_complex_float * dest, const gsl_matrix_complex_float * src);$/;"	p	signature:(gsl_matrix_complex_float * dest, const gsl_matrix_complex_float * src)
gsl_matrix_complex_float_mul_elements	/usr/local/gsl/include/gsl/gsl_matrix_complex_float.h	/^int gsl_matrix_complex_float_mul_elements (gsl_matrix_complex_float * a, const gsl_matrix_complex_float * b);$/;"	p	signature:(gsl_matrix_complex_float * a, const gsl_matrix_complex_float * b)
gsl_matrix_complex_float_ptr	/usr/local/gsl/include/gsl/gsl_matrix_complex_float.h	/^INLINE_DECL gsl_complex_float * gsl_matrix_complex_float_ptr(gsl_matrix_complex_float * m, const size_t i, const size_t j);$/;"	p	signature:(gsl_matrix_complex_float * m, const size_t i, const size_t j)
gsl_matrix_complex_float_ptr	/usr/local/gsl/include/gsl/gsl_matrix_complex_float.h	/^gsl_matrix_complex_float_ptr(gsl_matrix_complex_float * m, $/;"	f	signature:(gsl_matrix_complex_float * m, const size_t i, const size_t j)
gsl_matrix_complex_float_row	/usr/local/gsl/include/gsl/gsl_matrix_complex_float.h	/^gsl_matrix_complex_float_row (gsl_matrix_complex_float * m, const size_t i);$/;"	p	signature:(gsl_matrix_complex_float * m, const size_t i)
gsl_matrix_complex_float_scale	/usr/local/gsl/include/gsl/gsl_matrix_complex_float.h	/^int gsl_matrix_complex_float_scale (gsl_matrix_complex_float * a, const gsl_complex_float x);$/;"	p	signature:(gsl_matrix_complex_float * a, const gsl_complex_float x)
gsl_matrix_complex_float_set	/usr/local/gsl/include/gsl/gsl_matrix_complex_float.h	/^INLINE_DECL void gsl_matrix_complex_float_set(gsl_matrix_complex_float * m, const size_t i, const size_t j, const gsl_complex_float x);$/;"	p	signature:(gsl_matrix_complex_float * m, const size_t i, const size_t j, const gsl_complex_float x)
gsl_matrix_complex_float_set	/usr/local/gsl/include/gsl/gsl_matrix_complex_float.h	/^gsl_matrix_complex_float_set(gsl_matrix_complex_float * m, $/;"	f	signature:(gsl_matrix_complex_float * m, const size_t i, const size_t j, const gsl_complex_float x)
gsl_matrix_complex_float_set_all	/usr/local/gsl/include/gsl/gsl_matrix_complex_float.h	/^void gsl_matrix_complex_float_set_all (gsl_matrix_complex_float * m, gsl_complex_float x);$/;"	p	signature:(gsl_matrix_complex_float * m, gsl_complex_float x)
gsl_matrix_complex_float_set_col	/usr/local/gsl/include/gsl/gsl_matrix_complex_float.h	/^int gsl_matrix_complex_float_set_col(gsl_matrix_complex_float * m, const size_t j, const gsl_vector_complex_float * v);$/;"	p	signature:(gsl_matrix_complex_float * m, const size_t j, const gsl_vector_complex_float * v)
gsl_matrix_complex_float_set_identity	/usr/local/gsl/include/gsl/gsl_matrix_complex_float.h	/^void gsl_matrix_complex_float_set_identity (gsl_matrix_complex_float * m);$/;"	p	signature:(gsl_matrix_complex_float * m)
gsl_matrix_complex_float_set_row	/usr/local/gsl/include/gsl/gsl_matrix_complex_float.h	/^int gsl_matrix_complex_float_set_row(gsl_matrix_complex_float * m, const size_t i, const gsl_vector_complex_float * v);$/;"	p	signature:(gsl_matrix_complex_float * m, const size_t i, const gsl_vector_complex_float * v)
gsl_matrix_complex_float_set_zero	/usr/local/gsl/include/gsl/gsl_matrix_complex_float.h	/^void gsl_matrix_complex_float_set_zero (gsl_matrix_complex_float * m);$/;"	p	signature:(gsl_matrix_complex_float * m)
gsl_matrix_complex_float_sub	/usr/local/gsl/include/gsl/gsl_matrix_complex_float.h	/^int gsl_matrix_complex_float_sub (gsl_matrix_complex_float * a, const gsl_matrix_complex_float * b);$/;"	p	signature:(gsl_matrix_complex_float * a, const gsl_matrix_complex_float * b)
gsl_matrix_complex_float_subcolumn	/usr/local/gsl/include/gsl/gsl_matrix_complex_float.h	/^gsl_matrix_complex_float_subcolumn (gsl_matrix_complex_float * m,$/;"	p	signature:(gsl_matrix_complex_float * m, const size_t j, const size_t offset, const size_t n)
gsl_matrix_complex_float_subdiagonal	/usr/local/gsl/include/gsl/gsl_matrix_complex_float.h	/^gsl_matrix_complex_float_subdiagonal (gsl_matrix_complex_float * m, const size_t k);$/;"	p	signature:(gsl_matrix_complex_float * m, const size_t k)
gsl_matrix_complex_float_submatrix	/usr/local/gsl/include/gsl/gsl_matrix_complex_float.h	/^gsl_matrix_complex_float_submatrix (gsl_matrix_complex_float * m, $/;"	p	signature:(gsl_matrix_complex_float * m, const size_t i, const size_t j, const size_t n1, const size_t n2)
gsl_matrix_complex_float_subrow	/usr/local/gsl/include/gsl/gsl_matrix_complex_float.h	/^gsl_matrix_complex_float_subrow (gsl_matrix_complex_float * m,$/;"	p	signature:(gsl_matrix_complex_float * m, const size_t i, const size_t offset, const size_t n)
gsl_matrix_complex_float_superdiagonal	/usr/local/gsl/include/gsl/gsl_matrix_complex_float.h	/^gsl_matrix_complex_float_superdiagonal (gsl_matrix_complex_float * m, const size_t k);$/;"	p	signature:(gsl_matrix_complex_float * m, const size_t k)
gsl_matrix_complex_float_swap	/usr/local/gsl/include/gsl/gsl_matrix_complex_float.h	/^int gsl_matrix_complex_float_swap(gsl_matrix_complex_float * m1, gsl_matrix_complex_float * m2);$/;"	p	signature:(gsl_matrix_complex_float * m1, gsl_matrix_complex_float * m2)
gsl_matrix_complex_float_swap_columns	/usr/local/gsl/include/gsl/gsl_matrix_complex_float.h	/^int gsl_matrix_complex_float_swap_columns(gsl_matrix_complex_float * m, const size_t i, const size_t j);$/;"	p	signature:(gsl_matrix_complex_float * m, const size_t i, const size_t j)
gsl_matrix_complex_float_swap_rowcol	/usr/local/gsl/include/gsl/gsl_matrix_complex_float.h	/^int gsl_matrix_complex_float_swap_rowcol(gsl_matrix_complex_float * m, const size_t i, const size_t j);$/;"	p	signature:(gsl_matrix_complex_float * m, const size_t i, const size_t j)
gsl_matrix_complex_float_swap_rows	/usr/local/gsl/include/gsl/gsl_matrix_complex_float.h	/^int gsl_matrix_complex_float_swap_rows(gsl_matrix_complex_float * m, const size_t i, const size_t j);$/;"	p	signature:(gsl_matrix_complex_float * m, const size_t i, const size_t j)
gsl_matrix_complex_float_transpose	/usr/local/gsl/include/gsl/gsl_matrix_complex_float.h	/^int gsl_matrix_complex_float_transpose (gsl_matrix_complex_float * m);$/;"	p	signature:(gsl_matrix_complex_float * m)
gsl_matrix_complex_float_transpose_memcpy	/usr/local/gsl/include/gsl/gsl_matrix_complex_float.h	/^int gsl_matrix_complex_float_transpose_memcpy (gsl_matrix_complex_float * dest, const gsl_matrix_complex_float * src);$/;"	p	signature:(gsl_matrix_complex_float * dest, const gsl_matrix_complex_float * src)
gsl_matrix_complex_float_view	/usr/local/gsl/include/gsl/gsl_matrix_complex_float.h	/^typedef _gsl_matrix_complex_float_view gsl_matrix_complex_float_view;$/;"	t
gsl_matrix_complex_float_view_array	/usr/local/gsl/include/gsl/gsl_matrix_complex_float.h	/^gsl_matrix_complex_float_view_array (float * base,$/;"	p	signature:(float * base, const size_t n1, const size_t n2)
gsl_matrix_complex_float_view_array_with_tda	/usr/local/gsl/include/gsl/gsl_matrix_complex_float.h	/^gsl_matrix_complex_float_view_array_with_tda (float * base, $/;"	p	signature:(float * base, const size_t n1, const size_t n2, const size_t tda)
gsl_matrix_complex_float_view_vector	/usr/local/gsl/include/gsl/gsl_matrix_complex_float.h	/^gsl_matrix_complex_float_view_vector (gsl_vector_complex_float * v,$/;"	p	signature:(gsl_vector_complex_float * v, const size_t n1, const size_t n2)
gsl_matrix_complex_float_view_vector_with_tda	/usr/local/gsl/include/gsl/gsl_matrix_complex_float.h	/^gsl_matrix_complex_float_view_vector_with_tda (gsl_vector_complex_float * v,$/;"	p	signature:(gsl_vector_complex_float * v, const size_t n1, const size_t n2, const size_t tda)
gsl_matrix_complex_fprintf	/usr/local/gsl/include/gsl/gsl_matrix_complex_double.h	/^int gsl_matrix_complex_fprintf (FILE * stream, const gsl_matrix_complex * m, const char * format);$/;"	p	signature:(FILE * stream, const gsl_matrix_complex * m, const char * format)
gsl_matrix_complex_fread	/usr/local/gsl/include/gsl/gsl_matrix_complex_double.h	/^int gsl_matrix_complex_fread (FILE * stream, gsl_matrix_complex * m) ;$/;"	p	signature:(FILE * stream, gsl_matrix_complex * m)
gsl_matrix_complex_free	/usr/local/gsl/include/gsl/gsl_matrix_complex_double.h	/^void gsl_matrix_complex_free (gsl_matrix_complex * m);$/;"	p	signature:(gsl_matrix_complex * m)
gsl_matrix_complex_fscanf	/usr/local/gsl/include/gsl/gsl_matrix_complex_double.h	/^int gsl_matrix_complex_fscanf (FILE * stream, gsl_matrix_complex * m);$/;"	p	signature:(FILE * stream, gsl_matrix_complex * m)
gsl_matrix_complex_fwrite	/usr/local/gsl/include/gsl/gsl_matrix_complex_double.h	/^int gsl_matrix_complex_fwrite (FILE * stream, const gsl_matrix_complex * m) ;$/;"	p	signature:(FILE * stream, const gsl_matrix_complex * m)
gsl_matrix_complex_get	/usr/local/gsl/include/gsl/gsl_matrix_complex_double.h	/^INLINE_DECL gsl_complex gsl_matrix_complex_get(const gsl_matrix_complex * m, const size_t i, const size_t j);$/;"	p	signature:(const gsl_matrix_complex * m, const size_t i, const size_t j)
gsl_matrix_complex_get	/usr/local/gsl/include/gsl/gsl_matrix_complex_double.h	/^gsl_matrix_complex_get(const gsl_matrix_complex * m, $/;"	f	signature:(const gsl_matrix_complex * m, const size_t i, const size_t j)
gsl_matrix_complex_get_col	/usr/local/gsl/include/gsl/gsl_matrix_complex_double.h	/^int gsl_matrix_complex_get_col(gsl_vector_complex * v, const gsl_matrix_complex * m, const size_t j);$/;"	p	signature:(gsl_vector_complex * v, const gsl_matrix_complex * m, const size_t j)
gsl_matrix_complex_get_row	/usr/local/gsl/include/gsl/gsl_matrix_complex_double.h	/^int gsl_matrix_complex_get_row(gsl_vector_complex * v, const gsl_matrix_complex * m, const size_t i);$/;"	p	signature:(gsl_vector_complex * v, const gsl_matrix_complex * m, const size_t i)
gsl_matrix_complex_isneg	/usr/local/gsl/include/gsl/gsl_matrix_complex_double.h	/^int gsl_matrix_complex_isneg (const gsl_matrix_complex * m);$/;"	p	signature:(const gsl_matrix_complex * m)
gsl_matrix_complex_isnonneg	/usr/local/gsl/include/gsl/gsl_matrix_complex_double.h	/^int gsl_matrix_complex_isnonneg (const gsl_matrix_complex * m);$/;"	p	signature:(const gsl_matrix_complex * m)
gsl_matrix_complex_isnull	/usr/local/gsl/include/gsl/gsl_matrix_complex_double.h	/^int gsl_matrix_complex_isnull (const gsl_matrix_complex * m);$/;"	p	signature:(const gsl_matrix_complex * m)
gsl_matrix_complex_ispos	/usr/local/gsl/include/gsl/gsl_matrix_complex_double.h	/^int gsl_matrix_complex_ispos (const gsl_matrix_complex * m);$/;"	p	signature:(const gsl_matrix_complex * m)
gsl_matrix_complex_long_double	/usr/local/gsl/include/gsl/gsl_matrix_complex_long_double.h	/^} gsl_matrix_complex_long_double ;$/;"	t	typeref:struct:__anon50
gsl_matrix_complex_long_double_add	/usr/local/gsl/include/gsl/gsl_matrix_complex_long_double.h	/^int gsl_matrix_complex_long_double_add (gsl_matrix_complex_long_double * a, const gsl_matrix_complex_long_double * b);$/;"	p	signature:(gsl_matrix_complex_long_double * a, const gsl_matrix_complex_long_double * b)
gsl_matrix_complex_long_double_add_constant	/usr/local/gsl/include/gsl/gsl_matrix_complex_long_double.h	/^int gsl_matrix_complex_long_double_add_constant (gsl_matrix_complex_long_double * a, const gsl_complex_long_double x);$/;"	p	signature:(gsl_matrix_complex_long_double * a, const gsl_complex_long_double x)
gsl_matrix_complex_long_double_add_diagonal	/usr/local/gsl/include/gsl/gsl_matrix_complex_long_double.h	/^int gsl_matrix_complex_long_double_add_diagonal (gsl_matrix_complex_long_double * a, const gsl_complex_long_double x);$/;"	p	signature:(gsl_matrix_complex_long_double * a, const gsl_complex_long_double x)
gsl_matrix_complex_long_double_alloc	/usr/local/gsl/include/gsl/gsl_matrix_complex_long_double.h	/^gsl_matrix_complex_long_double_alloc (const size_t n1, const size_t n2);$/;"	p	signature:(const size_t n1, const size_t n2)
gsl_matrix_complex_long_double_alloc_from_block	/usr/local/gsl/include/gsl/gsl_matrix_complex_long_double.h	/^gsl_matrix_complex_long_double_alloc_from_block (gsl_block_complex_long_double * b, $/;"	p	signature:(gsl_block_complex_long_double * b, const size_t offset, const size_t n1, const size_t n2, const size_t d2)
gsl_matrix_complex_long_double_alloc_from_matrix	/usr/local/gsl/include/gsl/gsl_matrix_complex_long_double.h	/^gsl_matrix_complex_long_double_alloc_from_matrix (gsl_matrix_complex_long_double * b,$/;"	p	signature:(gsl_matrix_complex_long_double * b, const size_t k1, const size_t k2, const size_t n1, const size_t n2)
gsl_matrix_complex_long_double_calloc	/usr/local/gsl/include/gsl/gsl_matrix_complex_long_double.h	/^gsl_matrix_complex_long_double_calloc (const size_t n1, const size_t n2);$/;"	p	signature:(const size_t n1, const size_t n2)
gsl_matrix_complex_long_double_column	/usr/local/gsl/include/gsl/gsl_matrix_complex_long_double.h	/^gsl_matrix_complex_long_double_column (gsl_matrix_complex_long_double * m, const size_t j);$/;"	p	signature:(gsl_matrix_complex_long_double * m, const size_t j)
gsl_matrix_complex_long_double_const_column	/usr/local/gsl/include/gsl/gsl_matrix_complex_long_double.h	/^gsl_matrix_complex_long_double_const_column (const gsl_matrix_complex_long_double * m, $/;"	p	signature:(const gsl_matrix_complex_long_double * m, const size_t j)
gsl_matrix_complex_long_double_const_diagonal	/usr/local/gsl/include/gsl/gsl_matrix_complex_long_double.h	/^gsl_matrix_complex_long_double_const_diagonal (const gsl_matrix_complex_long_double * m);$/;"	p	signature:(const gsl_matrix_complex_long_double * m)
gsl_matrix_complex_long_double_const_ptr	/usr/local/gsl/include/gsl/gsl_matrix_complex_long_double.h	/^INLINE_DECL const gsl_complex_long_double * gsl_matrix_complex_long_double_const_ptr(const gsl_matrix_complex_long_double * m, const size_t i, const size_t j);$/;"	p	signature:(const gsl_matrix_complex_long_double * m, const size_t i, const size_t j)
gsl_matrix_complex_long_double_const_ptr	/usr/local/gsl/include/gsl/gsl_matrix_complex_long_double.h	/^gsl_matrix_complex_long_double_const_ptr(const gsl_matrix_complex_long_double * m, $/;"	f	signature:(const gsl_matrix_complex_long_double * m, const size_t i, const size_t j)
gsl_matrix_complex_long_double_const_row	/usr/local/gsl/include/gsl/gsl_matrix_complex_long_double.h	/^gsl_matrix_complex_long_double_const_row (const gsl_matrix_complex_long_double * m, $/;"	p	signature:(const gsl_matrix_complex_long_double * m, const size_t i)
gsl_matrix_complex_long_double_const_subcolumn	/usr/local/gsl/include/gsl/gsl_matrix_complex_long_double.h	/^gsl_matrix_complex_long_double_const_subcolumn (const gsl_matrix_complex_long_double * m,$/;"	p	signature:(const gsl_matrix_complex_long_double * m, const size_t j, const size_t offset, const size_t n)
gsl_matrix_complex_long_double_const_subdiagonal	/usr/local/gsl/include/gsl/gsl_matrix_complex_long_double.h	/^gsl_matrix_complex_long_double_const_subdiagonal (const gsl_matrix_complex_long_double * m, $/;"	p	signature:(const gsl_matrix_complex_long_double * m, const size_t k)
gsl_matrix_complex_long_double_const_submatrix	/usr/local/gsl/include/gsl/gsl_matrix_complex_long_double.h	/^gsl_matrix_complex_long_double_const_submatrix (const gsl_matrix_complex_long_double * m, $/;"	p	signature:(const gsl_matrix_complex_long_double * m, const size_t i, const size_t j, const size_t n1, const size_t n2)
gsl_matrix_complex_long_double_const_subrow	/usr/local/gsl/include/gsl/gsl_matrix_complex_long_double.h	/^gsl_matrix_complex_long_double_const_subrow (const gsl_matrix_complex_long_double * m,$/;"	p	signature:(const gsl_matrix_complex_long_double * m, const size_t i, const size_t offset, const size_t n)
gsl_matrix_complex_long_double_const_superdiagonal	/usr/local/gsl/include/gsl/gsl_matrix_complex_long_double.h	/^gsl_matrix_complex_long_double_const_superdiagonal (const gsl_matrix_complex_long_double * m, $/;"	p	signature:(const gsl_matrix_complex_long_double * m, const size_t k)
gsl_matrix_complex_long_double_const_view	/usr/local/gsl/include/gsl/gsl_matrix_complex_long_double.h	/^typedef const _gsl_matrix_complex_long_double_const_view gsl_matrix_complex_long_double_const_view;$/;"	t
gsl_matrix_complex_long_double_const_view_array	/usr/local/gsl/include/gsl/gsl_matrix_complex_long_double.h	/^gsl_matrix_complex_long_double_const_view_array (const long double * base,$/;"	p	signature:(const long double * base, const size_t n1, const size_t n2)
gsl_matrix_complex_long_double_const_view_array_with_tda	/usr/local/gsl/include/gsl/gsl_matrix_complex_long_double.h	/^gsl_matrix_complex_long_double_const_view_array_with_tda (const long double * base, $/;"	p	signature:(const long double * base, const size_t n1, const size_t n2, const size_t tda)
gsl_matrix_complex_long_double_const_view_vector	/usr/local/gsl/include/gsl/gsl_matrix_complex_long_double.h	/^gsl_matrix_complex_long_double_const_view_vector (const gsl_vector_complex_long_double * v,$/;"	p	signature:(const gsl_vector_complex_long_double * v, const size_t n1, const size_t n2)
gsl_matrix_complex_long_double_const_view_vector_with_tda	/usr/local/gsl/include/gsl/gsl_matrix_complex_long_double.h	/^gsl_matrix_complex_long_double_const_view_vector_with_tda (const gsl_vector_complex_long_double * v,$/;"	p	signature:(const gsl_vector_complex_long_double * v, const size_t n1, const size_t n2, const size_t tda)
gsl_matrix_complex_long_double_diagonal	/usr/local/gsl/include/gsl/gsl_matrix_complex_long_double.h	/^gsl_matrix_complex_long_double_diagonal (gsl_matrix_complex_long_double * m);$/;"	p	signature:(gsl_matrix_complex_long_double * m)
gsl_matrix_complex_long_double_div_elements	/usr/local/gsl/include/gsl/gsl_matrix_complex_long_double.h	/^int gsl_matrix_complex_long_double_div_elements (gsl_matrix_complex_long_double * a, const gsl_matrix_complex_long_double * b);$/;"	p	signature:(gsl_matrix_complex_long_double * a, const gsl_matrix_complex_long_double * b)
gsl_matrix_complex_long_double_fprintf	/usr/local/gsl/include/gsl/gsl_matrix_complex_long_double.h	/^int gsl_matrix_complex_long_double_fprintf (FILE * stream, const gsl_matrix_complex_long_double * m, const char * format);$/;"	p	signature:(FILE * stream, const gsl_matrix_complex_long_double * m, const char * format)
gsl_matrix_complex_long_double_fread	/usr/local/gsl/include/gsl/gsl_matrix_complex_long_double.h	/^int gsl_matrix_complex_long_double_fread (FILE * stream, gsl_matrix_complex_long_double * m) ;$/;"	p	signature:(FILE * stream, gsl_matrix_complex_long_double * m)
gsl_matrix_complex_long_double_free	/usr/local/gsl/include/gsl/gsl_matrix_complex_long_double.h	/^void gsl_matrix_complex_long_double_free (gsl_matrix_complex_long_double * m);$/;"	p	signature:(gsl_matrix_complex_long_double * m)
gsl_matrix_complex_long_double_fscanf	/usr/local/gsl/include/gsl/gsl_matrix_complex_long_double.h	/^int gsl_matrix_complex_long_double_fscanf (FILE * stream, gsl_matrix_complex_long_double * m);$/;"	p	signature:(FILE * stream, gsl_matrix_complex_long_double * m)
gsl_matrix_complex_long_double_fwrite	/usr/local/gsl/include/gsl/gsl_matrix_complex_long_double.h	/^int gsl_matrix_complex_long_double_fwrite (FILE * stream, const gsl_matrix_complex_long_double * m) ;$/;"	p	signature:(FILE * stream, const gsl_matrix_complex_long_double * m)
gsl_matrix_complex_long_double_get	/usr/local/gsl/include/gsl/gsl_matrix_complex_long_double.h	/^INLINE_DECL gsl_complex_long_double gsl_matrix_complex_long_double_get(const gsl_matrix_complex_long_double * m, const size_t i, const size_t j);$/;"	p	signature:(const gsl_matrix_complex_long_double * m, const size_t i, const size_t j)
gsl_matrix_complex_long_double_get	/usr/local/gsl/include/gsl/gsl_matrix_complex_long_double.h	/^gsl_matrix_complex_long_double_get(const gsl_matrix_complex_long_double * m, $/;"	f	signature:(const gsl_matrix_complex_long_double * m, const size_t i, const size_t j)
gsl_matrix_complex_long_double_get_col	/usr/local/gsl/include/gsl/gsl_matrix_complex_long_double.h	/^int gsl_matrix_complex_long_double_get_col(gsl_vector_complex_long_double * v, const gsl_matrix_complex_long_double * m, const size_t j);$/;"	p	signature:(gsl_vector_complex_long_double * v, const gsl_matrix_complex_long_double * m, const size_t j)
gsl_matrix_complex_long_double_get_row	/usr/local/gsl/include/gsl/gsl_matrix_complex_long_double.h	/^int gsl_matrix_complex_long_double_get_row(gsl_vector_complex_long_double * v, const gsl_matrix_complex_long_double * m, const size_t i);$/;"	p	signature:(gsl_vector_complex_long_double * v, const gsl_matrix_complex_long_double * m, const size_t i)
gsl_matrix_complex_long_double_isneg	/usr/local/gsl/include/gsl/gsl_matrix_complex_long_double.h	/^int gsl_matrix_complex_long_double_isneg (const gsl_matrix_complex_long_double * m);$/;"	p	signature:(const gsl_matrix_complex_long_double * m)
gsl_matrix_complex_long_double_isnonneg	/usr/local/gsl/include/gsl/gsl_matrix_complex_long_double.h	/^int gsl_matrix_complex_long_double_isnonneg (const gsl_matrix_complex_long_double * m);$/;"	p	signature:(const gsl_matrix_complex_long_double * m)
gsl_matrix_complex_long_double_isnull	/usr/local/gsl/include/gsl/gsl_matrix_complex_long_double.h	/^int gsl_matrix_complex_long_double_isnull (const gsl_matrix_complex_long_double * m);$/;"	p	signature:(const gsl_matrix_complex_long_double * m)
gsl_matrix_complex_long_double_ispos	/usr/local/gsl/include/gsl/gsl_matrix_complex_long_double.h	/^int gsl_matrix_complex_long_double_ispos (const gsl_matrix_complex_long_double * m);$/;"	p	signature:(const gsl_matrix_complex_long_double * m)
gsl_matrix_complex_long_double_memcpy	/usr/local/gsl/include/gsl/gsl_matrix_complex_long_double.h	/^int gsl_matrix_complex_long_double_memcpy(gsl_matrix_complex_long_double * dest, const gsl_matrix_complex_long_double * src);$/;"	p	signature:(gsl_matrix_complex_long_double * dest, const gsl_matrix_complex_long_double * src)
gsl_matrix_complex_long_double_mul_elements	/usr/local/gsl/include/gsl/gsl_matrix_complex_long_double.h	/^int gsl_matrix_complex_long_double_mul_elements (gsl_matrix_complex_long_double * a, const gsl_matrix_complex_long_double * b);$/;"	p	signature:(gsl_matrix_complex_long_double * a, const gsl_matrix_complex_long_double * b)
gsl_matrix_complex_long_double_ptr	/usr/local/gsl/include/gsl/gsl_matrix_complex_long_double.h	/^INLINE_DECL gsl_complex_long_double * gsl_matrix_complex_long_double_ptr(gsl_matrix_complex_long_double * m, const size_t i, const size_t j);$/;"	p	signature:(gsl_matrix_complex_long_double * m, const size_t i, const size_t j)
gsl_matrix_complex_long_double_ptr	/usr/local/gsl/include/gsl/gsl_matrix_complex_long_double.h	/^gsl_matrix_complex_long_double_ptr(gsl_matrix_complex_long_double * m, $/;"	f	signature:(gsl_matrix_complex_long_double * m, const size_t i, const size_t j)
gsl_matrix_complex_long_double_row	/usr/local/gsl/include/gsl/gsl_matrix_complex_long_double.h	/^gsl_matrix_complex_long_double_row (gsl_matrix_complex_long_double * m, const size_t i);$/;"	p	signature:(gsl_matrix_complex_long_double * m, const size_t i)
gsl_matrix_complex_long_double_scale	/usr/local/gsl/include/gsl/gsl_matrix_complex_long_double.h	/^int gsl_matrix_complex_long_double_scale (gsl_matrix_complex_long_double * a, const gsl_complex_long_double x);$/;"	p	signature:(gsl_matrix_complex_long_double * a, const gsl_complex_long_double x)
gsl_matrix_complex_long_double_set	/usr/local/gsl/include/gsl/gsl_matrix_complex_long_double.h	/^INLINE_DECL void gsl_matrix_complex_long_double_set(gsl_matrix_complex_long_double * m, const size_t i, const size_t j, const gsl_complex_long_double x);$/;"	p	signature:(gsl_matrix_complex_long_double * m, const size_t i, const size_t j, const gsl_complex_long_double x)
gsl_matrix_complex_long_double_set	/usr/local/gsl/include/gsl/gsl_matrix_complex_long_double.h	/^gsl_matrix_complex_long_double_set(gsl_matrix_complex_long_double * m, $/;"	f	signature:(gsl_matrix_complex_long_double * m, const size_t i, const size_t j, const gsl_complex_long_double x)
gsl_matrix_complex_long_double_set_all	/usr/local/gsl/include/gsl/gsl_matrix_complex_long_double.h	/^void gsl_matrix_complex_long_double_set_all (gsl_matrix_complex_long_double * m, gsl_complex_long_double x);$/;"	p	signature:(gsl_matrix_complex_long_double * m, gsl_complex_long_double x)
gsl_matrix_complex_long_double_set_col	/usr/local/gsl/include/gsl/gsl_matrix_complex_long_double.h	/^int gsl_matrix_complex_long_double_set_col(gsl_matrix_complex_long_double * m, const size_t j, const gsl_vector_complex_long_double * v);$/;"	p	signature:(gsl_matrix_complex_long_double * m, const size_t j, const gsl_vector_complex_long_double * v)
gsl_matrix_complex_long_double_set_identity	/usr/local/gsl/include/gsl/gsl_matrix_complex_long_double.h	/^void gsl_matrix_complex_long_double_set_identity (gsl_matrix_complex_long_double * m);$/;"	p	signature:(gsl_matrix_complex_long_double * m)
gsl_matrix_complex_long_double_set_row	/usr/local/gsl/include/gsl/gsl_matrix_complex_long_double.h	/^int gsl_matrix_complex_long_double_set_row(gsl_matrix_complex_long_double * m, const size_t i, const gsl_vector_complex_long_double * v);$/;"	p	signature:(gsl_matrix_complex_long_double * m, const size_t i, const gsl_vector_complex_long_double * v)
gsl_matrix_complex_long_double_set_zero	/usr/local/gsl/include/gsl/gsl_matrix_complex_long_double.h	/^void gsl_matrix_complex_long_double_set_zero (gsl_matrix_complex_long_double * m);$/;"	p	signature:(gsl_matrix_complex_long_double * m)
gsl_matrix_complex_long_double_sub	/usr/local/gsl/include/gsl/gsl_matrix_complex_long_double.h	/^int gsl_matrix_complex_long_double_sub (gsl_matrix_complex_long_double * a, const gsl_matrix_complex_long_double * b);$/;"	p	signature:(gsl_matrix_complex_long_double * a, const gsl_matrix_complex_long_double * b)
gsl_matrix_complex_long_double_subcolumn	/usr/local/gsl/include/gsl/gsl_matrix_complex_long_double.h	/^gsl_matrix_complex_long_double_subcolumn (gsl_matrix_complex_long_double * m,$/;"	p	signature:(gsl_matrix_complex_long_double * m, const size_t j, const size_t offset, const size_t n)
gsl_matrix_complex_long_double_subdiagonal	/usr/local/gsl/include/gsl/gsl_matrix_complex_long_double.h	/^gsl_matrix_complex_long_double_subdiagonal (gsl_matrix_complex_long_double * m, const size_t k);$/;"	p	signature:(gsl_matrix_complex_long_double * m, const size_t k)
gsl_matrix_complex_long_double_submatrix	/usr/local/gsl/include/gsl/gsl_matrix_complex_long_double.h	/^gsl_matrix_complex_long_double_submatrix (gsl_matrix_complex_long_double * m, $/;"	p	signature:(gsl_matrix_complex_long_double * m, const size_t i, const size_t j, const size_t n1, const size_t n2)
gsl_matrix_complex_long_double_subrow	/usr/local/gsl/include/gsl/gsl_matrix_complex_long_double.h	/^gsl_matrix_complex_long_double_subrow (gsl_matrix_complex_long_double * m,$/;"	p	signature:(gsl_matrix_complex_long_double * m, const size_t i, const size_t offset, const size_t n)
gsl_matrix_complex_long_double_superdiagonal	/usr/local/gsl/include/gsl/gsl_matrix_complex_long_double.h	/^gsl_matrix_complex_long_double_superdiagonal (gsl_matrix_complex_long_double * m, const size_t k);$/;"	p	signature:(gsl_matrix_complex_long_double * m, const size_t k)
gsl_matrix_complex_long_double_swap	/usr/local/gsl/include/gsl/gsl_matrix_complex_long_double.h	/^int gsl_matrix_complex_long_double_swap(gsl_matrix_complex_long_double * m1, gsl_matrix_complex_long_double * m2);$/;"	p	signature:(gsl_matrix_complex_long_double * m1, gsl_matrix_complex_long_double * m2)
gsl_matrix_complex_long_double_swap_columns	/usr/local/gsl/include/gsl/gsl_matrix_complex_long_double.h	/^int gsl_matrix_complex_long_double_swap_columns(gsl_matrix_complex_long_double * m, const size_t i, const size_t j);$/;"	p	signature:(gsl_matrix_complex_long_double * m, const size_t i, const size_t j)
gsl_matrix_complex_long_double_swap_rowcol	/usr/local/gsl/include/gsl/gsl_matrix_complex_long_double.h	/^int gsl_matrix_complex_long_double_swap_rowcol(gsl_matrix_complex_long_double * m, const size_t i, const size_t j);$/;"	p	signature:(gsl_matrix_complex_long_double * m, const size_t i, const size_t j)
gsl_matrix_complex_long_double_swap_rows	/usr/local/gsl/include/gsl/gsl_matrix_complex_long_double.h	/^int gsl_matrix_complex_long_double_swap_rows(gsl_matrix_complex_long_double * m, const size_t i, const size_t j);$/;"	p	signature:(gsl_matrix_complex_long_double * m, const size_t i, const size_t j)
gsl_matrix_complex_long_double_transpose	/usr/local/gsl/include/gsl/gsl_matrix_complex_long_double.h	/^int gsl_matrix_complex_long_double_transpose (gsl_matrix_complex_long_double * m);$/;"	p	signature:(gsl_matrix_complex_long_double * m)
gsl_matrix_complex_long_double_transpose_memcpy	/usr/local/gsl/include/gsl/gsl_matrix_complex_long_double.h	/^int gsl_matrix_complex_long_double_transpose_memcpy (gsl_matrix_complex_long_double * dest, const gsl_matrix_complex_long_double * src);$/;"	p	signature:(gsl_matrix_complex_long_double * dest, const gsl_matrix_complex_long_double * src)
gsl_matrix_complex_long_double_view	/usr/local/gsl/include/gsl/gsl_matrix_complex_long_double.h	/^typedef _gsl_matrix_complex_long_double_view gsl_matrix_complex_long_double_view;$/;"	t
gsl_matrix_complex_long_double_view_array	/usr/local/gsl/include/gsl/gsl_matrix_complex_long_double.h	/^gsl_matrix_complex_long_double_view_array (long double * base,$/;"	p	signature:(long double * base, const size_t n1, const size_t n2)
gsl_matrix_complex_long_double_view_array_with_tda	/usr/local/gsl/include/gsl/gsl_matrix_complex_long_double.h	/^gsl_matrix_complex_long_double_view_array_with_tda (long double * base, $/;"	p	signature:(long double * base, const size_t n1, const size_t n2, const size_t tda)
gsl_matrix_complex_long_double_view_vector	/usr/local/gsl/include/gsl/gsl_matrix_complex_long_double.h	/^gsl_matrix_complex_long_double_view_vector (gsl_vector_complex_long_double * v,$/;"	p	signature:(gsl_vector_complex_long_double * v, const size_t n1, const size_t n2)
gsl_matrix_complex_long_double_view_vector_with_tda	/usr/local/gsl/include/gsl/gsl_matrix_complex_long_double.h	/^gsl_matrix_complex_long_double_view_vector_with_tda (gsl_vector_complex_long_double * v,$/;"	p	signature:(gsl_vector_complex_long_double * v, const size_t n1, const size_t n2, const size_t tda)
gsl_matrix_complex_memcpy	/usr/local/gsl/include/gsl/gsl_matrix_complex_double.h	/^int gsl_matrix_complex_memcpy(gsl_matrix_complex * dest, const gsl_matrix_complex * src);$/;"	p	signature:(gsl_matrix_complex * dest, const gsl_matrix_complex * src)
gsl_matrix_complex_mul_elements	/usr/local/gsl/include/gsl/gsl_matrix_complex_double.h	/^int gsl_matrix_complex_mul_elements (gsl_matrix_complex * a, const gsl_matrix_complex * b);$/;"	p	signature:(gsl_matrix_complex * a, const gsl_matrix_complex * b)
gsl_matrix_complex_ptr	/usr/local/gsl/include/gsl/gsl_matrix_complex_double.h	/^INLINE_DECL gsl_complex * gsl_matrix_complex_ptr(gsl_matrix_complex * m, const size_t i, const size_t j);$/;"	p	signature:(gsl_matrix_complex * m, const size_t i, const size_t j)
gsl_matrix_complex_ptr	/usr/local/gsl/include/gsl/gsl_matrix_complex_double.h	/^gsl_matrix_complex_ptr(gsl_matrix_complex * m, $/;"	f	signature:(gsl_matrix_complex * m, const size_t i, const size_t j)
gsl_matrix_complex_row	/usr/local/gsl/include/gsl/gsl_matrix_complex_double.h	/^gsl_matrix_complex_row (gsl_matrix_complex * m, const size_t i);$/;"	p	signature:(gsl_matrix_complex * m, const size_t i)
gsl_matrix_complex_scale	/usr/local/gsl/include/gsl/gsl_matrix_complex_double.h	/^int gsl_matrix_complex_scale (gsl_matrix_complex * a, const gsl_complex x);$/;"	p	signature:(gsl_matrix_complex * a, const gsl_complex x)
gsl_matrix_complex_set	/usr/local/gsl/include/gsl/gsl_matrix_complex_double.h	/^INLINE_DECL void gsl_matrix_complex_set(gsl_matrix_complex * m, const size_t i, const size_t j, const gsl_complex x);$/;"	p	signature:(gsl_matrix_complex * m, const size_t i, const size_t j, const gsl_complex x)
gsl_matrix_complex_set	/usr/local/gsl/include/gsl/gsl_matrix_complex_double.h	/^gsl_matrix_complex_set(gsl_matrix_complex * m, $/;"	f	signature:(gsl_matrix_complex * m, const size_t i, const size_t j, const gsl_complex x)
gsl_matrix_complex_set_all	/usr/local/gsl/include/gsl/gsl_matrix_complex_double.h	/^void gsl_matrix_complex_set_all (gsl_matrix_complex * m, gsl_complex x);$/;"	p	signature:(gsl_matrix_complex * m, gsl_complex x)
gsl_matrix_complex_set_col	/usr/local/gsl/include/gsl/gsl_matrix_complex_double.h	/^int gsl_matrix_complex_set_col(gsl_matrix_complex * m, const size_t j, const gsl_vector_complex * v);$/;"	p	signature:(gsl_matrix_complex * m, const size_t j, const gsl_vector_complex * v)
gsl_matrix_complex_set_identity	/usr/local/gsl/include/gsl/gsl_matrix_complex_double.h	/^void gsl_matrix_complex_set_identity (gsl_matrix_complex * m);$/;"	p	signature:(gsl_matrix_complex * m)
gsl_matrix_complex_set_row	/usr/local/gsl/include/gsl/gsl_matrix_complex_double.h	/^int gsl_matrix_complex_set_row(gsl_matrix_complex * m, const size_t i, const gsl_vector_complex * v);$/;"	p	signature:(gsl_matrix_complex * m, const size_t i, const gsl_vector_complex * v)
gsl_matrix_complex_set_zero	/usr/local/gsl/include/gsl/gsl_matrix_complex_double.h	/^void gsl_matrix_complex_set_zero (gsl_matrix_complex * m);$/;"	p	signature:(gsl_matrix_complex * m)
gsl_matrix_complex_sub	/usr/local/gsl/include/gsl/gsl_matrix_complex_double.h	/^int gsl_matrix_complex_sub (gsl_matrix_complex * a, const gsl_matrix_complex * b);$/;"	p	signature:(gsl_matrix_complex * a, const gsl_matrix_complex * b)
gsl_matrix_complex_subcolumn	/usr/local/gsl/include/gsl/gsl_matrix_complex_double.h	/^gsl_matrix_complex_subcolumn (gsl_matrix_complex * m,$/;"	p	signature:(gsl_matrix_complex * m, const size_t j, const size_t offset, const size_t n)
gsl_matrix_complex_subdiagonal	/usr/local/gsl/include/gsl/gsl_matrix_complex_double.h	/^gsl_matrix_complex_subdiagonal (gsl_matrix_complex * m, const size_t k);$/;"	p	signature:(gsl_matrix_complex * m, const size_t k)
gsl_matrix_complex_submatrix	/usr/local/gsl/include/gsl/gsl_matrix_complex_double.h	/^gsl_matrix_complex_submatrix (gsl_matrix_complex * m, $/;"	p	signature:(gsl_matrix_complex * m, const size_t i, const size_t j, const size_t n1, const size_t n2)
gsl_matrix_complex_subrow	/usr/local/gsl/include/gsl/gsl_matrix_complex_double.h	/^gsl_matrix_complex_subrow (gsl_matrix_complex * m,$/;"	p	signature:(gsl_matrix_complex * m, const size_t i, const size_t offset, const size_t n)
gsl_matrix_complex_superdiagonal	/usr/local/gsl/include/gsl/gsl_matrix_complex_double.h	/^gsl_matrix_complex_superdiagonal (gsl_matrix_complex * m, const size_t k);$/;"	p	signature:(gsl_matrix_complex * m, const size_t k)
gsl_matrix_complex_swap	/usr/local/gsl/include/gsl/gsl_matrix_complex_double.h	/^int gsl_matrix_complex_swap(gsl_matrix_complex * m1, gsl_matrix_complex * m2);$/;"	p	signature:(gsl_matrix_complex * m1, gsl_matrix_complex * m2)
gsl_matrix_complex_swap_columns	/usr/local/gsl/include/gsl/gsl_matrix_complex_double.h	/^int gsl_matrix_complex_swap_columns(gsl_matrix_complex * m, const size_t i, const size_t j);$/;"	p	signature:(gsl_matrix_complex * m, const size_t i, const size_t j)
gsl_matrix_complex_swap_rowcol	/usr/local/gsl/include/gsl/gsl_matrix_complex_double.h	/^int gsl_matrix_complex_swap_rowcol(gsl_matrix_complex * m, const size_t i, const size_t j);$/;"	p	signature:(gsl_matrix_complex * m, const size_t i, const size_t j)
gsl_matrix_complex_swap_rows	/usr/local/gsl/include/gsl/gsl_matrix_complex_double.h	/^int gsl_matrix_complex_swap_rows(gsl_matrix_complex * m, const size_t i, const size_t j);$/;"	p	signature:(gsl_matrix_complex * m, const size_t i, const size_t j)
gsl_matrix_complex_transpose	/usr/local/gsl/include/gsl/gsl_matrix_complex_double.h	/^int gsl_matrix_complex_transpose (gsl_matrix_complex * m);$/;"	p	signature:(gsl_matrix_complex * m)
gsl_matrix_complex_transpose_memcpy	/usr/local/gsl/include/gsl/gsl_matrix_complex_double.h	/^int gsl_matrix_complex_transpose_memcpy (gsl_matrix_complex * dest, const gsl_matrix_complex * src);$/;"	p	signature:(gsl_matrix_complex * dest, const gsl_matrix_complex * src)
gsl_matrix_complex_view	/usr/local/gsl/include/gsl/gsl_matrix_complex_double.h	/^typedef _gsl_matrix_complex_view gsl_matrix_complex_view;$/;"	t
gsl_matrix_complex_view_array	/usr/local/gsl/include/gsl/gsl_matrix_complex_double.h	/^gsl_matrix_complex_view_array (double * base,$/;"	p	signature:(double * base, const size_t n1, const size_t n2)
gsl_matrix_complex_view_array_with_tda	/usr/local/gsl/include/gsl/gsl_matrix_complex_double.h	/^gsl_matrix_complex_view_array_with_tda (double * base, $/;"	p	signature:(double * base, const size_t n1, const size_t n2, const size_t tda)
gsl_matrix_complex_view_vector	/usr/local/gsl/include/gsl/gsl_matrix_complex_double.h	/^gsl_matrix_complex_view_vector (gsl_vector_complex * v,$/;"	p	signature:(gsl_vector_complex * v, const size_t n1, const size_t n2)
gsl_matrix_complex_view_vector_with_tda	/usr/local/gsl/include/gsl/gsl_matrix_complex_double.h	/^gsl_matrix_complex_view_vector_with_tda (gsl_vector_complex * v,$/;"	p	signature:(gsl_vector_complex * v, const size_t n1, const size_t n2, const size_t tda)
gsl_matrix_const_column	/usr/local/gsl/include/gsl/gsl_matrix_double.h	/^gsl_matrix_const_column (const gsl_matrix * m, $/;"	p	signature:(const gsl_matrix * m, const size_t j)
gsl_matrix_const_diagonal	/usr/local/gsl/include/gsl/gsl_matrix_double.h	/^gsl_matrix_const_diagonal (const gsl_matrix * m);$/;"	p	signature:(const gsl_matrix * m)
gsl_matrix_const_ptr	/usr/local/gsl/include/gsl/gsl_matrix_double.h	/^INLINE_DECL const double * gsl_matrix_const_ptr(const gsl_matrix * m, const size_t i, const size_t j);$/;"	p	signature:(const gsl_matrix * m, const size_t i, const size_t j)
gsl_matrix_const_ptr	/usr/local/gsl/include/gsl/gsl_matrix_double.h	/^gsl_matrix_const_ptr(const gsl_matrix * m, const size_t i, const size_t j)$/;"	f	signature:(const gsl_matrix * m, const size_t i, const size_t j)
gsl_matrix_const_row	/usr/local/gsl/include/gsl/gsl_matrix_double.h	/^gsl_matrix_const_row (const gsl_matrix * m, $/;"	p	signature:(const gsl_matrix * m, const size_t i)
gsl_matrix_const_subcolumn	/usr/local/gsl/include/gsl/gsl_matrix_double.h	/^gsl_matrix_const_subcolumn (const gsl_matrix * m, const size_t j,$/;"	p	signature:(const gsl_matrix * m, const size_t j, const size_t offset, const size_t n)
gsl_matrix_const_subdiagonal	/usr/local/gsl/include/gsl/gsl_matrix_double.h	/^gsl_matrix_const_subdiagonal (const gsl_matrix * m, $/;"	p	signature:(const gsl_matrix * m, const size_t k)
gsl_matrix_const_submatrix	/usr/local/gsl/include/gsl/gsl_matrix_double.h	/^gsl_matrix_const_submatrix (const gsl_matrix * m, $/;"	p	signature:(const gsl_matrix * m, const size_t i, const size_t j, const size_t n1, const size_t n2)
gsl_matrix_const_subrow	/usr/local/gsl/include/gsl/gsl_matrix_double.h	/^gsl_matrix_const_subrow (const gsl_matrix * m, const size_t i,$/;"	p	signature:(const gsl_matrix * m, const size_t i, const size_t offset, const size_t n)
gsl_matrix_const_superdiagonal	/usr/local/gsl/include/gsl/gsl_matrix_double.h	/^gsl_matrix_const_superdiagonal (const gsl_matrix * m, $/;"	p	signature:(const gsl_matrix * m, const size_t k)
gsl_matrix_const_view	/usr/local/gsl/include/gsl/gsl_matrix_double.h	/^typedef const _gsl_matrix_const_view gsl_matrix_const_view;$/;"	t
gsl_matrix_const_view_array	/usr/local/gsl/include/gsl/gsl_matrix_double.h	/^gsl_matrix_const_view_array (const double * base,$/;"	p	signature:(const double * base, const size_t n1, const size_t n2)
gsl_matrix_const_view_array_with_tda	/usr/local/gsl/include/gsl/gsl_matrix_double.h	/^gsl_matrix_const_view_array_with_tda (const double * base, $/;"	p	signature:(const double * base, const size_t n1, const size_t n2, const size_t tda)
gsl_matrix_const_view_vector	/usr/local/gsl/include/gsl/gsl_matrix_double.h	/^gsl_matrix_const_view_vector (const gsl_vector * v,$/;"	p	signature:(const gsl_vector * v, const size_t n1, const size_t n2)
gsl_matrix_const_view_vector_with_tda	/usr/local/gsl/include/gsl/gsl_matrix_double.h	/^gsl_matrix_const_view_vector_with_tda (const gsl_vector * v,$/;"	p	signature:(const gsl_vector * v, const size_t n1, const size_t n2, const size_t tda)
gsl_matrix_diagonal	/usr/local/gsl/include/gsl/gsl_matrix_double.h	/^gsl_matrix_diagonal (gsl_matrix * m);$/;"	p	signature:(gsl_matrix * m)
gsl_matrix_div_elements	/usr/local/gsl/include/gsl/gsl_matrix_double.h	/^int gsl_matrix_div_elements (gsl_matrix * a, const gsl_matrix * b);$/;"	p	signature:(gsl_matrix * a, const gsl_matrix * b)
gsl_matrix_float	/usr/local/gsl/include/gsl/gsl_matrix_float.h	/^} gsl_matrix_float;$/;"	t	typeref:struct:__anon143
gsl_matrix_float_add	/usr/local/gsl/include/gsl/gsl_matrix_float.h	/^int gsl_matrix_float_add (gsl_matrix_float * a, const gsl_matrix_float * b);$/;"	p	signature:(gsl_matrix_float * a, const gsl_matrix_float * b)
gsl_matrix_float_add_constant	/usr/local/gsl/include/gsl/gsl_matrix_float.h	/^int gsl_matrix_float_add_constant (gsl_matrix_float * a, const double x);$/;"	p	signature:(gsl_matrix_float * a, const double x)
gsl_matrix_float_add_diagonal	/usr/local/gsl/include/gsl/gsl_matrix_float.h	/^int gsl_matrix_float_add_diagonal (gsl_matrix_float * a, const double x);$/;"	p	signature:(gsl_matrix_float * a, const double x)
gsl_matrix_float_alloc	/usr/local/gsl/include/gsl/gsl_matrix_float.h	/^gsl_matrix_float_alloc (const size_t n1, const size_t n2);$/;"	p	signature:(const size_t n1, const size_t n2)
gsl_matrix_float_alloc_from_block	/usr/local/gsl/include/gsl/gsl_matrix_float.h	/^gsl_matrix_float_alloc_from_block (gsl_block_float * b, $/;"	p	signature:(gsl_block_float * b, const size_t offset, const size_t n1, const size_t n2, const size_t d2)
gsl_matrix_float_alloc_from_matrix	/usr/local/gsl/include/gsl/gsl_matrix_float.h	/^gsl_matrix_float_alloc_from_matrix (gsl_matrix_float * m,$/;"	p	signature:(gsl_matrix_float * m, const size_t k1, const size_t k2, const size_t n1, const size_t n2)
gsl_matrix_float_calloc	/usr/local/gsl/include/gsl/gsl_matrix_float.h	/^gsl_matrix_float_calloc (const size_t n1, const size_t n2);$/;"	p	signature:(const size_t n1, const size_t n2)
gsl_matrix_float_column	/usr/local/gsl/include/gsl/gsl_matrix_float.h	/^gsl_matrix_float_column (gsl_matrix_float * m, const size_t j);$/;"	p	signature:(gsl_matrix_float * m, const size_t j)
gsl_matrix_float_const_column	/usr/local/gsl/include/gsl/gsl_matrix_float.h	/^gsl_matrix_float_const_column (const gsl_matrix_float * m, $/;"	p	signature:(const gsl_matrix_float * m, const size_t j)
gsl_matrix_float_const_diagonal	/usr/local/gsl/include/gsl/gsl_matrix_float.h	/^gsl_matrix_float_const_diagonal (const gsl_matrix_float * m);$/;"	p	signature:(const gsl_matrix_float * m)
gsl_matrix_float_const_ptr	/usr/local/gsl/include/gsl/gsl_matrix_float.h	/^INLINE_DECL const float * gsl_matrix_float_const_ptr(const gsl_matrix_float * m, const size_t i, const size_t j);$/;"	p	signature:(const gsl_matrix_float * m, const size_t i, const size_t j)
gsl_matrix_float_const_ptr	/usr/local/gsl/include/gsl/gsl_matrix_float.h	/^gsl_matrix_float_const_ptr(const gsl_matrix_float * m, const size_t i, const size_t j)$/;"	f	signature:(const gsl_matrix_float * m, const size_t i, const size_t j)
gsl_matrix_float_const_row	/usr/local/gsl/include/gsl/gsl_matrix_float.h	/^gsl_matrix_float_const_row (const gsl_matrix_float * m, $/;"	p	signature:(const gsl_matrix_float * m, const size_t i)
gsl_matrix_float_const_subcolumn	/usr/local/gsl/include/gsl/gsl_matrix_float.h	/^gsl_matrix_float_const_subcolumn (const gsl_matrix_float * m, const size_t j,$/;"	p	signature:(const gsl_matrix_float * m, const size_t j, const size_t offset, const size_t n)
gsl_matrix_float_const_subdiagonal	/usr/local/gsl/include/gsl/gsl_matrix_float.h	/^gsl_matrix_float_const_subdiagonal (const gsl_matrix_float * m, $/;"	p	signature:(const gsl_matrix_float * m, const size_t k)
gsl_matrix_float_const_submatrix	/usr/local/gsl/include/gsl/gsl_matrix_float.h	/^gsl_matrix_float_const_submatrix (const gsl_matrix_float * m, $/;"	p	signature:(const gsl_matrix_float * m, const size_t i, const size_t j, const size_t n1, const size_t n2)
gsl_matrix_float_const_subrow	/usr/local/gsl/include/gsl/gsl_matrix_float.h	/^gsl_matrix_float_const_subrow (const gsl_matrix_float * m, const size_t i,$/;"	p	signature:(const gsl_matrix_float * m, const size_t i, const size_t offset, const size_t n)
gsl_matrix_float_const_superdiagonal	/usr/local/gsl/include/gsl/gsl_matrix_float.h	/^gsl_matrix_float_const_superdiagonal (const gsl_matrix_float * m, $/;"	p	signature:(const gsl_matrix_float * m, const size_t k)
gsl_matrix_float_const_view	/usr/local/gsl/include/gsl/gsl_matrix_float.h	/^typedef const _gsl_matrix_float_const_view gsl_matrix_float_const_view;$/;"	t
gsl_matrix_float_const_view_array	/usr/local/gsl/include/gsl/gsl_matrix_float.h	/^gsl_matrix_float_const_view_array (const float * base,$/;"	p	signature:(const float * base, const size_t n1, const size_t n2)
gsl_matrix_float_const_view_array_with_tda	/usr/local/gsl/include/gsl/gsl_matrix_float.h	/^gsl_matrix_float_const_view_array_with_tda (const float * base, $/;"	p	signature:(const float * base, const size_t n1, const size_t n2, const size_t tda)
gsl_matrix_float_const_view_vector	/usr/local/gsl/include/gsl/gsl_matrix_float.h	/^gsl_matrix_float_const_view_vector (const gsl_vector_float * v,$/;"	p	signature:(const gsl_vector_float * v, const size_t n1, const size_t n2)
gsl_matrix_float_const_view_vector_with_tda	/usr/local/gsl/include/gsl/gsl_matrix_float.h	/^gsl_matrix_float_const_view_vector_with_tda (const gsl_vector_float * v,$/;"	p	signature:(const gsl_vector_float * v, const size_t n1, const size_t n2, const size_t tda)
gsl_matrix_float_diagonal	/usr/local/gsl/include/gsl/gsl_matrix_float.h	/^gsl_matrix_float_diagonal (gsl_matrix_float * m);$/;"	p	signature:(gsl_matrix_float * m)
gsl_matrix_float_div_elements	/usr/local/gsl/include/gsl/gsl_matrix_float.h	/^int gsl_matrix_float_div_elements (gsl_matrix_float * a, const gsl_matrix_float * b);$/;"	p	signature:(gsl_matrix_float * a, const gsl_matrix_float * b)
gsl_matrix_float_fprintf	/usr/local/gsl/include/gsl/gsl_matrix_float.h	/^int gsl_matrix_float_fprintf (FILE * stream, const gsl_matrix_float * m, const char * format);$/;"	p	signature:(FILE * stream, const gsl_matrix_float * m, const char * format)
gsl_matrix_float_fread	/usr/local/gsl/include/gsl/gsl_matrix_float.h	/^int gsl_matrix_float_fread (FILE * stream, gsl_matrix_float * m) ;$/;"	p	signature:(FILE * stream, gsl_matrix_float * m)
gsl_matrix_float_free	/usr/local/gsl/include/gsl/gsl_matrix_float.h	/^void gsl_matrix_float_free (gsl_matrix_float * m);$/;"	p	signature:(gsl_matrix_float * m)
gsl_matrix_float_fscanf	/usr/local/gsl/include/gsl/gsl_matrix_float.h	/^int gsl_matrix_float_fscanf (FILE * stream, gsl_matrix_float * m);$/;"	p	signature:(FILE * stream, gsl_matrix_float * m)
gsl_matrix_float_fwrite	/usr/local/gsl/include/gsl/gsl_matrix_float.h	/^int gsl_matrix_float_fwrite (FILE * stream, const gsl_matrix_float * m) ;$/;"	p	signature:(FILE * stream, const gsl_matrix_float * m)
gsl_matrix_float_get	/usr/local/gsl/include/gsl/gsl_matrix_float.h	/^INLINE_DECL float   gsl_matrix_float_get(const gsl_matrix_float * m, const size_t i, const size_t j);$/;"	p	signature:(const gsl_matrix_float * m, const size_t i, const size_t j)
gsl_matrix_float_get	/usr/local/gsl/include/gsl/gsl_matrix_float.h	/^gsl_matrix_float_get(const gsl_matrix_float * m, const size_t i, const size_t j)$/;"	f	signature:(const gsl_matrix_float * m, const size_t i, const size_t j)
gsl_matrix_float_get_col	/usr/local/gsl/include/gsl/gsl_matrix_float.h	/^int gsl_matrix_float_get_col(gsl_vector_float * v, const gsl_matrix_float * m, const size_t j);$/;"	p	signature:(gsl_vector_float * v, const gsl_matrix_float * m, const size_t j)
gsl_matrix_float_get_row	/usr/local/gsl/include/gsl/gsl_matrix_float.h	/^int gsl_matrix_float_get_row(gsl_vector_float * v, const gsl_matrix_float * m, const size_t i);$/;"	p	signature:(gsl_vector_float * v, const gsl_matrix_float * m, const size_t i)
gsl_matrix_float_isneg	/usr/local/gsl/include/gsl/gsl_matrix_float.h	/^int gsl_matrix_float_isneg (const gsl_matrix_float * m);$/;"	p	signature:(const gsl_matrix_float * m)
gsl_matrix_float_isnonneg	/usr/local/gsl/include/gsl/gsl_matrix_float.h	/^int gsl_matrix_float_isnonneg (const gsl_matrix_float * m);$/;"	p	signature:(const gsl_matrix_float * m)
gsl_matrix_float_isnull	/usr/local/gsl/include/gsl/gsl_matrix_float.h	/^int gsl_matrix_float_isnull (const gsl_matrix_float * m);$/;"	p	signature:(const gsl_matrix_float * m)
gsl_matrix_float_ispos	/usr/local/gsl/include/gsl/gsl_matrix_float.h	/^int gsl_matrix_float_ispos (const gsl_matrix_float * m);$/;"	p	signature:(const gsl_matrix_float * m)
gsl_matrix_float_max	/usr/local/gsl/include/gsl/gsl_matrix_float.h	/^float gsl_matrix_float_max (const gsl_matrix_float * m);$/;"	p	signature:(const gsl_matrix_float * m)
gsl_matrix_float_max_index	/usr/local/gsl/include/gsl/gsl_matrix_float.h	/^void gsl_matrix_float_max_index (const gsl_matrix_float * m, size_t * imax, size_t *jmax);$/;"	p	signature:(const gsl_matrix_float * m, size_t * imax, size_t *jmax)
gsl_matrix_float_memcpy	/usr/local/gsl/include/gsl/gsl_matrix_float.h	/^int gsl_matrix_float_memcpy(gsl_matrix_float * dest, const gsl_matrix_float * src);$/;"	p	signature:(gsl_matrix_float * dest, const gsl_matrix_float * src)
gsl_matrix_float_min	/usr/local/gsl/include/gsl/gsl_matrix_float.h	/^float gsl_matrix_float_min (const gsl_matrix_float * m);$/;"	p	signature:(const gsl_matrix_float * m)
gsl_matrix_float_min_index	/usr/local/gsl/include/gsl/gsl_matrix_float.h	/^void gsl_matrix_float_min_index (const gsl_matrix_float * m, size_t * imin, size_t *jmin);$/;"	p	signature:(const gsl_matrix_float * m, size_t * imin, size_t *jmin)
gsl_matrix_float_minmax	/usr/local/gsl/include/gsl/gsl_matrix_float.h	/^void gsl_matrix_float_minmax (const gsl_matrix_float * m, float * min_out, float * max_out);$/;"	p	signature:(const gsl_matrix_float * m, float * min_out, float * max_out)
gsl_matrix_float_minmax_index	/usr/local/gsl/include/gsl/gsl_matrix_float.h	/^void gsl_matrix_float_minmax_index (const gsl_matrix_float * m, size_t * imin, size_t * jmin, size_t * imax, size_t * jmax);$/;"	p	signature:(const gsl_matrix_float * m, size_t * imin, size_t * jmin, size_t * imax, size_t * jmax)
gsl_matrix_float_mul_elements	/usr/local/gsl/include/gsl/gsl_matrix_float.h	/^int gsl_matrix_float_mul_elements (gsl_matrix_float * a, const gsl_matrix_float * b);$/;"	p	signature:(gsl_matrix_float * a, const gsl_matrix_float * b)
gsl_matrix_float_ptr	/usr/local/gsl/include/gsl/gsl_matrix_float.h	/^INLINE_DECL float * gsl_matrix_float_ptr(gsl_matrix_float * m, const size_t i, const size_t j);$/;"	p	signature:(gsl_matrix_float * m, const size_t i, const size_t j)
gsl_matrix_float_ptr	/usr/local/gsl/include/gsl/gsl_matrix_float.h	/^gsl_matrix_float_ptr(gsl_matrix_float * m, const size_t i, const size_t j)$/;"	f	signature:(gsl_matrix_float * m, const size_t i, const size_t j)
gsl_matrix_float_row	/usr/local/gsl/include/gsl/gsl_matrix_float.h	/^gsl_matrix_float_row (gsl_matrix_float * m, const size_t i);$/;"	p	signature:(gsl_matrix_float * m, const size_t i)
gsl_matrix_float_scale	/usr/local/gsl/include/gsl/gsl_matrix_float.h	/^int gsl_matrix_float_scale (gsl_matrix_float * a, const double x);$/;"	p	signature:(gsl_matrix_float * a, const double x)
gsl_matrix_float_set	/usr/local/gsl/include/gsl/gsl_matrix_float.h	/^INLINE_DECL void    gsl_matrix_float_set(gsl_matrix_float * m, const size_t i, const size_t j, const float x);$/;"	p	signature:(gsl_matrix_float * m, const size_t i, const size_t j, const float x)
gsl_matrix_float_set	/usr/local/gsl/include/gsl/gsl_matrix_float.h	/^gsl_matrix_float_set(gsl_matrix_float * m, const size_t i, const size_t j, const float x)$/;"	f	signature:(gsl_matrix_float * m, const size_t i, const size_t j, const float x)
gsl_matrix_float_set_all	/usr/local/gsl/include/gsl/gsl_matrix_float.h	/^void gsl_matrix_float_set_all (gsl_matrix_float * m, float x);$/;"	p	signature:(gsl_matrix_float * m, float x)
gsl_matrix_float_set_col	/usr/local/gsl/include/gsl/gsl_matrix_float.h	/^int gsl_matrix_float_set_col(gsl_matrix_float * m, const size_t j, const gsl_vector_float * v);$/;"	p	signature:(gsl_matrix_float * m, const size_t j, const gsl_vector_float * v)
gsl_matrix_float_set_identity	/usr/local/gsl/include/gsl/gsl_matrix_float.h	/^void gsl_matrix_float_set_identity (gsl_matrix_float * m);$/;"	p	signature:(gsl_matrix_float * m)
gsl_matrix_float_set_row	/usr/local/gsl/include/gsl/gsl_matrix_float.h	/^int gsl_matrix_float_set_row(gsl_matrix_float * m, const size_t i, const gsl_vector_float * v);$/;"	p	signature:(gsl_matrix_float * m, const size_t i, const gsl_vector_float * v)
gsl_matrix_float_set_zero	/usr/local/gsl/include/gsl/gsl_matrix_float.h	/^void gsl_matrix_float_set_zero (gsl_matrix_float * m);$/;"	p	signature:(gsl_matrix_float * m)
gsl_matrix_float_sub	/usr/local/gsl/include/gsl/gsl_matrix_float.h	/^int gsl_matrix_float_sub (gsl_matrix_float * a, const gsl_matrix_float * b);$/;"	p	signature:(gsl_matrix_float * a, const gsl_matrix_float * b)
gsl_matrix_float_subcolumn	/usr/local/gsl/include/gsl/gsl_matrix_float.h	/^gsl_matrix_float_subcolumn (gsl_matrix_float * m, const size_t j,$/;"	p	signature:(gsl_matrix_float * m, const size_t j, const size_t offset, const size_t n)
gsl_matrix_float_subdiagonal	/usr/local/gsl/include/gsl/gsl_matrix_float.h	/^gsl_matrix_float_subdiagonal (gsl_matrix_float * m, const size_t k);$/;"	p	signature:(gsl_matrix_float * m, const size_t k)
gsl_matrix_float_submatrix	/usr/local/gsl/include/gsl/gsl_matrix_float.h	/^gsl_matrix_float_submatrix (gsl_matrix_float * m, $/;"	p	signature:(gsl_matrix_float * m, const size_t i, const size_t j, const size_t n1, const size_t n2)
gsl_matrix_float_subrow	/usr/local/gsl/include/gsl/gsl_matrix_float.h	/^gsl_matrix_float_subrow (gsl_matrix_float * m, const size_t i,$/;"	p	signature:(gsl_matrix_float * m, const size_t i, const size_t offset, const size_t n)
gsl_matrix_float_superdiagonal	/usr/local/gsl/include/gsl/gsl_matrix_float.h	/^gsl_matrix_float_superdiagonal (gsl_matrix_float * m, const size_t k);$/;"	p	signature:(gsl_matrix_float * m, const size_t k)
gsl_matrix_float_swap	/usr/local/gsl/include/gsl/gsl_matrix_float.h	/^int gsl_matrix_float_swap(gsl_matrix_float * m1, gsl_matrix_float * m2);$/;"	p	signature:(gsl_matrix_float * m1, gsl_matrix_float * m2)
gsl_matrix_float_swap_columns	/usr/local/gsl/include/gsl/gsl_matrix_float.h	/^int gsl_matrix_float_swap_columns(gsl_matrix_float * m, const size_t i, const size_t j);$/;"	p	signature:(gsl_matrix_float * m, const size_t i, const size_t j)
gsl_matrix_float_swap_rowcol	/usr/local/gsl/include/gsl/gsl_matrix_float.h	/^int gsl_matrix_float_swap_rowcol(gsl_matrix_float * m, const size_t i, const size_t j);$/;"	p	signature:(gsl_matrix_float * m, const size_t i, const size_t j)
gsl_matrix_float_swap_rows	/usr/local/gsl/include/gsl/gsl_matrix_float.h	/^int gsl_matrix_float_swap_rows(gsl_matrix_float * m, const size_t i, const size_t j);$/;"	p	signature:(gsl_matrix_float * m, const size_t i, const size_t j)
gsl_matrix_float_transpose	/usr/local/gsl/include/gsl/gsl_matrix_float.h	/^int gsl_matrix_float_transpose (gsl_matrix_float * m);$/;"	p	signature:(gsl_matrix_float * m)
gsl_matrix_float_transpose_memcpy	/usr/local/gsl/include/gsl/gsl_matrix_float.h	/^int gsl_matrix_float_transpose_memcpy (gsl_matrix_float * dest, const gsl_matrix_float * src);$/;"	p	signature:(gsl_matrix_float * dest, const gsl_matrix_float * src)
gsl_matrix_float_view	/usr/local/gsl/include/gsl/gsl_matrix_float.h	/^typedef _gsl_matrix_float_view gsl_matrix_float_view;$/;"	t
gsl_matrix_float_view_array	/usr/local/gsl/include/gsl/gsl_matrix_float.h	/^gsl_matrix_float_view_array (float * base,$/;"	p	signature:(float * base, const size_t n1, const size_t n2)
gsl_matrix_float_view_array_with_tda	/usr/local/gsl/include/gsl/gsl_matrix_float.h	/^gsl_matrix_float_view_array_with_tda (float * base, $/;"	p	signature:(float * base, const size_t n1, const size_t n2, const size_t tda)
gsl_matrix_float_view_vector	/usr/local/gsl/include/gsl/gsl_matrix_float.h	/^gsl_matrix_float_view_vector (gsl_vector_float * v,$/;"	p	signature:(gsl_vector_float * v, const size_t n1, const size_t n2)
gsl_matrix_float_view_vector_with_tda	/usr/local/gsl/include/gsl/gsl_matrix_float.h	/^gsl_matrix_float_view_vector_with_tda (gsl_vector_float * v,$/;"	p	signature:(gsl_vector_float * v, const size_t n1, const size_t n2, const size_t tda)
gsl_matrix_fprintf	/usr/local/gsl/include/gsl/gsl_matrix_double.h	/^int gsl_matrix_fprintf (FILE * stream, const gsl_matrix * m, const char * format);$/;"	p	signature:(FILE * stream, const gsl_matrix * m, const char * format)
gsl_matrix_fread	/usr/local/gsl/include/gsl/gsl_matrix_double.h	/^int gsl_matrix_fread (FILE * stream, gsl_matrix * m) ;$/;"	p	signature:(FILE * stream, gsl_matrix * m)
gsl_matrix_free	/usr/local/gsl/include/gsl/gsl_matrix_double.h	/^void gsl_matrix_free (gsl_matrix * m);$/;"	p	signature:(gsl_matrix * m)
gsl_matrix_fscanf	/usr/local/gsl/include/gsl/gsl_matrix_double.h	/^int gsl_matrix_fscanf (FILE * stream, gsl_matrix * m);$/;"	p	signature:(FILE * stream, gsl_matrix * m)
gsl_matrix_fwrite	/usr/local/gsl/include/gsl/gsl_matrix_double.h	/^int gsl_matrix_fwrite (FILE * stream, const gsl_matrix * m) ;$/;"	p	signature:(FILE * stream, const gsl_matrix * m)
gsl_matrix_get	/usr/local/gsl/include/gsl/gsl_matrix_double.h	/^INLINE_DECL double   gsl_matrix_get(const gsl_matrix * m, const size_t i, const size_t j);$/;"	p	signature:(const gsl_matrix * m, const size_t i, const size_t j)
gsl_matrix_get	/usr/local/gsl/include/gsl/gsl_matrix_double.h	/^gsl_matrix_get(const gsl_matrix * m, const size_t i, const size_t j)$/;"	f	signature:(const gsl_matrix * m, const size_t i, const size_t j)
gsl_matrix_get_col	/usr/local/gsl/include/gsl/gsl_matrix_double.h	/^int gsl_matrix_get_col(gsl_vector * v, const gsl_matrix * m, const size_t j);$/;"	p	signature:(gsl_vector * v, const gsl_matrix * m, const size_t j)
gsl_matrix_get_row	/usr/local/gsl/include/gsl/gsl_matrix_double.h	/^int gsl_matrix_get_row(gsl_vector * v, const gsl_matrix * m, const size_t i);$/;"	p	signature:(gsl_vector * v, const gsl_matrix * m, const size_t i)
gsl_matrix_int	/usr/local/gsl/include/gsl/gsl_matrix_int.h	/^} gsl_matrix_int;$/;"	t	typeref:struct:__anon90
gsl_matrix_int_add	/usr/local/gsl/include/gsl/gsl_matrix_int.h	/^int gsl_matrix_int_add (gsl_matrix_int * a, const gsl_matrix_int * b);$/;"	p	signature:(gsl_matrix_int * a, const gsl_matrix_int * b)
gsl_matrix_int_add_constant	/usr/local/gsl/include/gsl/gsl_matrix_int.h	/^int gsl_matrix_int_add_constant (gsl_matrix_int * a, const double x);$/;"	p	signature:(gsl_matrix_int * a, const double x)
gsl_matrix_int_add_diagonal	/usr/local/gsl/include/gsl/gsl_matrix_int.h	/^int gsl_matrix_int_add_diagonal (gsl_matrix_int * a, const double x);$/;"	p	signature:(gsl_matrix_int * a, const double x)
gsl_matrix_int_alloc	/usr/local/gsl/include/gsl/gsl_matrix_int.h	/^gsl_matrix_int_alloc (const size_t n1, const size_t n2);$/;"	p	signature:(const size_t n1, const size_t n2)
gsl_matrix_int_alloc_from_block	/usr/local/gsl/include/gsl/gsl_matrix_int.h	/^gsl_matrix_int_alloc_from_block (gsl_block_int * b, $/;"	p	signature:(gsl_block_int * b, const size_t offset, const size_t n1, const size_t n2, const size_t d2)
gsl_matrix_int_alloc_from_matrix	/usr/local/gsl/include/gsl/gsl_matrix_int.h	/^gsl_matrix_int_alloc_from_matrix (gsl_matrix_int * m,$/;"	p	signature:(gsl_matrix_int * m, const size_t k1, const size_t k2, const size_t n1, const size_t n2)
gsl_matrix_int_calloc	/usr/local/gsl/include/gsl/gsl_matrix_int.h	/^gsl_matrix_int_calloc (const size_t n1, const size_t n2);$/;"	p	signature:(const size_t n1, const size_t n2)
gsl_matrix_int_column	/usr/local/gsl/include/gsl/gsl_matrix_int.h	/^gsl_matrix_int_column (gsl_matrix_int * m, const size_t j);$/;"	p	signature:(gsl_matrix_int * m, const size_t j)
gsl_matrix_int_const_column	/usr/local/gsl/include/gsl/gsl_matrix_int.h	/^gsl_matrix_int_const_column (const gsl_matrix_int * m, $/;"	p	signature:(const gsl_matrix_int * m, const size_t j)
gsl_matrix_int_const_diagonal	/usr/local/gsl/include/gsl/gsl_matrix_int.h	/^gsl_matrix_int_const_diagonal (const gsl_matrix_int * m);$/;"	p	signature:(const gsl_matrix_int * m)
gsl_matrix_int_const_ptr	/usr/local/gsl/include/gsl/gsl_matrix_int.h	/^INLINE_DECL const int * gsl_matrix_int_const_ptr(const gsl_matrix_int * m, const size_t i, const size_t j);$/;"	p	signature:(const gsl_matrix_int * m, const size_t i, const size_t j)
gsl_matrix_int_const_ptr	/usr/local/gsl/include/gsl/gsl_matrix_int.h	/^gsl_matrix_int_const_ptr(const gsl_matrix_int * m, const size_t i, const size_t j)$/;"	f	signature:(const gsl_matrix_int * m, const size_t i, const size_t j)
gsl_matrix_int_const_row	/usr/local/gsl/include/gsl/gsl_matrix_int.h	/^gsl_matrix_int_const_row (const gsl_matrix_int * m, $/;"	p	signature:(const gsl_matrix_int * m, const size_t i)
gsl_matrix_int_const_subcolumn	/usr/local/gsl/include/gsl/gsl_matrix_int.h	/^gsl_matrix_int_const_subcolumn (const gsl_matrix_int * m, const size_t j,$/;"	p	signature:(const gsl_matrix_int * m, const size_t j, const size_t offset, const size_t n)
gsl_matrix_int_const_subdiagonal	/usr/local/gsl/include/gsl/gsl_matrix_int.h	/^gsl_matrix_int_const_subdiagonal (const gsl_matrix_int * m, $/;"	p	signature:(const gsl_matrix_int * m, const size_t k)
gsl_matrix_int_const_submatrix	/usr/local/gsl/include/gsl/gsl_matrix_int.h	/^gsl_matrix_int_const_submatrix (const gsl_matrix_int * m, $/;"	p	signature:(const gsl_matrix_int * m, const size_t i, const size_t j, const size_t n1, const size_t n2)
gsl_matrix_int_const_subrow	/usr/local/gsl/include/gsl/gsl_matrix_int.h	/^gsl_matrix_int_const_subrow (const gsl_matrix_int * m, const size_t i,$/;"	p	signature:(const gsl_matrix_int * m, const size_t i, const size_t offset, const size_t n)
gsl_matrix_int_const_superdiagonal	/usr/local/gsl/include/gsl/gsl_matrix_int.h	/^gsl_matrix_int_const_superdiagonal (const gsl_matrix_int * m, $/;"	p	signature:(const gsl_matrix_int * m, const size_t k)
gsl_matrix_int_const_view	/usr/local/gsl/include/gsl/gsl_matrix_int.h	/^typedef const _gsl_matrix_int_const_view gsl_matrix_int_const_view;$/;"	t
gsl_matrix_int_const_view_array	/usr/local/gsl/include/gsl/gsl_matrix_int.h	/^gsl_matrix_int_const_view_array (const int * base,$/;"	p	signature:(const int * base, const size_t n1, const size_t n2)
gsl_matrix_int_const_view_array_with_tda	/usr/local/gsl/include/gsl/gsl_matrix_int.h	/^gsl_matrix_int_const_view_array_with_tda (const int * base, $/;"	p	signature:(const int * base, const size_t n1, const size_t n2, const size_t tda)
gsl_matrix_int_const_view_vector	/usr/local/gsl/include/gsl/gsl_matrix_int.h	/^gsl_matrix_int_const_view_vector (const gsl_vector_int * v,$/;"	p	signature:(const gsl_vector_int * v, const size_t n1, const size_t n2)
gsl_matrix_int_const_view_vector_with_tda	/usr/local/gsl/include/gsl/gsl_matrix_int.h	/^gsl_matrix_int_const_view_vector_with_tda (const gsl_vector_int * v,$/;"	p	signature:(const gsl_vector_int * v, const size_t n1, const size_t n2, const size_t tda)
gsl_matrix_int_diagonal	/usr/local/gsl/include/gsl/gsl_matrix_int.h	/^gsl_matrix_int_diagonal (gsl_matrix_int * m);$/;"	p	signature:(gsl_matrix_int * m)
gsl_matrix_int_div_elements	/usr/local/gsl/include/gsl/gsl_matrix_int.h	/^int gsl_matrix_int_div_elements (gsl_matrix_int * a, const gsl_matrix_int * b);$/;"	p	signature:(gsl_matrix_int * a, const gsl_matrix_int * b)
gsl_matrix_int_fprintf	/usr/local/gsl/include/gsl/gsl_matrix_int.h	/^int gsl_matrix_int_fprintf (FILE * stream, const gsl_matrix_int * m, const char * format);$/;"	p	signature:(FILE * stream, const gsl_matrix_int * m, const char * format)
gsl_matrix_int_fread	/usr/local/gsl/include/gsl/gsl_matrix_int.h	/^int gsl_matrix_int_fread (FILE * stream, gsl_matrix_int * m) ;$/;"	p	signature:(FILE * stream, gsl_matrix_int * m)
gsl_matrix_int_free	/usr/local/gsl/include/gsl/gsl_matrix_int.h	/^void gsl_matrix_int_free (gsl_matrix_int * m);$/;"	p	signature:(gsl_matrix_int * m)
gsl_matrix_int_fscanf	/usr/local/gsl/include/gsl/gsl_matrix_int.h	/^int gsl_matrix_int_fscanf (FILE * stream, gsl_matrix_int * m);$/;"	p	signature:(FILE * stream, gsl_matrix_int * m)
gsl_matrix_int_fwrite	/usr/local/gsl/include/gsl/gsl_matrix_int.h	/^int gsl_matrix_int_fwrite (FILE * stream, const gsl_matrix_int * m) ;$/;"	p	signature:(FILE * stream, const gsl_matrix_int * m)
gsl_matrix_int_get	/usr/local/gsl/include/gsl/gsl_matrix_int.h	/^INLINE_DECL int   gsl_matrix_int_get(const gsl_matrix_int * m, const size_t i, const size_t j);$/;"	p	signature:(const gsl_matrix_int * m, const size_t i, const size_t j)
gsl_matrix_int_get	/usr/local/gsl/include/gsl/gsl_matrix_int.h	/^gsl_matrix_int_get(const gsl_matrix_int * m, const size_t i, const size_t j)$/;"	f	signature:(const gsl_matrix_int * m, const size_t i, const size_t j)
gsl_matrix_int_get_col	/usr/local/gsl/include/gsl/gsl_matrix_int.h	/^int gsl_matrix_int_get_col(gsl_vector_int * v, const gsl_matrix_int * m, const size_t j);$/;"	p	signature:(gsl_vector_int * v, const gsl_matrix_int * m, const size_t j)
gsl_matrix_int_get_row	/usr/local/gsl/include/gsl/gsl_matrix_int.h	/^int gsl_matrix_int_get_row(gsl_vector_int * v, const gsl_matrix_int * m, const size_t i);$/;"	p	signature:(gsl_vector_int * v, const gsl_matrix_int * m, const size_t i)
gsl_matrix_int_isneg	/usr/local/gsl/include/gsl/gsl_matrix_int.h	/^int gsl_matrix_int_isneg (const gsl_matrix_int * m);$/;"	p	signature:(const gsl_matrix_int * m)
gsl_matrix_int_isnonneg	/usr/local/gsl/include/gsl/gsl_matrix_int.h	/^int gsl_matrix_int_isnonneg (const gsl_matrix_int * m);$/;"	p	signature:(const gsl_matrix_int * m)
gsl_matrix_int_isnull	/usr/local/gsl/include/gsl/gsl_matrix_int.h	/^int gsl_matrix_int_isnull (const gsl_matrix_int * m);$/;"	p	signature:(const gsl_matrix_int * m)
gsl_matrix_int_ispos	/usr/local/gsl/include/gsl/gsl_matrix_int.h	/^int gsl_matrix_int_ispos (const gsl_matrix_int * m);$/;"	p	signature:(const gsl_matrix_int * m)
gsl_matrix_int_max	/usr/local/gsl/include/gsl/gsl_matrix_int.h	/^int gsl_matrix_int_max (const gsl_matrix_int * m);$/;"	p	signature:(const gsl_matrix_int * m)
gsl_matrix_int_max_index	/usr/local/gsl/include/gsl/gsl_matrix_int.h	/^void gsl_matrix_int_max_index (const gsl_matrix_int * m, size_t * imax, size_t *jmax);$/;"	p	signature:(const gsl_matrix_int * m, size_t * imax, size_t *jmax)
gsl_matrix_int_memcpy	/usr/local/gsl/include/gsl/gsl_matrix_int.h	/^int gsl_matrix_int_memcpy(gsl_matrix_int * dest, const gsl_matrix_int * src);$/;"	p	signature:(gsl_matrix_int * dest, const gsl_matrix_int * src)
gsl_matrix_int_min	/usr/local/gsl/include/gsl/gsl_matrix_int.h	/^int gsl_matrix_int_min (const gsl_matrix_int * m);$/;"	p	signature:(const gsl_matrix_int * m)
gsl_matrix_int_min_index	/usr/local/gsl/include/gsl/gsl_matrix_int.h	/^void gsl_matrix_int_min_index (const gsl_matrix_int * m, size_t * imin, size_t *jmin);$/;"	p	signature:(const gsl_matrix_int * m, size_t * imin, size_t *jmin)
gsl_matrix_int_minmax	/usr/local/gsl/include/gsl/gsl_matrix_int.h	/^void gsl_matrix_int_minmax (const gsl_matrix_int * m, int * min_out, int * max_out);$/;"	p	signature:(const gsl_matrix_int * m, int * min_out, int * max_out)
gsl_matrix_int_minmax_index	/usr/local/gsl/include/gsl/gsl_matrix_int.h	/^void gsl_matrix_int_minmax_index (const gsl_matrix_int * m, size_t * imin, size_t * jmin, size_t * imax, size_t * jmax);$/;"	p	signature:(const gsl_matrix_int * m, size_t * imin, size_t * jmin, size_t * imax, size_t * jmax)
gsl_matrix_int_mul_elements	/usr/local/gsl/include/gsl/gsl_matrix_int.h	/^int gsl_matrix_int_mul_elements (gsl_matrix_int * a, const gsl_matrix_int * b);$/;"	p	signature:(gsl_matrix_int * a, const gsl_matrix_int * b)
gsl_matrix_int_ptr	/usr/local/gsl/include/gsl/gsl_matrix_int.h	/^INLINE_DECL int * gsl_matrix_int_ptr(gsl_matrix_int * m, const size_t i, const size_t j);$/;"	p	signature:(gsl_matrix_int * m, const size_t i, const size_t j)
gsl_matrix_int_ptr	/usr/local/gsl/include/gsl/gsl_matrix_int.h	/^gsl_matrix_int_ptr(gsl_matrix_int * m, const size_t i, const size_t j)$/;"	f	signature:(gsl_matrix_int * m, const size_t i, const size_t j)
gsl_matrix_int_row	/usr/local/gsl/include/gsl/gsl_matrix_int.h	/^gsl_matrix_int_row (gsl_matrix_int * m, const size_t i);$/;"	p	signature:(gsl_matrix_int * m, const size_t i)
gsl_matrix_int_scale	/usr/local/gsl/include/gsl/gsl_matrix_int.h	/^int gsl_matrix_int_scale (gsl_matrix_int * a, const double x);$/;"	p	signature:(gsl_matrix_int * a, const double x)
gsl_matrix_int_set	/usr/local/gsl/include/gsl/gsl_matrix_int.h	/^INLINE_DECL void    gsl_matrix_int_set(gsl_matrix_int * m, const size_t i, const size_t j, const int x);$/;"	p	signature:(gsl_matrix_int * m, const size_t i, const size_t j, const int x)
gsl_matrix_int_set	/usr/local/gsl/include/gsl/gsl_matrix_int.h	/^gsl_matrix_int_set(gsl_matrix_int * m, const size_t i, const size_t j, const int x)$/;"	f	signature:(gsl_matrix_int * m, const size_t i, const size_t j, const int x)
gsl_matrix_int_set_all	/usr/local/gsl/include/gsl/gsl_matrix_int.h	/^void gsl_matrix_int_set_all (gsl_matrix_int * m, int x);$/;"	p	signature:(gsl_matrix_int * m, int x)
gsl_matrix_int_set_col	/usr/local/gsl/include/gsl/gsl_matrix_int.h	/^int gsl_matrix_int_set_col(gsl_matrix_int * m, const size_t j, const gsl_vector_int * v);$/;"	p	signature:(gsl_matrix_int * m, const size_t j, const gsl_vector_int * v)
gsl_matrix_int_set_identity	/usr/local/gsl/include/gsl/gsl_matrix_int.h	/^void gsl_matrix_int_set_identity (gsl_matrix_int * m);$/;"	p	signature:(gsl_matrix_int * m)
gsl_matrix_int_set_row	/usr/local/gsl/include/gsl/gsl_matrix_int.h	/^int gsl_matrix_int_set_row(gsl_matrix_int * m, const size_t i, const gsl_vector_int * v);$/;"	p	signature:(gsl_matrix_int * m, const size_t i, const gsl_vector_int * v)
gsl_matrix_int_set_zero	/usr/local/gsl/include/gsl/gsl_matrix_int.h	/^void gsl_matrix_int_set_zero (gsl_matrix_int * m);$/;"	p	signature:(gsl_matrix_int * m)
gsl_matrix_int_sub	/usr/local/gsl/include/gsl/gsl_matrix_int.h	/^int gsl_matrix_int_sub (gsl_matrix_int * a, const gsl_matrix_int * b);$/;"	p	signature:(gsl_matrix_int * a, const gsl_matrix_int * b)
gsl_matrix_int_subcolumn	/usr/local/gsl/include/gsl/gsl_matrix_int.h	/^gsl_matrix_int_subcolumn (gsl_matrix_int * m, const size_t j,$/;"	p	signature:(gsl_matrix_int * m, const size_t j, const size_t offset, const size_t n)
gsl_matrix_int_subdiagonal	/usr/local/gsl/include/gsl/gsl_matrix_int.h	/^gsl_matrix_int_subdiagonal (gsl_matrix_int * m, const size_t k);$/;"	p	signature:(gsl_matrix_int * m, const size_t k)
gsl_matrix_int_submatrix	/usr/local/gsl/include/gsl/gsl_matrix_int.h	/^gsl_matrix_int_submatrix (gsl_matrix_int * m, $/;"	p	signature:(gsl_matrix_int * m, const size_t i, const size_t j, const size_t n1, const size_t n2)
gsl_matrix_int_subrow	/usr/local/gsl/include/gsl/gsl_matrix_int.h	/^gsl_matrix_int_subrow (gsl_matrix_int * m, const size_t i,$/;"	p	signature:(gsl_matrix_int * m, const size_t i, const size_t offset, const size_t n)
gsl_matrix_int_superdiagonal	/usr/local/gsl/include/gsl/gsl_matrix_int.h	/^gsl_matrix_int_superdiagonal (gsl_matrix_int * m, const size_t k);$/;"	p	signature:(gsl_matrix_int * m, const size_t k)
gsl_matrix_int_swap	/usr/local/gsl/include/gsl/gsl_matrix_int.h	/^int gsl_matrix_int_swap(gsl_matrix_int * m1, gsl_matrix_int * m2);$/;"	p	signature:(gsl_matrix_int * m1, gsl_matrix_int * m2)
gsl_matrix_int_swap_columns	/usr/local/gsl/include/gsl/gsl_matrix_int.h	/^int gsl_matrix_int_swap_columns(gsl_matrix_int * m, const size_t i, const size_t j);$/;"	p	signature:(gsl_matrix_int * m, const size_t i, const size_t j)
gsl_matrix_int_swap_rowcol	/usr/local/gsl/include/gsl/gsl_matrix_int.h	/^int gsl_matrix_int_swap_rowcol(gsl_matrix_int * m, const size_t i, const size_t j);$/;"	p	signature:(gsl_matrix_int * m, const size_t i, const size_t j)
gsl_matrix_int_swap_rows	/usr/local/gsl/include/gsl/gsl_matrix_int.h	/^int gsl_matrix_int_swap_rows(gsl_matrix_int * m, const size_t i, const size_t j);$/;"	p	signature:(gsl_matrix_int * m, const size_t i, const size_t j)
gsl_matrix_int_transpose	/usr/local/gsl/include/gsl/gsl_matrix_int.h	/^int gsl_matrix_int_transpose (gsl_matrix_int * m);$/;"	p	signature:(gsl_matrix_int * m)
gsl_matrix_int_transpose_memcpy	/usr/local/gsl/include/gsl/gsl_matrix_int.h	/^int gsl_matrix_int_transpose_memcpy (gsl_matrix_int * dest, const gsl_matrix_int * src);$/;"	p	signature:(gsl_matrix_int * dest, const gsl_matrix_int * src)
gsl_matrix_int_view	/usr/local/gsl/include/gsl/gsl_matrix_int.h	/^typedef _gsl_matrix_int_view gsl_matrix_int_view;$/;"	t
gsl_matrix_int_view_array	/usr/local/gsl/include/gsl/gsl_matrix_int.h	/^gsl_matrix_int_view_array (int * base,$/;"	p	signature:(int * base, const size_t n1, const size_t n2)
gsl_matrix_int_view_array_with_tda	/usr/local/gsl/include/gsl/gsl_matrix_int.h	/^gsl_matrix_int_view_array_with_tda (int * base, $/;"	p	signature:(int * base, const size_t n1, const size_t n2, const size_t tda)
gsl_matrix_int_view_vector	/usr/local/gsl/include/gsl/gsl_matrix_int.h	/^gsl_matrix_int_view_vector (gsl_vector_int * v,$/;"	p	signature:(gsl_vector_int * v, const size_t n1, const size_t n2)
gsl_matrix_int_view_vector_with_tda	/usr/local/gsl/include/gsl/gsl_matrix_int.h	/^gsl_matrix_int_view_vector_with_tda (gsl_vector_int * v,$/;"	p	signature:(gsl_vector_int * v, const size_t n1, const size_t n2, const size_t tda)
gsl_matrix_isneg	/usr/local/gsl/include/gsl/gsl_matrix_double.h	/^int gsl_matrix_isneg (const gsl_matrix * m);$/;"	p	signature:(const gsl_matrix * m)
gsl_matrix_isnonneg	/usr/local/gsl/include/gsl/gsl_matrix_double.h	/^int gsl_matrix_isnonneg (const gsl_matrix * m);$/;"	p	signature:(const gsl_matrix * m)
gsl_matrix_isnull	/usr/local/gsl/include/gsl/gsl_matrix_double.h	/^int gsl_matrix_isnull (const gsl_matrix * m);$/;"	p	signature:(const gsl_matrix * m)
gsl_matrix_ispos	/usr/local/gsl/include/gsl/gsl_matrix_double.h	/^int gsl_matrix_ispos (const gsl_matrix * m);$/;"	p	signature:(const gsl_matrix * m)
gsl_matrix_long	/usr/local/gsl/include/gsl/gsl_matrix_long.h	/^} gsl_matrix_long;$/;"	t	typeref:struct:__anon106
gsl_matrix_long_add	/usr/local/gsl/include/gsl/gsl_matrix_long.h	/^int gsl_matrix_long_add (gsl_matrix_long * a, const gsl_matrix_long * b);$/;"	p	signature:(gsl_matrix_long * a, const gsl_matrix_long * b)
gsl_matrix_long_add_constant	/usr/local/gsl/include/gsl/gsl_matrix_long.h	/^int gsl_matrix_long_add_constant (gsl_matrix_long * a, const double x);$/;"	p	signature:(gsl_matrix_long * a, const double x)
gsl_matrix_long_add_diagonal	/usr/local/gsl/include/gsl/gsl_matrix_long.h	/^int gsl_matrix_long_add_diagonal (gsl_matrix_long * a, const double x);$/;"	p	signature:(gsl_matrix_long * a, const double x)
gsl_matrix_long_alloc	/usr/local/gsl/include/gsl/gsl_matrix_long.h	/^gsl_matrix_long_alloc (const size_t n1, const size_t n2);$/;"	p	signature:(const size_t n1, const size_t n2)
gsl_matrix_long_alloc_from_block	/usr/local/gsl/include/gsl/gsl_matrix_long.h	/^gsl_matrix_long_alloc_from_block (gsl_block_long * b, $/;"	p	signature:(gsl_block_long * b, const size_t offset, const size_t n1, const size_t n2, const size_t d2)
gsl_matrix_long_alloc_from_matrix	/usr/local/gsl/include/gsl/gsl_matrix_long.h	/^gsl_matrix_long_alloc_from_matrix (gsl_matrix_long * m,$/;"	p	signature:(gsl_matrix_long * m, const size_t k1, const size_t k2, const size_t n1, const size_t n2)
gsl_matrix_long_calloc	/usr/local/gsl/include/gsl/gsl_matrix_long.h	/^gsl_matrix_long_calloc (const size_t n1, const size_t n2);$/;"	p	signature:(const size_t n1, const size_t n2)
gsl_matrix_long_column	/usr/local/gsl/include/gsl/gsl_matrix_long.h	/^gsl_matrix_long_column (gsl_matrix_long * m, const size_t j);$/;"	p	signature:(gsl_matrix_long * m, const size_t j)
gsl_matrix_long_const_column	/usr/local/gsl/include/gsl/gsl_matrix_long.h	/^gsl_matrix_long_const_column (const gsl_matrix_long * m, $/;"	p	signature:(const gsl_matrix_long * m, const size_t j)
gsl_matrix_long_const_diagonal	/usr/local/gsl/include/gsl/gsl_matrix_long.h	/^gsl_matrix_long_const_diagonal (const gsl_matrix_long * m);$/;"	p	signature:(const gsl_matrix_long * m)
gsl_matrix_long_const_ptr	/usr/local/gsl/include/gsl/gsl_matrix_long.h	/^INLINE_DECL const long * gsl_matrix_long_const_ptr(const gsl_matrix_long * m, const size_t i, const size_t j);$/;"	p	signature:(const gsl_matrix_long * m, const size_t i, const size_t j)
gsl_matrix_long_const_ptr	/usr/local/gsl/include/gsl/gsl_matrix_long.h	/^gsl_matrix_long_const_ptr(const gsl_matrix_long * m, const size_t i, const size_t j)$/;"	f	signature:(const gsl_matrix_long * m, const size_t i, const size_t j)
gsl_matrix_long_const_row	/usr/local/gsl/include/gsl/gsl_matrix_long.h	/^gsl_matrix_long_const_row (const gsl_matrix_long * m, $/;"	p	signature:(const gsl_matrix_long * m, const size_t i)
gsl_matrix_long_const_subcolumn	/usr/local/gsl/include/gsl/gsl_matrix_long.h	/^gsl_matrix_long_const_subcolumn (const gsl_matrix_long * m, const size_t j,$/;"	p	signature:(const gsl_matrix_long * m, const size_t j, const size_t offset, const size_t n)
gsl_matrix_long_const_subdiagonal	/usr/local/gsl/include/gsl/gsl_matrix_long.h	/^gsl_matrix_long_const_subdiagonal (const gsl_matrix_long * m, $/;"	p	signature:(const gsl_matrix_long * m, const size_t k)
gsl_matrix_long_const_submatrix	/usr/local/gsl/include/gsl/gsl_matrix_long.h	/^gsl_matrix_long_const_submatrix (const gsl_matrix_long * m, $/;"	p	signature:(const gsl_matrix_long * m, const size_t i, const size_t j, const size_t n1, const size_t n2)
gsl_matrix_long_const_subrow	/usr/local/gsl/include/gsl/gsl_matrix_long.h	/^gsl_matrix_long_const_subrow (const gsl_matrix_long * m, const size_t i,$/;"	p	signature:(const gsl_matrix_long * m, const size_t i, const size_t offset, const size_t n)
gsl_matrix_long_const_superdiagonal	/usr/local/gsl/include/gsl/gsl_matrix_long.h	/^gsl_matrix_long_const_superdiagonal (const gsl_matrix_long * m, $/;"	p	signature:(const gsl_matrix_long * m, const size_t k)
gsl_matrix_long_const_view	/usr/local/gsl/include/gsl/gsl_matrix_long.h	/^typedef const _gsl_matrix_long_const_view gsl_matrix_long_const_view;$/;"	t
gsl_matrix_long_const_view_array	/usr/local/gsl/include/gsl/gsl_matrix_long.h	/^gsl_matrix_long_const_view_array (const long * base,$/;"	p	signature:(const long * base, const size_t n1, const size_t n2)
gsl_matrix_long_const_view_array_with_tda	/usr/local/gsl/include/gsl/gsl_matrix_long.h	/^gsl_matrix_long_const_view_array_with_tda (const long * base, $/;"	p	signature:(const long * base, const size_t n1, const size_t n2, const size_t tda)
gsl_matrix_long_const_view_vector	/usr/local/gsl/include/gsl/gsl_matrix_long.h	/^gsl_matrix_long_const_view_vector (const gsl_vector_long * v,$/;"	p	signature:(const gsl_vector_long * v, const size_t n1, const size_t n2)
gsl_matrix_long_const_view_vector_with_tda	/usr/local/gsl/include/gsl/gsl_matrix_long.h	/^gsl_matrix_long_const_view_vector_with_tda (const gsl_vector_long * v,$/;"	p	signature:(const gsl_vector_long * v, const size_t n1, const size_t n2, const size_t tda)
gsl_matrix_long_diagonal	/usr/local/gsl/include/gsl/gsl_matrix_long.h	/^gsl_matrix_long_diagonal (gsl_matrix_long * m);$/;"	p	signature:(gsl_matrix_long * m)
gsl_matrix_long_div_elements	/usr/local/gsl/include/gsl/gsl_matrix_long.h	/^int gsl_matrix_long_div_elements (gsl_matrix_long * a, const gsl_matrix_long * b);$/;"	p	signature:(gsl_matrix_long * a, const gsl_matrix_long * b)
gsl_matrix_long_double	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	/^} gsl_matrix_long_double;$/;"	t	typeref:struct:__anon63
gsl_matrix_long_double_add	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	/^int gsl_matrix_long_double_add (gsl_matrix_long_double * a, const gsl_matrix_long_double * b);$/;"	p	signature:(gsl_matrix_long_double * a, const gsl_matrix_long_double * b)
gsl_matrix_long_double_add_constant	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	/^int gsl_matrix_long_double_add_constant (gsl_matrix_long_double * a, const double x);$/;"	p	signature:(gsl_matrix_long_double * a, const double x)
gsl_matrix_long_double_add_diagonal	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	/^int gsl_matrix_long_double_add_diagonal (gsl_matrix_long_double * a, const double x);$/;"	p	signature:(gsl_matrix_long_double * a, const double x)
gsl_matrix_long_double_alloc	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	/^gsl_matrix_long_double_alloc (const size_t n1, const size_t n2);$/;"	p	signature:(const size_t n1, const size_t n2)
gsl_matrix_long_double_alloc_from_block	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	/^gsl_matrix_long_double_alloc_from_block (gsl_block_long_double * b, $/;"	p	signature:(gsl_block_long_double * b, const size_t offset, const size_t n1, const size_t n2, const size_t d2)
gsl_matrix_long_double_alloc_from_matrix	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	/^gsl_matrix_long_double_alloc_from_matrix (gsl_matrix_long_double * m,$/;"	p	signature:(gsl_matrix_long_double * m, const size_t k1, const size_t k2, const size_t n1, const size_t n2)
gsl_matrix_long_double_calloc	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	/^gsl_matrix_long_double_calloc (const size_t n1, const size_t n2);$/;"	p	signature:(const size_t n1, const size_t n2)
gsl_matrix_long_double_column	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	/^gsl_matrix_long_double_column (gsl_matrix_long_double * m, const size_t j);$/;"	p	signature:(gsl_matrix_long_double * m, const size_t j)
gsl_matrix_long_double_const_column	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	/^gsl_matrix_long_double_const_column (const gsl_matrix_long_double * m, $/;"	p	signature:(const gsl_matrix_long_double * m, const size_t j)
gsl_matrix_long_double_const_diagonal	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	/^gsl_matrix_long_double_const_diagonal (const gsl_matrix_long_double * m);$/;"	p	signature:(const gsl_matrix_long_double * m)
gsl_matrix_long_double_const_ptr	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	/^INLINE_DECL const long double * gsl_matrix_long_double_const_ptr(const gsl_matrix_long_double * m, const size_t i, const size_t j);$/;"	p	signature:(const gsl_matrix_long_double * m, const size_t i, const size_t j)
gsl_matrix_long_double_const_ptr	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	/^gsl_matrix_long_double_const_ptr(const gsl_matrix_long_double * m, const size_t i, const size_t j)$/;"	f	signature:(const gsl_matrix_long_double * m, const size_t i, const size_t j)
gsl_matrix_long_double_const_row	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	/^gsl_matrix_long_double_const_row (const gsl_matrix_long_double * m, $/;"	p	signature:(const gsl_matrix_long_double * m, const size_t i)
gsl_matrix_long_double_const_subcolumn	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	/^gsl_matrix_long_double_const_subcolumn (const gsl_matrix_long_double * m, const size_t j,$/;"	p	signature:(const gsl_matrix_long_double * m, const size_t j, const size_t offset, const size_t n)
gsl_matrix_long_double_const_subdiagonal	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	/^gsl_matrix_long_double_const_subdiagonal (const gsl_matrix_long_double * m, $/;"	p	signature:(const gsl_matrix_long_double * m, const size_t k)
gsl_matrix_long_double_const_submatrix	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	/^gsl_matrix_long_double_const_submatrix (const gsl_matrix_long_double * m, $/;"	p	signature:(const gsl_matrix_long_double * m, const size_t i, const size_t j, const size_t n1, const size_t n2)
gsl_matrix_long_double_const_subrow	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	/^gsl_matrix_long_double_const_subrow (const gsl_matrix_long_double * m, const size_t i,$/;"	p	signature:(const gsl_matrix_long_double * m, const size_t i, const size_t offset, const size_t n)
gsl_matrix_long_double_const_superdiagonal	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	/^gsl_matrix_long_double_const_superdiagonal (const gsl_matrix_long_double * m, $/;"	p	signature:(const gsl_matrix_long_double * m, const size_t k)
gsl_matrix_long_double_const_view	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	/^typedef const _gsl_matrix_long_double_const_view gsl_matrix_long_double_const_view;$/;"	t
gsl_matrix_long_double_const_view_array	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	/^gsl_matrix_long_double_const_view_array (const long double * base,$/;"	p	signature:(const long double * base, const size_t n1, const size_t n2)
gsl_matrix_long_double_const_view_array_with_tda	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	/^gsl_matrix_long_double_const_view_array_with_tda (const long double * base, $/;"	p	signature:(const long double * base, const size_t n1, const size_t n2, const size_t tda)
gsl_matrix_long_double_const_view_vector	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	/^gsl_matrix_long_double_const_view_vector (const gsl_vector_long_double * v,$/;"	p	signature:(const gsl_vector_long_double * v, const size_t n1, const size_t n2)
gsl_matrix_long_double_const_view_vector_with_tda	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	/^gsl_matrix_long_double_const_view_vector_with_tda (const gsl_vector_long_double * v,$/;"	p	signature:(const gsl_vector_long_double * v, const size_t n1, const size_t n2, const size_t tda)
gsl_matrix_long_double_diagonal	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	/^gsl_matrix_long_double_diagonal (gsl_matrix_long_double * m);$/;"	p	signature:(gsl_matrix_long_double * m)
gsl_matrix_long_double_div_elements	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	/^int gsl_matrix_long_double_div_elements (gsl_matrix_long_double * a, const gsl_matrix_long_double * b);$/;"	p	signature:(gsl_matrix_long_double * a, const gsl_matrix_long_double * b)
gsl_matrix_long_double_fprintf	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	/^int gsl_matrix_long_double_fprintf (FILE * stream, const gsl_matrix_long_double * m, const char * format);$/;"	p	signature:(FILE * stream, const gsl_matrix_long_double * m, const char * format)
gsl_matrix_long_double_fread	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	/^int gsl_matrix_long_double_fread (FILE * stream, gsl_matrix_long_double * m) ;$/;"	p	signature:(FILE * stream, gsl_matrix_long_double * m)
gsl_matrix_long_double_free	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	/^void gsl_matrix_long_double_free (gsl_matrix_long_double * m);$/;"	p	signature:(gsl_matrix_long_double * m)
gsl_matrix_long_double_fscanf	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	/^int gsl_matrix_long_double_fscanf (FILE * stream, gsl_matrix_long_double * m);$/;"	p	signature:(FILE * stream, gsl_matrix_long_double * m)
gsl_matrix_long_double_fwrite	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	/^int gsl_matrix_long_double_fwrite (FILE * stream, const gsl_matrix_long_double * m) ;$/;"	p	signature:(FILE * stream, const gsl_matrix_long_double * m)
gsl_matrix_long_double_get	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	/^INLINE_DECL long double   gsl_matrix_long_double_get(const gsl_matrix_long_double * m, const size_t i, const size_t j);$/;"	p	signature:(const gsl_matrix_long_double * m, const size_t i, const size_t j)
gsl_matrix_long_double_get	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	/^gsl_matrix_long_double_get(const gsl_matrix_long_double * m, const size_t i, const size_t j)$/;"	f	signature:(const gsl_matrix_long_double * m, const size_t i, const size_t j)
gsl_matrix_long_double_get_col	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	/^int gsl_matrix_long_double_get_col(gsl_vector_long_double * v, const gsl_matrix_long_double * m, const size_t j);$/;"	p	signature:(gsl_vector_long_double * v, const gsl_matrix_long_double * m, const size_t j)
gsl_matrix_long_double_get_row	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	/^int gsl_matrix_long_double_get_row(gsl_vector_long_double * v, const gsl_matrix_long_double * m, const size_t i);$/;"	p	signature:(gsl_vector_long_double * v, const gsl_matrix_long_double * m, const size_t i)
gsl_matrix_long_double_isneg	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	/^int gsl_matrix_long_double_isneg (const gsl_matrix_long_double * m);$/;"	p	signature:(const gsl_matrix_long_double * m)
gsl_matrix_long_double_isnonneg	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	/^int gsl_matrix_long_double_isnonneg (const gsl_matrix_long_double * m);$/;"	p	signature:(const gsl_matrix_long_double * m)
gsl_matrix_long_double_isnull	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	/^int gsl_matrix_long_double_isnull (const gsl_matrix_long_double * m);$/;"	p	signature:(const gsl_matrix_long_double * m)
gsl_matrix_long_double_ispos	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	/^int gsl_matrix_long_double_ispos (const gsl_matrix_long_double * m);$/;"	p	signature:(const gsl_matrix_long_double * m)
gsl_matrix_long_double_max	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	/^long double gsl_matrix_long_double_max (const gsl_matrix_long_double * m);$/;"	p	signature:(const gsl_matrix_long_double * m)
gsl_matrix_long_double_max_index	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	/^void gsl_matrix_long_double_max_index (const gsl_matrix_long_double * m, size_t * imax, size_t *jmax);$/;"	p	signature:(const gsl_matrix_long_double * m, size_t * imax, size_t *jmax)
gsl_matrix_long_double_memcpy	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	/^int gsl_matrix_long_double_memcpy(gsl_matrix_long_double * dest, const gsl_matrix_long_double * src);$/;"	p	signature:(gsl_matrix_long_double * dest, const gsl_matrix_long_double * src)
gsl_matrix_long_double_min	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	/^long double gsl_matrix_long_double_min (const gsl_matrix_long_double * m);$/;"	p	signature:(const gsl_matrix_long_double * m)
gsl_matrix_long_double_min_index	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	/^void gsl_matrix_long_double_min_index (const gsl_matrix_long_double * m, size_t * imin, size_t *jmin);$/;"	p	signature:(const gsl_matrix_long_double * m, size_t * imin, size_t *jmin)
gsl_matrix_long_double_minmax	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	/^void gsl_matrix_long_double_minmax (const gsl_matrix_long_double * m, long double * min_out, long double * max_out);$/;"	p	signature:(const gsl_matrix_long_double * m, long double * min_out, long double * max_out)
gsl_matrix_long_double_minmax_index	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	/^void gsl_matrix_long_double_minmax_index (const gsl_matrix_long_double * m, size_t * imin, size_t * jmin, size_t * imax, size_t * jmax);$/;"	p	signature:(const gsl_matrix_long_double * m, size_t * imin, size_t * jmin, size_t * imax, size_t * jmax)
gsl_matrix_long_double_mul_elements	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	/^int gsl_matrix_long_double_mul_elements (gsl_matrix_long_double * a, const gsl_matrix_long_double * b);$/;"	p	signature:(gsl_matrix_long_double * a, const gsl_matrix_long_double * b)
gsl_matrix_long_double_ptr	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	/^INLINE_DECL long double * gsl_matrix_long_double_ptr(gsl_matrix_long_double * m, const size_t i, const size_t j);$/;"	p	signature:(gsl_matrix_long_double * m, const size_t i, const size_t j)
gsl_matrix_long_double_ptr	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	/^gsl_matrix_long_double_ptr(gsl_matrix_long_double * m, const size_t i, const size_t j)$/;"	f	signature:(gsl_matrix_long_double * m, const size_t i, const size_t j)
gsl_matrix_long_double_row	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	/^gsl_matrix_long_double_row (gsl_matrix_long_double * m, const size_t i);$/;"	p	signature:(gsl_matrix_long_double * m, const size_t i)
gsl_matrix_long_double_scale	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	/^int gsl_matrix_long_double_scale (gsl_matrix_long_double * a, const double x);$/;"	p	signature:(gsl_matrix_long_double * a, const double x)
gsl_matrix_long_double_set	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	/^INLINE_DECL void    gsl_matrix_long_double_set(gsl_matrix_long_double * m, const size_t i, const size_t j, const long double x);$/;"	p	signature:(gsl_matrix_long_double * m, const size_t i, const size_t j, const long double x)
gsl_matrix_long_double_set	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	/^gsl_matrix_long_double_set(gsl_matrix_long_double * m, const size_t i, const size_t j, const long double x)$/;"	f	signature:(gsl_matrix_long_double * m, const size_t i, const size_t j, const long double x)
gsl_matrix_long_double_set_all	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	/^void gsl_matrix_long_double_set_all (gsl_matrix_long_double * m, long double x);$/;"	p	signature:(gsl_matrix_long_double * m, long double x)
gsl_matrix_long_double_set_col	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	/^int gsl_matrix_long_double_set_col(gsl_matrix_long_double * m, const size_t j, const gsl_vector_long_double * v);$/;"	p	signature:(gsl_matrix_long_double * m, const size_t j, const gsl_vector_long_double * v)
gsl_matrix_long_double_set_identity	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	/^void gsl_matrix_long_double_set_identity (gsl_matrix_long_double * m);$/;"	p	signature:(gsl_matrix_long_double * m)
gsl_matrix_long_double_set_row	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	/^int gsl_matrix_long_double_set_row(gsl_matrix_long_double * m, const size_t i, const gsl_vector_long_double * v);$/;"	p	signature:(gsl_matrix_long_double * m, const size_t i, const gsl_vector_long_double * v)
gsl_matrix_long_double_set_zero	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	/^void gsl_matrix_long_double_set_zero (gsl_matrix_long_double * m);$/;"	p	signature:(gsl_matrix_long_double * m)
gsl_matrix_long_double_sub	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	/^int gsl_matrix_long_double_sub (gsl_matrix_long_double * a, const gsl_matrix_long_double * b);$/;"	p	signature:(gsl_matrix_long_double * a, const gsl_matrix_long_double * b)
gsl_matrix_long_double_subcolumn	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	/^gsl_matrix_long_double_subcolumn (gsl_matrix_long_double * m, const size_t j,$/;"	p	signature:(gsl_matrix_long_double * m, const size_t j, const size_t offset, const size_t n)
gsl_matrix_long_double_subdiagonal	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	/^gsl_matrix_long_double_subdiagonal (gsl_matrix_long_double * m, const size_t k);$/;"	p	signature:(gsl_matrix_long_double * m, const size_t k)
gsl_matrix_long_double_submatrix	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	/^gsl_matrix_long_double_submatrix (gsl_matrix_long_double * m, $/;"	p	signature:(gsl_matrix_long_double * m, const size_t i, const size_t j, const size_t n1, const size_t n2)
gsl_matrix_long_double_subrow	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	/^gsl_matrix_long_double_subrow (gsl_matrix_long_double * m, const size_t i,$/;"	p	signature:(gsl_matrix_long_double * m, const size_t i, const size_t offset, const size_t n)
gsl_matrix_long_double_superdiagonal	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	/^gsl_matrix_long_double_superdiagonal (gsl_matrix_long_double * m, const size_t k);$/;"	p	signature:(gsl_matrix_long_double * m, const size_t k)
gsl_matrix_long_double_swap	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	/^int gsl_matrix_long_double_swap(gsl_matrix_long_double * m1, gsl_matrix_long_double * m2);$/;"	p	signature:(gsl_matrix_long_double * m1, gsl_matrix_long_double * m2)
gsl_matrix_long_double_swap_columns	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	/^int gsl_matrix_long_double_swap_columns(gsl_matrix_long_double * m, const size_t i, const size_t j);$/;"	p	signature:(gsl_matrix_long_double * m, const size_t i, const size_t j)
gsl_matrix_long_double_swap_rowcol	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	/^int gsl_matrix_long_double_swap_rowcol(gsl_matrix_long_double * m, const size_t i, const size_t j);$/;"	p	signature:(gsl_matrix_long_double * m, const size_t i, const size_t j)
gsl_matrix_long_double_swap_rows	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	/^int gsl_matrix_long_double_swap_rows(gsl_matrix_long_double * m, const size_t i, const size_t j);$/;"	p	signature:(gsl_matrix_long_double * m, const size_t i, const size_t j)
gsl_matrix_long_double_transpose	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	/^int gsl_matrix_long_double_transpose (gsl_matrix_long_double * m);$/;"	p	signature:(gsl_matrix_long_double * m)
gsl_matrix_long_double_transpose_memcpy	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	/^int gsl_matrix_long_double_transpose_memcpy (gsl_matrix_long_double * dest, const gsl_matrix_long_double * src);$/;"	p	signature:(gsl_matrix_long_double * dest, const gsl_matrix_long_double * src)
gsl_matrix_long_double_view	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	/^typedef _gsl_matrix_long_double_view gsl_matrix_long_double_view;$/;"	t
gsl_matrix_long_double_view_array	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	/^gsl_matrix_long_double_view_array (long double * base,$/;"	p	signature:(long double * base, const size_t n1, const size_t n2)
gsl_matrix_long_double_view_array_with_tda	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	/^gsl_matrix_long_double_view_array_with_tda (long double * base, $/;"	p	signature:(long double * base, const size_t n1, const size_t n2, const size_t tda)
gsl_matrix_long_double_view_vector	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	/^gsl_matrix_long_double_view_vector (gsl_vector_long_double * v,$/;"	p	signature:(gsl_vector_long_double * v, const size_t n1, const size_t n2)
gsl_matrix_long_double_view_vector_with_tda	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	/^gsl_matrix_long_double_view_vector_with_tda (gsl_vector_long_double * v,$/;"	p	signature:(gsl_vector_long_double * v, const size_t n1, const size_t n2, const size_t tda)
gsl_matrix_long_fprintf	/usr/local/gsl/include/gsl/gsl_matrix_long.h	/^int gsl_matrix_long_fprintf (FILE * stream, const gsl_matrix_long * m, const char * format);$/;"	p	signature:(FILE * stream, const gsl_matrix_long * m, const char * format)
gsl_matrix_long_fread	/usr/local/gsl/include/gsl/gsl_matrix_long.h	/^int gsl_matrix_long_fread (FILE * stream, gsl_matrix_long * m) ;$/;"	p	signature:(FILE * stream, gsl_matrix_long * m)
gsl_matrix_long_free	/usr/local/gsl/include/gsl/gsl_matrix_long.h	/^void gsl_matrix_long_free (gsl_matrix_long * m);$/;"	p	signature:(gsl_matrix_long * m)
gsl_matrix_long_fscanf	/usr/local/gsl/include/gsl/gsl_matrix_long.h	/^int gsl_matrix_long_fscanf (FILE * stream, gsl_matrix_long * m);$/;"	p	signature:(FILE * stream, gsl_matrix_long * m)
gsl_matrix_long_fwrite	/usr/local/gsl/include/gsl/gsl_matrix_long.h	/^int gsl_matrix_long_fwrite (FILE * stream, const gsl_matrix_long * m) ;$/;"	p	signature:(FILE * stream, const gsl_matrix_long * m)
gsl_matrix_long_get	/usr/local/gsl/include/gsl/gsl_matrix_long.h	/^INLINE_DECL long   gsl_matrix_long_get(const gsl_matrix_long * m, const size_t i, const size_t j);$/;"	p	signature:(const gsl_matrix_long * m, const size_t i, const size_t j)
gsl_matrix_long_get	/usr/local/gsl/include/gsl/gsl_matrix_long.h	/^gsl_matrix_long_get(const gsl_matrix_long * m, const size_t i, const size_t j)$/;"	f	signature:(const gsl_matrix_long * m, const size_t i, const size_t j)
gsl_matrix_long_get_col	/usr/local/gsl/include/gsl/gsl_matrix_long.h	/^int gsl_matrix_long_get_col(gsl_vector_long * v, const gsl_matrix_long * m, const size_t j);$/;"	p	signature:(gsl_vector_long * v, const gsl_matrix_long * m, const size_t j)
gsl_matrix_long_get_row	/usr/local/gsl/include/gsl/gsl_matrix_long.h	/^int gsl_matrix_long_get_row(gsl_vector_long * v, const gsl_matrix_long * m, const size_t i);$/;"	p	signature:(gsl_vector_long * v, const gsl_matrix_long * m, const size_t i)
gsl_matrix_long_isneg	/usr/local/gsl/include/gsl/gsl_matrix_long.h	/^int gsl_matrix_long_isneg (const gsl_matrix_long * m);$/;"	p	signature:(const gsl_matrix_long * m)
gsl_matrix_long_isnonneg	/usr/local/gsl/include/gsl/gsl_matrix_long.h	/^int gsl_matrix_long_isnonneg (const gsl_matrix_long * m);$/;"	p	signature:(const gsl_matrix_long * m)
gsl_matrix_long_isnull	/usr/local/gsl/include/gsl/gsl_matrix_long.h	/^int gsl_matrix_long_isnull (const gsl_matrix_long * m);$/;"	p	signature:(const gsl_matrix_long * m)
gsl_matrix_long_ispos	/usr/local/gsl/include/gsl/gsl_matrix_long.h	/^int gsl_matrix_long_ispos (const gsl_matrix_long * m);$/;"	p	signature:(const gsl_matrix_long * m)
gsl_matrix_long_max	/usr/local/gsl/include/gsl/gsl_matrix_long.h	/^long gsl_matrix_long_max (const gsl_matrix_long * m);$/;"	p	signature:(const gsl_matrix_long * m)
gsl_matrix_long_max_index	/usr/local/gsl/include/gsl/gsl_matrix_long.h	/^void gsl_matrix_long_max_index (const gsl_matrix_long * m, size_t * imax, size_t *jmax);$/;"	p	signature:(const gsl_matrix_long * m, size_t * imax, size_t *jmax)
gsl_matrix_long_memcpy	/usr/local/gsl/include/gsl/gsl_matrix_long.h	/^int gsl_matrix_long_memcpy(gsl_matrix_long * dest, const gsl_matrix_long * src);$/;"	p	signature:(gsl_matrix_long * dest, const gsl_matrix_long * src)
gsl_matrix_long_min	/usr/local/gsl/include/gsl/gsl_matrix_long.h	/^long gsl_matrix_long_min (const gsl_matrix_long * m);$/;"	p	signature:(const gsl_matrix_long * m)
gsl_matrix_long_min_index	/usr/local/gsl/include/gsl/gsl_matrix_long.h	/^void gsl_matrix_long_min_index (const gsl_matrix_long * m, size_t * imin, size_t *jmin);$/;"	p	signature:(const gsl_matrix_long * m, size_t * imin, size_t *jmin)
gsl_matrix_long_minmax	/usr/local/gsl/include/gsl/gsl_matrix_long.h	/^void gsl_matrix_long_minmax (const gsl_matrix_long * m, long * min_out, long * max_out);$/;"	p	signature:(const gsl_matrix_long * m, long * min_out, long * max_out)
gsl_matrix_long_minmax_index	/usr/local/gsl/include/gsl/gsl_matrix_long.h	/^void gsl_matrix_long_minmax_index (const gsl_matrix_long * m, size_t * imin, size_t * jmin, size_t * imax, size_t * jmax);$/;"	p	signature:(const gsl_matrix_long * m, size_t * imin, size_t * jmin, size_t * imax, size_t * jmax)
gsl_matrix_long_mul_elements	/usr/local/gsl/include/gsl/gsl_matrix_long.h	/^int gsl_matrix_long_mul_elements (gsl_matrix_long * a, const gsl_matrix_long * b);$/;"	p	signature:(gsl_matrix_long * a, const gsl_matrix_long * b)
gsl_matrix_long_ptr	/usr/local/gsl/include/gsl/gsl_matrix_long.h	/^INLINE_DECL long * gsl_matrix_long_ptr(gsl_matrix_long * m, const size_t i, const size_t j);$/;"	p	signature:(gsl_matrix_long * m, const size_t i, const size_t j)
gsl_matrix_long_ptr	/usr/local/gsl/include/gsl/gsl_matrix_long.h	/^gsl_matrix_long_ptr(gsl_matrix_long * m, const size_t i, const size_t j)$/;"	f	signature:(gsl_matrix_long * m, const size_t i, const size_t j)
gsl_matrix_long_row	/usr/local/gsl/include/gsl/gsl_matrix_long.h	/^gsl_matrix_long_row (gsl_matrix_long * m, const size_t i);$/;"	p	signature:(gsl_matrix_long * m, const size_t i)
gsl_matrix_long_scale	/usr/local/gsl/include/gsl/gsl_matrix_long.h	/^int gsl_matrix_long_scale (gsl_matrix_long * a, const double x);$/;"	p	signature:(gsl_matrix_long * a, const double x)
gsl_matrix_long_set	/usr/local/gsl/include/gsl/gsl_matrix_long.h	/^INLINE_DECL void    gsl_matrix_long_set(gsl_matrix_long * m, const size_t i, const size_t j, const long x);$/;"	p	signature:(gsl_matrix_long * m, const size_t i, const size_t j, const long x)
gsl_matrix_long_set	/usr/local/gsl/include/gsl/gsl_matrix_long.h	/^gsl_matrix_long_set(gsl_matrix_long * m, const size_t i, const size_t j, const long x)$/;"	f	signature:(gsl_matrix_long * m, const size_t i, const size_t j, const long x)
gsl_matrix_long_set_all	/usr/local/gsl/include/gsl/gsl_matrix_long.h	/^void gsl_matrix_long_set_all (gsl_matrix_long * m, long x);$/;"	p	signature:(gsl_matrix_long * m, long x)
gsl_matrix_long_set_col	/usr/local/gsl/include/gsl/gsl_matrix_long.h	/^int gsl_matrix_long_set_col(gsl_matrix_long * m, const size_t j, const gsl_vector_long * v);$/;"	p	signature:(gsl_matrix_long * m, const size_t j, const gsl_vector_long * v)
gsl_matrix_long_set_identity	/usr/local/gsl/include/gsl/gsl_matrix_long.h	/^void gsl_matrix_long_set_identity (gsl_matrix_long * m);$/;"	p	signature:(gsl_matrix_long * m)
gsl_matrix_long_set_row	/usr/local/gsl/include/gsl/gsl_matrix_long.h	/^int gsl_matrix_long_set_row(gsl_matrix_long * m, const size_t i, const gsl_vector_long * v);$/;"	p	signature:(gsl_matrix_long * m, const size_t i, const gsl_vector_long * v)
gsl_matrix_long_set_zero	/usr/local/gsl/include/gsl/gsl_matrix_long.h	/^void gsl_matrix_long_set_zero (gsl_matrix_long * m);$/;"	p	signature:(gsl_matrix_long * m)
gsl_matrix_long_sub	/usr/local/gsl/include/gsl/gsl_matrix_long.h	/^int gsl_matrix_long_sub (gsl_matrix_long * a, const gsl_matrix_long * b);$/;"	p	signature:(gsl_matrix_long * a, const gsl_matrix_long * b)
gsl_matrix_long_subcolumn	/usr/local/gsl/include/gsl/gsl_matrix_long.h	/^gsl_matrix_long_subcolumn (gsl_matrix_long * m, const size_t j,$/;"	p	signature:(gsl_matrix_long * m, const size_t j, const size_t offset, const size_t n)
gsl_matrix_long_subdiagonal	/usr/local/gsl/include/gsl/gsl_matrix_long.h	/^gsl_matrix_long_subdiagonal (gsl_matrix_long * m, const size_t k);$/;"	p	signature:(gsl_matrix_long * m, const size_t k)
gsl_matrix_long_submatrix	/usr/local/gsl/include/gsl/gsl_matrix_long.h	/^gsl_matrix_long_submatrix (gsl_matrix_long * m, $/;"	p	signature:(gsl_matrix_long * m, const size_t i, const size_t j, const size_t n1, const size_t n2)
gsl_matrix_long_subrow	/usr/local/gsl/include/gsl/gsl_matrix_long.h	/^gsl_matrix_long_subrow (gsl_matrix_long * m, const size_t i,$/;"	p	signature:(gsl_matrix_long * m, const size_t i, const size_t offset, const size_t n)
gsl_matrix_long_superdiagonal	/usr/local/gsl/include/gsl/gsl_matrix_long.h	/^gsl_matrix_long_superdiagonal (gsl_matrix_long * m, const size_t k);$/;"	p	signature:(gsl_matrix_long * m, const size_t k)
gsl_matrix_long_swap	/usr/local/gsl/include/gsl/gsl_matrix_long.h	/^int gsl_matrix_long_swap(gsl_matrix_long * m1, gsl_matrix_long * m2);$/;"	p	signature:(gsl_matrix_long * m1, gsl_matrix_long * m2)
gsl_matrix_long_swap_columns	/usr/local/gsl/include/gsl/gsl_matrix_long.h	/^int gsl_matrix_long_swap_columns(gsl_matrix_long * m, const size_t i, const size_t j);$/;"	p	signature:(gsl_matrix_long * m, const size_t i, const size_t j)
gsl_matrix_long_swap_rowcol	/usr/local/gsl/include/gsl/gsl_matrix_long.h	/^int gsl_matrix_long_swap_rowcol(gsl_matrix_long * m, const size_t i, const size_t j);$/;"	p	signature:(gsl_matrix_long * m, const size_t i, const size_t j)
gsl_matrix_long_swap_rows	/usr/local/gsl/include/gsl/gsl_matrix_long.h	/^int gsl_matrix_long_swap_rows(gsl_matrix_long * m, const size_t i, const size_t j);$/;"	p	signature:(gsl_matrix_long * m, const size_t i, const size_t j)
gsl_matrix_long_transpose	/usr/local/gsl/include/gsl/gsl_matrix_long.h	/^int gsl_matrix_long_transpose (gsl_matrix_long * m);$/;"	p	signature:(gsl_matrix_long * m)
gsl_matrix_long_transpose_memcpy	/usr/local/gsl/include/gsl/gsl_matrix_long.h	/^int gsl_matrix_long_transpose_memcpy (gsl_matrix_long * dest, const gsl_matrix_long * src);$/;"	p	signature:(gsl_matrix_long * dest, const gsl_matrix_long * src)
gsl_matrix_long_view	/usr/local/gsl/include/gsl/gsl_matrix_long.h	/^typedef _gsl_matrix_long_view gsl_matrix_long_view;$/;"	t
gsl_matrix_long_view_array	/usr/local/gsl/include/gsl/gsl_matrix_long.h	/^gsl_matrix_long_view_array (long * base,$/;"	p	signature:(long * base, const size_t n1, const size_t n2)
gsl_matrix_long_view_array_with_tda	/usr/local/gsl/include/gsl/gsl_matrix_long.h	/^gsl_matrix_long_view_array_with_tda (long * base, $/;"	p	signature:(long * base, const size_t n1, const size_t n2, const size_t tda)
gsl_matrix_long_view_vector	/usr/local/gsl/include/gsl/gsl_matrix_long.h	/^gsl_matrix_long_view_vector (gsl_vector_long * v,$/;"	p	signature:(gsl_vector_long * v, const size_t n1, const size_t n2)
gsl_matrix_long_view_vector_with_tda	/usr/local/gsl/include/gsl/gsl_matrix_long.h	/^gsl_matrix_long_view_vector_with_tda (gsl_vector_long * v,$/;"	p	signature:(gsl_vector_long * v, const size_t n1, const size_t n2, const size_t tda)
gsl_matrix_max	/usr/local/gsl/include/gsl/gsl_matrix_double.h	/^double gsl_matrix_max (const gsl_matrix * m);$/;"	p	signature:(const gsl_matrix * m)
gsl_matrix_max_index	/usr/local/gsl/include/gsl/gsl_matrix_double.h	/^void gsl_matrix_max_index (const gsl_matrix * m, size_t * imax, size_t *jmax);$/;"	p	signature:(const gsl_matrix * m, size_t * imax, size_t *jmax)
gsl_matrix_memcpy	/usr/local/gsl/include/gsl/gsl_matrix_double.h	/^int gsl_matrix_memcpy(gsl_matrix * dest, const gsl_matrix * src);$/;"	p	signature:(gsl_matrix * dest, const gsl_matrix * src)
gsl_matrix_min	/usr/local/gsl/include/gsl/gsl_matrix_double.h	/^double gsl_matrix_min (const gsl_matrix * m);$/;"	p	signature:(const gsl_matrix * m)
gsl_matrix_min_index	/usr/local/gsl/include/gsl/gsl_matrix_double.h	/^void gsl_matrix_min_index (const gsl_matrix * m, size_t * imin, size_t *jmin);$/;"	p	signature:(const gsl_matrix * m, size_t * imin, size_t *jmin)
gsl_matrix_minmax	/usr/local/gsl/include/gsl/gsl_matrix_double.h	/^void gsl_matrix_minmax (const gsl_matrix * m, double * min_out, double * max_out);$/;"	p	signature:(const gsl_matrix * m, double * min_out, double * max_out)
gsl_matrix_minmax_index	/usr/local/gsl/include/gsl/gsl_matrix_double.h	/^void gsl_matrix_minmax_index (const gsl_matrix * m, size_t * imin, size_t * jmin, size_t * imax, size_t * jmax);$/;"	p	signature:(const gsl_matrix * m, size_t * imin, size_t * jmin, size_t * imax, size_t * jmax)
gsl_matrix_mul_elements	/usr/local/gsl/include/gsl/gsl_matrix_double.h	/^int gsl_matrix_mul_elements (gsl_matrix * a, const gsl_matrix * b);$/;"	p	signature:(gsl_matrix * a, const gsl_matrix * b)
gsl_matrix_ptr	/usr/local/gsl/include/gsl/gsl_matrix_double.h	/^INLINE_DECL double * gsl_matrix_ptr(gsl_matrix * m, const size_t i, const size_t j);$/;"	p	signature:(gsl_matrix * m, const size_t i, const size_t j)
gsl_matrix_ptr	/usr/local/gsl/include/gsl/gsl_matrix_double.h	/^gsl_matrix_ptr(gsl_matrix * m, const size_t i, const size_t j)$/;"	f	signature:(gsl_matrix * m, const size_t i, const size_t j)
gsl_matrix_row	/usr/local/gsl/include/gsl/gsl_matrix_double.h	/^gsl_matrix_row (gsl_matrix * m, const size_t i);$/;"	p	signature:(gsl_matrix * m, const size_t i)
gsl_matrix_scale	/usr/local/gsl/include/gsl/gsl_matrix_double.h	/^int gsl_matrix_scale (gsl_matrix * a, const double x);$/;"	p	signature:(gsl_matrix * a, const double x)
gsl_matrix_set	/usr/local/gsl/include/gsl/gsl_matrix_double.h	/^INLINE_DECL void    gsl_matrix_set(gsl_matrix * m, const size_t i, const size_t j, const double x);$/;"	p	signature:(gsl_matrix * m, const size_t i, const size_t j, const double x)
gsl_matrix_set	/usr/local/gsl/include/gsl/gsl_matrix_double.h	/^gsl_matrix_set(gsl_matrix * m, const size_t i, const size_t j, const double x)$/;"	f	signature:(gsl_matrix * m, const size_t i, const size_t j, const double x)
gsl_matrix_set_all	/usr/local/gsl/include/gsl/gsl_matrix_double.h	/^void gsl_matrix_set_all (gsl_matrix * m, double x);$/;"	p	signature:(gsl_matrix * m, double x)
gsl_matrix_set_col	/usr/local/gsl/include/gsl/gsl_matrix_double.h	/^int gsl_matrix_set_col(gsl_matrix * m, const size_t j, const gsl_vector * v);$/;"	p	signature:(gsl_matrix * m, const size_t j, const gsl_vector * v)
gsl_matrix_set_identity	/usr/local/gsl/include/gsl/gsl_matrix_double.h	/^void gsl_matrix_set_identity (gsl_matrix * m);$/;"	p	signature:(gsl_matrix * m)
gsl_matrix_set_row	/usr/local/gsl/include/gsl/gsl_matrix_double.h	/^int gsl_matrix_set_row(gsl_matrix * m, const size_t i, const gsl_vector * v);$/;"	p	signature:(gsl_matrix * m, const size_t i, const gsl_vector * v)
gsl_matrix_set_zero	/usr/local/gsl/include/gsl/gsl_matrix_double.h	/^void gsl_matrix_set_zero (gsl_matrix * m);$/;"	p	signature:(gsl_matrix * m)
gsl_matrix_short	/usr/local/gsl/include/gsl/gsl_matrix_short.h	/^} gsl_matrix_short;$/;"	t	typeref:struct:__anon38
gsl_matrix_short_add	/usr/local/gsl/include/gsl/gsl_matrix_short.h	/^int gsl_matrix_short_add (gsl_matrix_short * a, const gsl_matrix_short * b);$/;"	p	signature:(gsl_matrix_short * a, const gsl_matrix_short * b)
gsl_matrix_short_add_constant	/usr/local/gsl/include/gsl/gsl_matrix_short.h	/^int gsl_matrix_short_add_constant (gsl_matrix_short * a, const double x);$/;"	p	signature:(gsl_matrix_short * a, const double x)
gsl_matrix_short_add_diagonal	/usr/local/gsl/include/gsl/gsl_matrix_short.h	/^int gsl_matrix_short_add_diagonal (gsl_matrix_short * a, const double x);$/;"	p	signature:(gsl_matrix_short * a, const double x)
gsl_matrix_short_alloc	/usr/local/gsl/include/gsl/gsl_matrix_short.h	/^gsl_matrix_short_alloc (const size_t n1, const size_t n2);$/;"	p	signature:(const size_t n1, const size_t n2)
gsl_matrix_short_alloc_from_block	/usr/local/gsl/include/gsl/gsl_matrix_short.h	/^gsl_matrix_short_alloc_from_block (gsl_block_short * b, $/;"	p	signature:(gsl_block_short * b, const size_t offset, const size_t n1, const size_t n2, const size_t d2)
gsl_matrix_short_alloc_from_matrix	/usr/local/gsl/include/gsl/gsl_matrix_short.h	/^gsl_matrix_short_alloc_from_matrix (gsl_matrix_short * m,$/;"	p	signature:(gsl_matrix_short * m, const size_t k1, const size_t k2, const size_t n1, const size_t n2)
gsl_matrix_short_calloc	/usr/local/gsl/include/gsl/gsl_matrix_short.h	/^gsl_matrix_short_calloc (const size_t n1, const size_t n2);$/;"	p	signature:(const size_t n1, const size_t n2)
gsl_matrix_short_column	/usr/local/gsl/include/gsl/gsl_matrix_short.h	/^gsl_matrix_short_column (gsl_matrix_short * m, const size_t j);$/;"	p	signature:(gsl_matrix_short * m, const size_t j)
gsl_matrix_short_const_column	/usr/local/gsl/include/gsl/gsl_matrix_short.h	/^gsl_matrix_short_const_column (const gsl_matrix_short * m, $/;"	p	signature:(const gsl_matrix_short * m, const size_t j)
gsl_matrix_short_const_diagonal	/usr/local/gsl/include/gsl/gsl_matrix_short.h	/^gsl_matrix_short_const_diagonal (const gsl_matrix_short * m);$/;"	p	signature:(const gsl_matrix_short * m)
gsl_matrix_short_const_ptr	/usr/local/gsl/include/gsl/gsl_matrix_short.h	/^INLINE_DECL const short * gsl_matrix_short_const_ptr(const gsl_matrix_short * m, const size_t i, const size_t j);$/;"	p	signature:(const gsl_matrix_short * m, const size_t i, const size_t j)
gsl_matrix_short_const_ptr	/usr/local/gsl/include/gsl/gsl_matrix_short.h	/^gsl_matrix_short_const_ptr(const gsl_matrix_short * m, const size_t i, const size_t j)$/;"	f	signature:(const gsl_matrix_short * m, const size_t i, const size_t j)
gsl_matrix_short_const_row	/usr/local/gsl/include/gsl/gsl_matrix_short.h	/^gsl_matrix_short_const_row (const gsl_matrix_short * m, $/;"	p	signature:(const gsl_matrix_short * m, const size_t i)
gsl_matrix_short_const_subcolumn	/usr/local/gsl/include/gsl/gsl_matrix_short.h	/^gsl_matrix_short_const_subcolumn (const gsl_matrix_short * m, const size_t j,$/;"	p	signature:(const gsl_matrix_short * m, const size_t j, const size_t offset, const size_t n)
gsl_matrix_short_const_subdiagonal	/usr/local/gsl/include/gsl/gsl_matrix_short.h	/^gsl_matrix_short_const_subdiagonal (const gsl_matrix_short * m, $/;"	p	signature:(const gsl_matrix_short * m, const size_t k)
gsl_matrix_short_const_submatrix	/usr/local/gsl/include/gsl/gsl_matrix_short.h	/^gsl_matrix_short_const_submatrix (const gsl_matrix_short * m, $/;"	p	signature:(const gsl_matrix_short * m, const size_t i, const size_t j, const size_t n1, const size_t n2)
gsl_matrix_short_const_subrow	/usr/local/gsl/include/gsl/gsl_matrix_short.h	/^gsl_matrix_short_const_subrow (const gsl_matrix_short * m, const size_t i,$/;"	p	signature:(const gsl_matrix_short * m, const size_t i, const size_t offset, const size_t n)
gsl_matrix_short_const_superdiagonal	/usr/local/gsl/include/gsl/gsl_matrix_short.h	/^gsl_matrix_short_const_superdiagonal (const gsl_matrix_short * m, $/;"	p	signature:(const gsl_matrix_short * m, const size_t k)
gsl_matrix_short_const_view	/usr/local/gsl/include/gsl/gsl_matrix_short.h	/^typedef const _gsl_matrix_short_const_view gsl_matrix_short_const_view;$/;"	t
gsl_matrix_short_const_view_array	/usr/local/gsl/include/gsl/gsl_matrix_short.h	/^gsl_matrix_short_const_view_array (const short * base,$/;"	p	signature:(const short * base, const size_t n1, const size_t n2)
gsl_matrix_short_const_view_array_with_tda	/usr/local/gsl/include/gsl/gsl_matrix_short.h	/^gsl_matrix_short_const_view_array_with_tda (const short * base, $/;"	p	signature:(const short * base, const size_t n1, const size_t n2, const size_t tda)
gsl_matrix_short_const_view_vector	/usr/local/gsl/include/gsl/gsl_matrix_short.h	/^gsl_matrix_short_const_view_vector (const gsl_vector_short * v,$/;"	p	signature:(const gsl_vector_short * v, const size_t n1, const size_t n2)
gsl_matrix_short_const_view_vector_with_tda	/usr/local/gsl/include/gsl/gsl_matrix_short.h	/^gsl_matrix_short_const_view_vector_with_tda (const gsl_vector_short * v,$/;"	p	signature:(const gsl_vector_short * v, const size_t n1, const size_t n2, const size_t tda)
gsl_matrix_short_diagonal	/usr/local/gsl/include/gsl/gsl_matrix_short.h	/^gsl_matrix_short_diagonal (gsl_matrix_short * m);$/;"	p	signature:(gsl_matrix_short * m)
gsl_matrix_short_div_elements	/usr/local/gsl/include/gsl/gsl_matrix_short.h	/^int gsl_matrix_short_div_elements (gsl_matrix_short * a, const gsl_matrix_short * b);$/;"	p	signature:(gsl_matrix_short * a, const gsl_matrix_short * b)
gsl_matrix_short_fprintf	/usr/local/gsl/include/gsl/gsl_matrix_short.h	/^int gsl_matrix_short_fprintf (FILE * stream, const gsl_matrix_short * m, const char * format);$/;"	p	signature:(FILE * stream, const gsl_matrix_short * m, const char * format)
gsl_matrix_short_fread	/usr/local/gsl/include/gsl/gsl_matrix_short.h	/^int gsl_matrix_short_fread (FILE * stream, gsl_matrix_short * m) ;$/;"	p	signature:(FILE * stream, gsl_matrix_short * m)
gsl_matrix_short_free	/usr/local/gsl/include/gsl/gsl_matrix_short.h	/^void gsl_matrix_short_free (gsl_matrix_short * m);$/;"	p	signature:(gsl_matrix_short * m)
gsl_matrix_short_fscanf	/usr/local/gsl/include/gsl/gsl_matrix_short.h	/^int gsl_matrix_short_fscanf (FILE * stream, gsl_matrix_short * m);$/;"	p	signature:(FILE * stream, gsl_matrix_short * m)
gsl_matrix_short_fwrite	/usr/local/gsl/include/gsl/gsl_matrix_short.h	/^int gsl_matrix_short_fwrite (FILE * stream, const gsl_matrix_short * m) ;$/;"	p	signature:(FILE * stream, const gsl_matrix_short * m)
gsl_matrix_short_get	/usr/local/gsl/include/gsl/gsl_matrix_short.h	/^INLINE_DECL short   gsl_matrix_short_get(const gsl_matrix_short * m, const size_t i, const size_t j);$/;"	p	signature:(const gsl_matrix_short * m, const size_t i, const size_t j)
gsl_matrix_short_get	/usr/local/gsl/include/gsl/gsl_matrix_short.h	/^gsl_matrix_short_get(const gsl_matrix_short * m, const size_t i, const size_t j)$/;"	f	signature:(const gsl_matrix_short * m, const size_t i, const size_t j)
gsl_matrix_short_get_col	/usr/local/gsl/include/gsl/gsl_matrix_short.h	/^int gsl_matrix_short_get_col(gsl_vector_short * v, const gsl_matrix_short * m, const size_t j);$/;"	p	signature:(gsl_vector_short * v, const gsl_matrix_short * m, const size_t j)
gsl_matrix_short_get_row	/usr/local/gsl/include/gsl/gsl_matrix_short.h	/^int gsl_matrix_short_get_row(gsl_vector_short * v, const gsl_matrix_short * m, const size_t i);$/;"	p	signature:(gsl_vector_short * v, const gsl_matrix_short * m, const size_t i)
gsl_matrix_short_isneg	/usr/local/gsl/include/gsl/gsl_matrix_short.h	/^int gsl_matrix_short_isneg (const gsl_matrix_short * m);$/;"	p	signature:(const gsl_matrix_short * m)
gsl_matrix_short_isnonneg	/usr/local/gsl/include/gsl/gsl_matrix_short.h	/^int gsl_matrix_short_isnonneg (const gsl_matrix_short * m);$/;"	p	signature:(const gsl_matrix_short * m)
gsl_matrix_short_isnull	/usr/local/gsl/include/gsl/gsl_matrix_short.h	/^int gsl_matrix_short_isnull (const gsl_matrix_short * m);$/;"	p	signature:(const gsl_matrix_short * m)
gsl_matrix_short_ispos	/usr/local/gsl/include/gsl/gsl_matrix_short.h	/^int gsl_matrix_short_ispos (const gsl_matrix_short * m);$/;"	p	signature:(const gsl_matrix_short * m)
gsl_matrix_short_max	/usr/local/gsl/include/gsl/gsl_matrix_short.h	/^short gsl_matrix_short_max (const gsl_matrix_short * m);$/;"	p	signature:(const gsl_matrix_short * m)
gsl_matrix_short_max_index	/usr/local/gsl/include/gsl/gsl_matrix_short.h	/^void gsl_matrix_short_max_index (const gsl_matrix_short * m, size_t * imax, size_t *jmax);$/;"	p	signature:(const gsl_matrix_short * m, size_t * imax, size_t *jmax)
gsl_matrix_short_memcpy	/usr/local/gsl/include/gsl/gsl_matrix_short.h	/^int gsl_matrix_short_memcpy(gsl_matrix_short * dest, const gsl_matrix_short * src);$/;"	p	signature:(gsl_matrix_short * dest, const gsl_matrix_short * src)
gsl_matrix_short_min	/usr/local/gsl/include/gsl/gsl_matrix_short.h	/^short gsl_matrix_short_min (const gsl_matrix_short * m);$/;"	p	signature:(const gsl_matrix_short * m)
gsl_matrix_short_min_index	/usr/local/gsl/include/gsl/gsl_matrix_short.h	/^void gsl_matrix_short_min_index (const gsl_matrix_short * m, size_t * imin, size_t *jmin);$/;"	p	signature:(const gsl_matrix_short * m, size_t * imin, size_t *jmin)
gsl_matrix_short_minmax	/usr/local/gsl/include/gsl/gsl_matrix_short.h	/^void gsl_matrix_short_minmax (const gsl_matrix_short * m, short * min_out, short * max_out);$/;"	p	signature:(const gsl_matrix_short * m, short * min_out, short * max_out)
gsl_matrix_short_minmax_index	/usr/local/gsl/include/gsl/gsl_matrix_short.h	/^void gsl_matrix_short_minmax_index (const gsl_matrix_short * m, size_t * imin, size_t * jmin, size_t * imax, size_t * jmax);$/;"	p	signature:(const gsl_matrix_short * m, size_t * imin, size_t * jmin, size_t * imax, size_t * jmax)
gsl_matrix_short_mul_elements	/usr/local/gsl/include/gsl/gsl_matrix_short.h	/^int gsl_matrix_short_mul_elements (gsl_matrix_short * a, const gsl_matrix_short * b);$/;"	p	signature:(gsl_matrix_short * a, const gsl_matrix_short * b)
gsl_matrix_short_ptr	/usr/local/gsl/include/gsl/gsl_matrix_short.h	/^INLINE_DECL short * gsl_matrix_short_ptr(gsl_matrix_short * m, const size_t i, const size_t j);$/;"	p	signature:(gsl_matrix_short * m, const size_t i, const size_t j)
gsl_matrix_short_ptr	/usr/local/gsl/include/gsl/gsl_matrix_short.h	/^gsl_matrix_short_ptr(gsl_matrix_short * m, const size_t i, const size_t j)$/;"	f	signature:(gsl_matrix_short * m, const size_t i, const size_t j)
gsl_matrix_short_row	/usr/local/gsl/include/gsl/gsl_matrix_short.h	/^gsl_matrix_short_row (gsl_matrix_short * m, const size_t i);$/;"	p	signature:(gsl_matrix_short * m, const size_t i)
gsl_matrix_short_scale	/usr/local/gsl/include/gsl/gsl_matrix_short.h	/^int gsl_matrix_short_scale (gsl_matrix_short * a, const double x);$/;"	p	signature:(gsl_matrix_short * a, const double x)
gsl_matrix_short_set	/usr/local/gsl/include/gsl/gsl_matrix_short.h	/^INLINE_DECL void    gsl_matrix_short_set(gsl_matrix_short * m, const size_t i, const size_t j, const short x);$/;"	p	signature:(gsl_matrix_short * m, const size_t i, const size_t j, const short x)
gsl_matrix_short_set	/usr/local/gsl/include/gsl/gsl_matrix_short.h	/^gsl_matrix_short_set(gsl_matrix_short * m, const size_t i, const size_t j, const short x)$/;"	f	signature:(gsl_matrix_short * m, const size_t i, const size_t j, const short x)
gsl_matrix_short_set_all	/usr/local/gsl/include/gsl/gsl_matrix_short.h	/^void gsl_matrix_short_set_all (gsl_matrix_short * m, short x);$/;"	p	signature:(gsl_matrix_short * m, short x)
gsl_matrix_short_set_col	/usr/local/gsl/include/gsl/gsl_matrix_short.h	/^int gsl_matrix_short_set_col(gsl_matrix_short * m, const size_t j, const gsl_vector_short * v);$/;"	p	signature:(gsl_matrix_short * m, const size_t j, const gsl_vector_short * v)
gsl_matrix_short_set_identity	/usr/local/gsl/include/gsl/gsl_matrix_short.h	/^void gsl_matrix_short_set_identity (gsl_matrix_short * m);$/;"	p	signature:(gsl_matrix_short * m)
gsl_matrix_short_set_row	/usr/local/gsl/include/gsl/gsl_matrix_short.h	/^int gsl_matrix_short_set_row(gsl_matrix_short * m, const size_t i, const gsl_vector_short * v);$/;"	p	signature:(gsl_matrix_short * m, const size_t i, const gsl_vector_short * v)
gsl_matrix_short_set_zero	/usr/local/gsl/include/gsl/gsl_matrix_short.h	/^void gsl_matrix_short_set_zero (gsl_matrix_short * m);$/;"	p	signature:(gsl_matrix_short * m)
gsl_matrix_short_sub	/usr/local/gsl/include/gsl/gsl_matrix_short.h	/^int gsl_matrix_short_sub (gsl_matrix_short * a, const gsl_matrix_short * b);$/;"	p	signature:(gsl_matrix_short * a, const gsl_matrix_short * b)
gsl_matrix_short_subcolumn	/usr/local/gsl/include/gsl/gsl_matrix_short.h	/^gsl_matrix_short_subcolumn (gsl_matrix_short * m, const size_t j,$/;"	p	signature:(gsl_matrix_short * m, const size_t j, const size_t offset, const size_t n)
gsl_matrix_short_subdiagonal	/usr/local/gsl/include/gsl/gsl_matrix_short.h	/^gsl_matrix_short_subdiagonal (gsl_matrix_short * m, const size_t k);$/;"	p	signature:(gsl_matrix_short * m, const size_t k)
gsl_matrix_short_submatrix	/usr/local/gsl/include/gsl/gsl_matrix_short.h	/^gsl_matrix_short_submatrix (gsl_matrix_short * m, $/;"	p	signature:(gsl_matrix_short * m, const size_t i, const size_t j, const size_t n1, const size_t n2)
gsl_matrix_short_subrow	/usr/local/gsl/include/gsl/gsl_matrix_short.h	/^gsl_matrix_short_subrow (gsl_matrix_short * m, const size_t i,$/;"	p	signature:(gsl_matrix_short * m, const size_t i, const size_t offset, const size_t n)
gsl_matrix_short_superdiagonal	/usr/local/gsl/include/gsl/gsl_matrix_short.h	/^gsl_matrix_short_superdiagonal (gsl_matrix_short * m, const size_t k);$/;"	p	signature:(gsl_matrix_short * m, const size_t k)
gsl_matrix_short_swap	/usr/local/gsl/include/gsl/gsl_matrix_short.h	/^int gsl_matrix_short_swap(gsl_matrix_short * m1, gsl_matrix_short * m2);$/;"	p	signature:(gsl_matrix_short * m1, gsl_matrix_short * m2)
gsl_matrix_short_swap_columns	/usr/local/gsl/include/gsl/gsl_matrix_short.h	/^int gsl_matrix_short_swap_columns(gsl_matrix_short * m, const size_t i, const size_t j);$/;"	p	signature:(gsl_matrix_short * m, const size_t i, const size_t j)
gsl_matrix_short_swap_rowcol	/usr/local/gsl/include/gsl/gsl_matrix_short.h	/^int gsl_matrix_short_swap_rowcol(gsl_matrix_short * m, const size_t i, const size_t j);$/;"	p	signature:(gsl_matrix_short * m, const size_t i, const size_t j)
gsl_matrix_short_swap_rows	/usr/local/gsl/include/gsl/gsl_matrix_short.h	/^int gsl_matrix_short_swap_rows(gsl_matrix_short * m, const size_t i, const size_t j);$/;"	p	signature:(gsl_matrix_short * m, const size_t i, const size_t j)
gsl_matrix_short_transpose	/usr/local/gsl/include/gsl/gsl_matrix_short.h	/^int gsl_matrix_short_transpose (gsl_matrix_short * m);$/;"	p	signature:(gsl_matrix_short * m)
gsl_matrix_short_transpose_memcpy	/usr/local/gsl/include/gsl/gsl_matrix_short.h	/^int gsl_matrix_short_transpose_memcpy (gsl_matrix_short * dest, const gsl_matrix_short * src);$/;"	p	signature:(gsl_matrix_short * dest, const gsl_matrix_short * src)
gsl_matrix_short_view	/usr/local/gsl/include/gsl/gsl_matrix_short.h	/^typedef _gsl_matrix_short_view gsl_matrix_short_view;$/;"	t
gsl_matrix_short_view_array	/usr/local/gsl/include/gsl/gsl_matrix_short.h	/^gsl_matrix_short_view_array (short * base,$/;"	p	signature:(short * base, const size_t n1, const size_t n2)
gsl_matrix_short_view_array_with_tda	/usr/local/gsl/include/gsl/gsl_matrix_short.h	/^gsl_matrix_short_view_array_with_tda (short * base, $/;"	p	signature:(short * base, const size_t n1, const size_t n2, const size_t tda)
gsl_matrix_short_view_vector	/usr/local/gsl/include/gsl/gsl_matrix_short.h	/^gsl_matrix_short_view_vector (gsl_vector_short * v,$/;"	p	signature:(gsl_vector_short * v, const size_t n1, const size_t n2)
gsl_matrix_short_view_vector_with_tda	/usr/local/gsl/include/gsl/gsl_matrix_short.h	/^gsl_matrix_short_view_vector_with_tda (gsl_vector_short * v,$/;"	p	signature:(gsl_vector_short * v, const size_t n1, const size_t n2, const size_t tda)
gsl_matrix_sub	/usr/local/gsl/include/gsl/gsl_matrix_double.h	/^int gsl_matrix_sub (gsl_matrix * a, const gsl_matrix * b);$/;"	p	signature:(gsl_matrix * a, const gsl_matrix * b)
gsl_matrix_subcolumn	/usr/local/gsl/include/gsl/gsl_matrix_double.h	/^gsl_matrix_subcolumn (gsl_matrix * m, const size_t j,$/;"	p	signature:(gsl_matrix * m, const size_t j, const size_t offset, const size_t n)
gsl_matrix_subdiagonal	/usr/local/gsl/include/gsl/gsl_matrix_double.h	/^gsl_matrix_subdiagonal (gsl_matrix * m, const size_t k);$/;"	p	signature:(gsl_matrix * m, const size_t k)
gsl_matrix_submatrix	/usr/local/gsl/include/gsl/gsl_matrix_double.h	/^gsl_matrix_submatrix (gsl_matrix * m, $/;"	p	signature:(gsl_matrix * m, const size_t i, const size_t j, const size_t n1, const size_t n2)
gsl_matrix_subrow	/usr/local/gsl/include/gsl/gsl_matrix_double.h	/^gsl_matrix_subrow (gsl_matrix * m, const size_t i,$/;"	p	signature:(gsl_matrix * m, const size_t i, const size_t offset, const size_t n)
gsl_matrix_superdiagonal	/usr/local/gsl/include/gsl/gsl_matrix_double.h	/^gsl_matrix_superdiagonal (gsl_matrix * m, const size_t k);$/;"	p	signature:(gsl_matrix * m, const size_t k)
gsl_matrix_swap	/usr/local/gsl/include/gsl/gsl_matrix_double.h	/^int gsl_matrix_swap(gsl_matrix * m1, gsl_matrix * m2);$/;"	p	signature:(gsl_matrix * m1, gsl_matrix * m2)
gsl_matrix_swap_columns	/usr/local/gsl/include/gsl/gsl_matrix_double.h	/^int gsl_matrix_swap_columns(gsl_matrix * m, const size_t i, const size_t j);$/;"	p	signature:(gsl_matrix * m, const size_t i, const size_t j)
gsl_matrix_swap_rowcol	/usr/local/gsl/include/gsl/gsl_matrix_double.h	/^int gsl_matrix_swap_rowcol(gsl_matrix * m, const size_t i, const size_t j);$/;"	p	signature:(gsl_matrix * m, const size_t i, const size_t j)
gsl_matrix_swap_rows	/usr/local/gsl/include/gsl/gsl_matrix_double.h	/^int gsl_matrix_swap_rows(gsl_matrix * m, const size_t i, const size_t j);$/;"	p	signature:(gsl_matrix * m, const size_t i, const size_t j)
gsl_matrix_transpose	/usr/local/gsl/include/gsl/gsl_matrix_double.h	/^int gsl_matrix_transpose (gsl_matrix * m);$/;"	p	signature:(gsl_matrix * m)
gsl_matrix_transpose_memcpy	/usr/local/gsl/include/gsl/gsl_matrix_double.h	/^int gsl_matrix_transpose_memcpy (gsl_matrix * dest, const gsl_matrix * src);$/;"	p	signature:(gsl_matrix * dest, const gsl_matrix * src)
gsl_matrix_uchar	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	/^} gsl_matrix_uchar;$/;"	t	typeref:struct:__anon140
gsl_matrix_uchar_add	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	/^int gsl_matrix_uchar_add (gsl_matrix_uchar * a, const gsl_matrix_uchar * b);$/;"	p	signature:(gsl_matrix_uchar * a, const gsl_matrix_uchar * b)
gsl_matrix_uchar_add_constant	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	/^int gsl_matrix_uchar_add_constant (gsl_matrix_uchar * a, const double x);$/;"	p	signature:(gsl_matrix_uchar * a, const double x)
gsl_matrix_uchar_add_diagonal	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	/^int gsl_matrix_uchar_add_diagonal (gsl_matrix_uchar * a, const double x);$/;"	p	signature:(gsl_matrix_uchar * a, const double x)
gsl_matrix_uchar_alloc	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	/^gsl_matrix_uchar_alloc (const size_t n1, const size_t n2);$/;"	p	signature:(const size_t n1, const size_t n2)
gsl_matrix_uchar_alloc_from_block	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	/^gsl_matrix_uchar_alloc_from_block (gsl_block_uchar * b, $/;"	p	signature:(gsl_block_uchar * b, const size_t offset, const size_t n1, const size_t n2, const size_t d2)
gsl_matrix_uchar_alloc_from_matrix	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	/^gsl_matrix_uchar_alloc_from_matrix (gsl_matrix_uchar * m,$/;"	p	signature:(gsl_matrix_uchar * m, const size_t k1, const size_t k2, const size_t n1, const size_t n2)
gsl_matrix_uchar_calloc	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	/^gsl_matrix_uchar_calloc (const size_t n1, const size_t n2);$/;"	p	signature:(const size_t n1, const size_t n2)
gsl_matrix_uchar_column	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	/^gsl_matrix_uchar_column (gsl_matrix_uchar * m, const size_t j);$/;"	p	signature:(gsl_matrix_uchar * m, const size_t j)
gsl_matrix_uchar_const_column	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	/^gsl_matrix_uchar_const_column (const gsl_matrix_uchar * m, $/;"	p	signature:(const gsl_matrix_uchar * m, const size_t j)
gsl_matrix_uchar_const_diagonal	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	/^gsl_matrix_uchar_const_diagonal (const gsl_matrix_uchar * m);$/;"	p	signature:(const gsl_matrix_uchar * m)
gsl_matrix_uchar_const_ptr	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	/^INLINE_DECL const unsigned char * gsl_matrix_uchar_const_ptr(const gsl_matrix_uchar * m, const size_t i, const size_t j);$/;"	p	signature:(const gsl_matrix_uchar * m, const size_t i, const size_t j)
gsl_matrix_uchar_const_ptr	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	/^gsl_matrix_uchar_const_ptr(const gsl_matrix_uchar * m, const size_t i, const size_t j)$/;"	f	signature:(const gsl_matrix_uchar * m, const size_t i, const size_t j)
gsl_matrix_uchar_const_row	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	/^gsl_matrix_uchar_const_row (const gsl_matrix_uchar * m, $/;"	p	signature:(const gsl_matrix_uchar * m, const size_t i)
gsl_matrix_uchar_const_subcolumn	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	/^gsl_matrix_uchar_const_subcolumn (const gsl_matrix_uchar * m, const size_t j,$/;"	p	signature:(const gsl_matrix_uchar * m, const size_t j, const size_t offset, const size_t n)
gsl_matrix_uchar_const_subdiagonal	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	/^gsl_matrix_uchar_const_subdiagonal (const gsl_matrix_uchar * m, $/;"	p	signature:(const gsl_matrix_uchar * m, const size_t k)
gsl_matrix_uchar_const_submatrix	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	/^gsl_matrix_uchar_const_submatrix (const gsl_matrix_uchar * m, $/;"	p	signature:(const gsl_matrix_uchar * m, const size_t i, const size_t j, const size_t n1, const size_t n2)
gsl_matrix_uchar_const_subrow	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	/^gsl_matrix_uchar_const_subrow (const gsl_matrix_uchar * m, const size_t i,$/;"	p	signature:(const gsl_matrix_uchar * m, const size_t i, const size_t offset, const size_t n)
gsl_matrix_uchar_const_superdiagonal	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	/^gsl_matrix_uchar_const_superdiagonal (const gsl_matrix_uchar * m, $/;"	p	signature:(const gsl_matrix_uchar * m, const size_t k)
gsl_matrix_uchar_const_view	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	/^typedef const _gsl_matrix_uchar_const_view gsl_matrix_uchar_const_view;$/;"	t
gsl_matrix_uchar_const_view_array	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	/^gsl_matrix_uchar_const_view_array (const unsigned char * base,$/;"	p	signature:(const unsigned char * base, const size_t n1, const size_t n2)
gsl_matrix_uchar_const_view_array_with_tda	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	/^gsl_matrix_uchar_const_view_array_with_tda (const unsigned char * base, $/;"	p	signature:(const unsigned char * base, const size_t n1, const size_t n2, const size_t tda)
gsl_matrix_uchar_const_view_vector	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	/^gsl_matrix_uchar_const_view_vector (const gsl_vector_uchar * v,$/;"	p	signature:(const gsl_vector_uchar * v, const size_t n1, const size_t n2)
gsl_matrix_uchar_const_view_vector_with_tda	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	/^gsl_matrix_uchar_const_view_vector_with_tda (const gsl_vector_uchar * v,$/;"	p	signature:(const gsl_vector_uchar * v, const size_t n1, const size_t n2, const size_t tda)
gsl_matrix_uchar_diagonal	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	/^gsl_matrix_uchar_diagonal (gsl_matrix_uchar * m);$/;"	p	signature:(gsl_matrix_uchar * m)
gsl_matrix_uchar_div_elements	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	/^int gsl_matrix_uchar_div_elements (gsl_matrix_uchar * a, const gsl_matrix_uchar * b);$/;"	p	signature:(gsl_matrix_uchar * a, const gsl_matrix_uchar * b)
gsl_matrix_uchar_fprintf	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	/^int gsl_matrix_uchar_fprintf (FILE * stream, const gsl_matrix_uchar * m, const char * format);$/;"	p	signature:(FILE * stream, const gsl_matrix_uchar * m, const char * format)
gsl_matrix_uchar_fread	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	/^int gsl_matrix_uchar_fread (FILE * stream, gsl_matrix_uchar * m) ;$/;"	p	signature:(FILE * stream, gsl_matrix_uchar * m)
gsl_matrix_uchar_free	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	/^void gsl_matrix_uchar_free (gsl_matrix_uchar * m);$/;"	p	signature:(gsl_matrix_uchar * m)
gsl_matrix_uchar_fscanf	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	/^int gsl_matrix_uchar_fscanf (FILE * stream, gsl_matrix_uchar * m);$/;"	p	signature:(FILE * stream, gsl_matrix_uchar * m)
gsl_matrix_uchar_fwrite	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	/^int gsl_matrix_uchar_fwrite (FILE * stream, const gsl_matrix_uchar * m) ;$/;"	p	signature:(FILE * stream, const gsl_matrix_uchar * m)
gsl_matrix_uchar_get	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	/^INLINE_DECL unsigned char   gsl_matrix_uchar_get(const gsl_matrix_uchar * m, const size_t i, const size_t j);$/;"	p	signature:(const gsl_matrix_uchar * m, const size_t i, const size_t j)
gsl_matrix_uchar_get	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	/^gsl_matrix_uchar_get(const gsl_matrix_uchar * m, const size_t i, const size_t j)$/;"	f	signature:(const gsl_matrix_uchar * m, const size_t i, const size_t j)
gsl_matrix_uchar_get_col	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	/^int gsl_matrix_uchar_get_col(gsl_vector_uchar * v, const gsl_matrix_uchar * m, const size_t j);$/;"	p	signature:(gsl_vector_uchar * v, const gsl_matrix_uchar * m, const size_t j)
gsl_matrix_uchar_get_row	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	/^int gsl_matrix_uchar_get_row(gsl_vector_uchar * v, const gsl_matrix_uchar * m, const size_t i);$/;"	p	signature:(gsl_vector_uchar * v, const gsl_matrix_uchar * m, const size_t i)
gsl_matrix_uchar_isneg	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	/^int gsl_matrix_uchar_isneg (const gsl_matrix_uchar * m);$/;"	p	signature:(const gsl_matrix_uchar * m)
gsl_matrix_uchar_isnonneg	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	/^int gsl_matrix_uchar_isnonneg (const gsl_matrix_uchar * m);$/;"	p	signature:(const gsl_matrix_uchar * m)
gsl_matrix_uchar_isnull	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	/^int gsl_matrix_uchar_isnull (const gsl_matrix_uchar * m);$/;"	p	signature:(const gsl_matrix_uchar * m)
gsl_matrix_uchar_ispos	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	/^int gsl_matrix_uchar_ispos (const gsl_matrix_uchar * m);$/;"	p	signature:(const gsl_matrix_uchar * m)
gsl_matrix_uchar_max	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	/^unsigned char gsl_matrix_uchar_max (const gsl_matrix_uchar * m);$/;"	p	signature:(const gsl_matrix_uchar * m)
gsl_matrix_uchar_max_index	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	/^void gsl_matrix_uchar_max_index (const gsl_matrix_uchar * m, size_t * imax, size_t *jmax);$/;"	p	signature:(const gsl_matrix_uchar * m, size_t * imax, size_t *jmax)
gsl_matrix_uchar_memcpy	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	/^int gsl_matrix_uchar_memcpy(gsl_matrix_uchar * dest, const gsl_matrix_uchar * src);$/;"	p	signature:(gsl_matrix_uchar * dest, const gsl_matrix_uchar * src)
gsl_matrix_uchar_min	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	/^unsigned char gsl_matrix_uchar_min (const gsl_matrix_uchar * m);$/;"	p	signature:(const gsl_matrix_uchar * m)
gsl_matrix_uchar_min_index	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	/^void gsl_matrix_uchar_min_index (const gsl_matrix_uchar * m, size_t * imin, size_t *jmin);$/;"	p	signature:(const gsl_matrix_uchar * m, size_t * imin, size_t *jmin)
gsl_matrix_uchar_minmax	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	/^void gsl_matrix_uchar_minmax (const gsl_matrix_uchar * m, unsigned char * min_out, unsigned char * max_out);$/;"	p	signature:(const gsl_matrix_uchar * m, unsigned char * min_out, unsigned char * max_out)
gsl_matrix_uchar_minmax_index	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	/^void gsl_matrix_uchar_minmax_index (const gsl_matrix_uchar * m, size_t * imin, size_t * jmin, size_t * imax, size_t * jmax);$/;"	p	signature:(const gsl_matrix_uchar * m, size_t * imin, size_t * jmin, size_t * imax, size_t * jmax)
gsl_matrix_uchar_mul_elements	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	/^int gsl_matrix_uchar_mul_elements (gsl_matrix_uchar * a, const gsl_matrix_uchar * b);$/;"	p	signature:(gsl_matrix_uchar * a, const gsl_matrix_uchar * b)
gsl_matrix_uchar_ptr	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	/^INLINE_DECL unsigned char * gsl_matrix_uchar_ptr(gsl_matrix_uchar * m, const size_t i, const size_t j);$/;"	p	signature:(gsl_matrix_uchar * m, const size_t i, const size_t j)
gsl_matrix_uchar_ptr	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	/^gsl_matrix_uchar_ptr(gsl_matrix_uchar * m, const size_t i, const size_t j)$/;"	f	signature:(gsl_matrix_uchar * m, const size_t i, const size_t j)
gsl_matrix_uchar_row	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	/^gsl_matrix_uchar_row (gsl_matrix_uchar * m, const size_t i);$/;"	p	signature:(gsl_matrix_uchar * m, const size_t i)
gsl_matrix_uchar_scale	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	/^int gsl_matrix_uchar_scale (gsl_matrix_uchar * a, const double x);$/;"	p	signature:(gsl_matrix_uchar * a, const double x)
gsl_matrix_uchar_set	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	/^INLINE_DECL void    gsl_matrix_uchar_set(gsl_matrix_uchar * m, const size_t i, const size_t j, const unsigned char x);$/;"	p	signature:(gsl_matrix_uchar * m, const size_t i, const size_t j, const unsigned char x)
gsl_matrix_uchar_set	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	/^gsl_matrix_uchar_set(gsl_matrix_uchar * m, const size_t i, const size_t j, const unsigned char x)$/;"	f	signature:(gsl_matrix_uchar * m, const size_t i, const size_t j, const unsigned char x)
gsl_matrix_uchar_set_all	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	/^void gsl_matrix_uchar_set_all (gsl_matrix_uchar * m, unsigned char x);$/;"	p	signature:(gsl_matrix_uchar * m, unsigned char x)
gsl_matrix_uchar_set_col	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	/^int gsl_matrix_uchar_set_col(gsl_matrix_uchar * m, const size_t j, const gsl_vector_uchar * v);$/;"	p	signature:(gsl_matrix_uchar * m, const size_t j, const gsl_vector_uchar * v)
gsl_matrix_uchar_set_identity	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	/^void gsl_matrix_uchar_set_identity (gsl_matrix_uchar * m);$/;"	p	signature:(gsl_matrix_uchar * m)
gsl_matrix_uchar_set_row	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	/^int gsl_matrix_uchar_set_row(gsl_matrix_uchar * m, const size_t i, const gsl_vector_uchar * v);$/;"	p	signature:(gsl_matrix_uchar * m, const size_t i, const gsl_vector_uchar * v)
gsl_matrix_uchar_set_zero	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	/^void gsl_matrix_uchar_set_zero (gsl_matrix_uchar * m);$/;"	p	signature:(gsl_matrix_uchar * m)
gsl_matrix_uchar_sub	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	/^int gsl_matrix_uchar_sub (gsl_matrix_uchar * a, const gsl_matrix_uchar * b);$/;"	p	signature:(gsl_matrix_uchar * a, const gsl_matrix_uchar * b)
gsl_matrix_uchar_subcolumn	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	/^gsl_matrix_uchar_subcolumn (gsl_matrix_uchar * m, const size_t j,$/;"	p	signature:(gsl_matrix_uchar * m, const size_t j, const size_t offset, const size_t n)
gsl_matrix_uchar_subdiagonal	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	/^gsl_matrix_uchar_subdiagonal (gsl_matrix_uchar * m, const size_t k);$/;"	p	signature:(gsl_matrix_uchar * m, const size_t k)
gsl_matrix_uchar_submatrix	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	/^gsl_matrix_uchar_submatrix (gsl_matrix_uchar * m, $/;"	p	signature:(gsl_matrix_uchar * m, const size_t i, const size_t j, const size_t n1, const size_t n2)
gsl_matrix_uchar_subrow	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	/^gsl_matrix_uchar_subrow (gsl_matrix_uchar * m, const size_t i,$/;"	p	signature:(gsl_matrix_uchar * m, const size_t i, const size_t offset, const size_t n)
gsl_matrix_uchar_superdiagonal	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	/^gsl_matrix_uchar_superdiagonal (gsl_matrix_uchar * m, const size_t k);$/;"	p	signature:(gsl_matrix_uchar * m, const size_t k)
gsl_matrix_uchar_swap	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	/^int gsl_matrix_uchar_swap(gsl_matrix_uchar * m1, gsl_matrix_uchar * m2);$/;"	p	signature:(gsl_matrix_uchar * m1, gsl_matrix_uchar * m2)
gsl_matrix_uchar_swap_columns	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	/^int gsl_matrix_uchar_swap_columns(gsl_matrix_uchar * m, const size_t i, const size_t j);$/;"	p	signature:(gsl_matrix_uchar * m, const size_t i, const size_t j)
gsl_matrix_uchar_swap_rowcol	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	/^int gsl_matrix_uchar_swap_rowcol(gsl_matrix_uchar * m, const size_t i, const size_t j);$/;"	p	signature:(gsl_matrix_uchar * m, const size_t i, const size_t j)
gsl_matrix_uchar_swap_rows	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	/^int gsl_matrix_uchar_swap_rows(gsl_matrix_uchar * m, const size_t i, const size_t j);$/;"	p	signature:(gsl_matrix_uchar * m, const size_t i, const size_t j)
gsl_matrix_uchar_transpose	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	/^int gsl_matrix_uchar_transpose (gsl_matrix_uchar * m);$/;"	p	signature:(gsl_matrix_uchar * m)
gsl_matrix_uchar_transpose_memcpy	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	/^int gsl_matrix_uchar_transpose_memcpy (gsl_matrix_uchar * dest, const gsl_matrix_uchar * src);$/;"	p	signature:(gsl_matrix_uchar * dest, const gsl_matrix_uchar * src)
gsl_matrix_uchar_view	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	/^typedef _gsl_matrix_uchar_view gsl_matrix_uchar_view;$/;"	t
gsl_matrix_uchar_view_array	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	/^gsl_matrix_uchar_view_array (unsigned char * base,$/;"	p	signature:(unsigned char * base, const size_t n1, const size_t n2)
gsl_matrix_uchar_view_array_with_tda	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	/^gsl_matrix_uchar_view_array_with_tda (unsigned char * base, $/;"	p	signature:(unsigned char * base, const size_t n1, const size_t n2, const size_t tda)
gsl_matrix_uchar_view_vector	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	/^gsl_matrix_uchar_view_vector (gsl_vector_uchar * v,$/;"	p	signature:(gsl_vector_uchar * v, const size_t n1, const size_t n2)
gsl_matrix_uchar_view_vector_with_tda	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	/^gsl_matrix_uchar_view_vector_with_tda (gsl_vector_uchar * v,$/;"	p	signature:(gsl_vector_uchar * v, const size_t n1, const size_t n2, const size_t tda)
gsl_matrix_uint	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	/^} gsl_matrix_uint;$/;"	t	typeref:struct:__anon18
gsl_matrix_uint_add	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	/^int gsl_matrix_uint_add (gsl_matrix_uint * a, const gsl_matrix_uint * b);$/;"	p	signature:(gsl_matrix_uint * a, const gsl_matrix_uint * b)
gsl_matrix_uint_add_constant	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	/^int gsl_matrix_uint_add_constant (gsl_matrix_uint * a, const double x);$/;"	p	signature:(gsl_matrix_uint * a, const double x)
gsl_matrix_uint_add_diagonal	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	/^int gsl_matrix_uint_add_diagonal (gsl_matrix_uint * a, const double x);$/;"	p	signature:(gsl_matrix_uint * a, const double x)
gsl_matrix_uint_alloc	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	/^gsl_matrix_uint_alloc (const size_t n1, const size_t n2);$/;"	p	signature:(const size_t n1, const size_t n2)
gsl_matrix_uint_alloc_from_block	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	/^gsl_matrix_uint_alloc_from_block (gsl_block_uint * b, $/;"	p	signature:(gsl_block_uint * b, const size_t offset, const size_t n1, const size_t n2, const size_t d2)
gsl_matrix_uint_alloc_from_matrix	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	/^gsl_matrix_uint_alloc_from_matrix (gsl_matrix_uint * m,$/;"	p	signature:(gsl_matrix_uint * m, const size_t k1, const size_t k2, const size_t n1, const size_t n2)
gsl_matrix_uint_calloc	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	/^gsl_matrix_uint_calloc (const size_t n1, const size_t n2);$/;"	p	signature:(const size_t n1, const size_t n2)
gsl_matrix_uint_column	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	/^gsl_matrix_uint_column (gsl_matrix_uint * m, const size_t j);$/;"	p	signature:(gsl_matrix_uint * m, const size_t j)
gsl_matrix_uint_const_column	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	/^gsl_matrix_uint_const_column (const gsl_matrix_uint * m, $/;"	p	signature:(const gsl_matrix_uint * m, const size_t j)
gsl_matrix_uint_const_diagonal	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	/^gsl_matrix_uint_const_diagonal (const gsl_matrix_uint * m);$/;"	p	signature:(const gsl_matrix_uint * m)
gsl_matrix_uint_const_ptr	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	/^INLINE_DECL const unsigned int * gsl_matrix_uint_const_ptr(const gsl_matrix_uint * m, const size_t i, const size_t j);$/;"	p	signature:(const gsl_matrix_uint * m, const size_t i, const size_t j)
gsl_matrix_uint_const_ptr	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	/^gsl_matrix_uint_const_ptr(const gsl_matrix_uint * m, const size_t i, const size_t j)$/;"	f	signature:(const gsl_matrix_uint * m, const size_t i, const size_t j)
gsl_matrix_uint_const_row	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	/^gsl_matrix_uint_const_row (const gsl_matrix_uint * m, $/;"	p	signature:(const gsl_matrix_uint * m, const size_t i)
gsl_matrix_uint_const_subcolumn	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	/^gsl_matrix_uint_const_subcolumn (const gsl_matrix_uint * m, const size_t j,$/;"	p	signature:(const gsl_matrix_uint * m, const size_t j, const size_t offset, const size_t n)
gsl_matrix_uint_const_subdiagonal	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	/^gsl_matrix_uint_const_subdiagonal (const gsl_matrix_uint * m, $/;"	p	signature:(const gsl_matrix_uint * m, const size_t k)
gsl_matrix_uint_const_submatrix	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	/^gsl_matrix_uint_const_submatrix (const gsl_matrix_uint * m, $/;"	p	signature:(const gsl_matrix_uint * m, const size_t i, const size_t j, const size_t n1, const size_t n2)
gsl_matrix_uint_const_subrow	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	/^gsl_matrix_uint_const_subrow (const gsl_matrix_uint * m, const size_t i,$/;"	p	signature:(const gsl_matrix_uint * m, const size_t i, const size_t offset, const size_t n)
gsl_matrix_uint_const_superdiagonal	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	/^gsl_matrix_uint_const_superdiagonal (const gsl_matrix_uint * m, $/;"	p	signature:(const gsl_matrix_uint * m, const size_t k)
gsl_matrix_uint_const_view	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	/^typedef const _gsl_matrix_uint_const_view gsl_matrix_uint_const_view;$/;"	t
gsl_matrix_uint_const_view_array	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	/^gsl_matrix_uint_const_view_array (const unsigned int * base,$/;"	p	signature:(const unsigned int * base, const size_t n1, const size_t n2)
gsl_matrix_uint_const_view_array_with_tda	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	/^gsl_matrix_uint_const_view_array_with_tda (const unsigned int * base, $/;"	p	signature:(const unsigned int * base, const size_t n1, const size_t n2, const size_t tda)
gsl_matrix_uint_const_view_vector	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	/^gsl_matrix_uint_const_view_vector (const gsl_vector_uint * v,$/;"	p	signature:(const gsl_vector_uint * v, const size_t n1, const size_t n2)
gsl_matrix_uint_const_view_vector_with_tda	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	/^gsl_matrix_uint_const_view_vector_with_tda (const gsl_vector_uint * v,$/;"	p	signature:(const gsl_vector_uint * v, const size_t n1, const size_t n2, const size_t tda)
gsl_matrix_uint_diagonal	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	/^gsl_matrix_uint_diagonal (gsl_matrix_uint * m);$/;"	p	signature:(gsl_matrix_uint * m)
gsl_matrix_uint_div_elements	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	/^int gsl_matrix_uint_div_elements (gsl_matrix_uint * a, const gsl_matrix_uint * b);$/;"	p	signature:(gsl_matrix_uint * a, const gsl_matrix_uint * b)
gsl_matrix_uint_fprintf	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	/^int gsl_matrix_uint_fprintf (FILE * stream, const gsl_matrix_uint * m, const char * format);$/;"	p	signature:(FILE * stream, const gsl_matrix_uint * m, const char * format)
gsl_matrix_uint_fread	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	/^int gsl_matrix_uint_fread (FILE * stream, gsl_matrix_uint * m) ;$/;"	p	signature:(FILE * stream, gsl_matrix_uint * m)
gsl_matrix_uint_free	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	/^void gsl_matrix_uint_free (gsl_matrix_uint * m);$/;"	p	signature:(gsl_matrix_uint * m)
gsl_matrix_uint_fscanf	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	/^int gsl_matrix_uint_fscanf (FILE * stream, gsl_matrix_uint * m);$/;"	p	signature:(FILE * stream, gsl_matrix_uint * m)
gsl_matrix_uint_fwrite	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	/^int gsl_matrix_uint_fwrite (FILE * stream, const gsl_matrix_uint * m) ;$/;"	p	signature:(FILE * stream, const gsl_matrix_uint * m)
gsl_matrix_uint_get	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	/^INLINE_DECL unsigned int   gsl_matrix_uint_get(const gsl_matrix_uint * m, const size_t i, const size_t j);$/;"	p	signature:(const gsl_matrix_uint * m, const size_t i, const size_t j)
gsl_matrix_uint_get	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	/^gsl_matrix_uint_get(const gsl_matrix_uint * m, const size_t i, const size_t j)$/;"	f	signature:(const gsl_matrix_uint * m, const size_t i, const size_t j)
gsl_matrix_uint_get_col	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	/^int gsl_matrix_uint_get_col(gsl_vector_uint * v, const gsl_matrix_uint * m, const size_t j);$/;"	p	signature:(gsl_vector_uint * v, const gsl_matrix_uint * m, const size_t j)
gsl_matrix_uint_get_row	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	/^int gsl_matrix_uint_get_row(gsl_vector_uint * v, const gsl_matrix_uint * m, const size_t i);$/;"	p	signature:(gsl_vector_uint * v, const gsl_matrix_uint * m, const size_t i)
gsl_matrix_uint_isneg	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	/^int gsl_matrix_uint_isneg (const gsl_matrix_uint * m);$/;"	p	signature:(const gsl_matrix_uint * m)
gsl_matrix_uint_isnonneg	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	/^int gsl_matrix_uint_isnonneg (const gsl_matrix_uint * m);$/;"	p	signature:(const gsl_matrix_uint * m)
gsl_matrix_uint_isnull	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	/^int gsl_matrix_uint_isnull (const gsl_matrix_uint * m);$/;"	p	signature:(const gsl_matrix_uint * m)
gsl_matrix_uint_ispos	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	/^int gsl_matrix_uint_ispos (const gsl_matrix_uint * m);$/;"	p	signature:(const gsl_matrix_uint * m)
gsl_matrix_uint_max	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	/^unsigned int gsl_matrix_uint_max (const gsl_matrix_uint * m);$/;"	p	signature:(const gsl_matrix_uint * m)
gsl_matrix_uint_max_index	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	/^void gsl_matrix_uint_max_index (const gsl_matrix_uint * m, size_t * imax, size_t *jmax);$/;"	p	signature:(const gsl_matrix_uint * m, size_t * imax, size_t *jmax)
gsl_matrix_uint_memcpy	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	/^int gsl_matrix_uint_memcpy(gsl_matrix_uint * dest, const gsl_matrix_uint * src);$/;"	p	signature:(gsl_matrix_uint * dest, const gsl_matrix_uint * src)
gsl_matrix_uint_min	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	/^unsigned int gsl_matrix_uint_min (const gsl_matrix_uint * m);$/;"	p	signature:(const gsl_matrix_uint * m)
gsl_matrix_uint_min_index	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	/^void gsl_matrix_uint_min_index (const gsl_matrix_uint * m, size_t * imin, size_t *jmin);$/;"	p	signature:(const gsl_matrix_uint * m, size_t * imin, size_t *jmin)
gsl_matrix_uint_minmax	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	/^void gsl_matrix_uint_minmax (const gsl_matrix_uint * m, unsigned int * min_out, unsigned int * max_out);$/;"	p	signature:(const gsl_matrix_uint * m, unsigned int * min_out, unsigned int * max_out)
gsl_matrix_uint_minmax_index	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	/^void gsl_matrix_uint_minmax_index (const gsl_matrix_uint * m, size_t * imin, size_t * jmin, size_t * imax, size_t * jmax);$/;"	p	signature:(const gsl_matrix_uint * m, size_t * imin, size_t * jmin, size_t * imax, size_t * jmax)
gsl_matrix_uint_mul_elements	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	/^int gsl_matrix_uint_mul_elements (gsl_matrix_uint * a, const gsl_matrix_uint * b);$/;"	p	signature:(gsl_matrix_uint * a, const gsl_matrix_uint * b)
gsl_matrix_uint_ptr	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	/^INLINE_DECL unsigned int * gsl_matrix_uint_ptr(gsl_matrix_uint * m, const size_t i, const size_t j);$/;"	p	signature:(gsl_matrix_uint * m, const size_t i, const size_t j)
gsl_matrix_uint_ptr	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	/^gsl_matrix_uint_ptr(gsl_matrix_uint * m, const size_t i, const size_t j)$/;"	f	signature:(gsl_matrix_uint * m, const size_t i, const size_t j)
gsl_matrix_uint_row	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	/^gsl_matrix_uint_row (gsl_matrix_uint * m, const size_t i);$/;"	p	signature:(gsl_matrix_uint * m, const size_t i)
gsl_matrix_uint_scale	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	/^int gsl_matrix_uint_scale (gsl_matrix_uint * a, const double x);$/;"	p	signature:(gsl_matrix_uint * a, const double x)
gsl_matrix_uint_set	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	/^INLINE_DECL void    gsl_matrix_uint_set(gsl_matrix_uint * m, const size_t i, const size_t j, const unsigned int x);$/;"	p	signature:(gsl_matrix_uint * m, const size_t i, const size_t j, const unsigned int x)
gsl_matrix_uint_set	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	/^gsl_matrix_uint_set(gsl_matrix_uint * m, const size_t i, const size_t j, const unsigned int x)$/;"	f	signature:(gsl_matrix_uint * m, const size_t i, const size_t j, const unsigned int x)
gsl_matrix_uint_set_all	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	/^void gsl_matrix_uint_set_all (gsl_matrix_uint * m, unsigned int x);$/;"	p	signature:(gsl_matrix_uint * m, unsigned int x)
gsl_matrix_uint_set_col	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	/^int gsl_matrix_uint_set_col(gsl_matrix_uint * m, const size_t j, const gsl_vector_uint * v);$/;"	p	signature:(gsl_matrix_uint * m, const size_t j, const gsl_vector_uint * v)
gsl_matrix_uint_set_identity	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	/^void gsl_matrix_uint_set_identity (gsl_matrix_uint * m);$/;"	p	signature:(gsl_matrix_uint * m)
gsl_matrix_uint_set_row	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	/^int gsl_matrix_uint_set_row(gsl_matrix_uint * m, const size_t i, const gsl_vector_uint * v);$/;"	p	signature:(gsl_matrix_uint * m, const size_t i, const gsl_vector_uint * v)
gsl_matrix_uint_set_zero	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	/^void gsl_matrix_uint_set_zero (gsl_matrix_uint * m);$/;"	p	signature:(gsl_matrix_uint * m)
gsl_matrix_uint_sub	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	/^int gsl_matrix_uint_sub (gsl_matrix_uint * a, const gsl_matrix_uint * b);$/;"	p	signature:(gsl_matrix_uint * a, const gsl_matrix_uint * b)
gsl_matrix_uint_subcolumn	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	/^gsl_matrix_uint_subcolumn (gsl_matrix_uint * m, const size_t j,$/;"	p	signature:(gsl_matrix_uint * m, const size_t j, const size_t offset, const size_t n)
gsl_matrix_uint_subdiagonal	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	/^gsl_matrix_uint_subdiagonal (gsl_matrix_uint * m, const size_t k);$/;"	p	signature:(gsl_matrix_uint * m, const size_t k)
gsl_matrix_uint_submatrix	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	/^gsl_matrix_uint_submatrix (gsl_matrix_uint * m, $/;"	p	signature:(gsl_matrix_uint * m, const size_t i, const size_t j, const size_t n1, const size_t n2)
gsl_matrix_uint_subrow	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	/^gsl_matrix_uint_subrow (gsl_matrix_uint * m, const size_t i,$/;"	p	signature:(gsl_matrix_uint * m, const size_t i, const size_t offset, const size_t n)
gsl_matrix_uint_superdiagonal	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	/^gsl_matrix_uint_superdiagonal (gsl_matrix_uint * m, const size_t k);$/;"	p	signature:(gsl_matrix_uint * m, const size_t k)
gsl_matrix_uint_swap	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	/^int gsl_matrix_uint_swap(gsl_matrix_uint * m1, gsl_matrix_uint * m2);$/;"	p	signature:(gsl_matrix_uint * m1, gsl_matrix_uint * m2)
gsl_matrix_uint_swap_columns	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	/^int gsl_matrix_uint_swap_columns(gsl_matrix_uint * m, const size_t i, const size_t j);$/;"	p	signature:(gsl_matrix_uint * m, const size_t i, const size_t j)
gsl_matrix_uint_swap_rowcol	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	/^int gsl_matrix_uint_swap_rowcol(gsl_matrix_uint * m, const size_t i, const size_t j);$/;"	p	signature:(gsl_matrix_uint * m, const size_t i, const size_t j)
gsl_matrix_uint_swap_rows	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	/^int gsl_matrix_uint_swap_rows(gsl_matrix_uint * m, const size_t i, const size_t j);$/;"	p	signature:(gsl_matrix_uint * m, const size_t i, const size_t j)
gsl_matrix_uint_transpose	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	/^int gsl_matrix_uint_transpose (gsl_matrix_uint * m);$/;"	p	signature:(gsl_matrix_uint * m)
gsl_matrix_uint_transpose_memcpy	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	/^int gsl_matrix_uint_transpose_memcpy (gsl_matrix_uint * dest, const gsl_matrix_uint * src);$/;"	p	signature:(gsl_matrix_uint * dest, const gsl_matrix_uint * src)
gsl_matrix_uint_view	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	/^typedef _gsl_matrix_uint_view gsl_matrix_uint_view;$/;"	t
gsl_matrix_uint_view_array	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	/^gsl_matrix_uint_view_array (unsigned int * base,$/;"	p	signature:(unsigned int * base, const size_t n1, const size_t n2)
gsl_matrix_uint_view_array_with_tda	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	/^gsl_matrix_uint_view_array_with_tda (unsigned int * base, $/;"	p	signature:(unsigned int * base, const size_t n1, const size_t n2, const size_t tda)
gsl_matrix_uint_view_vector	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	/^gsl_matrix_uint_view_vector (gsl_vector_uint * v,$/;"	p	signature:(gsl_vector_uint * v, const size_t n1, const size_t n2)
gsl_matrix_uint_view_vector_with_tda	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	/^gsl_matrix_uint_view_vector_with_tda (gsl_vector_uint * v,$/;"	p	signature:(gsl_vector_uint * v, const size_t n1, const size_t n2, const size_t tda)
gsl_matrix_ulong	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	/^} gsl_matrix_ulong;$/;"	t	typeref:struct:__anon28
gsl_matrix_ulong_add	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	/^int gsl_matrix_ulong_add (gsl_matrix_ulong * a, const gsl_matrix_ulong * b);$/;"	p	signature:(gsl_matrix_ulong * a, const gsl_matrix_ulong * b)
gsl_matrix_ulong_add_constant	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	/^int gsl_matrix_ulong_add_constant (gsl_matrix_ulong * a, const double x);$/;"	p	signature:(gsl_matrix_ulong * a, const double x)
gsl_matrix_ulong_add_diagonal	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	/^int gsl_matrix_ulong_add_diagonal (gsl_matrix_ulong * a, const double x);$/;"	p	signature:(gsl_matrix_ulong * a, const double x)
gsl_matrix_ulong_alloc	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	/^gsl_matrix_ulong_alloc (const size_t n1, const size_t n2);$/;"	p	signature:(const size_t n1, const size_t n2)
gsl_matrix_ulong_alloc_from_block	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	/^gsl_matrix_ulong_alloc_from_block (gsl_block_ulong * b, $/;"	p	signature:(gsl_block_ulong * b, const size_t offset, const size_t n1, const size_t n2, const size_t d2)
gsl_matrix_ulong_alloc_from_matrix	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	/^gsl_matrix_ulong_alloc_from_matrix (gsl_matrix_ulong * m,$/;"	p	signature:(gsl_matrix_ulong * m, const size_t k1, const size_t k2, const size_t n1, const size_t n2)
gsl_matrix_ulong_calloc	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	/^gsl_matrix_ulong_calloc (const size_t n1, const size_t n2);$/;"	p	signature:(const size_t n1, const size_t n2)
gsl_matrix_ulong_column	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	/^gsl_matrix_ulong_column (gsl_matrix_ulong * m, const size_t j);$/;"	p	signature:(gsl_matrix_ulong * m, const size_t j)
gsl_matrix_ulong_const_column	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	/^gsl_matrix_ulong_const_column (const gsl_matrix_ulong * m, $/;"	p	signature:(const gsl_matrix_ulong * m, const size_t j)
gsl_matrix_ulong_const_diagonal	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	/^gsl_matrix_ulong_const_diagonal (const gsl_matrix_ulong * m);$/;"	p	signature:(const gsl_matrix_ulong * m)
gsl_matrix_ulong_const_ptr	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	/^INLINE_DECL const unsigned long * gsl_matrix_ulong_const_ptr(const gsl_matrix_ulong * m, const size_t i, const size_t j);$/;"	p	signature:(const gsl_matrix_ulong * m, const size_t i, const size_t j)
gsl_matrix_ulong_const_ptr	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	/^gsl_matrix_ulong_const_ptr(const gsl_matrix_ulong * m, const size_t i, const size_t j)$/;"	f	signature:(const gsl_matrix_ulong * m, const size_t i, const size_t j)
gsl_matrix_ulong_const_row	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	/^gsl_matrix_ulong_const_row (const gsl_matrix_ulong * m, $/;"	p	signature:(const gsl_matrix_ulong * m, const size_t i)
gsl_matrix_ulong_const_subcolumn	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	/^gsl_matrix_ulong_const_subcolumn (const gsl_matrix_ulong * m, const size_t j,$/;"	p	signature:(const gsl_matrix_ulong * m, const size_t j, const size_t offset, const size_t n)
gsl_matrix_ulong_const_subdiagonal	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	/^gsl_matrix_ulong_const_subdiagonal (const gsl_matrix_ulong * m, $/;"	p	signature:(const gsl_matrix_ulong * m, const size_t k)
gsl_matrix_ulong_const_submatrix	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	/^gsl_matrix_ulong_const_submatrix (const gsl_matrix_ulong * m, $/;"	p	signature:(const gsl_matrix_ulong * m, const size_t i, const size_t j, const size_t n1, const size_t n2)
gsl_matrix_ulong_const_subrow	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	/^gsl_matrix_ulong_const_subrow (const gsl_matrix_ulong * m, const size_t i,$/;"	p	signature:(const gsl_matrix_ulong * m, const size_t i, const size_t offset, const size_t n)
gsl_matrix_ulong_const_superdiagonal	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	/^gsl_matrix_ulong_const_superdiagonal (const gsl_matrix_ulong * m, $/;"	p	signature:(const gsl_matrix_ulong * m, const size_t k)
gsl_matrix_ulong_const_view	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	/^typedef const _gsl_matrix_ulong_const_view gsl_matrix_ulong_const_view;$/;"	t
gsl_matrix_ulong_const_view_array	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	/^gsl_matrix_ulong_const_view_array (const unsigned long * base,$/;"	p	signature:(const unsigned long * base, const size_t n1, const size_t n2)
gsl_matrix_ulong_const_view_array_with_tda	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	/^gsl_matrix_ulong_const_view_array_with_tda (const unsigned long * base, $/;"	p	signature:(const unsigned long * base, const size_t n1, const size_t n2, const size_t tda)
gsl_matrix_ulong_const_view_vector	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	/^gsl_matrix_ulong_const_view_vector (const gsl_vector_ulong * v,$/;"	p	signature:(const gsl_vector_ulong * v, const size_t n1, const size_t n2)
gsl_matrix_ulong_const_view_vector_with_tda	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	/^gsl_matrix_ulong_const_view_vector_with_tda (const gsl_vector_ulong * v,$/;"	p	signature:(const gsl_vector_ulong * v, const size_t n1, const size_t n2, const size_t tda)
gsl_matrix_ulong_diagonal	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	/^gsl_matrix_ulong_diagonal (gsl_matrix_ulong * m);$/;"	p	signature:(gsl_matrix_ulong * m)
gsl_matrix_ulong_div_elements	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	/^int gsl_matrix_ulong_div_elements (gsl_matrix_ulong * a, const gsl_matrix_ulong * b);$/;"	p	signature:(gsl_matrix_ulong * a, const gsl_matrix_ulong * b)
gsl_matrix_ulong_fprintf	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	/^int gsl_matrix_ulong_fprintf (FILE * stream, const gsl_matrix_ulong * m, const char * format);$/;"	p	signature:(FILE * stream, const gsl_matrix_ulong * m, const char * format)
gsl_matrix_ulong_fread	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	/^int gsl_matrix_ulong_fread (FILE * stream, gsl_matrix_ulong * m) ;$/;"	p	signature:(FILE * stream, gsl_matrix_ulong * m)
gsl_matrix_ulong_free	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	/^void gsl_matrix_ulong_free (gsl_matrix_ulong * m);$/;"	p	signature:(gsl_matrix_ulong * m)
gsl_matrix_ulong_fscanf	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	/^int gsl_matrix_ulong_fscanf (FILE * stream, gsl_matrix_ulong * m);$/;"	p	signature:(FILE * stream, gsl_matrix_ulong * m)
gsl_matrix_ulong_fwrite	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	/^int gsl_matrix_ulong_fwrite (FILE * stream, const gsl_matrix_ulong * m) ;$/;"	p	signature:(FILE * stream, const gsl_matrix_ulong * m)
gsl_matrix_ulong_get	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	/^INLINE_DECL unsigned long   gsl_matrix_ulong_get(const gsl_matrix_ulong * m, const size_t i, const size_t j);$/;"	p	signature:(const gsl_matrix_ulong * m, const size_t i, const size_t j)
gsl_matrix_ulong_get	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	/^gsl_matrix_ulong_get(const gsl_matrix_ulong * m, const size_t i, const size_t j)$/;"	f	signature:(const gsl_matrix_ulong * m, const size_t i, const size_t j)
gsl_matrix_ulong_get_col	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	/^int gsl_matrix_ulong_get_col(gsl_vector_ulong * v, const gsl_matrix_ulong * m, const size_t j);$/;"	p	signature:(gsl_vector_ulong * v, const gsl_matrix_ulong * m, const size_t j)
gsl_matrix_ulong_get_row	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	/^int gsl_matrix_ulong_get_row(gsl_vector_ulong * v, const gsl_matrix_ulong * m, const size_t i);$/;"	p	signature:(gsl_vector_ulong * v, const gsl_matrix_ulong * m, const size_t i)
gsl_matrix_ulong_isneg	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	/^int gsl_matrix_ulong_isneg (const gsl_matrix_ulong * m);$/;"	p	signature:(const gsl_matrix_ulong * m)
gsl_matrix_ulong_isnonneg	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	/^int gsl_matrix_ulong_isnonneg (const gsl_matrix_ulong * m);$/;"	p	signature:(const gsl_matrix_ulong * m)
gsl_matrix_ulong_isnull	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	/^int gsl_matrix_ulong_isnull (const gsl_matrix_ulong * m);$/;"	p	signature:(const gsl_matrix_ulong * m)
gsl_matrix_ulong_ispos	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	/^int gsl_matrix_ulong_ispos (const gsl_matrix_ulong * m);$/;"	p	signature:(const gsl_matrix_ulong * m)
gsl_matrix_ulong_max	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	/^unsigned long gsl_matrix_ulong_max (const gsl_matrix_ulong * m);$/;"	p	signature:(const gsl_matrix_ulong * m)
gsl_matrix_ulong_max_index	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	/^void gsl_matrix_ulong_max_index (const gsl_matrix_ulong * m, size_t * imax, size_t *jmax);$/;"	p	signature:(const gsl_matrix_ulong * m, size_t * imax, size_t *jmax)
gsl_matrix_ulong_memcpy	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	/^int gsl_matrix_ulong_memcpy(gsl_matrix_ulong * dest, const gsl_matrix_ulong * src);$/;"	p	signature:(gsl_matrix_ulong * dest, const gsl_matrix_ulong * src)
gsl_matrix_ulong_min	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	/^unsigned long gsl_matrix_ulong_min (const gsl_matrix_ulong * m);$/;"	p	signature:(const gsl_matrix_ulong * m)
gsl_matrix_ulong_min_index	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	/^void gsl_matrix_ulong_min_index (const gsl_matrix_ulong * m, size_t * imin, size_t *jmin);$/;"	p	signature:(const gsl_matrix_ulong * m, size_t * imin, size_t *jmin)
gsl_matrix_ulong_minmax	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	/^void gsl_matrix_ulong_minmax (const gsl_matrix_ulong * m, unsigned long * min_out, unsigned long * max_out);$/;"	p	signature:(const gsl_matrix_ulong * m, unsigned long * min_out, unsigned long * max_out)
gsl_matrix_ulong_minmax_index	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	/^void gsl_matrix_ulong_minmax_index (const gsl_matrix_ulong * m, size_t * imin, size_t * jmin, size_t * imax, size_t * jmax);$/;"	p	signature:(const gsl_matrix_ulong * m, size_t * imin, size_t * jmin, size_t * imax, size_t * jmax)
gsl_matrix_ulong_mul_elements	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	/^int gsl_matrix_ulong_mul_elements (gsl_matrix_ulong * a, const gsl_matrix_ulong * b);$/;"	p	signature:(gsl_matrix_ulong * a, const gsl_matrix_ulong * b)
gsl_matrix_ulong_ptr	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	/^INLINE_DECL unsigned long * gsl_matrix_ulong_ptr(gsl_matrix_ulong * m, const size_t i, const size_t j);$/;"	p	signature:(gsl_matrix_ulong * m, const size_t i, const size_t j)
gsl_matrix_ulong_ptr	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	/^gsl_matrix_ulong_ptr(gsl_matrix_ulong * m, const size_t i, const size_t j)$/;"	f	signature:(gsl_matrix_ulong * m, const size_t i, const size_t j)
gsl_matrix_ulong_row	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	/^gsl_matrix_ulong_row (gsl_matrix_ulong * m, const size_t i);$/;"	p	signature:(gsl_matrix_ulong * m, const size_t i)
gsl_matrix_ulong_scale	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	/^int gsl_matrix_ulong_scale (gsl_matrix_ulong * a, const double x);$/;"	p	signature:(gsl_matrix_ulong * a, const double x)
gsl_matrix_ulong_set	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	/^INLINE_DECL void    gsl_matrix_ulong_set(gsl_matrix_ulong * m, const size_t i, const size_t j, const unsigned long x);$/;"	p	signature:(gsl_matrix_ulong * m, const size_t i, const size_t j, const unsigned long x)
gsl_matrix_ulong_set	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	/^gsl_matrix_ulong_set(gsl_matrix_ulong * m, const size_t i, const size_t j, const unsigned long x)$/;"	f	signature:(gsl_matrix_ulong * m, const size_t i, const size_t j, const unsigned long x)
gsl_matrix_ulong_set_all	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	/^void gsl_matrix_ulong_set_all (gsl_matrix_ulong * m, unsigned long x);$/;"	p	signature:(gsl_matrix_ulong * m, unsigned long x)
gsl_matrix_ulong_set_col	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	/^int gsl_matrix_ulong_set_col(gsl_matrix_ulong * m, const size_t j, const gsl_vector_ulong * v);$/;"	p	signature:(gsl_matrix_ulong * m, const size_t j, const gsl_vector_ulong * v)
gsl_matrix_ulong_set_identity	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	/^void gsl_matrix_ulong_set_identity (gsl_matrix_ulong * m);$/;"	p	signature:(gsl_matrix_ulong * m)
gsl_matrix_ulong_set_row	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	/^int gsl_matrix_ulong_set_row(gsl_matrix_ulong * m, const size_t i, const gsl_vector_ulong * v);$/;"	p	signature:(gsl_matrix_ulong * m, const size_t i, const gsl_vector_ulong * v)
gsl_matrix_ulong_set_zero	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	/^void gsl_matrix_ulong_set_zero (gsl_matrix_ulong * m);$/;"	p	signature:(gsl_matrix_ulong * m)
gsl_matrix_ulong_sub	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	/^int gsl_matrix_ulong_sub (gsl_matrix_ulong * a, const gsl_matrix_ulong * b);$/;"	p	signature:(gsl_matrix_ulong * a, const gsl_matrix_ulong * b)
gsl_matrix_ulong_subcolumn	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	/^gsl_matrix_ulong_subcolumn (gsl_matrix_ulong * m, const size_t j,$/;"	p	signature:(gsl_matrix_ulong * m, const size_t j, const size_t offset, const size_t n)
gsl_matrix_ulong_subdiagonal	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	/^gsl_matrix_ulong_subdiagonal (gsl_matrix_ulong * m, const size_t k);$/;"	p	signature:(gsl_matrix_ulong * m, const size_t k)
gsl_matrix_ulong_submatrix	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	/^gsl_matrix_ulong_submatrix (gsl_matrix_ulong * m, $/;"	p	signature:(gsl_matrix_ulong * m, const size_t i, const size_t j, const size_t n1, const size_t n2)
gsl_matrix_ulong_subrow	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	/^gsl_matrix_ulong_subrow (gsl_matrix_ulong * m, const size_t i,$/;"	p	signature:(gsl_matrix_ulong * m, const size_t i, const size_t offset, const size_t n)
gsl_matrix_ulong_superdiagonal	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	/^gsl_matrix_ulong_superdiagonal (gsl_matrix_ulong * m, const size_t k);$/;"	p	signature:(gsl_matrix_ulong * m, const size_t k)
gsl_matrix_ulong_swap	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	/^int gsl_matrix_ulong_swap(gsl_matrix_ulong * m1, gsl_matrix_ulong * m2);$/;"	p	signature:(gsl_matrix_ulong * m1, gsl_matrix_ulong * m2)
gsl_matrix_ulong_swap_columns	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	/^int gsl_matrix_ulong_swap_columns(gsl_matrix_ulong * m, const size_t i, const size_t j);$/;"	p	signature:(gsl_matrix_ulong * m, const size_t i, const size_t j)
gsl_matrix_ulong_swap_rowcol	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	/^int gsl_matrix_ulong_swap_rowcol(gsl_matrix_ulong * m, const size_t i, const size_t j);$/;"	p	signature:(gsl_matrix_ulong * m, const size_t i, const size_t j)
gsl_matrix_ulong_swap_rows	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	/^int gsl_matrix_ulong_swap_rows(gsl_matrix_ulong * m, const size_t i, const size_t j);$/;"	p	signature:(gsl_matrix_ulong * m, const size_t i, const size_t j)
gsl_matrix_ulong_transpose	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	/^int gsl_matrix_ulong_transpose (gsl_matrix_ulong * m);$/;"	p	signature:(gsl_matrix_ulong * m)
gsl_matrix_ulong_transpose_memcpy	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	/^int gsl_matrix_ulong_transpose_memcpy (gsl_matrix_ulong * dest, const gsl_matrix_ulong * src);$/;"	p	signature:(gsl_matrix_ulong * dest, const gsl_matrix_ulong * src)
gsl_matrix_ulong_view	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	/^typedef _gsl_matrix_ulong_view gsl_matrix_ulong_view;$/;"	t
gsl_matrix_ulong_view_array	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	/^gsl_matrix_ulong_view_array (unsigned long * base,$/;"	p	signature:(unsigned long * base, const size_t n1, const size_t n2)
gsl_matrix_ulong_view_array_with_tda	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	/^gsl_matrix_ulong_view_array_with_tda (unsigned long * base, $/;"	p	signature:(unsigned long * base, const size_t n1, const size_t n2, const size_t tda)
gsl_matrix_ulong_view_vector	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	/^gsl_matrix_ulong_view_vector (gsl_vector_ulong * v,$/;"	p	signature:(gsl_vector_ulong * v, const size_t n1, const size_t n2)
gsl_matrix_ulong_view_vector_with_tda	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	/^gsl_matrix_ulong_view_vector_with_tda (gsl_vector_ulong * v,$/;"	p	signature:(gsl_vector_ulong * v, const size_t n1, const size_t n2, const size_t tda)
gsl_matrix_ushort	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	/^} gsl_matrix_ushort;$/;"	t	typeref:struct:__anon151
gsl_matrix_ushort_add	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	/^int gsl_matrix_ushort_add (gsl_matrix_ushort * a, const gsl_matrix_ushort * b);$/;"	p	signature:(gsl_matrix_ushort * a, const gsl_matrix_ushort * b)
gsl_matrix_ushort_add_constant	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	/^int gsl_matrix_ushort_add_constant (gsl_matrix_ushort * a, const double x);$/;"	p	signature:(gsl_matrix_ushort * a, const double x)
gsl_matrix_ushort_add_diagonal	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	/^int gsl_matrix_ushort_add_diagonal (gsl_matrix_ushort * a, const double x);$/;"	p	signature:(gsl_matrix_ushort * a, const double x)
gsl_matrix_ushort_alloc	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	/^gsl_matrix_ushort_alloc (const size_t n1, const size_t n2);$/;"	p	signature:(const size_t n1, const size_t n2)
gsl_matrix_ushort_alloc_from_block	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	/^gsl_matrix_ushort_alloc_from_block (gsl_block_ushort * b, $/;"	p	signature:(gsl_block_ushort * b, const size_t offset, const size_t n1, const size_t n2, const size_t d2)
gsl_matrix_ushort_alloc_from_matrix	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	/^gsl_matrix_ushort_alloc_from_matrix (gsl_matrix_ushort * m,$/;"	p	signature:(gsl_matrix_ushort * m, const size_t k1, const size_t k2, const size_t n1, const size_t n2)
gsl_matrix_ushort_calloc	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	/^gsl_matrix_ushort_calloc (const size_t n1, const size_t n2);$/;"	p	signature:(const size_t n1, const size_t n2)
gsl_matrix_ushort_column	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	/^gsl_matrix_ushort_column (gsl_matrix_ushort * m, const size_t j);$/;"	p	signature:(gsl_matrix_ushort * m, const size_t j)
gsl_matrix_ushort_const_column	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	/^gsl_matrix_ushort_const_column (const gsl_matrix_ushort * m, $/;"	p	signature:(const gsl_matrix_ushort * m, const size_t j)
gsl_matrix_ushort_const_diagonal	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	/^gsl_matrix_ushort_const_diagonal (const gsl_matrix_ushort * m);$/;"	p	signature:(const gsl_matrix_ushort * m)
gsl_matrix_ushort_const_ptr	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	/^INLINE_DECL const unsigned short * gsl_matrix_ushort_const_ptr(const gsl_matrix_ushort * m, const size_t i, const size_t j);$/;"	p	signature:(const gsl_matrix_ushort * m, const size_t i, const size_t j)
gsl_matrix_ushort_const_ptr	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	/^gsl_matrix_ushort_const_ptr(const gsl_matrix_ushort * m, const size_t i, const size_t j)$/;"	f	signature:(const gsl_matrix_ushort * m, const size_t i, const size_t j)
gsl_matrix_ushort_const_row	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	/^gsl_matrix_ushort_const_row (const gsl_matrix_ushort * m, $/;"	p	signature:(const gsl_matrix_ushort * m, const size_t i)
gsl_matrix_ushort_const_subcolumn	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	/^gsl_matrix_ushort_const_subcolumn (const gsl_matrix_ushort * m, const size_t j,$/;"	p	signature:(const gsl_matrix_ushort * m, const size_t j, const size_t offset, const size_t n)
gsl_matrix_ushort_const_subdiagonal	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	/^gsl_matrix_ushort_const_subdiagonal (const gsl_matrix_ushort * m, $/;"	p	signature:(const gsl_matrix_ushort * m, const size_t k)
gsl_matrix_ushort_const_submatrix	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	/^gsl_matrix_ushort_const_submatrix (const gsl_matrix_ushort * m, $/;"	p	signature:(const gsl_matrix_ushort * m, const size_t i, const size_t j, const size_t n1, const size_t n2)
gsl_matrix_ushort_const_subrow	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	/^gsl_matrix_ushort_const_subrow (const gsl_matrix_ushort * m, const size_t i,$/;"	p	signature:(const gsl_matrix_ushort * m, const size_t i, const size_t offset, const size_t n)
gsl_matrix_ushort_const_superdiagonal	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	/^gsl_matrix_ushort_const_superdiagonal (const gsl_matrix_ushort * m, $/;"	p	signature:(const gsl_matrix_ushort * m, const size_t k)
gsl_matrix_ushort_const_view	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	/^typedef const _gsl_matrix_ushort_const_view gsl_matrix_ushort_const_view;$/;"	t
gsl_matrix_ushort_const_view_array	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	/^gsl_matrix_ushort_const_view_array (const unsigned short * base,$/;"	p	signature:(const unsigned short * base, const size_t n1, const size_t n2)
gsl_matrix_ushort_const_view_array_with_tda	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	/^gsl_matrix_ushort_const_view_array_with_tda (const unsigned short * base, $/;"	p	signature:(const unsigned short * base, const size_t n1, const size_t n2, const size_t tda)
gsl_matrix_ushort_const_view_vector	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	/^gsl_matrix_ushort_const_view_vector (const gsl_vector_ushort * v,$/;"	p	signature:(const gsl_vector_ushort * v, const size_t n1, const size_t n2)
gsl_matrix_ushort_const_view_vector_with_tda	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	/^gsl_matrix_ushort_const_view_vector_with_tda (const gsl_vector_ushort * v,$/;"	p	signature:(const gsl_vector_ushort * v, const size_t n1, const size_t n2, const size_t tda)
gsl_matrix_ushort_diagonal	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	/^gsl_matrix_ushort_diagonal (gsl_matrix_ushort * m);$/;"	p	signature:(gsl_matrix_ushort * m)
gsl_matrix_ushort_div_elements	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	/^int gsl_matrix_ushort_div_elements (gsl_matrix_ushort * a, const gsl_matrix_ushort * b);$/;"	p	signature:(gsl_matrix_ushort * a, const gsl_matrix_ushort * b)
gsl_matrix_ushort_fprintf	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	/^int gsl_matrix_ushort_fprintf (FILE * stream, const gsl_matrix_ushort * m, const char * format);$/;"	p	signature:(FILE * stream, const gsl_matrix_ushort * m, const char * format)
gsl_matrix_ushort_fread	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	/^int gsl_matrix_ushort_fread (FILE * stream, gsl_matrix_ushort * m) ;$/;"	p	signature:(FILE * stream, gsl_matrix_ushort * m)
gsl_matrix_ushort_free	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	/^void gsl_matrix_ushort_free (gsl_matrix_ushort * m);$/;"	p	signature:(gsl_matrix_ushort * m)
gsl_matrix_ushort_fscanf	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	/^int gsl_matrix_ushort_fscanf (FILE * stream, gsl_matrix_ushort * m);$/;"	p	signature:(FILE * stream, gsl_matrix_ushort * m)
gsl_matrix_ushort_fwrite	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	/^int gsl_matrix_ushort_fwrite (FILE * stream, const gsl_matrix_ushort * m) ;$/;"	p	signature:(FILE * stream, const gsl_matrix_ushort * m)
gsl_matrix_ushort_get	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	/^INLINE_DECL unsigned short   gsl_matrix_ushort_get(const gsl_matrix_ushort * m, const size_t i, const size_t j);$/;"	p	signature:(const gsl_matrix_ushort * m, const size_t i, const size_t j)
gsl_matrix_ushort_get	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	/^gsl_matrix_ushort_get(const gsl_matrix_ushort * m, const size_t i, const size_t j)$/;"	f	signature:(const gsl_matrix_ushort * m, const size_t i, const size_t j)
gsl_matrix_ushort_get_col	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	/^int gsl_matrix_ushort_get_col(gsl_vector_ushort * v, const gsl_matrix_ushort * m, const size_t j);$/;"	p	signature:(gsl_vector_ushort * v, const gsl_matrix_ushort * m, const size_t j)
gsl_matrix_ushort_get_row	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	/^int gsl_matrix_ushort_get_row(gsl_vector_ushort * v, const gsl_matrix_ushort * m, const size_t i);$/;"	p	signature:(gsl_vector_ushort * v, const gsl_matrix_ushort * m, const size_t i)
gsl_matrix_ushort_isneg	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	/^int gsl_matrix_ushort_isneg (const gsl_matrix_ushort * m);$/;"	p	signature:(const gsl_matrix_ushort * m)
gsl_matrix_ushort_isnonneg	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	/^int gsl_matrix_ushort_isnonneg (const gsl_matrix_ushort * m);$/;"	p	signature:(const gsl_matrix_ushort * m)
gsl_matrix_ushort_isnull	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	/^int gsl_matrix_ushort_isnull (const gsl_matrix_ushort * m);$/;"	p	signature:(const gsl_matrix_ushort * m)
gsl_matrix_ushort_ispos	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	/^int gsl_matrix_ushort_ispos (const gsl_matrix_ushort * m);$/;"	p	signature:(const gsl_matrix_ushort * m)
gsl_matrix_ushort_max	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	/^unsigned short gsl_matrix_ushort_max (const gsl_matrix_ushort * m);$/;"	p	signature:(const gsl_matrix_ushort * m)
gsl_matrix_ushort_max_index	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	/^void gsl_matrix_ushort_max_index (const gsl_matrix_ushort * m, size_t * imax, size_t *jmax);$/;"	p	signature:(const gsl_matrix_ushort * m, size_t * imax, size_t *jmax)
gsl_matrix_ushort_memcpy	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	/^int gsl_matrix_ushort_memcpy(gsl_matrix_ushort * dest, const gsl_matrix_ushort * src);$/;"	p	signature:(gsl_matrix_ushort * dest, const gsl_matrix_ushort * src)
gsl_matrix_ushort_min	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	/^unsigned short gsl_matrix_ushort_min (const gsl_matrix_ushort * m);$/;"	p	signature:(const gsl_matrix_ushort * m)
gsl_matrix_ushort_min_index	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	/^void gsl_matrix_ushort_min_index (const gsl_matrix_ushort * m, size_t * imin, size_t *jmin);$/;"	p	signature:(const gsl_matrix_ushort * m, size_t * imin, size_t *jmin)
gsl_matrix_ushort_minmax	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	/^void gsl_matrix_ushort_minmax (const gsl_matrix_ushort * m, unsigned short * min_out, unsigned short * max_out);$/;"	p	signature:(const gsl_matrix_ushort * m, unsigned short * min_out, unsigned short * max_out)
gsl_matrix_ushort_minmax_index	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	/^void gsl_matrix_ushort_minmax_index (const gsl_matrix_ushort * m, size_t * imin, size_t * jmin, size_t * imax, size_t * jmax);$/;"	p	signature:(const gsl_matrix_ushort * m, size_t * imin, size_t * jmin, size_t * imax, size_t * jmax)
gsl_matrix_ushort_mul_elements	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	/^int gsl_matrix_ushort_mul_elements (gsl_matrix_ushort * a, const gsl_matrix_ushort * b);$/;"	p	signature:(gsl_matrix_ushort * a, const gsl_matrix_ushort * b)
gsl_matrix_ushort_ptr	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	/^INLINE_DECL unsigned short * gsl_matrix_ushort_ptr(gsl_matrix_ushort * m, const size_t i, const size_t j);$/;"	p	signature:(gsl_matrix_ushort * m, const size_t i, const size_t j)
gsl_matrix_ushort_ptr	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	/^gsl_matrix_ushort_ptr(gsl_matrix_ushort * m, const size_t i, const size_t j)$/;"	f	signature:(gsl_matrix_ushort * m, const size_t i, const size_t j)
gsl_matrix_ushort_row	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	/^gsl_matrix_ushort_row (gsl_matrix_ushort * m, const size_t i);$/;"	p	signature:(gsl_matrix_ushort * m, const size_t i)
gsl_matrix_ushort_scale	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	/^int gsl_matrix_ushort_scale (gsl_matrix_ushort * a, const double x);$/;"	p	signature:(gsl_matrix_ushort * a, const double x)
gsl_matrix_ushort_set	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	/^INLINE_DECL void    gsl_matrix_ushort_set(gsl_matrix_ushort * m, const size_t i, const size_t j, const unsigned short x);$/;"	p	signature:(gsl_matrix_ushort * m, const size_t i, const size_t j, const unsigned short x)
gsl_matrix_ushort_set	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	/^gsl_matrix_ushort_set(gsl_matrix_ushort * m, const size_t i, const size_t j, const unsigned short x)$/;"	f	signature:(gsl_matrix_ushort * m, const size_t i, const size_t j, const unsigned short x)
gsl_matrix_ushort_set_all	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	/^void gsl_matrix_ushort_set_all (gsl_matrix_ushort * m, unsigned short x);$/;"	p	signature:(gsl_matrix_ushort * m, unsigned short x)
gsl_matrix_ushort_set_col	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	/^int gsl_matrix_ushort_set_col(gsl_matrix_ushort * m, const size_t j, const gsl_vector_ushort * v);$/;"	p	signature:(gsl_matrix_ushort * m, const size_t j, const gsl_vector_ushort * v)
gsl_matrix_ushort_set_identity	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	/^void gsl_matrix_ushort_set_identity (gsl_matrix_ushort * m);$/;"	p	signature:(gsl_matrix_ushort * m)
gsl_matrix_ushort_set_row	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	/^int gsl_matrix_ushort_set_row(gsl_matrix_ushort * m, const size_t i, const gsl_vector_ushort * v);$/;"	p	signature:(gsl_matrix_ushort * m, const size_t i, const gsl_vector_ushort * v)
gsl_matrix_ushort_set_zero	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	/^void gsl_matrix_ushort_set_zero (gsl_matrix_ushort * m);$/;"	p	signature:(gsl_matrix_ushort * m)
gsl_matrix_ushort_sub	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	/^int gsl_matrix_ushort_sub (gsl_matrix_ushort * a, const gsl_matrix_ushort * b);$/;"	p	signature:(gsl_matrix_ushort * a, const gsl_matrix_ushort * b)
gsl_matrix_ushort_subcolumn	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	/^gsl_matrix_ushort_subcolumn (gsl_matrix_ushort * m, const size_t j,$/;"	p	signature:(gsl_matrix_ushort * m, const size_t j, const size_t offset, const size_t n)
gsl_matrix_ushort_subdiagonal	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	/^gsl_matrix_ushort_subdiagonal (gsl_matrix_ushort * m, const size_t k);$/;"	p	signature:(gsl_matrix_ushort * m, const size_t k)
gsl_matrix_ushort_submatrix	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	/^gsl_matrix_ushort_submatrix (gsl_matrix_ushort * m, $/;"	p	signature:(gsl_matrix_ushort * m, const size_t i, const size_t j, const size_t n1, const size_t n2)
gsl_matrix_ushort_subrow	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	/^gsl_matrix_ushort_subrow (gsl_matrix_ushort * m, const size_t i,$/;"	p	signature:(gsl_matrix_ushort * m, const size_t i, const size_t offset, const size_t n)
gsl_matrix_ushort_superdiagonal	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	/^gsl_matrix_ushort_superdiagonal (gsl_matrix_ushort * m, const size_t k);$/;"	p	signature:(gsl_matrix_ushort * m, const size_t k)
gsl_matrix_ushort_swap	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	/^int gsl_matrix_ushort_swap(gsl_matrix_ushort * m1, gsl_matrix_ushort * m2);$/;"	p	signature:(gsl_matrix_ushort * m1, gsl_matrix_ushort * m2)
gsl_matrix_ushort_swap_columns	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	/^int gsl_matrix_ushort_swap_columns(gsl_matrix_ushort * m, const size_t i, const size_t j);$/;"	p	signature:(gsl_matrix_ushort * m, const size_t i, const size_t j)
gsl_matrix_ushort_swap_rowcol	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	/^int gsl_matrix_ushort_swap_rowcol(gsl_matrix_ushort * m, const size_t i, const size_t j);$/;"	p	signature:(gsl_matrix_ushort * m, const size_t i, const size_t j)
gsl_matrix_ushort_swap_rows	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	/^int gsl_matrix_ushort_swap_rows(gsl_matrix_ushort * m, const size_t i, const size_t j);$/;"	p	signature:(gsl_matrix_ushort * m, const size_t i, const size_t j)
gsl_matrix_ushort_transpose	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	/^int gsl_matrix_ushort_transpose (gsl_matrix_ushort * m);$/;"	p	signature:(gsl_matrix_ushort * m)
gsl_matrix_ushort_transpose_memcpy	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	/^int gsl_matrix_ushort_transpose_memcpy (gsl_matrix_ushort * dest, const gsl_matrix_ushort * src);$/;"	p	signature:(gsl_matrix_ushort * dest, const gsl_matrix_ushort * src)
gsl_matrix_ushort_view	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	/^typedef _gsl_matrix_ushort_view gsl_matrix_ushort_view;$/;"	t
gsl_matrix_ushort_view_array	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	/^gsl_matrix_ushort_view_array (unsigned short * base,$/;"	p	signature:(unsigned short * base, const size_t n1, const size_t n2)
gsl_matrix_ushort_view_array_with_tda	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	/^gsl_matrix_ushort_view_array_with_tda (unsigned short * base, $/;"	p	signature:(unsigned short * base, const size_t n1, const size_t n2, const size_t tda)
gsl_matrix_ushort_view_vector	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	/^gsl_matrix_ushort_view_vector (gsl_vector_ushort * v,$/;"	p	signature:(gsl_vector_ushort * v, const size_t n1, const size_t n2)
gsl_matrix_ushort_view_vector_with_tda	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	/^gsl_matrix_ushort_view_vector_with_tda (gsl_vector_ushort * v,$/;"	p	signature:(gsl_vector_ushort * v, const size_t n1, const size_t n2, const size_t tda)
gsl_matrix_view	/usr/local/gsl/include/gsl/gsl_matrix_double.h	/^typedef _gsl_matrix_view gsl_matrix_view;$/;"	t
gsl_matrix_view_array	/usr/local/gsl/include/gsl/gsl_matrix_double.h	/^gsl_matrix_view_array (double * base,$/;"	p	signature:(double * base, const size_t n1, const size_t n2)
gsl_matrix_view_array_with_tda	/usr/local/gsl/include/gsl/gsl_matrix_double.h	/^gsl_matrix_view_array_with_tda (double * base, $/;"	p	signature:(double * base, const size_t n1, const size_t n2, const size_t tda)
gsl_matrix_view_vector	/usr/local/gsl/include/gsl/gsl_matrix_double.h	/^gsl_matrix_view_vector (gsl_vector * v,$/;"	p	signature:(gsl_vector * v, const size_t n1, const size_t n2)
gsl_matrix_view_vector_with_tda	/usr/local/gsl/include/gsl/gsl_matrix_double.h	/^gsl_matrix_view_vector_with_tda (gsl_vector * v,$/;"	p	signature:(gsl_vector * v, const size_t n1, const size_t n2, const size_t tda)
gsl_max	/usr/local/gsl/include/gsl/gsl_minmax.h	/^double gsl_max (double a, double b);$/;"	p	signature:(double a, double b)
gsl_message	/usr/local/gsl/include/gsl/gsl_message.h	/^void gsl_message(const char * message, const char * file, int line,$/;"	p	signature:(const char * message, const char * file, int line, unsigned int mask)
gsl_message_mask	/usr/local/gsl/include/gsl/gsl_message.h	/^GSL_VAR unsigned int gsl_message_mask ;$/;"	v
gsl_min	/usr/local/gsl/include/gsl/gsl_minmax.h	/^double gsl_min (double a, double b);$/;"	p	signature:(double a, double b)
gsl_min_bracketing_function	/usr/local/gsl/include/gsl/gsl_min.h	/^int (*gsl_min_bracketing_function)(gsl_function *f,$/;"	t
gsl_min_find_bracket	/usr/local/gsl/include/gsl/gsl_min.h	/^gsl_min_find_bracket(gsl_function *f,double *x_minimum,double * f_minimum,$/;"	p	signature:(gsl_function *f,double *x_minimum,double * f_minimum, double *x_lower, double * f_lower, double *x_upper, double * f_upper, size_t eval_max)
gsl_min_fminimizer	/usr/local/gsl/include/gsl/gsl_min.h	/^gsl_min_fminimizer;$/;"	t	typeref:struct:__anon147
gsl_min_fminimizer_alloc	/usr/local/gsl/include/gsl/gsl_min.h	/^gsl_min_fminimizer_alloc (const gsl_min_fminimizer_type * T) ;$/;"	p	signature:(const gsl_min_fminimizer_type * T)
gsl_min_fminimizer_brent	/usr/local/gsl/include/gsl/gsl_min.h	/^GSL_VAR const gsl_min_fminimizer_type  * gsl_min_fminimizer_brent;$/;"	v
gsl_min_fminimizer_f_lower	/usr/local/gsl/include/gsl/gsl_min.h	/^double gsl_min_fminimizer_f_lower (const gsl_min_fminimizer * s);$/;"	p	signature:(const gsl_min_fminimizer * s)
gsl_min_fminimizer_f_minimum	/usr/local/gsl/include/gsl/gsl_min.h	/^double gsl_min_fminimizer_f_minimum (const gsl_min_fminimizer * s);$/;"	p	signature:(const gsl_min_fminimizer * s)
gsl_min_fminimizer_f_upper	/usr/local/gsl/include/gsl/gsl_min.h	/^double gsl_min_fminimizer_f_upper (const gsl_min_fminimizer * s);$/;"	p	signature:(const gsl_min_fminimizer * s)
gsl_min_fminimizer_free	/usr/local/gsl/include/gsl/gsl_min.h	/^void gsl_min_fminimizer_free (gsl_min_fminimizer * s);$/;"	p	signature:(gsl_min_fminimizer * s)
gsl_min_fminimizer_goldensection	/usr/local/gsl/include/gsl/gsl_min.h	/^GSL_VAR const gsl_min_fminimizer_type  * gsl_min_fminimizer_goldensection;$/;"	v
gsl_min_fminimizer_iterate	/usr/local/gsl/include/gsl/gsl_min.h	/^int gsl_min_fminimizer_iterate (gsl_min_fminimizer * s);$/;"	p	signature:(gsl_min_fminimizer * s)
gsl_min_fminimizer_minimum	/usr/local/gsl/include/gsl/gsl_min.h	/^double gsl_min_fminimizer_minimum (const gsl_min_fminimizer * s);$/;"	p	signature:(const gsl_min_fminimizer * s)
gsl_min_fminimizer_name	/usr/local/gsl/include/gsl/gsl_min.h	/^const char * gsl_min_fminimizer_name (const gsl_min_fminimizer * s);$/;"	p	signature:(const gsl_min_fminimizer * s)
gsl_min_fminimizer_set	/usr/local/gsl/include/gsl/gsl_min.h	/^int gsl_min_fminimizer_set (gsl_min_fminimizer * s, $/;"	p	signature:(gsl_min_fminimizer * s, gsl_function * f, double x_minimum, double x_lower, double x_upper)
gsl_min_fminimizer_set_with_values	/usr/local/gsl/include/gsl/gsl_min.h	/^int gsl_min_fminimizer_set_with_values (gsl_min_fminimizer * s, $/;"	p	signature:(gsl_min_fminimizer * s, gsl_function * f, double x_minimum, double f_minimum, double x_lower, double f_lower, double x_upper, double f_upper)
gsl_min_fminimizer_type	/usr/local/gsl/include/gsl/gsl_min.h	/^gsl_min_fminimizer_type;$/;"	t	typeref:struct:__anon146
gsl_min_fminimizer_x_lower	/usr/local/gsl/include/gsl/gsl_min.h	/^double gsl_min_fminimizer_x_lower (const gsl_min_fminimizer * s);$/;"	p	signature:(const gsl_min_fminimizer * s)
gsl_min_fminimizer_x_minimum	/usr/local/gsl/include/gsl/gsl_min.h	/^double gsl_min_fminimizer_x_minimum (const gsl_min_fminimizer * s);$/;"	p	signature:(const gsl_min_fminimizer * s)
gsl_min_fminimizer_x_upper	/usr/local/gsl/include/gsl/gsl_min.h	/^double gsl_min_fminimizer_x_upper (const gsl_min_fminimizer * s);$/;"	p	signature:(const gsl_min_fminimizer * s)
gsl_min_test_interval	/usr/local/gsl/include/gsl/gsl_min.h	/^gsl_min_test_interval (double x_lower, double x_upper, double epsabs, double epsrel);$/;"	p	signature:(double x_lower, double x_upper, double epsabs, double epsrel)
gsl_mode_t	/usr/local/gsl/include/gsl/gsl_mode.h	/^typedef unsigned int gsl_mode_t;$/;"	t
gsl_monte_function	/usr/local/gsl/include/gsl/gsl_monte.h	/^typedef struct gsl_monte_function_struct gsl_monte_function;$/;"	t	typeref:struct:gsl_monte_function_struct
gsl_monte_function_struct	/usr/local/gsl/include/gsl/gsl_monte.h	/^struct gsl_monte_function_struct {$/;"	s
gsl_monte_function_struct::dim	/usr/local/gsl/include/gsl/gsl_monte.h	/^  size_t dim;$/;"	m	struct:gsl_monte_function_struct	access:public
gsl_monte_function_struct::f	/usr/local/gsl/include/gsl/gsl_monte.h	/^  double (*f)(double * x_array, size_t dim, void * params);$/;"	m	struct:gsl_monte_function_struct	access:public
gsl_monte_function_struct::params	/usr/local/gsl/include/gsl/gsl_monte.h	/^  void * params;$/;"	m	struct:gsl_monte_function_struct	access:public
gsl_monte_miser_alloc	/usr/local/gsl/include/gsl/gsl_monte_miser.h	/^gsl_monte_miser_state* gsl_monte_miser_alloc(size_t dim);$/;"	p	signature:(size_t dim)
gsl_monte_miser_free	/usr/local/gsl/include/gsl/gsl_monte_miser.h	/^void gsl_monte_miser_free(gsl_monte_miser_state* state);$/;"	p	signature:(gsl_monte_miser_state* state)
gsl_monte_miser_init	/usr/local/gsl/include/gsl/gsl_monte_miser.h	/^int gsl_monte_miser_init(gsl_monte_miser_state* state);$/;"	p	signature:(gsl_monte_miser_state* state)
gsl_monte_miser_integrate	/usr/local/gsl/include/gsl/gsl_monte_miser.h	/^int gsl_monte_miser_integrate(gsl_monte_function * f, $/;"	p	signature:(gsl_monte_function * f, const double xl[], const double xh[], size_t dim, size_t calls, gsl_rng *r, gsl_monte_miser_state* state, double *result, double *abserr)
gsl_monte_miser_state	/usr/local/gsl/include/gsl/gsl_monte_miser.h	/^} gsl_monte_miser_state; $/;"	t	typeref:struct:__anon4
gsl_monte_plain_alloc	/usr/local/gsl/include/gsl/gsl_monte_plain.h	/^gsl_monte_plain_state* gsl_monte_plain_alloc(size_t dim);$/;"	p	signature:(size_t dim)
gsl_monte_plain_free	/usr/local/gsl/include/gsl/gsl_monte_plain.h	/^void gsl_monte_plain_free (gsl_monte_plain_state* state);$/;"	p	signature:(gsl_monte_plain_state* state)
gsl_monte_plain_init	/usr/local/gsl/include/gsl/gsl_monte_plain.h	/^int gsl_monte_plain_init(gsl_monte_plain_state* state);$/;"	p	signature:(gsl_monte_plain_state* state)
gsl_monte_plain_integrate	/usr/local/gsl/include/gsl/gsl_monte_plain.h	/^gsl_monte_plain_integrate (const gsl_monte_function * f,$/;"	p	signature:(const gsl_monte_function * f, const double xl[], const double xu[], const size_t dim, const size_t calls, gsl_rng * r, gsl_monte_plain_state * state, double *result, double *abserr)
gsl_monte_plain_state	/usr/local/gsl/include/gsl/gsl_monte_plain.h	/^} gsl_monte_plain_state;$/;"	t	typeref:struct:__anon49
gsl_monte_vegas_alloc	/usr/local/gsl/include/gsl/gsl_monte_vegas.h	/^gsl_monte_vegas_state* gsl_monte_vegas_alloc(size_t dim);$/;"	p	signature:(size_t dim)
gsl_monte_vegas_free	/usr/local/gsl/include/gsl/gsl_monte_vegas.h	/^void gsl_monte_vegas_free (gsl_monte_vegas_state* state);$/;"	p	signature:(gsl_monte_vegas_state* state)
gsl_monte_vegas_init	/usr/local/gsl/include/gsl/gsl_monte_vegas.h	/^int gsl_monte_vegas_init(gsl_monte_vegas_state* state);$/;"	p	signature:(gsl_monte_vegas_state* state)
gsl_monte_vegas_integrate	/usr/local/gsl/include/gsl/gsl_monte_vegas.h	/^int gsl_monte_vegas_integrate(gsl_monte_function * f, $/;"	p	signature:(gsl_monte_function * f, double xl[], double xu[], size_t dim, size_t calls, gsl_rng * r, gsl_monte_vegas_state *state, double* result, double* abserr)
gsl_monte_vegas_state	/usr/local/gsl/include/gsl/gsl_monte_vegas.h	/^} gsl_monte_vegas_state;$/;"	t	typeref:struct:__anon110
gsl_multifit_covar	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	/^int gsl_multifit_covar (const gsl_matrix * J, double epsrel, gsl_matrix * covar);$/;"	p	signature:(const gsl_matrix * J, double epsrel, gsl_matrix * covar)
gsl_multifit_fdfsolver	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	/^gsl_multifit_fdfsolver;$/;"	t	typeref:struct:__anon9
gsl_multifit_fdfsolver_alloc	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	/^gsl_multifit_fdfsolver_alloc (const gsl_multifit_fdfsolver_type * T, $/;"	p	signature:(const gsl_multifit_fdfsolver_type * T, size_t n, size_t p)
gsl_multifit_fdfsolver_free	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	/^gsl_multifit_fdfsolver_free (gsl_multifit_fdfsolver * s);$/;"	p	signature:(gsl_multifit_fdfsolver * s)
gsl_multifit_fdfsolver_iterate	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	/^gsl_multifit_fdfsolver_iterate (gsl_multifit_fdfsolver * s);$/;"	p	signature:(gsl_multifit_fdfsolver * s)
gsl_multifit_fdfsolver_lmder	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	/^GSL_VAR const gsl_multifit_fdfsolver_type * gsl_multifit_fdfsolver_lmder;$/;"	v
gsl_multifit_fdfsolver_lmsder	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	/^GSL_VAR const gsl_multifit_fdfsolver_type * gsl_multifit_fdfsolver_lmsder;$/;"	v
gsl_multifit_fdfsolver_name	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	/^const char * gsl_multifit_fdfsolver_name (const gsl_multifit_fdfsolver * s);$/;"	p	signature:(const gsl_multifit_fdfsolver * s)
gsl_multifit_fdfsolver_position	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	/^gsl_vector * gsl_multifit_fdfsolver_position (const gsl_multifit_fdfsolver * s);$/;"	p	signature:(const gsl_multifit_fdfsolver * s)
gsl_multifit_fdfsolver_set	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	/^gsl_multifit_fdfsolver_set (gsl_multifit_fdfsolver * s, $/;"	p	signature:(gsl_multifit_fdfsolver * s, gsl_multifit_function_fdf * fdf, const gsl_vector * x)
gsl_multifit_fdfsolver_type	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	/^gsl_multifit_fdfsolver_type;$/;"	t	typeref:struct:__anon8
gsl_multifit_fsolver	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	/^gsl_multifit_fsolver;$/;"	t	typeref:struct:__anon7
gsl_multifit_fsolver_alloc	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	/^gsl_multifit_fsolver_alloc (const gsl_multifit_fsolver_type * T, $/;"	p	signature:(const gsl_multifit_fsolver_type * T, size_t n, size_t p)
gsl_multifit_fsolver_free	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	/^void gsl_multifit_fsolver_free (gsl_multifit_fsolver * s);$/;"	p	signature:(gsl_multifit_fsolver * s)
gsl_multifit_fsolver_iterate	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	/^int gsl_multifit_fsolver_iterate (gsl_multifit_fsolver * s);$/;"	p	signature:(gsl_multifit_fsolver * s)
gsl_multifit_fsolver_name	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	/^const char * gsl_multifit_fsolver_name (const gsl_multifit_fsolver * s);$/;"	p	signature:(const gsl_multifit_fsolver * s)
gsl_multifit_fsolver_position	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	/^gsl_vector * gsl_multifit_fsolver_position (const gsl_multifit_fsolver * s);$/;"	p	signature:(const gsl_multifit_fsolver * s)
gsl_multifit_fsolver_set	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	/^int gsl_multifit_fsolver_set (gsl_multifit_fsolver * s, $/;"	p	signature:(gsl_multifit_fsolver * s, gsl_multifit_function * f, const gsl_vector * x)
gsl_multifit_fsolver_type	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	/^gsl_multifit_fsolver_type;$/;"	t	typeref:struct:__anon6
gsl_multifit_function	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	/^typedef struct gsl_multifit_function_struct gsl_multifit_function ;$/;"	t	typeref:struct:gsl_multifit_function_struct
gsl_multifit_function_fdf	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	/^typedef struct gsl_multifit_function_fdf_struct gsl_multifit_function_fdf ;$/;"	t	typeref:struct:gsl_multifit_function_fdf_struct
gsl_multifit_function_fdf_struct	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	/^struct gsl_multifit_function_fdf_struct$/;"	s
gsl_multifit_function_fdf_struct::df	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	/^  int (* df) (const gsl_vector * x, void * params, gsl_matrix * df);$/;"	m	struct:gsl_multifit_function_fdf_struct	access:public
gsl_multifit_function_fdf_struct::f	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	/^  int (* f) (const gsl_vector * x, void * params, gsl_vector * f);$/;"	m	struct:gsl_multifit_function_fdf_struct	access:public
gsl_multifit_function_fdf_struct::fdf	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	/^  int (* fdf) (const gsl_vector * x, void * params, gsl_vector * f, gsl_matrix *df);$/;"	m	struct:gsl_multifit_function_fdf_struct	access:public
gsl_multifit_function_fdf_struct::n	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	/^  size_t n;   \/* number of functions *\/$/;"	m	struct:gsl_multifit_function_fdf_struct	access:public
gsl_multifit_function_fdf_struct::p	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	/^  size_t p;   \/* number of independent variables *\/$/;"	m	struct:gsl_multifit_function_fdf_struct	access:public
gsl_multifit_function_fdf_struct::params	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	/^  void * params;$/;"	m	struct:gsl_multifit_function_fdf_struct	access:public
gsl_multifit_function_struct	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	/^struct gsl_multifit_function_struct$/;"	s
gsl_multifit_function_struct::f	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	/^  int (* f) (const gsl_vector * x, void * params, gsl_vector * f);$/;"	m	struct:gsl_multifit_function_struct	access:public
gsl_multifit_function_struct::n	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	/^  size_t n;   \/* number of functions *\/$/;"	m	struct:gsl_multifit_function_struct	access:public
gsl_multifit_function_struct::p	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	/^  size_t p;   \/* number of independent variables *\/$/;"	m	struct:gsl_multifit_function_struct	access:public
gsl_multifit_function_struct::params	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	/^  void * params;$/;"	m	struct:gsl_multifit_function_struct	access:public
gsl_multifit_gradient	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	/^int gsl_multifit_gradient (const gsl_matrix * J, const gsl_vector * f,$/;"	p	signature:(const gsl_matrix * J, const gsl_vector * f, gsl_vector * g)
gsl_multifit_linear	/usr/local/gsl/include/gsl/gsl_multifit.h	/^gsl_multifit_linear (const gsl_matrix * X,$/;"	p	signature:(const gsl_matrix * X, const gsl_vector * y, gsl_vector * c, gsl_matrix * cov, double * chisq, gsl_multifit_linear_workspace * work)
gsl_multifit_linear_alloc	/usr/local/gsl/include/gsl/gsl_multifit.h	/^gsl_multifit_linear_alloc (size_t n, size_t p);$/;"	p	signature:(size_t n, size_t p)
gsl_multifit_linear_est	/usr/local/gsl/include/gsl/gsl_multifit.h	/^gsl_multifit_linear_est (const gsl_vector * x,$/;"	p	signature:(const gsl_vector * x, const gsl_vector * c, const gsl_matrix * cov, double *y, double *y_err)
gsl_multifit_linear_free	/usr/local/gsl/include/gsl/gsl_multifit.h	/^gsl_multifit_linear_free (gsl_multifit_linear_workspace * work);$/;"	p	signature:(gsl_multifit_linear_workspace * work)
gsl_multifit_linear_residuals	/usr/local/gsl/include/gsl/gsl_multifit.h	/^gsl_multifit_linear_residuals (const gsl_matrix *X, const gsl_vector *y,$/;"	p	signature:(const gsl_matrix *X, const gsl_vector *y, const gsl_vector *c, gsl_vector *r)
gsl_multifit_linear_svd	/usr/local/gsl/include/gsl/gsl_multifit.h	/^gsl_multifit_linear_svd (const gsl_matrix * X,$/;"	p	signature:(const gsl_matrix * X, const gsl_vector * y, double tol, size_t * rank, gsl_vector * c, gsl_matrix * cov, double *chisq, gsl_multifit_linear_workspace * work)
gsl_multifit_linear_workspace	/usr/local/gsl/include/gsl/gsl_multifit.h	/^gsl_multifit_linear_workspace;$/;"	t	typeref:struct:__anon118
gsl_multifit_test_delta	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	/^int gsl_multifit_test_delta (const gsl_vector * dx, const gsl_vector * x, $/;"	p	signature:(const gsl_vector * dx, const gsl_vector * x, double epsabs, double epsrel)
gsl_multifit_test_gradient	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	/^int gsl_multifit_test_gradient (const gsl_vector * g, double epsabs);$/;"	p	signature:(const gsl_vector * g, double epsabs)
gsl_multifit_wlinear	/usr/local/gsl/include/gsl/gsl_multifit.h	/^gsl_multifit_wlinear (const gsl_matrix * X,$/;"	p	signature:(const gsl_matrix * X, const gsl_vector * w, const gsl_vector * y, gsl_vector * c, gsl_matrix * cov, double * chisq, gsl_multifit_linear_workspace * work)
gsl_multifit_wlinear_svd	/usr/local/gsl/include/gsl/gsl_multifit.h	/^gsl_multifit_wlinear_svd (const gsl_matrix * X,$/;"	p	signature:(const gsl_matrix * X, const gsl_vector * w, const gsl_vector * y, double tol, size_t * rank, gsl_vector * c, gsl_matrix * cov, double *chisq, gsl_multifit_linear_workspace * work)
gsl_multimin_diff	/usr/local/gsl/include/gsl/gsl_multimin.h	/^int gsl_multimin_diff (const gsl_multimin_function * f,$/;"	p	signature:(const gsl_multimin_function * f, const gsl_vector * x, gsl_vector * g)
gsl_multimin_fdfminimizer	/usr/local/gsl/include/gsl/gsl_multimin.h	/^gsl_multimin_fdfminimizer;$/;"	t	typeref:struct:__anon114
gsl_multimin_fdfminimizer_alloc	/usr/local/gsl/include/gsl/gsl_multimin.h	/^gsl_multimin_fdfminimizer_alloc(const gsl_multimin_fdfminimizer_type *T,$/;"	p	signature:(const gsl_multimin_fdfminimizer_type *T, size_t n)
gsl_multimin_fdfminimizer_conjugate_fr	/usr/local/gsl/include/gsl/gsl_multimin.h	/^GSL_VAR const gsl_multimin_fdfminimizer_type *gsl_multimin_fdfminimizer_conjugate_fr;$/;"	v
gsl_multimin_fdfminimizer_conjugate_pr	/usr/local/gsl/include/gsl/gsl_multimin.h	/^GSL_VAR const gsl_multimin_fdfminimizer_type *gsl_multimin_fdfminimizer_conjugate_pr;$/;"	v
gsl_multimin_fdfminimizer_dx	/usr/local/gsl/include/gsl/gsl_multimin.h	/^gsl_multimin_fdfminimizer_dx (const gsl_multimin_fdfminimizer * s);$/;"	p	signature:(const gsl_multimin_fdfminimizer * s)
gsl_multimin_fdfminimizer_free	/usr/local/gsl/include/gsl/gsl_multimin.h	/^gsl_multimin_fdfminimizer_free(gsl_multimin_fdfminimizer *s);$/;"	p	signature:(gsl_multimin_fdfminimizer *s)
gsl_multimin_fdfminimizer_gradient	/usr/local/gsl/include/gsl/gsl_multimin.h	/^gsl_multimin_fdfminimizer_gradient (const gsl_multimin_fdfminimizer * s);$/;"	p	signature:(const gsl_multimin_fdfminimizer * s)
gsl_multimin_fdfminimizer_iterate	/usr/local/gsl/include/gsl/gsl_multimin.h	/^gsl_multimin_fdfminimizer_iterate(gsl_multimin_fdfminimizer *s);$/;"	p	signature:(gsl_multimin_fdfminimizer *s)
gsl_multimin_fdfminimizer_minimum	/usr/local/gsl/include/gsl/gsl_multimin.h	/^gsl_multimin_fdfminimizer_minimum (const gsl_multimin_fdfminimizer * s);$/;"	p	signature:(const gsl_multimin_fdfminimizer * s)
gsl_multimin_fdfminimizer_name	/usr/local/gsl/include/gsl/gsl_multimin.h	/^gsl_multimin_fdfminimizer_name (const gsl_multimin_fdfminimizer * s);$/;"	p	signature:(const gsl_multimin_fdfminimizer * s)
gsl_multimin_fdfminimizer_restart	/usr/local/gsl/include/gsl/gsl_multimin.h	/^gsl_multimin_fdfminimizer_restart(gsl_multimin_fdfminimizer *s);$/;"	p	signature:(gsl_multimin_fdfminimizer *s)
gsl_multimin_fdfminimizer_set	/usr/local/gsl/include/gsl/gsl_multimin.h	/^gsl_multimin_fdfminimizer_set (gsl_multimin_fdfminimizer * s,$/;"	p	signature:(gsl_multimin_fdfminimizer * s, gsl_multimin_function_fdf *fdf, const gsl_vector * x, double step_size, double tol)
gsl_multimin_fdfminimizer_steepest_descent	/usr/local/gsl/include/gsl/gsl_multimin.h	/^GSL_VAR const gsl_multimin_fdfminimizer_type *gsl_multimin_fdfminimizer_steepest_descent;$/;"	v
gsl_multimin_fdfminimizer_type	/usr/local/gsl/include/gsl/gsl_multimin.h	/^gsl_multimin_fdfminimizer_type;$/;"	t	typeref:struct:__anon113
gsl_multimin_fdfminimizer_vector_bfgs	/usr/local/gsl/include/gsl/gsl_multimin.h	/^GSL_VAR const gsl_multimin_fdfminimizer_type *gsl_multimin_fdfminimizer_vector_bfgs;$/;"	v
gsl_multimin_fdfminimizer_vector_bfgs2	/usr/local/gsl/include/gsl/gsl_multimin.h	/^GSL_VAR const gsl_multimin_fdfminimizer_type *gsl_multimin_fdfminimizer_vector_bfgs2;$/;"	v
gsl_multimin_fdfminimizer_x	/usr/local/gsl/include/gsl/gsl_multimin.h	/^gsl_multimin_fdfminimizer_x (const gsl_multimin_fdfminimizer * s);$/;"	p	signature:(const gsl_multimin_fdfminimizer * s)
gsl_multimin_fminimizer	/usr/local/gsl/include/gsl/gsl_multimin.h	/^gsl_multimin_fminimizer;$/;"	t	typeref:struct:__anon112
gsl_multimin_fminimizer_alloc	/usr/local/gsl/include/gsl/gsl_multimin.h	/^gsl_multimin_fminimizer_alloc(const gsl_multimin_fminimizer_type *T,$/;"	p	signature:(const gsl_multimin_fminimizer_type *T, size_t n)
gsl_multimin_fminimizer_free	/usr/local/gsl/include/gsl/gsl_multimin.h	/^gsl_multimin_fminimizer_free(gsl_multimin_fminimizer *s);$/;"	p	signature:(gsl_multimin_fminimizer *s)
gsl_multimin_fminimizer_iterate	/usr/local/gsl/include/gsl/gsl_multimin.h	/^gsl_multimin_fminimizer_iterate(gsl_multimin_fminimizer *s);$/;"	p	signature:(gsl_multimin_fminimizer *s)
gsl_multimin_fminimizer_minimum	/usr/local/gsl/include/gsl/gsl_multimin.h	/^gsl_multimin_fminimizer_minimum (const gsl_multimin_fminimizer * s);$/;"	p	signature:(const gsl_multimin_fminimizer * s)
gsl_multimin_fminimizer_name	/usr/local/gsl/include/gsl/gsl_multimin.h	/^gsl_multimin_fminimizer_name (const gsl_multimin_fminimizer * s);$/;"	p	signature:(const gsl_multimin_fminimizer * s)
gsl_multimin_fminimizer_nmsimplex	/usr/local/gsl/include/gsl/gsl_multimin.h	/^GSL_VAR const gsl_multimin_fminimizer_type *gsl_multimin_fminimizer_nmsimplex;$/;"	v
gsl_multimin_fminimizer_nmsimplex2	/usr/local/gsl/include/gsl/gsl_multimin.h	/^GSL_VAR const gsl_multimin_fminimizer_type *gsl_multimin_fminimizer_nmsimplex2;$/;"	v
gsl_multimin_fminimizer_set	/usr/local/gsl/include/gsl/gsl_multimin.h	/^gsl_multimin_fminimizer_set (gsl_multimin_fminimizer * s,$/;"	p	signature:(gsl_multimin_fminimizer * s, gsl_multimin_function * f, const gsl_vector * x, const gsl_vector * step_size)
gsl_multimin_fminimizer_size	/usr/local/gsl/include/gsl/gsl_multimin.h	/^gsl_multimin_fminimizer_size (const gsl_multimin_fminimizer * s);$/;"	p	signature:(const gsl_multimin_fminimizer * s)
gsl_multimin_fminimizer_type	/usr/local/gsl/include/gsl/gsl_multimin.h	/^gsl_multimin_fminimizer_type;$/;"	t	typeref:struct:__anon111
gsl_multimin_fminimizer_x	/usr/local/gsl/include/gsl/gsl_multimin.h	/^gsl_multimin_fminimizer_x (const gsl_multimin_fminimizer * s);$/;"	p	signature:(const gsl_multimin_fminimizer * s)
gsl_multimin_function	/usr/local/gsl/include/gsl/gsl_multimin.h	/^typedef struct gsl_multimin_function_struct gsl_multimin_function;$/;"	t	typeref:struct:gsl_multimin_function_struct
gsl_multimin_function_fdf	/usr/local/gsl/include/gsl/gsl_multimin.h	/^typedef struct gsl_multimin_function_fdf_struct gsl_multimin_function_fdf;$/;"	t	typeref:struct:gsl_multimin_function_fdf_struct
gsl_multimin_function_fdf_struct	/usr/local/gsl/include/gsl/gsl_multimin.h	/^struct gsl_multimin_function_fdf_struct $/;"	s
gsl_multimin_function_fdf_struct::df	/usr/local/gsl/include/gsl/gsl_multimin.h	/^  void (* df) (const gsl_vector * x, void * params,gsl_vector * df);$/;"	m	struct:gsl_multimin_function_fdf_struct	access:public
gsl_multimin_function_fdf_struct::f	/usr/local/gsl/include/gsl/gsl_multimin.h	/^  double (* f) (const gsl_vector  * x, void * params);$/;"	m	struct:gsl_multimin_function_fdf_struct	access:public
gsl_multimin_function_fdf_struct::fdf	/usr/local/gsl/include/gsl/gsl_multimin.h	/^  void (* fdf) (const gsl_vector * x, void * params,double *f,gsl_vector * df);$/;"	m	struct:gsl_multimin_function_fdf_struct	access:public
gsl_multimin_function_fdf_struct::n	/usr/local/gsl/include/gsl/gsl_multimin.h	/^  size_t n;$/;"	m	struct:gsl_multimin_function_fdf_struct	access:public
gsl_multimin_function_fdf_struct::params	/usr/local/gsl/include/gsl/gsl_multimin.h	/^  void * params;$/;"	m	struct:gsl_multimin_function_fdf_struct	access:public
gsl_multimin_function_struct	/usr/local/gsl/include/gsl/gsl_multimin.h	/^struct gsl_multimin_function_struct $/;"	s
gsl_multimin_function_struct::f	/usr/local/gsl/include/gsl/gsl_multimin.h	/^  double (* f) (const gsl_vector * x, void * params);$/;"	m	struct:gsl_multimin_function_struct	access:public
gsl_multimin_function_struct::n	/usr/local/gsl/include/gsl/gsl_multimin.h	/^  size_t n;$/;"	m	struct:gsl_multimin_function_struct	access:public
gsl_multimin_function_struct::params	/usr/local/gsl/include/gsl/gsl_multimin.h	/^  void * params;$/;"	m	struct:gsl_multimin_function_struct	access:public
gsl_multimin_test_gradient	/usr/local/gsl/include/gsl/gsl_multimin.h	/^gsl_multimin_test_gradient(const gsl_vector * g,double epsabs);$/;"	p	signature:(const gsl_vector * g,double epsabs)
gsl_multimin_test_size	/usr/local/gsl/include/gsl/gsl_multimin.h	/^gsl_multimin_test_size(const double size ,double epsabs);$/;"	p	signature:(const double size ,double epsabs)
gsl_multiroot_fdfsolver	/usr/local/gsl/include/gsl/gsl_multiroots.h	/^gsl_multiroot_fdfsolver;$/;"	t	typeref:struct:__anon181
gsl_multiroot_fdfsolver_alloc	/usr/local/gsl/include/gsl/gsl_multiroots.h	/^gsl_multiroot_fdfsolver_alloc (const gsl_multiroot_fdfsolver_type * T,$/;"	p	signature:(const gsl_multiroot_fdfsolver_type * T, size_t n)
gsl_multiroot_fdfsolver_dx	/usr/local/gsl/include/gsl/gsl_multiroots.h	/^gsl_vector * gsl_multiroot_fdfsolver_dx (const gsl_multiroot_fdfsolver * s);$/;"	p	signature:(const gsl_multiroot_fdfsolver * s)
gsl_multiroot_fdfsolver_f	/usr/local/gsl/include/gsl/gsl_multiroots.h	/^gsl_vector * gsl_multiroot_fdfsolver_f (const gsl_multiroot_fdfsolver * s);$/;"	p	signature:(const gsl_multiroot_fdfsolver * s)
gsl_multiroot_fdfsolver_free	/usr/local/gsl/include/gsl/gsl_multiroots.h	/^gsl_multiroot_fdfsolver_free (gsl_multiroot_fdfsolver * s);$/;"	p	signature:(gsl_multiroot_fdfsolver * s)
gsl_multiroot_fdfsolver_gnewton	/usr/local/gsl/include/gsl/gsl_multiroots.h	/^GSL_VAR const gsl_multiroot_fdfsolver_type * gsl_multiroot_fdfsolver_gnewton;$/;"	v
gsl_multiroot_fdfsolver_hybridj	/usr/local/gsl/include/gsl/gsl_multiroots.h	/^GSL_VAR const gsl_multiroot_fdfsolver_type * gsl_multiroot_fdfsolver_hybridj;$/;"	v
gsl_multiroot_fdfsolver_hybridsj	/usr/local/gsl/include/gsl/gsl_multiroots.h	/^GSL_VAR const gsl_multiroot_fdfsolver_type * gsl_multiroot_fdfsolver_hybridsj;$/;"	v
gsl_multiroot_fdfsolver_iterate	/usr/local/gsl/include/gsl/gsl_multiroots.h	/^gsl_multiroot_fdfsolver_iterate (gsl_multiroot_fdfsolver * s);$/;"	p	signature:(gsl_multiroot_fdfsolver * s)
gsl_multiroot_fdfsolver_name	/usr/local/gsl/include/gsl/gsl_multiroots.h	/^const char * gsl_multiroot_fdfsolver_name (const gsl_multiroot_fdfsolver * s);$/;"	p	signature:(const gsl_multiroot_fdfsolver * s)
gsl_multiroot_fdfsolver_newton	/usr/local/gsl/include/gsl/gsl_multiroots.h	/^GSL_VAR const gsl_multiroot_fdfsolver_type * gsl_multiroot_fdfsolver_newton;$/;"	v
gsl_multiroot_fdfsolver_root	/usr/local/gsl/include/gsl/gsl_multiroots.h	/^gsl_vector * gsl_multiroot_fdfsolver_root (const gsl_multiroot_fdfsolver * s);$/;"	p	signature:(const gsl_multiroot_fdfsolver * s)
gsl_multiroot_fdfsolver_set	/usr/local/gsl/include/gsl/gsl_multiroots.h	/^gsl_multiroot_fdfsolver_set (gsl_multiroot_fdfsolver * s, $/;"	p	signature:(gsl_multiroot_fdfsolver * s, gsl_multiroot_function_fdf * fdf, const gsl_vector * x)
gsl_multiroot_fdfsolver_type	/usr/local/gsl/include/gsl/gsl_multiroots.h	/^gsl_multiroot_fdfsolver_type;$/;"	t	typeref:struct:__anon180
gsl_multiroot_fdjacobian	/usr/local/gsl/include/gsl/gsl_multiroots.h	/^int gsl_multiroot_fdjacobian (gsl_multiroot_function * F,$/;"	p	signature:(gsl_multiroot_function * F, const gsl_vector * x, const gsl_vector * f, double epsrel, gsl_matrix * jacobian)
gsl_multiroot_fsolver	/usr/local/gsl/include/gsl/gsl_multiroots.h	/^gsl_multiroot_fsolver;$/;"	t	typeref:struct:__anon179
gsl_multiroot_fsolver_alloc	/usr/local/gsl/include/gsl/gsl_multiroots.h	/^gsl_multiroot_fsolver_alloc (const gsl_multiroot_fsolver_type * T, $/;"	p	signature:(const gsl_multiroot_fsolver_type * T, size_t n)
gsl_multiroot_fsolver_broyden	/usr/local/gsl/include/gsl/gsl_multiroots.h	/^GSL_VAR const gsl_multiroot_fsolver_type * gsl_multiroot_fsolver_broyden;$/;"	v
gsl_multiroot_fsolver_dnewton	/usr/local/gsl/include/gsl/gsl_multiroots.h	/^GSL_VAR const gsl_multiroot_fsolver_type * gsl_multiroot_fsolver_dnewton;$/;"	v
gsl_multiroot_fsolver_dx	/usr/local/gsl/include/gsl/gsl_multiroots.h	/^gsl_vector * gsl_multiroot_fsolver_dx (const gsl_multiroot_fsolver * s);$/;"	p	signature:(const gsl_multiroot_fsolver * s)
gsl_multiroot_fsolver_f	/usr/local/gsl/include/gsl/gsl_multiroots.h	/^gsl_vector * gsl_multiroot_fsolver_f (const gsl_multiroot_fsolver * s);$/;"	p	signature:(const gsl_multiroot_fsolver * s)
gsl_multiroot_fsolver_free	/usr/local/gsl/include/gsl/gsl_multiroots.h	/^void gsl_multiroot_fsolver_free (gsl_multiroot_fsolver * s);$/;"	p	signature:(gsl_multiroot_fsolver * s)
gsl_multiroot_fsolver_hybrid	/usr/local/gsl/include/gsl/gsl_multiroots.h	/^GSL_VAR const gsl_multiroot_fsolver_type * gsl_multiroot_fsolver_hybrid;$/;"	v
gsl_multiroot_fsolver_hybrids	/usr/local/gsl/include/gsl/gsl_multiroots.h	/^GSL_VAR const gsl_multiroot_fsolver_type * gsl_multiroot_fsolver_hybrids;$/;"	v
gsl_multiroot_fsolver_iterate	/usr/local/gsl/include/gsl/gsl_multiroots.h	/^int gsl_multiroot_fsolver_iterate (gsl_multiroot_fsolver * s);$/;"	p	signature:(gsl_multiroot_fsolver * s)
gsl_multiroot_fsolver_name	/usr/local/gsl/include/gsl/gsl_multiroots.h	/^const char * gsl_multiroot_fsolver_name (const gsl_multiroot_fsolver * s);$/;"	p	signature:(const gsl_multiroot_fsolver * s)
gsl_multiroot_fsolver_root	/usr/local/gsl/include/gsl/gsl_multiroots.h	/^gsl_vector * gsl_multiroot_fsolver_root (const gsl_multiroot_fsolver * s);$/;"	p	signature:(const gsl_multiroot_fsolver * s)
gsl_multiroot_fsolver_set	/usr/local/gsl/include/gsl/gsl_multiroots.h	/^int gsl_multiroot_fsolver_set (gsl_multiroot_fsolver * s, $/;"	p	signature:(gsl_multiroot_fsolver * s, gsl_multiroot_function * f, const gsl_vector * x)
gsl_multiroot_fsolver_type	/usr/local/gsl/include/gsl/gsl_multiroots.h	/^gsl_multiroot_fsolver_type;$/;"	t	typeref:struct:__anon178
gsl_multiroot_function	/usr/local/gsl/include/gsl/gsl_multiroots.h	/^typedef struct gsl_multiroot_function_struct gsl_multiroot_function ;$/;"	t	typeref:struct:gsl_multiroot_function_struct
gsl_multiroot_function_fdf	/usr/local/gsl/include/gsl/gsl_multiroots.h	/^typedef struct gsl_multiroot_function_fdf_struct gsl_multiroot_function_fdf ;$/;"	t	typeref:struct:gsl_multiroot_function_fdf_struct
gsl_multiroot_function_fdf_struct	/usr/local/gsl/include/gsl/gsl_multiroots.h	/^struct gsl_multiroot_function_fdf_struct$/;"	s
gsl_multiroot_function_fdf_struct::df	/usr/local/gsl/include/gsl/gsl_multiroots.h	/^  int (* df) (const gsl_vector * x, void * params, gsl_matrix * df);$/;"	m	struct:gsl_multiroot_function_fdf_struct	access:public
gsl_multiroot_function_fdf_struct::f	/usr/local/gsl/include/gsl/gsl_multiroots.h	/^  int (* f) (const gsl_vector * x, void * params, gsl_vector * f);$/;"	m	struct:gsl_multiroot_function_fdf_struct	access:public
gsl_multiroot_function_fdf_struct::fdf	/usr/local/gsl/include/gsl/gsl_multiroots.h	/^  int (* fdf) (const gsl_vector * x, void * params, gsl_vector * f, gsl_matrix *df);$/;"	m	struct:gsl_multiroot_function_fdf_struct	access:public
gsl_multiroot_function_fdf_struct::n	/usr/local/gsl/include/gsl/gsl_multiroots.h	/^  size_t n;$/;"	m	struct:gsl_multiroot_function_fdf_struct	access:public
gsl_multiroot_function_fdf_struct::params	/usr/local/gsl/include/gsl/gsl_multiroots.h	/^  void * params;$/;"	m	struct:gsl_multiroot_function_fdf_struct	access:public
gsl_multiroot_function_struct	/usr/local/gsl/include/gsl/gsl_multiroots.h	/^struct gsl_multiroot_function_struct$/;"	s
gsl_multiroot_function_struct::f	/usr/local/gsl/include/gsl/gsl_multiroots.h	/^  int (* f) (const gsl_vector * x, void * params, gsl_vector * f);$/;"	m	struct:gsl_multiroot_function_struct	access:public
gsl_multiroot_function_struct::n	/usr/local/gsl/include/gsl/gsl_multiroots.h	/^  size_t n;$/;"	m	struct:gsl_multiroot_function_struct	access:public
gsl_multiroot_function_struct::params	/usr/local/gsl/include/gsl/gsl_multiroots.h	/^  void * params;$/;"	m	struct:gsl_multiroot_function_struct	access:public
gsl_multiroot_test_delta	/usr/local/gsl/include/gsl/gsl_multiroots.h	/^int gsl_multiroot_test_delta (const gsl_vector * dx, const gsl_vector * x, $/;"	p	signature:(const gsl_vector * dx, const gsl_vector * x, double epsabs, double epsrel)
gsl_multiroot_test_residual	/usr/local/gsl/include/gsl/gsl_multiroots.h	/^int gsl_multiroot_test_residual (const gsl_vector * f, double epsabs);$/;"	p	signature:(const gsl_vector * f, double epsabs)
gsl_nan	/usr/local/gsl/include/gsl/gsl_sys.h	/^double gsl_nan (void);$/;"	p	signature:(void)
gsl_neginf	/usr/local/gsl/include/gsl/gsl_sys.h	/^double gsl_neginf (void);$/;"	p	signature:(void)
gsl_ntuple	/usr/local/gsl/include/gsl/gsl_ntuple.h	/^} gsl_ntuple;$/;"	t	typeref:struct:__anon13
gsl_ntuple_bookdata	/usr/local/gsl/include/gsl/gsl_ntuple.h	/^int gsl_ntuple_bookdata (gsl_ntuple * ntuple);  \/* synonym for write *\/$/;"	p	signature:(gsl_ntuple * ntuple)
gsl_ntuple_close	/usr/local/gsl/include/gsl/gsl_ntuple.h	/^int gsl_ntuple_close (gsl_ntuple * ntuple);$/;"	p	signature:(gsl_ntuple * ntuple)
gsl_ntuple_create	/usr/local/gsl/include/gsl/gsl_ntuple.h	/^gsl_ntuple_create (char * filename, void * ntuple_data, size_t size);$/;"	p	signature:(char * filename, void * ntuple_data, size_t size)
gsl_ntuple_open	/usr/local/gsl/include/gsl/gsl_ntuple.h	/^gsl_ntuple_open (char * filename, void * ntuple_data, size_t size);$/;"	p	signature:(char * filename, void * ntuple_data, size_t size)
gsl_ntuple_project	/usr/local/gsl/include/gsl/gsl_ntuple.h	/^int gsl_ntuple_project (gsl_histogram * h, gsl_ntuple * ntuple, $/;"	p	signature:(gsl_histogram * h, gsl_ntuple * ntuple, gsl_ntuple_value_fn *value_func, gsl_ntuple_select_fn *select_func)
gsl_ntuple_read	/usr/local/gsl/include/gsl/gsl_ntuple.h	/^int gsl_ntuple_read (gsl_ntuple * ntuple);$/;"	p	signature:(gsl_ntuple * ntuple)
gsl_ntuple_select_fn	/usr/local/gsl/include/gsl/gsl_ntuple.h	/^} gsl_ntuple_select_fn;$/;"	t	typeref:struct:__anon14
gsl_ntuple_value_fn	/usr/local/gsl/include/gsl/gsl_ntuple.h	/^} gsl_ntuple_value_fn;$/;"	t	typeref:struct:__anon15
gsl_ntuple_write	/usr/local/gsl/include/gsl/gsl_ntuple.h	/^int gsl_ntuple_write (gsl_ntuple * ntuple);$/;"	p	signature:(gsl_ntuple * ntuple)
gsl_odeiv_control	/usr/local/gsl/include/gsl/gsl_odeiv.h	/^gsl_odeiv_control;$/;"	t	typeref:struct:__anon99
gsl_odeiv_control_alloc	/usr/local/gsl/include/gsl/gsl_odeiv.h	/^gsl_odeiv_control * gsl_odeiv_control_alloc(const gsl_odeiv_control_type * T);$/;"	p	signature:(const gsl_odeiv_control_type * T)
gsl_odeiv_control_free	/usr/local/gsl/include/gsl/gsl_odeiv.h	/^void gsl_odeiv_control_free(gsl_odeiv_control * c);$/;"	p	signature:(gsl_odeiv_control * c)
gsl_odeiv_control_hadjust	/usr/local/gsl/include/gsl/gsl_odeiv.h	/^int gsl_odeiv_control_hadjust (gsl_odeiv_control * c, gsl_odeiv_step * s, const double y[], const double yerr[], const double dydt[], double * h);$/;"	p	signature:(gsl_odeiv_control * c, gsl_odeiv_step * s, const double y[], const double yerr[], const double dydt[], double * h)
gsl_odeiv_control_init	/usr/local/gsl/include/gsl/gsl_odeiv.h	/^int gsl_odeiv_control_init(gsl_odeiv_control * c, double eps_abs, double eps_rel, double a_y, double a_dydt);$/;"	p	signature:(gsl_odeiv_control * c, double eps_abs, double eps_rel, double a_y, double a_dydt)
gsl_odeiv_control_name	/usr/local/gsl/include/gsl/gsl_odeiv.h	/^const char * gsl_odeiv_control_name(const gsl_odeiv_control * c);$/;"	p	signature:(const gsl_odeiv_control * c)
gsl_odeiv_control_scaled_new	/usr/local/gsl/include/gsl/gsl_odeiv.h	/^gsl_odeiv_control * gsl_odeiv_control_scaled_new(double eps_abs, double eps_rel, double a_y, double a_dydt, const double scale_abs[], size_t dim);$/;"	p	signature:(double eps_abs, double eps_rel, double a_y, double a_dydt, const double scale_abs[], size_t dim)
gsl_odeiv_control_standard_new	/usr/local/gsl/include/gsl/gsl_odeiv.h	/^gsl_odeiv_control * gsl_odeiv_control_standard_new(double eps_abs, double eps_rel, double a_y, double a_dydt);$/;"	p	signature:(double eps_abs, double eps_rel, double a_y, double a_dydt)
gsl_odeiv_control_type	/usr/local/gsl/include/gsl/gsl_odeiv.h	/^gsl_odeiv_control_type;$/;"	t	typeref:struct:__anon98
gsl_odeiv_control_y_new	/usr/local/gsl/include/gsl/gsl_odeiv.h	/^gsl_odeiv_control * gsl_odeiv_control_y_new(double eps_abs, double eps_rel);$/;"	p	signature:(double eps_abs, double eps_rel)
gsl_odeiv_control_yp_new	/usr/local/gsl/include/gsl/gsl_odeiv.h	/^gsl_odeiv_control * gsl_odeiv_control_yp_new(double eps_abs, double eps_rel);$/;"	p	signature:(double eps_abs, double eps_rel)
gsl_odeiv_evolve	/usr/local/gsl/include/gsl/gsl_odeiv.h	/^gsl_odeiv_evolve;$/;"	t	typeref:struct:__anon100
gsl_odeiv_evolve_alloc	/usr/local/gsl/include/gsl/gsl_odeiv.h	/^gsl_odeiv_evolve * gsl_odeiv_evolve_alloc(size_t dim);$/;"	p	signature:(size_t dim)
gsl_odeiv_evolve_apply	/usr/local/gsl/include/gsl/gsl_odeiv.h	/^int gsl_odeiv_evolve_apply(gsl_odeiv_evolve *, gsl_odeiv_control * con, gsl_odeiv_step * step, const gsl_odeiv_system * dydt, double * t, double t1, double * h, double y[]);$/;"	p	signature:(gsl_odeiv_evolve *, gsl_odeiv_control * con, gsl_odeiv_step * step, const gsl_odeiv_system * dydt, double * t, double t1, double * h, double y[])
gsl_odeiv_evolve_free	/usr/local/gsl/include/gsl/gsl_odeiv.h	/^void gsl_odeiv_evolve_free(gsl_odeiv_evolve *);$/;"	p	signature:(gsl_odeiv_evolve *)
gsl_odeiv_evolve_reset	/usr/local/gsl/include/gsl/gsl_odeiv.h	/^int gsl_odeiv_evolve_reset(gsl_odeiv_evolve *);$/;"	p	signature:(gsl_odeiv_evolve *)
gsl_odeiv_step	/usr/local/gsl/include/gsl/gsl_odeiv.h	/^gsl_odeiv_step;$/;"	t	typeref:struct:__anon97
gsl_odeiv_step_alloc	/usr/local/gsl/include/gsl/gsl_odeiv.h	/^gsl_odeiv_step * gsl_odeiv_step_alloc(const gsl_odeiv_step_type * T, size_t dim);$/;"	p	signature:(const gsl_odeiv_step_type * T, size_t dim)
gsl_odeiv_step_apply	/usr/local/gsl/include/gsl/gsl_odeiv.h	/^int  gsl_odeiv_step_apply(gsl_odeiv_step *, double t, double h, double y[], double yerr[], const double dydt_in[], double dydt_out[], const gsl_odeiv_system * dydt);$/;"	p	signature:(gsl_odeiv_step *, double t, double h, double y[], double yerr[], const double dydt_in[], double dydt_out[], const gsl_odeiv_system * dydt)
gsl_odeiv_step_bsimp	/usr/local/gsl/include/gsl/gsl_odeiv.h	/^GSL_VAR const gsl_odeiv_step_type *gsl_odeiv_step_bsimp;$/;"	v
gsl_odeiv_step_free	/usr/local/gsl/include/gsl/gsl_odeiv.h	/^void gsl_odeiv_step_free(gsl_odeiv_step * s);$/;"	p	signature:(gsl_odeiv_step * s)
gsl_odeiv_step_gear1	/usr/local/gsl/include/gsl/gsl_odeiv.h	/^GSL_VAR const gsl_odeiv_step_type *gsl_odeiv_step_gear1;$/;"	v
gsl_odeiv_step_gear2	/usr/local/gsl/include/gsl/gsl_odeiv.h	/^GSL_VAR const gsl_odeiv_step_type *gsl_odeiv_step_gear2;$/;"	v
gsl_odeiv_step_name	/usr/local/gsl/include/gsl/gsl_odeiv.h	/^const char * gsl_odeiv_step_name(const gsl_odeiv_step *);$/;"	p	signature:(const gsl_odeiv_step *)
gsl_odeiv_step_order	/usr/local/gsl/include/gsl/gsl_odeiv.h	/^unsigned int gsl_odeiv_step_order(const gsl_odeiv_step * s);$/;"	p	signature:(const gsl_odeiv_step * s)
gsl_odeiv_step_reset	/usr/local/gsl/include/gsl/gsl_odeiv.h	/^int  gsl_odeiv_step_reset(gsl_odeiv_step * s);$/;"	p	signature:(gsl_odeiv_step * s)
gsl_odeiv_step_rk2	/usr/local/gsl/include/gsl/gsl_odeiv.h	/^GSL_VAR const gsl_odeiv_step_type *gsl_odeiv_step_rk2;$/;"	v
gsl_odeiv_step_rk2imp	/usr/local/gsl/include/gsl/gsl_odeiv.h	/^GSL_VAR const gsl_odeiv_step_type *gsl_odeiv_step_rk2imp;$/;"	v
gsl_odeiv_step_rk2simp	/usr/local/gsl/include/gsl/gsl_odeiv.h	/^GSL_VAR const gsl_odeiv_step_type *gsl_odeiv_step_rk2simp;$/;"	v
gsl_odeiv_step_rk4	/usr/local/gsl/include/gsl/gsl_odeiv.h	/^GSL_VAR const gsl_odeiv_step_type *gsl_odeiv_step_rk4;$/;"	v
gsl_odeiv_step_rk4imp	/usr/local/gsl/include/gsl/gsl_odeiv.h	/^GSL_VAR const gsl_odeiv_step_type *gsl_odeiv_step_rk4imp;$/;"	v
gsl_odeiv_step_rk8pd	/usr/local/gsl/include/gsl/gsl_odeiv.h	/^GSL_VAR const gsl_odeiv_step_type *gsl_odeiv_step_rk8pd;$/;"	v
gsl_odeiv_step_rkck	/usr/local/gsl/include/gsl/gsl_odeiv.h	/^GSL_VAR const gsl_odeiv_step_type *gsl_odeiv_step_rkck;$/;"	v
gsl_odeiv_step_rkf45	/usr/local/gsl/include/gsl/gsl_odeiv.h	/^GSL_VAR const gsl_odeiv_step_type *gsl_odeiv_step_rkf45;$/;"	v
gsl_odeiv_step_type	/usr/local/gsl/include/gsl/gsl_odeiv.h	/^gsl_odeiv_step_type;$/;"	t	typeref:struct:__anon96
gsl_odeiv_system	/usr/local/gsl/include/gsl/gsl_odeiv.h	/^gsl_odeiv_system;$/;"	t	typeref:struct:__anon95
gsl_permutation	/usr/local/gsl/include/gsl/gsl_permutation.h	/^typedef struct gsl_permutation_struct gsl_permutation;$/;"	t	typeref:struct:gsl_permutation_struct
gsl_permutation_alloc	/usr/local/gsl/include/gsl/gsl_permutation.h	/^gsl_permutation *gsl_permutation_alloc (const size_t n);$/;"	p	signature:(const size_t n)
gsl_permutation_calloc	/usr/local/gsl/include/gsl/gsl_permutation.h	/^gsl_permutation *gsl_permutation_calloc (const size_t n);$/;"	p	signature:(const size_t n)
gsl_permutation_canonical_cycles	/usr/local/gsl/include/gsl/gsl_permutation.h	/^size_t gsl_permutation_canonical_cycles (const gsl_permutation * q);$/;"	p	signature:(const gsl_permutation * q)
gsl_permutation_canonical_to_linear	/usr/local/gsl/include/gsl/gsl_permutation.h	/^int gsl_permutation_canonical_to_linear (gsl_permutation * p, const gsl_permutation * q);$/;"	p	signature:(gsl_permutation * p, const gsl_permutation * q)
gsl_permutation_data	/usr/local/gsl/include/gsl/gsl_permutation.h	/^size_t * gsl_permutation_data (const gsl_permutation * p);$/;"	p	signature:(const gsl_permutation * p)
gsl_permutation_fprintf	/usr/local/gsl/include/gsl/gsl_permutation.h	/^int gsl_permutation_fprintf (FILE * stream, const gsl_permutation * p, const char *format);$/;"	p	signature:(FILE * stream, const gsl_permutation * p, const char *format)
gsl_permutation_fread	/usr/local/gsl/include/gsl/gsl_permutation.h	/^int gsl_permutation_fread (FILE * stream, gsl_permutation * p);$/;"	p	signature:(FILE * stream, gsl_permutation * p)
gsl_permutation_free	/usr/local/gsl/include/gsl/gsl_permutation.h	/^void gsl_permutation_free (gsl_permutation * p);$/;"	p	signature:(gsl_permutation * p)
gsl_permutation_fscanf	/usr/local/gsl/include/gsl/gsl_permutation.h	/^int gsl_permutation_fscanf (FILE * stream, gsl_permutation * p);$/;"	p	signature:(FILE * stream, gsl_permutation * p)
gsl_permutation_fwrite	/usr/local/gsl/include/gsl/gsl_permutation.h	/^int gsl_permutation_fwrite (FILE * stream, const gsl_permutation * p);$/;"	p	signature:(FILE * stream, const gsl_permutation * p)
gsl_permutation_get	/usr/local/gsl/include/gsl/gsl_permutation.h	/^INLINE_DECL size_t gsl_permutation_get (const gsl_permutation * p, const size_t i);$/;"	p	signature:(const gsl_permutation * p, const size_t i)
gsl_permutation_get	/usr/local/gsl/include/gsl/gsl_permutation.h	/^gsl_permutation_get (const gsl_permutation * p, const size_t i)$/;"	f	signature:(const gsl_permutation * p, const size_t i)
gsl_permutation_init	/usr/local/gsl/include/gsl/gsl_permutation.h	/^void gsl_permutation_init (gsl_permutation * p);$/;"	p	signature:(gsl_permutation * p)
gsl_permutation_inverse	/usr/local/gsl/include/gsl/gsl_permutation.h	/^int gsl_permutation_inverse (gsl_permutation * inv, const gsl_permutation * p);$/;"	p	signature:(gsl_permutation * inv, const gsl_permutation * p)
gsl_permutation_inversions	/usr/local/gsl/include/gsl/gsl_permutation.h	/^size_t gsl_permutation_inversions (const gsl_permutation * p);$/;"	p	signature:(const gsl_permutation * p)
gsl_permutation_linear_cycles	/usr/local/gsl/include/gsl/gsl_permutation.h	/^size_t gsl_permutation_linear_cycles (const gsl_permutation * p);$/;"	p	signature:(const gsl_permutation * p)
gsl_permutation_linear_to_canonical	/usr/local/gsl/include/gsl/gsl_permutation.h	/^int gsl_permutation_linear_to_canonical (gsl_permutation * q, const gsl_permutation * p);$/;"	p	signature:(gsl_permutation * q, const gsl_permutation * p)
gsl_permutation_memcpy	/usr/local/gsl/include/gsl/gsl_permutation.h	/^int gsl_permutation_memcpy (gsl_permutation * dest, const gsl_permutation * src);$/;"	p	signature:(gsl_permutation * dest, const gsl_permutation * src)
gsl_permutation_mul	/usr/local/gsl/include/gsl/gsl_permutation.h	/^int gsl_permutation_mul (gsl_permutation * p, const gsl_permutation * pa, const gsl_permutation * pb);$/;"	p	signature:(gsl_permutation * p, const gsl_permutation * pa, const gsl_permutation * pb)
gsl_permutation_next	/usr/local/gsl/include/gsl/gsl_permutation.h	/^int gsl_permutation_next (gsl_permutation * p);$/;"	p	signature:(gsl_permutation * p)
gsl_permutation_prev	/usr/local/gsl/include/gsl/gsl_permutation.h	/^int gsl_permutation_prev (gsl_permutation * p);$/;"	p	signature:(gsl_permutation * p)
gsl_permutation_reverse	/usr/local/gsl/include/gsl/gsl_permutation.h	/^void gsl_permutation_reverse (gsl_permutation * p);$/;"	p	signature:(gsl_permutation * p)
gsl_permutation_size	/usr/local/gsl/include/gsl/gsl_permutation.h	/^size_t gsl_permutation_size (const gsl_permutation * p);$/;"	p	signature:(const gsl_permutation * p)
gsl_permutation_struct	/usr/local/gsl/include/gsl/gsl_permutation.h	/^struct gsl_permutation_struct$/;"	s
gsl_permutation_struct::data	/usr/local/gsl/include/gsl/gsl_permutation.h	/^  size_t *data;$/;"	m	struct:gsl_permutation_struct	access:public
gsl_permutation_struct::size	/usr/local/gsl/include/gsl/gsl_permutation.h	/^  size_t size;$/;"	m	struct:gsl_permutation_struct	access:public
gsl_permutation_swap	/usr/local/gsl/include/gsl/gsl_permutation.h	/^int gsl_permutation_swap (gsl_permutation * p, const size_t i, const size_t j);$/;"	p	signature:(gsl_permutation * p, const size_t i, const size_t j)
gsl_permutation_valid	/usr/local/gsl/include/gsl/gsl_permutation.h	/^int gsl_permutation_valid (const gsl_permutation * p);$/;"	p	signature:(const gsl_permutation * p)
gsl_permute	/usr/local/gsl/include/gsl/gsl_permute_double.h	/^int gsl_permute (const size_t * p, double * data, const size_t stride, const size_t n);$/;"	p	signature:(const size_t * p, double * data, const size_t stride, const size_t n)
gsl_permute_char	/usr/local/gsl/include/gsl/gsl_permute_char.h	/^int gsl_permute_char (const size_t * p, char * data, const size_t stride, const size_t n);$/;"	p	signature:(const size_t * p, char * data, const size_t stride, const size_t n)
gsl_permute_char_inverse	/usr/local/gsl/include/gsl/gsl_permute_char.h	/^int gsl_permute_char_inverse (const size_t * p, char * data, const size_t stride, const size_t n);$/;"	p	signature:(const size_t * p, char * data, const size_t stride, const size_t n)
gsl_permute_complex	/usr/local/gsl/include/gsl/gsl_permute_complex_double.h	/^int gsl_permute_complex (const size_t * p, double * data, const size_t stride, const size_t n);$/;"	p	signature:(const size_t * p, double * data, const size_t stride, const size_t n)
gsl_permute_complex_float	/usr/local/gsl/include/gsl/gsl_permute_complex_float.h	/^int gsl_permute_complex_float (const size_t * p, float * data, const size_t stride, const size_t n);$/;"	p	signature:(const size_t * p, float * data, const size_t stride, const size_t n)
gsl_permute_complex_float_inverse	/usr/local/gsl/include/gsl/gsl_permute_complex_float.h	/^int gsl_permute_complex_float_inverse (const size_t * p, float * data, const size_t stride, const size_t n);$/;"	p	signature:(const size_t * p, float * data, const size_t stride, const size_t n)
gsl_permute_complex_inverse	/usr/local/gsl/include/gsl/gsl_permute_complex_double.h	/^int gsl_permute_complex_inverse (const size_t * p, double * data, const size_t stride, const size_t n);$/;"	p	signature:(const size_t * p, double * data, const size_t stride, const size_t n)
gsl_permute_complex_long_double	/usr/local/gsl/include/gsl/gsl_permute_complex_long_double.h	/^int gsl_permute_complex_long_double (const size_t * p, long double * data, const size_t stride, const size_t n);$/;"	p	signature:(const size_t * p, long double * data, const size_t stride, const size_t n)
gsl_permute_complex_long_double_inverse	/usr/local/gsl/include/gsl/gsl_permute_complex_long_double.h	/^int gsl_permute_complex_long_double_inverse (const size_t * p, long double * data, const size_t stride, const size_t n);$/;"	p	signature:(const size_t * p, long double * data, const size_t stride, const size_t n)
gsl_permute_float	/usr/local/gsl/include/gsl/gsl_permute_float.h	/^int gsl_permute_float (const size_t * p, float * data, const size_t stride, const size_t n);$/;"	p	signature:(const size_t * p, float * data, const size_t stride, const size_t n)
gsl_permute_float_inverse	/usr/local/gsl/include/gsl/gsl_permute_float.h	/^int gsl_permute_float_inverse (const size_t * p, float * data, const size_t stride, const size_t n);$/;"	p	signature:(const size_t * p, float * data, const size_t stride, const size_t n)
gsl_permute_int	/usr/local/gsl/include/gsl/gsl_permute_int.h	/^int gsl_permute_int (const size_t * p, int * data, const size_t stride, const size_t n);$/;"	p	signature:(const size_t * p, int * data, const size_t stride, const size_t n)
gsl_permute_int_inverse	/usr/local/gsl/include/gsl/gsl_permute_int.h	/^int gsl_permute_int_inverse (const size_t * p, int * data, const size_t stride, const size_t n);$/;"	p	signature:(const size_t * p, int * data, const size_t stride, const size_t n)
gsl_permute_inverse	/usr/local/gsl/include/gsl/gsl_permute_double.h	/^int gsl_permute_inverse (const size_t * p, double * data, const size_t stride, const size_t n);$/;"	p	signature:(const size_t * p, double * data, const size_t stride, const size_t n)
gsl_permute_long	/usr/local/gsl/include/gsl/gsl_permute_long.h	/^int gsl_permute_long (const size_t * p, long * data, const size_t stride, const size_t n);$/;"	p	signature:(const size_t * p, long * data, const size_t stride, const size_t n)
gsl_permute_long_double	/usr/local/gsl/include/gsl/gsl_permute_long_double.h	/^int gsl_permute_long_double (const size_t * p, long double * data, const size_t stride, const size_t n);$/;"	p	signature:(const size_t * p, long double * data, const size_t stride, const size_t n)
gsl_permute_long_double_inverse	/usr/local/gsl/include/gsl/gsl_permute_long_double.h	/^int gsl_permute_long_double_inverse (const size_t * p, long double * data, const size_t stride, const size_t n);$/;"	p	signature:(const size_t * p, long double * data, const size_t stride, const size_t n)
gsl_permute_long_inverse	/usr/local/gsl/include/gsl/gsl_permute_long.h	/^int gsl_permute_long_inverse (const size_t * p, long * data, const size_t stride, const size_t n);$/;"	p	signature:(const size_t * p, long * data, const size_t stride, const size_t n)
gsl_permute_short	/usr/local/gsl/include/gsl/gsl_permute_short.h	/^int gsl_permute_short (const size_t * p, short * data, const size_t stride, const size_t n);$/;"	p	signature:(const size_t * p, short * data, const size_t stride, const size_t n)
gsl_permute_short_inverse	/usr/local/gsl/include/gsl/gsl_permute_short.h	/^int gsl_permute_short_inverse (const size_t * p, short * data, const size_t stride, const size_t n);$/;"	p	signature:(const size_t * p, short * data, const size_t stride, const size_t n)
gsl_permute_uchar	/usr/local/gsl/include/gsl/gsl_permute_uchar.h	/^int gsl_permute_uchar (const size_t * p, unsigned char * data, const size_t stride, const size_t n);$/;"	p	signature:(const size_t * p, unsigned char * data, const size_t stride, const size_t n)
gsl_permute_uchar_inverse	/usr/local/gsl/include/gsl/gsl_permute_uchar.h	/^int gsl_permute_uchar_inverse (const size_t * p, unsigned char * data, const size_t stride, const size_t n);$/;"	p	signature:(const size_t * p, unsigned char * data, const size_t stride, const size_t n)
gsl_permute_uint	/usr/local/gsl/include/gsl/gsl_permute_uint.h	/^int gsl_permute_uint (const size_t * p, unsigned int * data, const size_t stride, const size_t n);$/;"	p	signature:(const size_t * p, unsigned int * data, const size_t stride, const size_t n)
gsl_permute_uint_inverse	/usr/local/gsl/include/gsl/gsl_permute_uint.h	/^int gsl_permute_uint_inverse (const size_t * p, unsigned int * data, const size_t stride, const size_t n);$/;"	p	signature:(const size_t * p, unsigned int * data, const size_t stride, const size_t n)
gsl_permute_ulong	/usr/local/gsl/include/gsl/gsl_permute_ulong.h	/^int gsl_permute_ulong (const size_t * p, unsigned long * data, const size_t stride, const size_t n);$/;"	p	signature:(const size_t * p, unsigned long * data, const size_t stride, const size_t n)
gsl_permute_ulong_inverse	/usr/local/gsl/include/gsl/gsl_permute_ulong.h	/^int gsl_permute_ulong_inverse (const size_t * p, unsigned long * data, const size_t stride, const size_t n);$/;"	p	signature:(const size_t * p, unsigned long * data, const size_t stride, const size_t n)
gsl_permute_ushort	/usr/local/gsl/include/gsl/gsl_permute_ushort.h	/^int gsl_permute_ushort (const size_t * p, unsigned short * data, const size_t stride, const size_t n);$/;"	p	signature:(const size_t * p, unsigned short * data, const size_t stride, const size_t n)
gsl_permute_ushort_inverse	/usr/local/gsl/include/gsl/gsl_permute_ushort.h	/^int gsl_permute_ushort_inverse (const size_t * p, unsigned short * data, const size_t stride, const size_t n);$/;"	p	signature:(const size_t * p, unsigned short * data, const size_t stride, const size_t n)
gsl_permute_vector	/usr/local/gsl/include/gsl/gsl_permute_vector_double.h	/^int gsl_permute_vector (const gsl_permutation * p, gsl_vector * v);$/;"	p	signature:(const gsl_permutation * p, gsl_vector * v)
gsl_permute_vector_char	/usr/local/gsl/include/gsl/gsl_permute_vector_char.h	/^int gsl_permute_vector_char (const gsl_permutation * p, gsl_vector_char * v);$/;"	p	signature:(const gsl_permutation * p, gsl_vector_char * v)
gsl_permute_vector_char_inverse	/usr/local/gsl/include/gsl/gsl_permute_vector_char.h	/^int gsl_permute_vector_char_inverse (const gsl_permutation * p, gsl_vector_char * v);$/;"	p	signature:(const gsl_permutation * p, gsl_vector_char * v)
gsl_permute_vector_complex	/usr/local/gsl/include/gsl/gsl_permute_vector_complex_double.h	/^int gsl_permute_vector_complex (const gsl_permutation * p, gsl_vector_complex * v);$/;"	p	signature:(const gsl_permutation * p, gsl_vector_complex * v)
gsl_permute_vector_complex_float	/usr/local/gsl/include/gsl/gsl_permute_vector_complex_float.h	/^int gsl_permute_vector_complex_float (const gsl_permutation * p, gsl_vector_complex_float * v);$/;"	p	signature:(const gsl_permutation * p, gsl_vector_complex_float * v)
gsl_permute_vector_complex_float_inverse	/usr/local/gsl/include/gsl/gsl_permute_vector_complex_float.h	/^int gsl_permute_vector_complex_float_inverse (const gsl_permutation * p, gsl_vector_complex_float * v);$/;"	p	signature:(const gsl_permutation * p, gsl_vector_complex_float * v)
gsl_permute_vector_complex_inverse	/usr/local/gsl/include/gsl/gsl_permute_vector_complex_double.h	/^int gsl_permute_vector_complex_inverse (const gsl_permutation * p, gsl_vector_complex * v);$/;"	p	signature:(const gsl_permutation * p, gsl_vector_complex * v)
gsl_permute_vector_complex_long_double	/usr/local/gsl/include/gsl/gsl_permute_vector_complex_long_double.h	/^int gsl_permute_vector_complex_long_double (const gsl_permutation * p, gsl_vector_complex_long_double * v);$/;"	p	signature:(const gsl_permutation * p, gsl_vector_complex_long_double * v)
gsl_permute_vector_complex_long_double_inverse	/usr/local/gsl/include/gsl/gsl_permute_vector_complex_long_double.h	/^int gsl_permute_vector_complex_long_double_inverse (const gsl_permutation * p, gsl_vector_complex_long_double * v);$/;"	p	signature:(const gsl_permutation * p, gsl_vector_complex_long_double * v)
gsl_permute_vector_float	/usr/local/gsl/include/gsl/gsl_permute_vector_float.h	/^int gsl_permute_vector_float (const gsl_permutation * p, gsl_vector_float * v);$/;"	p	signature:(const gsl_permutation * p, gsl_vector_float * v)
gsl_permute_vector_float_inverse	/usr/local/gsl/include/gsl/gsl_permute_vector_float.h	/^int gsl_permute_vector_float_inverse (const gsl_permutation * p, gsl_vector_float * v);$/;"	p	signature:(const gsl_permutation * p, gsl_vector_float * v)
gsl_permute_vector_int	/usr/local/gsl/include/gsl/gsl_permute_vector_int.h	/^int gsl_permute_vector_int (const gsl_permutation * p, gsl_vector_int * v);$/;"	p	signature:(const gsl_permutation * p, gsl_vector_int * v)
gsl_permute_vector_int_inverse	/usr/local/gsl/include/gsl/gsl_permute_vector_int.h	/^int gsl_permute_vector_int_inverse (const gsl_permutation * p, gsl_vector_int * v);$/;"	p	signature:(const gsl_permutation * p, gsl_vector_int * v)
gsl_permute_vector_inverse	/usr/local/gsl/include/gsl/gsl_permute_vector_double.h	/^int gsl_permute_vector_inverse (const gsl_permutation * p, gsl_vector * v);$/;"	p	signature:(const gsl_permutation * p, gsl_vector * v)
gsl_permute_vector_long	/usr/local/gsl/include/gsl/gsl_permute_vector_long.h	/^int gsl_permute_vector_long (const gsl_permutation * p, gsl_vector_long * v);$/;"	p	signature:(const gsl_permutation * p, gsl_vector_long * v)
gsl_permute_vector_long_double	/usr/local/gsl/include/gsl/gsl_permute_vector_long_double.h	/^int gsl_permute_vector_long_double (const gsl_permutation * p, gsl_vector_long_double * v);$/;"	p	signature:(const gsl_permutation * p, gsl_vector_long_double * v)
gsl_permute_vector_long_double_inverse	/usr/local/gsl/include/gsl/gsl_permute_vector_long_double.h	/^int gsl_permute_vector_long_double_inverse (const gsl_permutation * p, gsl_vector_long_double * v);$/;"	p	signature:(const gsl_permutation * p, gsl_vector_long_double * v)
gsl_permute_vector_long_inverse	/usr/local/gsl/include/gsl/gsl_permute_vector_long.h	/^int gsl_permute_vector_long_inverse (const gsl_permutation * p, gsl_vector_long * v);$/;"	p	signature:(const gsl_permutation * p, gsl_vector_long * v)
gsl_permute_vector_short	/usr/local/gsl/include/gsl/gsl_permute_vector_short.h	/^int gsl_permute_vector_short (const gsl_permutation * p, gsl_vector_short * v);$/;"	p	signature:(const gsl_permutation * p, gsl_vector_short * v)
gsl_permute_vector_short_inverse	/usr/local/gsl/include/gsl/gsl_permute_vector_short.h	/^int gsl_permute_vector_short_inverse (const gsl_permutation * p, gsl_vector_short * v);$/;"	p	signature:(const gsl_permutation * p, gsl_vector_short * v)
gsl_permute_vector_uchar	/usr/local/gsl/include/gsl/gsl_permute_vector_uchar.h	/^int gsl_permute_vector_uchar (const gsl_permutation * p, gsl_vector_uchar * v);$/;"	p	signature:(const gsl_permutation * p, gsl_vector_uchar * v)
gsl_permute_vector_uchar_inverse	/usr/local/gsl/include/gsl/gsl_permute_vector_uchar.h	/^int gsl_permute_vector_uchar_inverse (const gsl_permutation * p, gsl_vector_uchar * v);$/;"	p	signature:(const gsl_permutation * p, gsl_vector_uchar * v)
gsl_permute_vector_uint	/usr/local/gsl/include/gsl/gsl_permute_vector_uint.h	/^int gsl_permute_vector_uint (const gsl_permutation * p, gsl_vector_uint * v);$/;"	p	signature:(const gsl_permutation * p, gsl_vector_uint * v)
gsl_permute_vector_uint_inverse	/usr/local/gsl/include/gsl/gsl_permute_vector_uint.h	/^int gsl_permute_vector_uint_inverse (const gsl_permutation * p, gsl_vector_uint * v);$/;"	p	signature:(const gsl_permutation * p, gsl_vector_uint * v)
gsl_permute_vector_ulong	/usr/local/gsl/include/gsl/gsl_permute_vector_ulong.h	/^int gsl_permute_vector_ulong (const gsl_permutation * p, gsl_vector_ulong * v);$/;"	p	signature:(const gsl_permutation * p, gsl_vector_ulong * v)
gsl_permute_vector_ulong_inverse	/usr/local/gsl/include/gsl/gsl_permute_vector_ulong.h	/^int gsl_permute_vector_ulong_inverse (const gsl_permutation * p, gsl_vector_ulong * v);$/;"	p	signature:(const gsl_permutation * p, gsl_vector_ulong * v)
gsl_permute_vector_ushort	/usr/local/gsl/include/gsl/gsl_permute_vector_ushort.h	/^int gsl_permute_vector_ushort (const gsl_permutation * p, gsl_vector_ushort * v);$/;"	p	signature:(const gsl_permutation * p, gsl_vector_ushort * v)
gsl_permute_vector_ushort_inverse	/usr/local/gsl/include/gsl/gsl_permute_vector_ushort.h	/^int gsl_permute_vector_ushort_inverse (const gsl_permutation * p, gsl_vector_ushort * v);$/;"	p	signature:(const gsl_permutation * p, gsl_vector_ushort * v)
gsl_poly_complex_eval	/usr/local/gsl/include/gsl/gsl_poly.h	/^INLINE_DECL gsl_complex gsl_poly_complex_eval (const double c [], const int len, const gsl_complex z);$/;"	p	signature:(const double c [], const int len, const gsl_complex z)
gsl_poly_complex_eval	/usr/local/gsl/include/gsl/gsl_poly.h	/^gsl_poly_complex_eval(const double c[], const int len, const gsl_complex z)$/;"	f	signature:(const double c[], const int len, const gsl_complex z)
gsl_poly_complex_solve	/usr/local/gsl/include/gsl/gsl_poly.h	/^gsl_poly_complex_solve (const double * a, size_t n, $/;"	p	signature:(const double * a, size_t n, gsl_poly_complex_workspace * w, gsl_complex_packed_ptr z)
gsl_poly_complex_solve_cubic	/usr/local/gsl/include/gsl/gsl_poly.h	/^gsl_poly_complex_solve_cubic (double a, double b, double c, $/;"	p	signature:(double a, double b, double c, gsl_complex * z0, gsl_complex * z1, gsl_complex * z2)
gsl_poly_complex_solve_quadratic	/usr/local/gsl/include/gsl/gsl_poly.h	/^gsl_poly_complex_solve_quadratic (double a, double b, double c, $/;"	p	signature:(double a, double b, double c, gsl_complex * z0, gsl_complex * z1)
gsl_poly_complex_workspace	/usr/local/gsl/include/gsl/gsl_poly.h	/^gsl_poly_complex_workspace ;$/;"	t	typeref:struct:__anon5
gsl_poly_complex_workspace_alloc	/usr/local/gsl/include/gsl/gsl_poly.h	/^gsl_poly_complex_workspace * gsl_poly_complex_workspace_alloc (size_t n);$/;"	p	signature:(size_t n)
gsl_poly_complex_workspace_free	/usr/local/gsl/include/gsl/gsl_poly.h	/^void gsl_poly_complex_workspace_free (gsl_poly_complex_workspace * w);$/;"	p	signature:(gsl_poly_complex_workspace * w)
gsl_poly_dd_eval	/usr/local/gsl/include/gsl/gsl_poly.h	/^gsl_poly_dd_eval (const double dd[], const double xa[], const size_t size, const double x);$/;"	p	signature:(const double dd[], const double xa[], const size_t size, const double x)
gsl_poly_dd_eval	/usr/local/gsl/include/gsl/gsl_poly.h	/^gsl_poly_dd_eval(const double dd[], const double xa[], const size_t size, const double x)$/;"	f	signature:(const double dd[], const double xa[], const size_t size, const double x)
gsl_poly_dd_init	/usr/local/gsl/include/gsl/gsl_poly.h	/^gsl_poly_dd_init (double dd[], const double x[], const double y[],$/;"	p	signature:(double dd[], const double x[], const double y[], size_t size)
gsl_poly_dd_taylor	/usr/local/gsl/include/gsl/gsl_poly.h	/^gsl_poly_dd_taylor (double c[], double xp,$/;"	p	signature:(double c[], double xp, const double dd[], const double x[], size_t size, double w[])
gsl_poly_eval	/usr/local/gsl/include/gsl/gsl_poly.h	/^INLINE_DECL double gsl_poly_eval(const double c[], const int len, const double x);$/;"	p	signature:(const double c[], const int len, const double x)
gsl_poly_eval	/usr/local/gsl/include/gsl/gsl_poly.h	/^gsl_poly_eval(const double c[], const int len, const double x)$/;"	f	signature:(const double c[], const int len, const double x)
gsl_poly_solve_cubic	/usr/local/gsl/include/gsl/gsl_poly.h	/^int gsl_poly_solve_cubic (double a, double b, double c, $/;"	p	signature:(double a, double b, double c, double * x0, double * x1, double * x2)
gsl_poly_solve_quadratic	/usr/local/gsl/include/gsl/gsl_poly.h	/^int gsl_poly_solve_quadratic (double a, double b, double c, $/;"	p	signature:(double a, double b, double c, double * x0, double * x1)
gsl_posinf	/usr/local/gsl/include/gsl/gsl_sys.h	/^double gsl_posinf (void);$/;"	p	signature:(void)
gsl_pow_2	/usr/local/gsl/include/gsl/gsl_pow_int.h	/^INLINE_DECL double gsl_pow_2(const double x);$/;"	p	signature:(const double x)
gsl_pow_2	/usr/local/gsl/include/gsl/gsl_pow_int.h	/^INLINE_FUN double gsl_pow_2(const double x) { return x*x;   }$/;"	f	signature:(const double x)
gsl_pow_3	/usr/local/gsl/include/gsl/gsl_pow_int.h	/^INLINE_DECL double gsl_pow_3(const double x);$/;"	p	signature:(const double x)
gsl_pow_3	/usr/local/gsl/include/gsl/gsl_pow_int.h	/^INLINE_FUN double gsl_pow_3(const double x) { return x*x*x; }$/;"	f	signature:(const double x)
gsl_pow_4	/usr/local/gsl/include/gsl/gsl_pow_int.h	/^INLINE_DECL double gsl_pow_4(const double x);$/;"	p	signature:(const double x)
gsl_pow_4	/usr/local/gsl/include/gsl/gsl_pow_int.h	/^INLINE_FUN double gsl_pow_4(const double x) { double x2 = x*x;   return x2*x2;    }$/;"	f	signature:(const double x)
gsl_pow_5	/usr/local/gsl/include/gsl/gsl_pow_int.h	/^INLINE_DECL double gsl_pow_5(const double x);$/;"	p	signature:(const double x)
gsl_pow_5	/usr/local/gsl/include/gsl/gsl_pow_int.h	/^INLINE_FUN double gsl_pow_5(const double x) { double x2 = x*x;   return x2*x2*x;  }$/;"	f	signature:(const double x)
gsl_pow_6	/usr/local/gsl/include/gsl/gsl_pow_int.h	/^INLINE_DECL double gsl_pow_6(const double x);$/;"	p	signature:(const double x)
gsl_pow_6	/usr/local/gsl/include/gsl/gsl_pow_int.h	/^INLINE_FUN double gsl_pow_6(const double x) { double x2 = x*x;   return x2*x2*x2; }$/;"	f	signature:(const double x)
gsl_pow_7	/usr/local/gsl/include/gsl/gsl_pow_int.h	/^INLINE_DECL double gsl_pow_7(const double x);$/;"	p	signature:(const double x)
gsl_pow_7	/usr/local/gsl/include/gsl/gsl_pow_int.h	/^INLINE_FUN double gsl_pow_7(const double x) { double x3 = x*x*x; return x3*x3*x;  }$/;"	f	signature:(const double x)
gsl_pow_8	/usr/local/gsl/include/gsl/gsl_pow_int.h	/^INLINE_DECL double gsl_pow_8(const double x);$/;"	p	signature:(const double x)
gsl_pow_8	/usr/local/gsl/include/gsl/gsl_pow_int.h	/^INLINE_FUN double gsl_pow_8(const double x) { double x2 = x*x;   double x4 = x2*x2; return x4*x4; }$/;"	f	signature:(const double x)
gsl_pow_9	/usr/local/gsl/include/gsl/gsl_pow_int.h	/^INLINE_DECL double gsl_pow_9(const double x);$/;"	p	signature:(const double x)
gsl_pow_9	/usr/local/gsl/include/gsl/gsl_pow_int.h	/^INLINE_FUN double gsl_pow_9(const double x) { double x3 = x*x*x; return x3*x3*x3; }$/;"	f	signature:(const double x)
gsl_pow_int	/usr/local/gsl/include/gsl/gsl_pow_int.h	/^double gsl_pow_int(double x, int n);$/;"	p	signature:(double x, int n)
gsl_prec_eps	/usr/local/gsl/include/gsl/gsl_precision.h	/^GSL_VAR const double gsl_prec_eps[];$/;"	v
gsl_prec_root3_eps	/usr/local/gsl/include/gsl/gsl_precision.h	/^GSL_VAR const double gsl_prec_root3_eps[];$/;"	v
gsl_prec_root4_eps	/usr/local/gsl/include/gsl/gsl_precision.h	/^GSL_VAR const double gsl_prec_root4_eps[];$/;"	v
gsl_prec_root5_eps	/usr/local/gsl/include/gsl/gsl_precision.h	/^GSL_VAR const double gsl_prec_root5_eps[];$/;"	v
gsl_prec_root6_eps	/usr/local/gsl/include/gsl/gsl_precision.h	/^GSL_VAR const double gsl_prec_root6_eps[];$/;"	v
gsl_prec_sqrt_eps	/usr/local/gsl/include/gsl/gsl_precision.h	/^GSL_VAR const double gsl_prec_sqrt_eps[];$/;"	v
gsl_prec_t	/usr/local/gsl/include/gsl/gsl_precision.h	/^typedef  unsigned int  gsl_prec_t;$/;"	t
gsl_qrng	/usr/local/gsl/include/gsl/gsl_qrng.h	/^gsl_qrng;$/;"	t	typeref:struct:__anon169
gsl_qrng_alloc	/usr/local/gsl/include/gsl/gsl_qrng.h	/^gsl_qrng * gsl_qrng_alloc (const gsl_qrng_type * T, unsigned int dimension);$/;"	p	signature:(const gsl_qrng_type * T, unsigned int dimension)
gsl_qrng_clone	/usr/local/gsl/include/gsl/gsl_qrng.h	/^gsl_qrng * gsl_qrng_clone (const gsl_qrng * q);$/;"	p	signature:(const gsl_qrng * q)
gsl_qrng_free	/usr/local/gsl/include/gsl/gsl_qrng.h	/^void gsl_qrng_free (gsl_qrng * q);$/;"	p	signature:(gsl_qrng * q)
gsl_qrng_get	/usr/local/gsl/include/gsl/gsl_qrng.h	/^INLINE_DECL int gsl_qrng_get (const gsl_qrng * q, double x[]);$/;"	p	signature:(const gsl_qrng * q, double x[])
gsl_qrng_get	/usr/local/gsl/include/gsl/gsl_qrng.h	/^INLINE_FUN int gsl_qrng_get (const gsl_qrng * q, double x[])$/;"	f	signature:(const gsl_qrng * q, double x[])
gsl_qrng_halton	/usr/local/gsl/include/gsl/gsl_qrng.h	/^GSL_VAR const gsl_qrng_type * gsl_qrng_halton;$/;"	v
gsl_qrng_init	/usr/local/gsl/include/gsl/gsl_qrng.h	/^void gsl_qrng_init (gsl_qrng * q);$/;"	p	signature:(gsl_qrng * q)
gsl_qrng_memcpy	/usr/local/gsl/include/gsl/gsl_qrng.h	/^int gsl_qrng_memcpy (gsl_qrng * dest, const gsl_qrng * src);$/;"	p	signature:(gsl_qrng * dest, const gsl_qrng * src)
gsl_qrng_name	/usr/local/gsl/include/gsl/gsl_qrng.h	/^const char * gsl_qrng_name (const gsl_qrng * q);$/;"	p	signature:(const gsl_qrng * q)
gsl_qrng_niederreiter_2	/usr/local/gsl/include/gsl/gsl_qrng.h	/^GSL_VAR const gsl_qrng_type * gsl_qrng_niederreiter_2;$/;"	v
gsl_qrng_reversehalton	/usr/local/gsl/include/gsl/gsl_qrng.h	/^GSL_VAR const gsl_qrng_type * gsl_qrng_reversehalton;$/;"	v
gsl_qrng_size	/usr/local/gsl/include/gsl/gsl_qrng.h	/^size_t gsl_qrng_size (const gsl_qrng * q);$/;"	p	signature:(const gsl_qrng * q)
gsl_qrng_sobol	/usr/local/gsl/include/gsl/gsl_qrng.h	/^GSL_VAR const gsl_qrng_type * gsl_qrng_sobol;$/;"	v
gsl_qrng_state	/usr/local/gsl/include/gsl/gsl_qrng.h	/^void * gsl_qrng_state (const gsl_qrng * q);$/;"	p	signature:(const gsl_qrng * q)
gsl_qrng_type	/usr/local/gsl/include/gsl/gsl_qrng.h	/^gsl_qrng_type;$/;"	t	typeref:struct:__anon168
gsl_ran_bernoulli	/usr/local/gsl/include/gsl/gsl_randist.h	/^unsigned int gsl_ran_bernoulli (const gsl_rng * r, double p);$/;"	p	signature:(const gsl_rng * r, double p)
gsl_ran_bernoulli_pdf	/usr/local/gsl/include/gsl/gsl_randist.h	/^double gsl_ran_bernoulli_pdf (const unsigned int k, double p);$/;"	p	signature:(const unsigned int k, double p)
gsl_ran_beta	/usr/local/gsl/include/gsl/gsl_randist.h	/^double gsl_ran_beta (const gsl_rng * r, const double a, const double b);$/;"	p	signature:(const gsl_rng * r, const double a, const double b)
gsl_ran_beta_pdf	/usr/local/gsl/include/gsl/gsl_randist.h	/^double gsl_ran_beta_pdf (const double x, const double a, const double b);$/;"	p	signature:(const double x, const double a, const double b)
gsl_ran_binomial	/usr/local/gsl/include/gsl/gsl_randist.h	/^unsigned int gsl_ran_binomial (const gsl_rng * r, double p, unsigned int n);$/;"	p	signature:(const gsl_rng * r, double p, unsigned int n)
gsl_ran_binomial_knuth	/usr/local/gsl/include/gsl/gsl_randist.h	/^unsigned int gsl_ran_binomial_knuth (const gsl_rng * r, double p, unsigned int n);$/;"	p	signature:(const gsl_rng * r, double p, unsigned int n)
gsl_ran_binomial_pdf	/usr/local/gsl/include/gsl/gsl_randist.h	/^double gsl_ran_binomial_pdf (const unsigned int k, const double p, const unsigned int n);$/;"	p	signature:(const unsigned int k, const double p, const unsigned int n)
gsl_ran_binomial_tpe	/usr/local/gsl/include/gsl/gsl_randist.h	/^unsigned int gsl_ran_binomial_tpe (const gsl_rng * r, double p, unsigned int n);$/;"	p	signature:(const gsl_rng * r, double p, unsigned int n)
gsl_ran_bivariate_gaussian	/usr/local/gsl/include/gsl/gsl_randist.h	/^void gsl_ran_bivariate_gaussian (const gsl_rng * r, double sigma_x, double sigma_y, double rho, double *x, double *y);$/;"	p	signature:(const gsl_rng * r, double sigma_x, double sigma_y, double rho, double *x, double *y)
gsl_ran_bivariate_gaussian_pdf	/usr/local/gsl/include/gsl/gsl_randist.h	/^double gsl_ran_bivariate_gaussian_pdf (const double x, const double y, const double sigma_x, const double sigma_y, const double rho);$/;"	p	signature:(const double x, const double y, const double sigma_x, const double sigma_y, const double rho)
gsl_ran_cauchy	/usr/local/gsl/include/gsl/gsl_randist.h	/^double gsl_ran_cauchy (const gsl_rng * r, const double a);$/;"	p	signature:(const gsl_rng * r, const double a)
gsl_ran_cauchy_pdf	/usr/local/gsl/include/gsl/gsl_randist.h	/^double gsl_ran_cauchy_pdf (const double x, const double a);$/;"	p	signature:(const double x, const double a)
gsl_ran_chisq	/usr/local/gsl/include/gsl/gsl_randist.h	/^double gsl_ran_chisq (const gsl_rng * r, const double nu);$/;"	p	signature:(const gsl_rng * r, const double nu)
gsl_ran_chisq_pdf	/usr/local/gsl/include/gsl/gsl_randist.h	/^double gsl_ran_chisq_pdf (const double x, const double nu);$/;"	p	signature:(const double x, const double nu)
gsl_ran_choose	/usr/local/gsl/include/gsl/gsl_randist.h	/^int gsl_ran_choose (const gsl_rng * r, void * dest, size_t k, void * src, size_t n, size_t size) ;$/;"	p	signature:(const gsl_rng * r, void * dest, size_t k, void * src, size_t n, size_t size)
gsl_ran_dir_2d	/usr/local/gsl/include/gsl/gsl_randist.h	/^void gsl_ran_dir_2d (const gsl_rng * r, double * x, double * y);$/;"	p	signature:(const gsl_rng * r, double * x, double * y)
gsl_ran_dir_2d_trig_method	/usr/local/gsl/include/gsl/gsl_randist.h	/^void gsl_ran_dir_2d_trig_method (const gsl_rng * r, double * x, double * y);$/;"	p	signature:(const gsl_rng * r, double * x, double * y)
gsl_ran_dir_3d	/usr/local/gsl/include/gsl/gsl_randist.h	/^void gsl_ran_dir_3d (const gsl_rng * r, double * x, double * y, double * z);$/;"	p	signature:(const gsl_rng * r, double * x, double * y, double * z)
gsl_ran_dir_nd	/usr/local/gsl/include/gsl/gsl_randist.h	/^void gsl_ran_dir_nd (const gsl_rng * r, size_t n, double * x);$/;"	p	signature:(const gsl_rng * r, size_t n, double * x)
gsl_ran_dirichlet	/usr/local/gsl/include/gsl/gsl_randist.h	/^void gsl_ran_dirichlet (const gsl_rng * r, const size_t K, const double alpha[], double theta[]);$/;"	p	signature:(const gsl_rng * r, const size_t K, const double alpha[], double theta[])
gsl_ran_dirichlet_lnpdf	/usr/local/gsl/include/gsl/gsl_randist.h	/^double gsl_ran_dirichlet_lnpdf (const size_t K, const double alpha[], const double theta[]);$/;"	p	signature:(const size_t K, const double alpha[], const double theta[])
gsl_ran_dirichlet_pdf	/usr/local/gsl/include/gsl/gsl_randist.h	/^double gsl_ran_dirichlet_pdf (const size_t K, const double alpha[], const double theta[]);$/;"	p	signature:(const size_t K, const double alpha[], const double theta[])
gsl_ran_discrete	/usr/local/gsl/include/gsl/gsl_randist.h	/^size_t gsl_ran_discrete (const gsl_rng *r, const gsl_ran_discrete_t *g);$/;"	p	signature:(const gsl_rng *r, const gsl_ran_discrete_t *g)
gsl_ran_discrete_free	/usr/local/gsl/include/gsl/gsl_randist.h	/^void gsl_ran_discrete_free(gsl_ran_discrete_t *g);$/;"	p	signature:(gsl_ran_discrete_t *g)
gsl_ran_discrete_pdf	/usr/local/gsl/include/gsl/gsl_randist.h	/^double gsl_ran_discrete_pdf (size_t k, const gsl_ran_discrete_t *g);$/;"	p	signature:(size_t k, const gsl_ran_discrete_t *g)
gsl_ran_discrete_preproc	/usr/local/gsl/include/gsl/gsl_randist.h	/^gsl_ran_discrete_t * gsl_ran_discrete_preproc (size_t K, const double *P);$/;"	p	signature:(size_t K, const double *P)
gsl_ran_discrete_t	/usr/local/gsl/include/gsl/gsl_randist.h	/^} gsl_ran_discrete_t;$/;"	t	typeref:struct:__anon34
gsl_ran_erlang	/usr/local/gsl/include/gsl/gsl_randist.h	/^double gsl_ran_erlang (const gsl_rng * r, const double a, const double n);$/;"	p	signature:(const gsl_rng * r, const double a, const double n)
gsl_ran_erlang_pdf	/usr/local/gsl/include/gsl/gsl_randist.h	/^double gsl_ran_erlang_pdf (const double x, const double a, const double n);$/;"	p	signature:(const double x, const double a, const double n)
gsl_ran_exponential	/usr/local/gsl/include/gsl/gsl_randist.h	/^double gsl_ran_exponential (const gsl_rng * r, const double mu);$/;"	p	signature:(const gsl_rng * r, const double mu)
gsl_ran_exponential_pdf	/usr/local/gsl/include/gsl/gsl_randist.h	/^double gsl_ran_exponential_pdf (const double x, const double mu);$/;"	p	signature:(const double x, const double mu)
gsl_ran_exppow	/usr/local/gsl/include/gsl/gsl_randist.h	/^double gsl_ran_exppow (const gsl_rng * r, const double a, const double b);$/;"	p	signature:(const gsl_rng * r, const double a, const double b)
gsl_ran_exppow_pdf	/usr/local/gsl/include/gsl/gsl_randist.h	/^double gsl_ran_exppow_pdf (const double x, const double a, const double b);$/;"	p	signature:(const double x, const double a, const double b)
gsl_ran_fdist	/usr/local/gsl/include/gsl/gsl_randist.h	/^double gsl_ran_fdist (const gsl_rng * r, const double nu1, const double nu2);$/;"	p	signature:(const gsl_rng * r, const double nu1, const double nu2)
gsl_ran_fdist_pdf	/usr/local/gsl/include/gsl/gsl_randist.h	/^double gsl_ran_fdist_pdf (const double x, const double nu1, const double nu2);$/;"	p	signature:(const double x, const double nu1, const double nu2)
gsl_ran_flat	/usr/local/gsl/include/gsl/gsl_randist.h	/^double gsl_ran_flat (const gsl_rng * r, const double a, const double b);$/;"	p	signature:(const gsl_rng * r, const double a, const double b)
gsl_ran_flat_pdf	/usr/local/gsl/include/gsl/gsl_randist.h	/^double gsl_ran_flat_pdf (double x, const double a, const double b);$/;"	p	signature:(double x, const double a, const double b)
gsl_ran_gamma	/usr/local/gsl/include/gsl/gsl_randist.h	/^double gsl_ran_gamma (const gsl_rng * r, const double a, const double b);$/;"	p	signature:(const gsl_rng * r, const double a, const double b)
gsl_ran_gamma_int	/usr/local/gsl/include/gsl/gsl_randist.h	/^double gsl_ran_gamma_int (const gsl_rng * r, const unsigned int a);$/;"	p	signature:(const gsl_rng * r, const unsigned int a)
gsl_ran_gamma_knuth	/usr/local/gsl/include/gsl/gsl_randist.h	/^double gsl_ran_gamma_knuth (const gsl_rng * r, const double a, const double b);$/;"	p	signature:(const gsl_rng * r, const double a, const double b)
gsl_ran_gamma_mt	/usr/local/gsl/include/gsl/gsl_randist.h	/^double gsl_ran_gamma_mt (const gsl_rng * r, const double a, const double b);$/;"	p	signature:(const gsl_rng * r, const double a, const double b)
gsl_ran_gamma_pdf	/usr/local/gsl/include/gsl/gsl_randist.h	/^double gsl_ran_gamma_pdf (const double x, const double a, const double b);$/;"	p	signature:(const double x, const double a, const double b)
gsl_ran_gaussian	/usr/local/gsl/include/gsl/gsl_randist.h	/^double gsl_ran_gaussian (const gsl_rng * r, const double sigma);$/;"	p	signature:(const gsl_rng * r, const double sigma)
gsl_ran_gaussian_pdf	/usr/local/gsl/include/gsl/gsl_randist.h	/^double gsl_ran_gaussian_pdf (const double x, const double sigma);$/;"	p	signature:(const double x, const double sigma)
gsl_ran_gaussian_ratio_method	/usr/local/gsl/include/gsl/gsl_randist.h	/^double gsl_ran_gaussian_ratio_method (const gsl_rng * r, const double sigma);$/;"	p	signature:(const gsl_rng * r, const double sigma)
gsl_ran_gaussian_tail	/usr/local/gsl/include/gsl/gsl_randist.h	/^double gsl_ran_gaussian_tail (const gsl_rng * r, const double a, const double sigma);$/;"	p	signature:(const gsl_rng * r, const double a, const double sigma)
gsl_ran_gaussian_tail_pdf	/usr/local/gsl/include/gsl/gsl_randist.h	/^double gsl_ran_gaussian_tail_pdf (const double x, const double a, const double sigma);$/;"	p	signature:(const double x, const double a, const double sigma)
gsl_ran_gaussian_ziggurat	/usr/local/gsl/include/gsl/gsl_randist.h	/^double gsl_ran_gaussian_ziggurat (const gsl_rng * r, const double sigma);$/;"	p	signature:(const gsl_rng * r, const double sigma)
gsl_ran_geometric	/usr/local/gsl/include/gsl/gsl_randist.h	/^unsigned int gsl_ran_geometric (const gsl_rng * r, const double p);$/;"	p	signature:(const gsl_rng * r, const double p)
gsl_ran_geometric_pdf	/usr/local/gsl/include/gsl/gsl_randist.h	/^double gsl_ran_geometric_pdf (const unsigned int k, const double p);$/;"	p	signature:(const unsigned int k, const double p)
gsl_ran_gumbel1	/usr/local/gsl/include/gsl/gsl_randist.h	/^double gsl_ran_gumbel1 (const gsl_rng * r, const double a, const double b);$/;"	p	signature:(const gsl_rng * r, const double a, const double b)
gsl_ran_gumbel1_pdf	/usr/local/gsl/include/gsl/gsl_randist.h	/^double gsl_ran_gumbel1_pdf (const double x, const double a, const double b);$/;"	p	signature:(const double x, const double a, const double b)
gsl_ran_gumbel2	/usr/local/gsl/include/gsl/gsl_randist.h	/^double gsl_ran_gumbel2 (const gsl_rng * r, const double a, const double b);$/;"	p	signature:(const gsl_rng * r, const double a, const double b)
gsl_ran_gumbel2_pdf	/usr/local/gsl/include/gsl/gsl_randist.h	/^double gsl_ran_gumbel2_pdf (const double x, const double a, const double b);$/;"	p	signature:(const double x, const double a, const double b)
gsl_ran_hypergeometric	/usr/local/gsl/include/gsl/gsl_randist.h	/^unsigned int gsl_ran_hypergeometric (const gsl_rng * r, unsigned int n1, unsigned int n2, unsigned int t);$/;"	p	signature:(const gsl_rng * r, unsigned int n1, unsigned int n2, unsigned int t)
gsl_ran_hypergeometric_pdf	/usr/local/gsl/include/gsl/gsl_randist.h	/^double gsl_ran_hypergeometric_pdf (const unsigned int k, const unsigned int n1, const unsigned int n2, unsigned int t);$/;"	p	signature:(const unsigned int k, const unsigned int n1, const unsigned int n2, unsigned int t)
gsl_ran_landau	/usr/local/gsl/include/gsl/gsl_randist.h	/^double gsl_ran_landau (const gsl_rng * r);$/;"	p	signature:(const gsl_rng * r)
gsl_ran_landau_pdf	/usr/local/gsl/include/gsl/gsl_randist.h	/^double gsl_ran_landau_pdf (const double x);$/;"	p	signature:(const double x)
gsl_ran_laplace	/usr/local/gsl/include/gsl/gsl_randist.h	/^double gsl_ran_laplace (const gsl_rng * r, const double a);$/;"	p	signature:(const gsl_rng * r, const double a)
gsl_ran_laplace_pdf	/usr/local/gsl/include/gsl/gsl_randist.h	/^double gsl_ran_laplace_pdf (const double x, const double a);$/;"	p	signature:(const double x, const double a)
gsl_ran_levy	/usr/local/gsl/include/gsl/gsl_randist.h	/^double gsl_ran_levy (const gsl_rng * r, const double c, const double alpha);$/;"	p	signature:(const gsl_rng * r, const double c, const double alpha)
gsl_ran_levy_skew	/usr/local/gsl/include/gsl/gsl_randist.h	/^double gsl_ran_levy_skew (const gsl_rng * r, const double c, const double alpha, const double beta);$/;"	p	signature:(const gsl_rng * r, const double c, const double alpha, const double beta)
gsl_ran_logarithmic	/usr/local/gsl/include/gsl/gsl_randist.h	/^unsigned int gsl_ran_logarithmic (const gsl_rng * r, const double p);$/;"	p	signature:(const gsl_rng * r, const double p)
gsl_ran_logarithmic_pdf	/usr/local/gsl/include/gsl/gsl_randist.h	/^double gsl_ran_logarithmic_pdf (const unsigned int k, const double p);$/;"	p	signature:(const unsigned int k, const double p)
gsl_ran_logistic	/usr/local/gsl/include/gsl/gsl_randist.h	/^double gsl_ran_logistic (const gsl_rng * r, const double a);$/;"	p	signature:(const gsl_rng * r, const double a)
gsl_ran_logistic_pdf	/usr/local/gsl/include/gsl/gsl_randist.h	/^double gsl_ran_logistic_pdf (const double x, const double a);$/;"	p	signature:(const double x, const double a)
gsl_ran_lognormal	/usr/local/gsl/include/gsl/gsl_randist.h	/^double gsl_ran_lognormal (const gsl_rng * r, const double zeta, const double sigma);$/;"	p	signature:(const gsl_rng * r, const double zeta, const double sigma)
gsl_ran_lognormal_pdf	/usr/local/gsl/include/gsl/gsl_randist.h	/^double gsl_ran_lognormal_pdf (const double x, const double zeta, const double sigma);$/;"	p	signature:(const double x, const double zeta, const double sigma)
gsl_ran_multinomial	/usr/local/gsl/include/gsl/gsl_randist.h	/^void gsl_ran_multinomial (const gsl_rng * r, const size_t K,$/;"	p	signature:(const gsl_rng * r, const size_t K, const unsigned int N, const double p[], unsigned int n[] )
gsl_ran_multinomial_lnpdf	/usr/local/gsl/include/gsl/gsl_randist.h	/^double gsl_ran_multinomial_lnpdf (const size_t K,$/;"	p	signature:(const size_t K, const double p[], const unsigned int n[] )
gsl_ran_multinomial_pdf	/usr/local/gsl/include/gsl/gsl_randist.h	/^double gsl_ran_multinomial_pdf (const size_t K,$/;"	p	signature:(const size_t K, const double p[], const unsigned int n[] )
gsl_ran_negative_binomial	/usr/local/gsl/include/gsl/gsl_randist.h	/^unsigned int gsl_ran_negative_binomial (const gsl_rng * r, double p, double n);$/;"	p	signature:(const gsl_rng * r, double p, double n)
gsl_ran_negative_binomial_pdf	/usr/local/gsl/include/gsl/gsl_randist.h	/^double gsl_ran_negative_binomial_pdf (const unsigned int k, const double p, double n);$/;"	p	signature:(const unsigned int k, const double p, double n)
gsl_ran_pareto	/usr/local/gsl/include/gsl/gsl_randist.h	/^double gsl_ran_pareto (const gsl_rng * r, double a, const double b);$/;"	p	signature:(const gsl_rng * r, double a, const double b)
gsl_ran_pareto_pdf	/usr/local/gsl/include/gsl/gsl_randist.h	/^double gsl_ran_pareto_pdf (const double x, const double a, const double b);$/;"	p	signature:(const double x, const double a, const double b)
gsl_ran_pascal	/usr/local/gsl/include/gsl/gsl_randist.h	/^unsigned int gsl_ran_pascal (const gsl_rng * r, double p, unsigned int n);$/;"	p	signature:(const gsl_rng * r, double p, unsigned int n)
gsl_ran_pascal_pdf	/usr/local/gsl/include/gsl/gsl_randist.h	/^double gsl_ran_pascal_pdf (const unsigned int k, const double p, unsigned int n);$/;"	p	signature:(const unsigned int k, const double p, unsigned int n)
gsl_ran_poisson	/usr/local/gsl/include/gsl/gsl_randist.h	/^unsigned int gsl_ran_poisson (const gsl_rng * r, double mu);$/;"	p	signature:(const gsl_rng * r, double mu)
gsl_ran_poisson_array	/usr/local/gsl/include/gsl/gsl_randist.h	/^void gsl_ran_poisson_array (const gsl_rng * r, size_t n, unsigned int array[],$/;"	p	signature:(const gsl_rng * r, size_t n, unsigned int array[], double mu)
gsl_ran_poisson_pdf	/usr/local/gsl/include/gsl/gsl_randist.h	/^double gsl_ran_poisson_pdf (const unsigned int k, const double mu);$/;"	p	signature:(const unsigned int k, const double mu)
gsl_ran_rayleigh	/usr/local/gsl/include/gsl/gsl_randist.h	/^double gsl_ran_rayleigh (const gsl_rng * r, const double sigma);$/;"	p	signature:(const gsl_rng * r, const double sigma)
gsl_ran_rayleigh_pdf	/usr/local/gsl/include/gsl/gsl_randist.h	/^double gsl_ran_rayleigh_pdf (const double x, const double sigma);$/;"	p	signature:(const double x, const double sigma)
gsl_ran_rayleigh_tail	/usr/local/gsl/include/gsl/gsl_randist.h	/^double gsl_ran_rayleigh_tail (const gsl_rng * r, const double a, const double sigma);$/;"	p	signature:(const gsl_rng * r, const double a, const double sigma)
gsl_ran_rayleigh_tail_pdf	/usr/local/gsl/include/gsl/gsl_randist.h	/^double gsl_ran_rayleigh_tail_pdf (const double x, const double a, const double sigma);$/;"	p	signature:(const double x, const double a, const double sigma)
gsl_ran_sample	/usr/local/gsl/include/gsl/gsl_randist.h	/^void gsl_ran_sample (const gsl_rng * r, void * dest, size_t k, void * src, size_t n, size_t size) ;$/;"	p	signature:(const gsl_rng * r, void * dest, size_t k, void * src, size_t n, size_t size)
gsl_ran_shuffle	/usr/local/gsl/include/gsl/gsl_randist.h	/^void gsl_ran_shuffle (const gsl_rng * r, void * base, size_t nmembm, size_t size);$/;"	p	signature:(const gsl_rng * r, void * base, size_t nmembm, size_t size)
gsl_ran_tdist	/usr/local/gsl/include/gsl/gsl_randist.h	/^double gsl_ran_tdist (const gsl_rng * r, const double nu);$/;"	p	signature:(const gsl_rng * r, const double nu)
gsl_ran_tdist_pdf	/usr/local/gsl/include/gsl/gsl_randist.h	/^double gsl_ran_tdist_pdf (const double x, const double nu);$/;"	p	signature:(const double x, const double nu)
gsl_ran_ugaussian	/usr/local/gsl/include/gsl/gsl_randist.h	/^double gsl_ran_ugaussian (const gsl_rng * r);$/;"	p	signature:(const gsl_rng * r)
gsl_ran_ugaussian_pdf	/usr/local/gsl/include/gsl/gsl_randist.h	/^double gsl_ran_ugaussian_pdf (const double x);$/;"	p	signature:(const double x)
gsl_ran_ugaussian_ratio_method	/usr/local/gsl/include/gsl/gsl_randist.h	/^double gsl_ran_ugaussian_ratio_method (const gsl_rng * r);$/;"	p	signature:(const gsl_rng * r)
gsl_ran_ugaussian_tail	/usr/local/gsl/include/gsl/gsl_randist.h	/^double gsl_ran_ugaussian_tail (const gsl_rng * r, const double a);$/;"	p	signature:(const gsl_rng * r, const double a)
gsl_ran_ugaussian_tail_pdf	/usr/local/gsl/include/gsl/gsl_randist.h	/^double gsl_ran_ugaussian_tail_pdf (const double x, const double a);$/;"	p	signature:(const double x, const double a)
gsl_ran_weibull	/usr/local/gsl/include/gsl/gsl_randist.h	/^double gsl_ran_weibull (const gsl_rng * r, const double a, const double b);$/;"	p	signature:(const gsl_rng * r, const double a, const double b)
gsl_ran_weibull_pdf	/usr/local/gsl/include/gsl/gsl_randist.h	/^double gsl_ran_weibull_pdf (const double x, const double a, const double b);$/;"	p	signature:(const double x, const double a, const double b)
gsl_rng	/usr/local/gsl/include/gsl/gsl_rng.h	/^gsl_rng;$/;"	t	typeref:struct:__anon94
gsl_rng_alloc	/usr/local/gsl/include/gsl/gsl_rng.h	/^gsl_rng *gsl_rng_alloc (const gsl_rng_type * T);$/;"	p	signature:(const gsl_rng_type * T)
gsl_rng_borosh13	/usr/local/gsl/include/gsl/gsl_rng.h	/^GSL_VAR const gsl_rng_type *gsl_rng_borosh13;$/;"	v
gsl_rng_clone	/usr/local/gsl/include/gsl/gsl_rng.h	/^gsl_rng *gsl_rng_clone (const gsl_rng * r);$/;"	p	signature:(const gsl_rng * r)
gsl_rng_cmrg	/usr/local/gsl/include/gsl/gsl_rng.h	/^GSL_VAR const gsl_rng_type *gsl_rng_cmrg;$/;"	v
gsl_rng_coveyou	/usr/local/gsl/include/gsl/gsl_rng.h	/^GSL_VAR const gsl_rng_type *gsl_rng_coveyou;$/;"	v
gsl_rng_default	/usr/local/gsl/include/gsl/gsl_rng.h	/^GSL_VAR const gsl_rng_type *gsl_rng_default;$/;"	v
gsl_rng_default_seed	/usr/local/gsl/include/gsl/gsl_rng.h	/^GSL_VAR unsigned long int gsl_rng_default_seed;$/;"	v
gsl_rng_env_setup	/usr/local/gsl/include/gsl/gsl_rng.h	/^const gsl_rng_type * gsl_rng_env_setup (void);$/;"	p	signature:(void)
gsl_rng_fishman18	/usr/local/gsl/include/gsl/gsl_rng.h	/^GSL_VAR const gsl_rng_type *gsl_rng_fishman18;$/;"	v
gsl_rng_fishman20	/usr/local/gsl/include/gsl/gsl_rng.h	/^GSL_VAR const gsl_rng_type *gsl_rng_fishman20;$/;"	v
gsl_rng_fishman2x	/usr/local/gsl/include/gsl/gsl_rng.h	/^GSL_VAR const gsl_rng_type *gsl_rng_fishman2x;$/;"	v
gsl_rng_fread	/usr/local/gsl/include/gsl/gsl_rng.h	/^int gsl_rng_fread (FILE * stream, gsl_rng * r);$/;"	p	signature:(FILE * stream, gsl_rng * r)
gsl_rng_free	/usr/local/gsl/include/gsl/gsl_rng.h	/^void gsl_rng_free (gsl_rng * r);$/;"	p	signature:(gsl_rng * r)
gsl_rng_fwrite	/usr/local/gsl/include/gsl/gsl_rng.h	/^int gsl_rng_fwrite (FILE * stream, const gsl_rng * r);$/;"	p	signature:(FILE * stream, const gsl_rng * r)
gsl_rng_get	/usr/local/gsl/include/gsl/gsl_rng.h	/^INLINE_DECL unsigned long int gsl_rng_get (const gsl_rng * r);$/;"	p	signature:(const gsl_rng * r)
gsl_rng_get	/usr/local/gsl/include/gsl/gsl_rng.h	/^gsl_rng_get (const gsl_rng * r)$/;"	f	signature:(const gsl_rng * r)
gsl_rng_gfsr4	/usr/local/gsl/include/gsl/gsl_rng.h	/^GSL_VAR const gsl_rng_type *gsl_rng_gfsr4;$/;"	v
gsl_rng_knuthran	/usr/local/gsl/include/gsl/gsl_rng.h	/^GSL_VAR const gsl_rng_type *gsl_rng_knuthran;$/;"	v
gsl_rng_knuthran2	/usr/local/gsl/include/gsl/gsl_rng.h	/^GSL_VAR const gsl_rng_type *gsl_rng_knuthran2;$/;"	v
gsl_rng_knuthran2002	/usr/local/gsl/include/gsl/gsl_rng.h	/^GSL_VAR const gsl_rng_type *gsl_rng_knuthran2002;$/;"	v
gsl_rng_lecuyer21	/usr/local/gsl/include/gsl/gsl_rng.h	/^GSL_VAR const gsl_rng_type *gsl_rng_lecuyer21;$/;"	v
gsl_rng_max	/usr/local/gsl/include/gsl/gsl_rng.h	/^unsigned long int gsl_rng_max (const gsl_rng * r);$/;"	p	signature:(const gsl_rng * r)
gsl_rng_memcpy	/usr/local/gsl/include/gsl/gsl_rng.h	/^int gsl_rng_memcpy (gsl_rng * dest, const gsl_rng * src);$/;"	p	signature:(gsl_rng * dest, const gsl_rng * src)
gsl_rng_min	/usr/local/gsl/include/gsl/gsl_rng.h	/^unsigned long int gsl_rng_min (const gsl_rng * r);$/;"	p	signature:(const gsl_rng * r)
gsl_rng_minstd	/usr/local/gsl/include/gsl/gsl_rng.h	/^GSL_VAR const gsl_rng_type *gsl_rng_minstd;$/;"	v
gsl_rng_mrg	/usr/local/gsl/include/gsl/gsl_rng.h	/^GSL_VAR const gsl_rng_type *gsl_rng_mrg;$/;"	v
gsl_rng_mt19937	/usr/local/gsl/include/gsl/gsl_rng.h	/^GSL_VAR const gsl_rng_type *gsl_rng_mt19937;$/;"	v
gsl_rng_mt19937_1998	/usr/local/gsl/include/gsl/gsl_rng.h	/^GSL_VAR const gsl_rng_type *gsl_rng_mt19937_1998;$/;"	v
gsl_rng_mt19937_1999	/usr/local/gsl/include/gsl/gsl_rng.h	/^GSL_VAR const gsl_rng_type *gsl_rng_mt19937_1999;$/;"	v
gsl_rng_name	/usr/local/gsl/include/gsl/gsl_rng.h	/^const char *gsl_rng_name (const gsl_rng * r);$/;"	p	signature:(const gsl_rng * r)
gsl_rng_print_state	/usr/local/gsl/include/gsl/gsl_rng.h	/^void gsl_rng_print_state (const gsl_rng * r);$/;"	p	signature:(const gsl_rng * r)
gsl_rng_r250	/usr/local/gsl/include/gsl/gsl_rng.h	/^GSL_VAR const gsl_rng_type *gsl_rng_r250;$/;"	v
gsl_rng_ran0	/usr/local/gsl/include/gsl/gsl_rng.h	/^GSL_VAR const gsl_rng_type *gsl_rng_ran0;$/;"	v
gsl_rng_ran1	/usr/local/gsl/include/gsl/gsl_rng.h	/^GSL_VAR const gsl_rng_type *gsl_rng_ran1;$/;"	v
gsl_rng_ran2	/usr/local/gsl/include/gsl/gsl_rng.h	/^GSL_VAR const gsl_rng_type *gsl_rng_ran2;$/;"	v
gsl_rng_ran3	/usr/local/gsl/include/gsl/gsl_rng.h	/^GSL_VAR const gsl_rng_type *gsl_rng_ran3;$/;"	v
gsl_rng_rand	/usr/local/gsl/include/gsl/gsl_rng.h	/^GSL_VAR const gsl_rng_type *gsl_rng_rand;$/;"	v
gsl_rng_rand48	/usr/local/gsl/include/gsl/gsl_rng.h	/^GSL_VAR const gsl_rng_type *gsl_rng_rand48;$/;"	v
gsl_rng_random128_bsd	/usr/local/gsl/include/gsl/gsl_rng.h	/^GSL_VAR const gsl_rng_type *gsl_rng_random128_bsd;$/;"	v
gsl_rng_random128_glibc2	/usr/local/gsl/include/gsl/gsl_rng.h	/^GSL_VAR const gsl_rng_type *gsl_rng_random128_glibc2;$/;"	v
gsl_rng_random128_libc5	/usr/local/gsl/include/gsl/gsl_rng.h	/^GSL_VAR const gsl_rng_type *gsl_rng_random128_libc5;$/;"	v
gsl_rng_random256_bsd	/usr/local/gsl/include/gsl/gsl_rng.h	/^GSL_VAR const gsl_rng_type *gsl_rng_random256_bsd;$/;"	v
gsl_rng_random256_glibc2	/usr/local/gsl/include/gsl/gsl_rng.h	/^GSL_VAR const gsl_rng_type *gsl_rng_random256_glibc2;$/;"	v
gsl_rng_random256_libc5	/usr/local/gsl/include/gsl/gsl_rng.h	/^GSL_VAR const gsl_rng_type *gsl_rng_random256_libc5;$/;"	v
gsl_rng_random32_bsd	/usr/local/gsl/include/gsl/gsl_rng.h	/^GSL_VAR const gsl_rng_type *gsl_rng_random32_bsd;$/;"	v
gsl_rng_random32_glibc2	/usr/local/gsl/include/gsl/gsl_rng.h	/^GSL_VAR const gsl_rng_type *gsl_rng_random32_glibc2;$/;"	v
gsl_rng_random32_libc5	/usr/local/gsl/include/gsl/gsl_rng.h	/^GSL_VAR const gsl_rng_type *gsl_rng_random32_libc5;$/;"	v
gsl_rng_random64_bsd	/usr/local/gsl/include/gsl/gsl_rng.h	/^GSL_VAR const gsl_rng_type *gsl_rng_random64_bsd;$/;"	v
gsl_rng_random64_glibc2	/usr/local/gsl/include/gsl/gsl_rng.h	/^GSL_VAR const gsl_rng_type *gsl_rng_random64_glibc2;$/;"	v
gsl_rng_random64_libc5	/usr/local/gsl/include/gsl/gsl_rng.h	/^GSL_VAR const gsl_rng_type *gsl_rng_random64_libc5;$/;"	v
gsl_rng_random8_bsd	/usr/local/gsl/include/gsl/gsl_rng.h	/^GSL_VAR const gsl_rng_type *gsl_rng_random8_bsd;$/;"	v
gsl_rng_random8_glibc2	/usr/local/gsl/include/gsl/gsl_rng.h	/^GSL_VAR const gsl_rng_type *gsl_rng_random8_glibc2;$/;"	v
gsl_rng_random8_libc5	/usr/local/gsl/include/gsl/gsl_rng.h	/^GSL_VAR const gsl_rng_type *gsl_rng_random8_libc5;$/;"	v
gsl_rng_random_bsd	/usr/local/gsl/include/gsl/gsl_rng.h	/^GSL_VAR const gsl_rng_type *gsl_rng_random_bsd;$/;"	v
gsl_rng_random_glibc2	/usr/local/gsl/include/gsl/gsl_rng.h	/^GSL_VAR const gsl_rng_type *gsl_rng_random_glibc2;$/;"	v
gsl_rng_random_libc5	/usr/local/gsl/include/gsl/gsl_rng.h	/^GSL_VAR const gsl_rng_type *gsl_rng_random_libc5;$/;"	v
gsl_rng_randu	/usr/local/gsl/include/gsl/gsl_rng.h	/^GSL_VAR const gsl_rng_type *gsl_rng_randu;$/;"	v
gsl_rng_ranf	/usr/local/gsl/include/gsl/gsl_rng.h	/^GSL_VAR const gsl_rng_type *gsl_rng_ranf;$/;"	v
gsl_rng_ranlux	/usr/local/gsl/include/gsl/gsl_rng.h	/^GSL_VAR const gsl_rng_type *gsl_rng_ranlux;$/;"	v
gsl_rng_ranlux389	/usr/local/gsl/include/gsl/gsl_rng.h	/^GSL_VAR const gsl_rng_type *gsl_rng_ranlux389;$/;"	v
gsl_rng_ranlxd1	/usr/local/gsl/include/gsl/gsl_rng.h	/^GSL_VAR const gsl_rng_type *gsl_rng_ranlxd1;$/;"	v
gsl_rng_ranlxd2	/usr/local/gsl/include/gsl/gsl_rng.h	/^GSL_VAR const gsl_rng_type *gsl_rng_ranlxd2;$/;"	v
gsl_rng_ranlxs0	/usr/local/gsl/include/gsl/gsl_rng.h	/^GSL_VAR const gsl_rng_type *gsl_rng_ranlxs0;$/;"	v
gsl_rng_ranlxs1	/usr/local/gsl/include/gsl/gsl_rng.h	/^GSL_VAR const gsl_rng_type *gsl_rng_ranlxs1;$/;"	v
gsl_rng_ranlxs2	/usr/local/gsl/include/gsl/gsl_rng.h	/^GSL_VAR const gsl_rng_type *gsl_rng_ranlxs2;$/;"	v
gsl_rng_ranmar	/usr/local/gsl/include/gsl/gsl_rng.h	/^GSL_VAR const gsl_rng_type *gsl_rng_ranmar;$/;"	v
gsl_rng_set	/usr/local/gsl/include/gsl/gsl_rng.h	/^void gsl_rng_set (const gsl_rng * r, unsigned long int seed);$/;"	p	signature:(const gsl_rng * r, unsigned long int seed)
gsl_rng_size	/usr/local/gsl/include/gsl/gsl_rng.h	/^size_t gsl_rng_size (const gsl_rng * r);$/;"	p	signature:(const gsl_rng * r)
gsl_rng_slatec	/usr/local/gsl/include/gsl/gsl_rng.h	/^GSL_VAR const gsl_rng_type *gsl_rng_slatec;$/;"	v
gsl_rng_state	/usr/local/gsl/include/gsl/gsl_rng.h	/^void * gsl_rng_state (const gsl_rng * r);$/;"	p	signature:(const gsl_rng * r)
gsl_rng_taus	/usr/local/gsl/include/gsl/gsl_rng.h	/^GSL_VAR const gsl_rng_type *gsl_rng_taus;$/;"	v
gsl_rng_taus113	/usr/local/gsl/include/gsl/gsl_rng.h	/^GSL_VAR const gsl_rng_type *gsl_rng_taus113;$/;"	v
gsl_rng_taus2	/usr/local/gsl/include/gsl/gsl_rng.h	/^GSL_VAR const gsl_rng_type *gsl_rng_taus2;$/;"	v
gsl_rng_transputer	/usr/local/gsl/include/gsl/gsl_rng.h	/^GSL_VAR const gsl_rng_type *gsl_rng_transputer;$/;"	v
gsl_rng_tt800	/usr/local/gsl/include/gsl/gsl_rng.h	/^GSL_VAR const gsl_rng_type *gsl_rng_tt800;$/;"	v
gsl_rng_type	/usr/local/gsl/include/gsl/gsl_rng.h	/^gsl_rng_type;$/;"	t	typeref:struct:__anon93
gsl_rng_types_setup	/usr/local/gsl/include/gsl/gsl_rng.h	/^const gsl_rng_type ** gsl_rng_types_setup(void);$/;"	p	signature:(void)
gsl_rng_uni	/usr/local/gsl/include/gsl/gsl_rng.h	/^GSL_VAR const gsl_rng_type *gsl_rng_uni;$/;"	v
gsl_rng_uni32	/usr/local/gsl/include/gsl/gsl_rng.h	/^GSL_VAR const gsl_rng_type *gsl_rng_uni32;$/;"	v
gsl_rng_uniform	/usr/local/gsl/include/gsl/gsl_rng.h	/^INLINE_DECL double gsl_rng_uniform (const gsl_rng * r);$/;"	p	signature:(const gsl_rng * r)
gsl_rng_uniform	/usr/local/gsl/include/gsl/gsl_rng.h	/^gsl_rng_uniform (const gsl_rng * r)$/;"	f	signature:(const gsl_rng * r)
gsl_rng_uniform_int	/usr/local/gsl/include/gsl/gsl_rng.h	/^INLINE_DECL unsigned long int gsl_rng_uniform_int (const gsl_rng * r, unsigned long int n);$/;"	p	signature:(const gsl_rng * r, unsigned long int n)
gsl_rng_uniform_int	/usr/local/gsl/include/gsl/gsl_rng.h	/^gsl_rng_uniform_int (const gsl_rng * r, unsigned long int n)$/;"	f	signature:(const gsl_rng * r, unsigned long int n)
gsl_rng_uniform_pos	/usr/local/gsl/include/gsl/gsl_rng.h	/^INLINE_DECL double gsl_rng_uniform_pos (const gsl_rng * r);$/;"	p	signature:(const gsl_rng * r)
gsl_rng_uniform_pos	/usr/local/gsl/include/gsl/gsl_rng.h	/^gsl_rng_uniform_pos (const gsl_rng * r)$/;"	f	signature:(const gsl_rng * r)
gsl_rng_vax	/usr/local/gsl/include/gsl/gsl_rng.h	/^GSL_VAR const gsl_rng_type *gsl_rng_vax;$/;"	v
gsl_rng_waterman14	/usr/local/gsl/include/gsl/gsl_rng.h	/^GSL_VAR const gsl_rng_type *gsl_rng_waterman14;$/;"	v
gsl_rng_zuf	/usr/local/gsl/include/gsl/gsl_rng.h	/^GSL_VAR const gsl_rng_type *gsl_rng_zuf;$/;"	v
gsl_root_fdfsolver	/usr/local/gsl/include/gsl/gsl_roots.h	/^gsl_root_fdfsolver;$/;"	t	typeref:struct:__anon104
gsl_root_fdfsolver_alloc	/usr/local/gsl/include/gsl/gsl_roots.h	/^gsl_root_fdfsolver_alloc (const gsl_root_fdfsolver_type * T);$/;"	p	signature:(const gsl_root_fdfsolver_type * T)
gsl_root_fdfsolver_free	/usr/local/gsl/include/gsl/gsl_roots.h	/^gsl_root_fdfsolver_free (gsl_root_fdfsolver * s);$/;"	p	signature:(gsl_root_fdfsolver * s)
gsl_root_fdfsolver_iterate	/usr/local/gsl/include/gsl/gsl_roots.h	/^gsl_root_fdfsolver_iterate (gsl_root_fdfsolver * s);$/;"	p	signature:(gsl_root_fdfsolver * s)
gsl_root_fdfsolver_name	/usr/local/gsl/include/gsl/gsl_roots.h	/^const char * gsl_root_fdfsolver_name (const gsl_root_fdfsolver * s);$/;"	p	signature:(const gsl_root_fdfsolver * s)
gsl_root_fdfsolver_newton	/usr/local/gsl/include/gsl/gsl_roots.h	/^GSL_VAR const gsl_root_fdfsolver_type  * gsl_root_fdfsolver_newton;$/;"	v
gsl_root_fdfsolver_root	/usr/local/gsl/include/gsl/gsl_roots.h	/^double gsl_root_fdfsolver_root (const gsl_root_fdfsolver * s);$/;"	p	signature:(const gsl_root_fdfsolver * s)
gsl_root_fdfsolver_secant	/usr/local/gsl/include/gsl/gsl_roots.h	/^GSL_VAR const gsl_root_fdfsolver_type  * gsl_root_fdfsolver_secant;$/;"	v
gsl_root_fdfsolver_set	/usr/local/gsl/include/gsl/gsl_roots.h	/^gsl_root_fdfsolver_set (gsl_root_fdfsolver * s, $/;"	p	signature:(gsl_root_fdfsolver * s, gsl_function_fdf * fdf, double root)
gsl_root_fdfsolver_steffenson	/usr/local/gsl/include/gsl/gsl_roots.h	/^GSL_VAR const gsl_root_fdfsolver_type  * gsl_root_fdfsolver_steffenson;$/;"	v
gsl_root_fdfsolver_type	/usr/local/gsl/include/gsl/gsl_roots.h	/^gsl_root_fdfsolver_type;$/;"	t	typeref:struct:__anon103
gsl_root_fsolver	/usr/local/gsl/include/gsl/gsl_roots.h	/^gsl_root_fsolver;$/;"	t	typeref:struct:__anon102
gsl_root_fsolver_alloc	/usr/local/gsl/include/gsl/gsl_roots.h	/^gsl_root_fsolver_alloc (const gsl_root_fsolver_type * T);$/;"	p	signature:(const gsl_root_fsolver_type * T)
gsl_root_fsolver_bisection	/usr/local/gsl/include/gsl/gsl_roots.h	/^GSL_VAR const gsl_root_fsolver_type  * gsl_root_fsolver_bisection;$/;"	v
gsl_root_fsolver_brent	/usr/local/gsl/include/gsl/gsl_roots.h	/^GSL_VAR const gsl_root_fsolver_type  * gsl_root_fsolver_brent;$/;"	v
gsl_root_fsolver_falsepos	/usr/local/gsl/include/gsl/gsl_roots.h	/^GSL_VAR const gsl_root_fsolver_type  * gsl_root_fsolver_falsepos;$/;"	v
gsl_root_fsolver_free	/usr/local/gsl/include/gsl/gsl_roots.h	/^void gsl_root_fsolver_free (gsl_root_fsolver * s);$/;"	p	signature:(gsl_root_fsolver * s)
gsl_root_fsolver_iterate	/usr/local/gsl/include/gsl/gsl_roots.h	/^int gsl_root_fsolver_iterate (gsl_root_fsolver * s);$/;"	p	signature:(gsl_root_fsolver * s)
gsl_root_fsolver_name	/usr/local/gsl/include/gsl/gsl_roots.h	/^const char * gsl_root_fsolver_name (const gsl_root_fsolver * s);$/;"	p	signature:(const gsl_root_fsolver * s)
gsl_root_fsolver_root	/usr/local/gsl/include/gsl/gsl_roots.h	/^double gsl_root_fsolver_root (const gsl_root_fsolver * s);$/;"	p	signature:(const gsl_root_fsolver * s)
gsl_root_fsolver_set	/usr/local/gsl/include/gsl/gsl_roots.h	/^int gsl_root_fsolver_set (gsl_root_fsolver * s,$/;"	p	signature:(gsl_root_fsolver * s, gsl_function * f, double x_lower, double x_upper)
gsl_root_fsolver_type	/usr/local/gsl/include/gsl/gsl_roots.h	/^gsl_root_fsolver_type;$/;"	t	typeref:struct:__anon101
gsl_root_fsolver_x_lower	/usr/local/gsl/include/gsl/gsl_roots.h	/^double gsl_root_fsolver_x_lower (const gsl_root_fsolver * s);$/;"	p	signature:(const gsl_root_fsolver * s)
gsl_root_fsolver_x_upper	/usr/local/gsl/include/gsl/gsl_roots.h	/^double gsl_root_fsolver_x_upper (const gsl_root_fsolver * s);$/;"	p	signature:(const gsl_root_fsolver * s)
gsl_root_test_delta	/usr/local/gsl/include/gsl/gsl_roots.h	/^gsl_root_test_delta (double x1, double x0, double epsabs, double epsrel);$/;"	p	signature:(double x1, double x0, double epsabs, double epsrel)
gsl_root_test_interval	/usr/local/gsl/include/gsl/gsl_roots.h	/^gsl_root_test_interval (double x_lower, double x_upper, double epsabs, double epsrel);$/;"	p	signature:(double x_lower, double x_upper, double epsabs, double epsrel)
gsl_root_test_residual	/usr/local/gsl/include/gsl/gsl_roots.h	/^gsl_root_test_residual (double f, double epsabs);$/;"	p	signature:(double f, double epsabs)
gsl_schur_gen_eigvals	/usr/local/gsl/include/gsl/gsl_eigen.h	/^int gsl_schur_gen_eigvals(const gsl_matrix *A, const gsl_matrix *B,$/;"	p	signature:(const gsl_matrix *A, const gsl_matrix *B, double *wr1, double *wr2, double *wi, double *scale1, double *scale2)
gsl_schur_solve_equation	/usr/local/gsl/include/gsl/gsl_eigen.h	/^int gsl_schur_solve_equation(double ca, const gsl_matrix *A, double z,$/;"	p	signature:(double ca, const gsl_matrix *A, double z, double d1, double d2, const gsl_vector *b, gsl_vector *x, double *s, double *xnorm, double smin)
gsl_schur_solve_equation_z	/usr/local/gsl/include/gsl/gsl_eigen.h	/^int gsl_schur_solve_equation_z(double ca, const gsl_matrix *A,$/;"	p	signature:(double ca, const gsl_matrix *A, gsl_complex *z, double d1, double d2, const gsl_vector_complex *b, gsl_vector_complex *x, double *s, double *xnorm, double smin)
gsl_set_error_handler	/usr/local/gsl/include/gsl/gsl_errno.h	/^gsl_set_error_handler (gsl_error_handler_t * new_handler);$/;"	p	signature:(gsl_error_handler_t * new_handler)
gsl_set_error_handler_off	/usr/local/gsl/include/gsl/gsl_errno.h	/^gsl_set_error_handler_off (void);$/;"	p	signature:(void)
gsl_set_stream	/usr/local/gsl/include/gsl/gsl_errno.h	/^FILE * gsl_set_stream (FILE * new_stream);$/;"	p	signature:(FILE * new_stream)
gsl_set_stream_handler	/usr/local/gsl/include/gsl/gsl_errno.h	/^gsl_set_stream_handler (gsl_stream_handler_t * new_handler);$/;"	p	signature:(gsl_stream_handler_t * new_handler)
gsl_sf_Chi	/usr/local/gsl/include/gsl/gsl_sf_expint.h	/^double  gsl_sf_Chi(const double x);$/;"	p	signature:(const double x)
gsl_sf_Chi_e	/usr/local/gsl/include/gsl/gsl_sf_expint.h	/^int     gsl_sf_Chi_e(const double x, gsl_sf_result * result);$/;"	p	signature:(const double x, gsl_sf_result * result)
gsl_sf_Ci	/usr/local/gsl/include/gsl/gsl_sf_expint.h	/^double  gsl_sf_Ci(const double x);$/;"	p	signature:(const double x)
gsl_sf_Ci_e	/usr/local/gsl/include/gsl/gsl_sf_expint.h	/^int     gsl_sf_Ci_e(const double x, gsl_sf_result * result);$/;"	p	signature:(const double x, gsl_sf_result * result)
gsl_sf_Shi	/usr/local/gsl/include/gsl/gsl_sf_expint.h	/^double  gsl_sf_Shi(const double x);$/;"	p	signature:(const double x)
gsl_sf_Shi_e	/usr/local/gsl/include/gsl/gsl_sf_expint.h	/^int     gsl_sf_Shi_e(const double x, gsl_sf_result * result);$/;"	p	signature:(const double x, gsl_sf_result * result)
gsl_sf_Si	/usr/local/gsl/include/gsl/gsl_sf_expint.h	/^double  gsl_sf_Si(const double x);$/;"	p	signature:(const double x)
gsl_sf_Si_e	/usr/local/gsl/include/gsl/gsl_sf_expint.h	/^int     gsl_sf_Si_e(const double x, gsl_sf_result * result);$/;"	p	signature:(const double x, gsl_sf_result * result)
gsl_sf_airy_Ai	/usr/local/gsl/include/gsl/gsl_sf_airy.h	/^double gsl_sf_airy_Ai(const double x, gsl_mode_t mode);$/;"	p	signature:(const double x, gsl_mode_t mode)
gsl_sf_airy_Ai_deriv	/usr/local/gsl/include/gsl/gsl_sf_airy.h	/^double gsl_sf_airy_Ai_deriv(const double x, gsl_mode_t mode);$/;"	p	signature:(const double x, gsl_mode_t mode)
gsl_sf_airy_Ai_deriv_e	/usr/local/gsl/include/gsl/gsl_sf_airy.h	/^int gsl_sf_airy_Ai_deriv_e(const double x, gsl_mode_t mode, gsl_sf_result * result);$/;"	p	signature:(const double x, gsl_mode_t mode, gsl_sf_result * result)
gsl_sf_airy_Ai_deriv_scaled	/usr/local/gsl/include/gsl/gsl_sf_airy.h	/^double gsl_sf_airy_Ai_deriv_scaled(const double x, gsl_mode_t mode);$/;"	p	signature:(const double x, gsl_mode_t mode)
gsl_sf_airy_Ai_deriv_scaled_e	/usr/local/gsl/include/gsl/gsl_sf_airy.h	/^int gsl_sf_airy_Ai_deriv_scaled_e(const double x, gsl_mode_t mode, gsl_sf_result * result);$/;"	p	signature:(const double x, gsl_mode_t mode, gsl_sf_result * result)
gsl_sf_airy_Ai_e	/usr/local/gsl/include/gsl/gsl_sf_airy.h	/^int gsl_sf_airy_Ai_e(const double x, const gsl_mode_t mode, gsl_sf_result * result);$/;"	p	signature:(const double x, const gsl_mode_t mode, gsl_sf_result * result)
gsl_sf_airy_Ai_scaled	/usr/local/gsl/include/gsl/gsl_sf_airy.h	/^double gsl_sf_airy_Ai_scaled(const double x, gsl_mode_t mode);$/;"	p	signature:(const double x, gsl_mode_t mode)
gsl_sf_airy_Ai_scaled_e	/usr/local/gsl/include/gsl/gsl_sf_airy.h	/^int gsl_sf_airy_Ai_scaled_e(const double x, gsl_mode_t mode, gsl_sf_result * result);$/;"	p	signature:(const double x, gsl_mode_t mode, gsl_sf_result * result)
gsl_sf_airy_Bi	/usr/local/gsl/include/gsl/gsl_sf_airy.h	/^double gsl_sf_airy_Bi(const double x, gsl_mode_t mode);$/;"	p	signature:(const double x, gsl_mode_t mode)
gsl_sf_airy_Bi_deriv	/usr/local/gsl/include/gsl/gsl_sf_airy.h	/^double gsl_sf_airy_Bi_deriv(const double x, gsl_mode_t mode);$/;"	p	signature:(const double x, gsl_mode_t mode)
gsl_sf_airy_Bi_deriv_e	/usr/local/gsl/include/gsl/gsl_sf_airy.h	/^int gsl_sf_airy_Bi_deriv_e(const double x, gsl_mode_t mode, gsl_sf_result * result);$/;"	p	signature:(const double x, gsl_mode_t mode, gsl_sf_result * result)
gsl_sf_airy_Bi_deriv_scaled	/usr/local/gsl/include/gsl/gsl_sf_airy.h	/^double gsl_sf_airy_Bi_deriv_scaled(const double x, gsl_mode_t mode);$/;"	p	signature:(const double x, gsl_mode_t mode)
gsl_sf_airy_Bi_deriv_scaled_e	/usr/local/gsl/include/gsl/gsl_sf_airy.h	/^int gsl_sf_airy_Bi_deriv_scaled_e(const double x, gsl_mode_t mode, gsl_sf_result * result);$/;"	p	signature:(const double x, gsl_mode_t mode, gsl_sf_result * result)
gsl_sf_airy_Bi_e	/usr/local/gsl/include/gsl/gsl_sf_airy.h	/^int gsl_sf_airy_Bi_e(const double x, gsl_mode_t mode, gsl_sf_result * result);$/;"	p	signature:(const double x, gsl_mode_t mode, gsl_sf_result * result)
gsl_sf_airy_Bi_scaled	/usr/local/gsl/include/gsl/gsl_sf_airy.h	/^double gsl_sf_airy_Bi_scaled(const double x, gsl_mode_t mode);$/;"	p	signature:(const double x, gsl_mode_t mode)
gsl_sf_airy_Bi_scaled_e	/usr/local/gsl/include/gsl/gsl_sf_airy.h	/^int gsl_sf_airy_Bi_scaled_e(const double x, gsl_mode_t mode, gsl_sf_result * result);$/;"	p	signature:(const double x, gsl_mode_t mode, gsl_sf_result * result)
gsl_sf_airy_zero_Ai	/usr/local/gsl/include/gsl/gsl_sf_airy.h	/^double gsl_sf_airy_zero_Ai(unsigned int s);$/;"	p	signature:(unsigned int s)
gsl_sf_airy_zero_Ai_deriv	/usr/local/gsl/include/gsl/gsl_sf_airy.h	/^double gsl_sf_airy_zero_Ai_deriv(unsigned int s);$/;"	p	signature:(unsigned int s)
gsl_sf_airy_zero_Ai_deriv_e	/usr/local/gsl/include/gsl/gsl_sf_airy.h	/^int gsl_sf_airy_zero_Ai_deriv_e(unsigned int s, gsl_sf_result * result);$/;"	p	signature:(unsigned int s, gsl_sf_result * result)
gsl_sf_airy_zero_Ai_e	/usr/local/gsl/include/gsl/gsl_sf_airy.h	/^int gsl_sf_airy_zero_Ai_e(unsigned int s, gsl_sf_result * result);$/;"	p	signature:(unsigned int s, gsl_sf_result * result)
gsl_sf_airy_zero_Bi	/usr/local/gsl/include/gsl/gsl_sf_airy.h	/^double gsl_sf_airy_zero_Bi(unsigned int s);$/;"	p	signature:(unsigned int s)
gsl_sf_airy_zero_Bi_deriv	/usr/local/gsl/include/gsl/gsl_sf_airy.h	/^double gsl_sf_airy_zero_Bi_deriv(unsigned int s);$/;"	p	signature:(unsigned int s)
gsl_sf_airy_zero_Bi_deriv_e	/usr/local/gsl/include/gsl/gsl_sf_airy.h	/^int gsl_sf_airy_zero_Bi_deriv_e(unsigned int s, gsl_sf_result * result);$/;"	p	signature:(unsigned int s, gsl_sf_result * result)
gsl_sf_airy_zero_Bi_e	/usr/local/gsl/include/gsl/gsl_sf_airy.h	/^int gsl_sf_airy_zero_Bi_e(unsigned int s, gsl_sf_result * result);$/;"	p	signature:(unsigned int s, gsl_sf_result * result)
gsl_sf_angle_restrict_pos	/usr/local/gsl/include/gsl/gsl_sf_trig.h	/^double gsl_sf_angle_restrict_pos(const double theta);$/;"	p	signature:(const double theta)
gsl_sf_angle_restrict_pos_e	/usr/local/gsl/include/gsl/gsl_sf_trig.h	/^int gsl_sf_angle_restrict_pos_e(double * theta);$/;"	p	signature:(double * theta)
gsl_sf_angle_restrict_pos_err_e	/usr/local/gsl/include/gsl/gsl_sf_trig.h	/^int gsl_sf_angle_restrict_pos_err_e(const double theta, gsl_sf_result * result);$/;"	p	signature:(const double theta, gsl_sf_result * result)
gsl_sf_angle_restrict_symm	/usr/local/gsl/include/gsl/gsl_sf_trig.h	/^double gsl_sf_angle_restrict_symm(const double theta);$/;"	p	signature:(const double theta)
gsl_sf_angle_restrict_symm_e	/usr/local/gsl/include/gsl/gsl_sf_trig.h	/^int gsl_sf_angle_restrict_symm_e(double * theta);$/;"	p	signature:(double * theta)
gsl_sf_angle_restrict_symm_err_e	/usr/local/gsl/include/gsl/gsl_sf_trig.h	/^int gsl_sf_angle_restrict_symm_err_e(const double theta, gsl_sf_result * result);$/;"	p	signature:(const double theta, gsl_sf_result * result)
gsl_sf_atanint	/usr/local/gsl/include/gsl/gsl_sf_expint.h	/^double  gsl_sf_atanint(const double x);$/;"	p	signature:(const double x)
gsl_sf_atanint_e	/usr/local/gsl/include/gsl/gsl_sf_expint.h	/^int     gsl_sf_atanint_e(const double x, gsl_sf_result * result);$/;"	p	signature:(const double x, gsl_sf_result * result)
gsl_sf_bessel_I0	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	/^double gsl_sf_bessel_I0(const double x);$/;"	p	signature:(const double x)
gsl_sf_bessel_I0_e	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	/^int gsl_sf_bessel_I0_e(const double x, gsl_sf_result * result);$/;"	p	signature:(const double x, gsl_sf_result * result)
gsl_sf_bessel_I0_scaled	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	/^double gsl_sf_bessel_I0_scaled(const double x);$/;"	p	signature:(const double x)
gsl_sf_bessel_I0_scaled_e	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	/^int gsl_sf_bessel_I0_scaled_e(const double x, gsl_sf_result * result);$/;"	p	signature:(const double x, gsl_sf_result * result)
gsl_sf_bessel_I1	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	/^double gsl_sf_bessel_I1(const double x);$/;"	p	signature:(const double x)
gsl_sf_bessel_I1_e	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	/^int gsl_sf_bessel_I1_e(const double x, gsl_sf_result * result);$/;"	p	signature:(const double x, gsl_sf_result * result)
gsl_sf_bessel_I1_scaled	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	/^double gsl_sf_bessel_I1_scaled(const double x);$/;"	p	signature:(const double x)
gsl_sf_bessel_I1_scaled_e	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	/^int gsl_sf_bessel_I1_scaled_e(const double x, gsl_sf_result * result);$/;"	p	signature:(const double x, gsl_sf_result * result)
gsl_sf_bessel_In	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	/^double gsl_sf_bessel_In(const int n, const double x);$/;"	p	signature:(const int n, const double x)
gsl_sf_bessel_In_array	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	/^int gsl_sf_bessel_In_array(const int nmin, const int nmax, const double x, double * result_array);$/;"	p	signature:(const int nmin, const int nmax, const double x, double * result_array)
gsl_sf_bessel_In_e	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	/^int gsl_sf_bessel_In_e(const int n, const double x, gsl_sf_result * result);$/;"	p	signature:(const int n, const double x, gsl_sf_result * result)
gsl_sf_bessel_In_scaled	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	/^double gsl_sf_bessel_In_scaled(const int n, const double x);$/;"	p	signature:(const int n, const double x)
gsl_sf_bessel_In_scaled_array	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	/^int gsl_sf_bessel_In_scaled_array(const int nmin, const int nmax, const double x, double * result_array);$/;"	p	signature:(const int nmin, const int nmax, const double x, double * result_array)
gsl_sf_bessel_In_scaled_e	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	/^int gsl_sf_bessel_In_scaled_e(int n, const double x, gsl_sf_result * result);$/;"	p	signature:(int n, const double x, gsl_sf_result * result)
gsl_sf_bessel_Inu	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	/^double gsl_sf_bessel_Inu(double nu, double x);$/;"	p	signature:(double nu, double x)
gsl_sf_bessel_Inu_e	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	/^int gsl_sf_bessel_Inu_e(double nu, double x, gsl_sf_result * result);$/;"	p	signature:(double nu, double x, gsl_sf_result * result)
gsl_sf_bessel_Inu_scaled	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	/^double gsl_sf_bessel_Inu_scaled(double nu, double x);$/;"	p	signature:(double nu, double x)
gsl_sf_bessel_Inu_scaled_e	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	/^int gsl_sf_bessel_Inu_scaled_e(double nu, double x, gsl_sf_result * result);$/;"	p	signature:(double nu, double x, gsl_sf_result * result)
gsl_sf_bessel_J0	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	/^double gsl_sf_bessel_J0(const double x);$/;"	p	signature:(const double x)
gsl_sf_bessel_J0_e	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	/^int gsl_sf_bessel_J0_e(const double x,  gsl_sf_result * result);$/;"	p	signature:(const double x, gsl_sf_result * result)
gsl_sf_bessel_J1	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	/^double gsl_sf_bessel_J1(const double x);$/;"	p	signature:(const double x)
gsl_sf_bessel_J1_e	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	/^int gsl_sf_bessel_J1_e(const double x, gsl_sf_result * result);$/;"	p	signature:(const double x, gsl_sf_result * result)
gsl_sf_bessel_Jn	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	/^double gsl_sf_bessel_Jn(const int n, const double x);$/;"	p	signature:(const int n, const double x)
gsl_sf_bessel_Jn_array	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	/^int gsl_sf_bessel_Jn_array(int nmin, int nmax, double x, double * result_array);$/;"	p	signature:(int nmin, int nmax, double x, double * result_array)
gsl_sf_bessel_Jn_e	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	/^int gsl_sf_bessel_Jn_e(int n, double x, gsl_sf_result * result);$/;"	p	signature:(int n, double x, gsl_sf_result * result)
gsl_sf_bessel_Jnu	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	/^double gsl_sf_bessel_Jnu(const double nu, const double x);$/;"	p	signature:(const double nu, const double x)
gsl_sf_bessel_Jnu_e	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	/^int gsl_sf_bessel_Jnu_e(const double nu, const double x, gsl_sf_result * result);$/;"	p	signature:(const double nu, const double x, gsl_sf_result * result)
gsl_sf_bessel_K0	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	/^double gsl_sf_bessel_K0(const double x);$/;"	p	signature:(const double x)
gsl_sf_bessel_K0_e	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	/^int gsl_sf_bessel_K0_e(const double x, gsl_sf_result * result);$/;"	p	signature:(const double x, gsl_sf_result * result)
gsl_sf_bessel_K0_scaled	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	/^double gsl_sf_bessel_K0_scaled(const double x);$/;"	p	signature:(const double x)
gsl_sf_bessel_K0_scaled_e	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	/^int gsl_sf_bessel_K0_scaled_e(const double x, gsl_sf_result * result);$/;"	p	signature:(const double x, gsl_sf_result * result)
gsl_sf_bessel_K1	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	/^double gsl_sf_bessel_K1(const double x);$/;"	p	signature:(const double x)
gsl_sf_bessel_K1_e	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	/^int gsl_sf_bessel_K1_e(const double x, gsl_sf_result * result);$/;"	p	signature:(const double x, gsl_sf_result * result)
gsl_sf_bessel_K1_scaled	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	/^double gsl_sf_bessel_K1_scaled(const double x);$/;"	p	signature:(const double x)
gsl_sf_bessel_K1_scaled_e	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	/^int gsl_sf_bessel_K1_scaled_e(const double x, gsl_sf_result * result); $/;"	p	signature:(const double x, gsl_sf_result * result)
gsl_sf_bessel_Kn	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	/^double gsl_sf_bessel_Kn(const int n, const double x);$/;"	p	signature:(const int n, const double x)
gsl_sf_bessel_Kn_array	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	/^int gsl_sf_bessel_Kn_array(const int nmin, const int nmax, const double x, double * result_array);$/;"	p	signature:(const int nmin, const int nmax, const double x, double * result_array)
gsl_sf_bessel_Kn_e	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	/^int gsl_sf_bessel_Kn_e(const int n, const double x, gsl_sf_result * result);$/;"	p	signature:(const int n, const double x, gsl_sf_result * result)
gsl_sf_bessel_Kn_scaled	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	/^double gsl_sf_bessel_Kn_scaled(const int n, const double x);$/;"	p	signature:(const int n, const double x)
gsl_sf_bessel_Kn_scaled_array	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	/^int gsl_sf_bessel_Kn_scaled_array(const int nmin, const int nmax, const double x, double * result_array);$/;"	p	signature:(const int nmin, const int nmax, const double x, double * result_array)
gsl_sf_bessel_Kn_scaled_e	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	/^int gsl_sf_bessel_Kn_scaled_e(int n, const double x, gsl_sf_result * result);$/;"	p	signature:(int n, const double x, gsl_sf_result * result)
gsl_sf_bessel_Knu	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	/^double gsl_sf_bessel_Knu(const double nu, const double x);$/;"	p	signature:(const double nu, const double x)
gsl_sf_bessel_Knu_e	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	/^int gsl_sf_bessel_Knu_e(const double nu, const double x, gsl_sf_result * result);$/;"	p	signature:(const double nu, const double x, gsl_sf_result * result)
gsl_sf_bessel_Knu_scaled	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	/^double gsl_sf_bessel_Knu_scaled(const double nu, const double x);$/;"	p	signature:(const double nu, const double x)
gsl_sf_bessel_Knu_scaled_e	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	/^int gsl_sf_bessel_Knu_scaled_e(const double nu, const double x, gsl_sf_result * result);$/;"	p	signature:(const double nu, const double x, gsl_sf_result * result)
gsl_sf_bessel_Y0	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	/^double gsl_sf_bessel_Y0(const double x);$/;"	p	signature:(const double x)
gsl_sf_bessel_Y0_e	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	/^int gsl_sf_bessel_Y0_e(const double x, gsl_sf_result * result);$/;"	p	signature:(const double x, gsl_sf_result * result)
gsl_sf_bessel_Y1	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	/^double gsl_sf_bessel_Y1(const double x);$/;"	p	signature:(const double x)
gsl_sf_bessel_Y1_e	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	/^int gsl_sf_bessel_Y1_e(const double x, gsl_sf_result * result);$/;"	p	signature:(const double x, gsl_sf_result * result)
gsl_sf_bessel_Yn	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	/^double gsl_sf_bessel_Yn(const int n,const double x);$/;"	p	signature:(const int n,const double x)
gsl_sf_bessel_Yn_array	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	/^int gsl_sf_bessel_Yn_array(const int nmin, const int nmax, const double x, double * result_array);$/;"	p	signature:(const int nmin, const int nmax, const double x, double * result_array)
gsl_sf_bessel_Yn_e	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	/^int gsl_sf_bessel_Yn_e(int n,const double x, gsl_sf_result * result);$/;"	p	signature:(int n,const double x, gsl_sf_result * result)
gsl_sf_bessel_Ynu	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	/^double gsl_sf_bessel_Ynu(const double nu, const double x);$/;"	p	signature:(const double nu, const double x)
gsl_sf_bessel_Ynu_e	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	/^int gsl_sf_bessel_Ynu_e(double nu, double x, gsl_sf_result * result);$/;"	p	signature:(double nu, double x, gsl_sf_result * result)
gsl_sf_bessel_i0_scaled	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	/^double gsl_sf_bessel_i0_scaled(const double x);$/;"	p	signature:(const double x)
gsl_sf_bessel_i0_scaled_e	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	/^int gsl_sf_bessel_i0_scaled_e(const double x, gsl_sf_result * result);$/;"	p	signature:(const double x, gsl_sf_result * result)
gsl_sf_bessel_i1_scaled	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	/^double gsl_sf_bessel_i1_scaled(const double x);$/;"	p	signature:(const double x)
gsl_sf_bessel_i1_scaled_e	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	/^int gsl_sf_bessel_i1_scaled_e(const double x, gsl_sf_result * result);$/;"	p	signature:(const double x, gsl_sf_result * result)
gsl_sf_bessel_i2_scaled	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	/^double gsl_sf_bessel_i2_scaled(const double x);$/;"	p	signature:(const double x)
gsl_sf_bessel_i2_scaled_e	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	/^int gsl_sf_bessel_i2_scaled_e(const double x, gsl_sf_result * result);$/;"	p	signature:(const double x, gsl_sf_result * result)
gsl_sf_bessel_il_scaled	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	/^double gsl_sf_bessel_il_scaled(const int l, const double x);$/;"	p	signature:(const int l, const double x)
gsl_sf_bessel_il_scaled_array	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	/^int gsl_sf_bessel_il_scaled_array(const int lmax, const double x, double * result_array);$/;"	p	signature:(const int lmax, const double x, double * result_array)
gsl_sf_bessel_il_scaled_e	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	/^int gsl_sf_bessel_il_scaled_e(const int l, double x, gsl_sf_result * result);$/;"	p	signature:(const int l, double x, gsl_sf_result * result)
gsl_sf_bessel_j0	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	/^double gsl_sf_bessel_j0(const double x);$/;"	p	signature:(const double x)
gsl_sf_bessel_j0_e	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	/^int gsl_sf_bessel_j0_e(const double x, gsl_sf_result * result);$/;"	p	signature:(const double x, gsl_sf_result * result)
gsl_sf_bessel_j1	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	/^double gsl_sf_bessel_j1(const double x);$/;"	p	signature:(const double x)
gsl_sf_bessel_j1_e	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	/^int gsl_sf_bessel_j1_e(const double x, gsl_sf_result * result);$/;"	p	signature:(const double x, gsl_sf_result * result)
gsl_sf_bessel_j2	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	/^double gsl_sf_bessel_j2(const double x);$/;"	p	signature:(const double x)
gsl_sf_bessel_j2_e	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	/^int gsl_sf_bessel_j2_e(const double x, gsl_sf_result * result);$/;"	p	signature:(const double x, gsl_sf_result * result)
gsl_sf_bessel_jl	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	/^double gsl_sf_bessel_jl(const int l, const double x);$/;"	p	signature:(const int l, const double x)
gsl_sf_bessel_jl_array	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	/^int gsl_sf_bessel_jl_array(const int lmax, const double x, double * result_array);$/;"	p	signature:(const int lmax, const double x, double * result_array)
gsl_sf_bessel_jl_e	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	/^int gsl_sf_bessel_jl_e(const int l, const double x, gsl_sf_result * result);$/;"	p	signature:(const int l, const double x, gsl_sf_result * result)
gsl_sf_bessel_jl_steed_array	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	/^int gsl_sf_bessel_jl_steed_array(const int lmax, const double x, double * jl_x_array);$/;"	p	signature:(const int lmax, const double x, double * jl_x_array)
gsl_sf_bessel_k0_scaled	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	/^double gsl_sf_bessel_k0_scaled(const double x);$/;"	p	signature:(const double x)
gsl_sf_bessel_k0_scaled_e	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	/^int gsl_sf_bessel_k0_scaled_e(const double x, gsl_sf_result * result);$/;"	p	signature:(const double x, gsl_sf_result * result)
gsl_sf_bessel_k1_scaled	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	/^double gsl_sf_bessel_k1_scaled(const double x);$/;"	p	signature:(const double x)
gsl_sf_bessel_k1_scaled_e	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	/^int gsl_sf_bessel_k1_scaled_e(const double x, gsl_sf_result * result);$/;"	p	signature:(const double x, gsl_sf_result * result)
gsl_sf_bessel_k2_scaled	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	/^double gsl_sf_bessel_k2_scaled(const double x);$/;"	p	signature:(const double x)
gsl_sf_bessel_k2_scaled_e	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	/^int gsl_sf_bessel_k2_scaled_e(const double x, gsl_sf_result * result);$/;"	p	signature:(const double x, gsl_sf_result * result)
gsl_sf_bessel_kl_scaled	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	/^double gsl_sf_bessel_kl_scaled(const int l, const double x);$/;"	p	signature:(const int l, const double x)
gsl_sf_bessel_kl_scaled_array	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	/^int gsl_sf_bessel_kl_scaled_array(const int lmax, const double x, double * result_array);$/;"	p	signature:(const int lmax, const double x, double * result_array)
gsl_sf_bessel_kl_scaled_e	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	/^int gsl_sf_bessel_kl_scaled_e(int l, const double x, gsl_sf_result * result);$/;"	p	signature:(int l, const double x, gsl_sf_result * result)
gsl_sf_bessel_lnKnu	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	/^double gsl_sf_bessel_lnKnu(const double nu, const double x);$/;"	p	signature:(const double nu, const double x)
gsl_sf_bessel_lnKnu_e	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	/^int gsl_sf_bessel_lnKnu_e(const double nu, const double x, gsl_sf_result * result);$/;"	p	signature:(const double nu, const double x, gsl_sf_result * result)
gsl_sf_bessel_sequence_Jnu_e	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	/^int gsl_sf_bessel_sequence_Jnu_e(double nu, gsl_mode_t mode, size_t size, double * v);$/;"	p	signature:(double nu, gsl_mode_t mode, size_t size, double * v)
gsl_sf_bessel_y0	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	/^double gsl_sf_bessel_y0(const double x);$/;"	p	signature:(const double x)
gsl_sf_bessel_y0_e	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	/^int gsl_sf_bessel_y0_e(const double x, gsl_sf_result * result);$/;"	p	signature:(const double x, gsl_sf_result * result)
gsl_sf_bessel_y1	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	/^double gsl_sf_bessel_y1(const double x);$/;"	p	signature:(const double x)
gsl_sf_bessel_y1_e	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	/^int gsl_sf_bessel_y1_e(const double x, gsl_sf_result * result);$/;"	p	signature:(const double x, gsl_sf_result * result)
gsl_sf_bessel_y2	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	/^double gsl_sf_bessel_y2(const double x);$/;"	p	signature:(const double x)
gsl_sf_bessel_y2_e	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	/^int gsl_sf_bessel_y2_e(const double x, gsl_sf_result * result);$/;"	p	signature:(const double x, gsl_sf_result * result)
gsl_sf_bessel_yl	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	/^double gsl_sf_bessel_yl(const int l, const double x);$/;"	p	signature:(const int l, const double x)
gsl_sf_bessel_yl_array	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	/^int gsl_sf_bessel_yl_array(const int lmax, const double x, double * result_array);$/;"	p	signature:(const int lmax, const double x, double * result_array)
gsl_sf_bessel_yl_e	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	/^int gsl_sf_bessel_yl_e(int l, const double x, gsl_sf_result * result);$/;"	p	signature:(int l, const double x, gsl_sf_result * result)
gsl_sf_bessel_zero_J0	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	/^double gsl_sf_bessel_zero_J0(unsigned int s);$/;"	p	signature:(unsigned int s)
gsl_sf_bessel_zero_J0_e	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	/^int gsl_sf_bessel_zero_J0_e(unsigned int s, gsl_sf_result * result);$/;"	p	signature:(unsigned int s, gsl_sf_result * result)
gsl_sf_bessel_zero_J1	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	/^double gsl_sf_bessel_zero_J1(unsigned int s);$/;"	p	signature:(unsigned int s)
gsl_sf_bessel_zero_J1_e	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	/^int gsl_sf_bessel_zero_J1_e(unsigned int s, gsl_sf_result * result);$/;"	p	signature:(unsigned int s, gsl_sf_result * result)
gsl_sf_bessel_zero_Jnu	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	/^double gsl_sf_bessel_zero_Jnu(double nu, unsigned int s);$/;"	p	signature:(double nu, unsigned int s)
gsl_sf_bessel_zero_Jnu_e	/usr/local/gsl/include/gsl/gsl_sf_bessel.h	/^int gsl_sf_bessel_zero_Jnu_e(double nu, unsigned int s, gsl_sf_result * result);$/;"	p	signature:(double nu, unsigned int s, gsl_sf_result * result)
gsl_sf_beta	/usr/local/gsl/include/gsl/gsl_sf_gamma.h	/^double gsl_sf_beta(const double a, const double b);$/;"	p	signature:(const double a, const double b)
gsl_sf_beta_e	/usr/local/gsl/include/gsl/gsl_sf_gamma.h	/^int gsl_sf_beta_e(const double a, const double b, gsl_sf_result * result);$/;"	p	signature:(const double a, const double b, gsl_sf_result * result)
gsl_sf_beta_inc	/usr/local/gsl/include/gsl/gsl_sf_gamma.h	/^double gsl_sf_beta_inc(const double a, const double b, const double x);$/;"	p	signature:(const double a, const double b, const double x)
gsl_sf_beta_inc_e	/usr/local/gsl/include/gsl/gsl_sf_gamma.h	/^int gsl_sf_beta_inc_e(const double a, const double b, const double x, gsl_sf_result * result);$/;"	p	signature:(const double a, const double b, const double x, gsl_sf_result * result)
gsl_sf_choose	/usr/local/gsl/include/gsl/gsl_sf_gamma.h	/^double gsl_sf_choose(unsigned int n, unsigned int m);$/;"	p	signature:(unsigned int n, unsigned int m)
gsl_sf_choose_e	/usr/local/gsl/include/gsl/gsl_sf_gamma.h	/^int gsl_sf_choose_e(unsigned int n, unsigned int m, gsl_sf_result * result);$/;"	p	signature:(unsigned int n, unsigned int m, gsl_sf_result * result)
gsl_sf_clausen	/usr/local/gsl/include/gsl/gsl_sf_clausen.h	/^double gsl_sf_clausen(const double x);$/;"	p	signature:(const double x)
gsl_sf_clausen_e	/usr/local/gsl/include/gsl/gsl_sf_clausen.h	/^int gsl_sf_clausen_e(double x, gsl_sf_result * result);$/;"	p	signature:(double x, gsl_sf_result * result)
gsl_sf_complex_cos_e	/usr/local/gsl/include/gsl/gsl_sf_trig.h	/^int gsl_sf_complex_cos_e(const double zr, const double zi, gsl_sf_result * czr, gsl_sf_result * czi);$/;"	p	signature:(const double zr, const double zi, gsl_sf_result * czr, gsl_sf_result * czi)
gsl_sf_complex_dilog_e	/usr/local/gsl/include/gsl/gsl_sf_dilog.h	/^gsl_sf_complex_dilog_e($/;"	p	signature:( const double r, const double theta, gsl_sf_result * result_re, gsl_sf_result * result_im )
gsl_sf_complex_dilog_xy_e	/usr/local/gsl/include/gsl/gsl_sf_dilog.h	/^gsl_sf_complex_dilog_xy_e($/;"	p	signature:( const double x, const double y, gsl_sf_result * result_re, gsl_sf_result * result_im )
gsl_sf_complex_log_e	/usr/local/gsl/include/gsl/gsl_sf_log.h	/^int gsl_sf_complex_log_e(const double zr, const double zi, gsl_sf_result * lnr, gsl_sf_result * theta);$/;"	p	signature:(const double zr, const double zi, gsl_sf_result * lnr, gsl_sf_result * theta)
gsl_sf_complex_logsin_e	/usr/local/gsl/include/gsl/gsl_sf_trig.h	/^int gsl_sf_complex_logsin_e(const double zr, const double zi, gsl_sf_result * lszr, gsl_sf_result * lszi);$/;"	p	signature:(const double zr, const double zi, gsl_sf_result * lszr, gsl_sf_result * lszi)
gsl_sf_complex_psi_e	/usr/local/gsl/include/gsl/gsl_sf_psi.h	/^int gsl_sf_complex_psi_e($/;"	p	signature:( const double x, const double y, gsl_sf_result * result_re, gsl_sf_result * result_im )
gsl_sf_complex_sin_e	/usr/local/gsl/include/gsl/gsl_sf_trig.h	/^int gsl_sf_complex_sin_e(const double zr, const double zi, gsl_sf_result * szr, gsl_sf_result * szi);$/;"	p	signature:(const double zr, const double zi, gsl_sf_result * szr, gsl_sf_result * szi)
gsl_sf_complex_spence_xy_e	/usr/local/gsl/include/gsl/gsl_sf_dilog.h	/^gsl_sf_complex_spence_xy_e($/;"	p	signature:( const double x, const double y, gsl_sf_result * real_sp, gsl_sf_result * imag_sp )
gsl_sf_conicalP_0	/usr/local/gsl/include/gsl/gsl_sf_legendre.h	/^double gsl_sf_conicalP_0(const double lambda, const double x);$/;"	p	signature:(const double lambda, const double x)
gsl_sf_conicalP_0_e	/usr/local/gsl/include/gsl/gsl_sf_legendre.h	/^int gsl_sf_conicalP_0_e(const double lambda, const double x, gsl_sf_result * result);$/;"	p	signature:(const double lambda, const double x, gsl_sf_result * result)
gsl_sf_conicalP_1	/usr/local/gsl/include/gsl/gsl_sf_legendre.h	/^double gsl_sf_conicalP_1(const double lambda, const double x);$/;"	p	signature:(const double lambda, const double x)
gsl_sf_conicalP_1_e	/usr/local/gsl/include/gsl/gsl_sf_legendre.h	/^int gsl_sf_conicalP_1_e(const double lambda, const double x, gsl_sf_result * result);$/;"	p	signature:(const double lambda, const double x, gsl_sf_result * result)
gsl_sf_conicalP_cyl_reg	/usr/local/gsl/include/gsl/gsl_sf_legendre.h	/^double gsl_sf_conicalP_cyl_reg(const int m, const double lambda, const double x);$/;"	p	signature:(const int m, const double lambda, const double x)
gsl_sf_conicalP_cyl_reg_e	/usr/local/gsl/include/gsl/gsl_sf_legendre.h	/^int gsl_sf_conicalP_cyl_reg_e(const int m, const double lambda, const double x, gsl_sf_result * result);$/;"	p	signature:(const int m, const double lambda, const double x, gsl_sf_result * result)
gsl_sf_conicalP_half	/usr/local/gsl/include/gsl/gsl_sf_legendre.h	/^double gsl_sf_conicalP_half(const double lambda, const double x);$/;"	p	signature:(const double lambda, const double x)
gsl_sf_conicalP_half_e	/usr/local/gsl/include/gsl/gsl_sf_legendre.h	/^int gsl_sf_conicalP_half_e(const double lambda, const double x, gsl_sf_result * result);$/;"	p	signature:(const double lambda, const double x, gsl_sf_result * result)
gsl_sf_conicalP_mhalf	/usr/local/gsl/include/gsl/gsl_sf_legendre.h	/^double gsl_sf_conicalP_mhalf(const double lambda, const double x);$/;"	p	signature:(const double lambda, const double x)
gsl_sf_conicalP_mhalf_e	/usr/local/gsl/include/gsl/gsl_sf_legendre.h	/^int gsl_sf_conicalP_mhalf_e(const double lambda, const double x, gsl_sf_result * result);$/;"	p	signature:(const double lambda, const double x, gsl_sf_result * result)
gsl_sf_conicalP_sph_reg	/usr/local/gsl/include/gsl/gsl_sf_legendre.h	/^double gsl_sf_conicalP_sph_reg(const int l, const double lambda, const double x);$/;"	p	signature:(const int l, const double lambda, const double x)
gsl_sf_conicalP_sph_reg_e	/usr/local/gsl/include/gsl/gsl_sf_legendre.h	/^int gsl_sf_conicalP_sph_reg_e(const int l, const double lambda, const double x, gsl_sf_result * result);$/;"	p	signature:(const int l, const double lambda, const double x, gsl_sf_result * result)
gsl_sf_cos	/usr/local/gsl/include/gsl/gsl_sf_trig.h	/^double gsl_sf_cos(const double x);$/;"	p	signature:(const double x)
gsl_sf_cos_e	/usr/local/gsl/include/gsl/gsl_sf_trig.h	/^int gsl_sf_cos_e(double x, gsl_sf_result * result);$/;"	p	signature:(double x, gsl_sf_result * result)
gsl_sf_cos_err_e	/usr/local/gsl/include/gsl/gsl_sf_trig.h	/^int gsl_sf_cos_err_e(const double x, const double dx, gsl_sf_result * result);$/;"	p	signature:(const double x, const double dx, gsl_sf_result * result)
gsl_sf_coulomb_CL_array	/usr/local/gsl/include/gsl/gsl_sf_coulomb.h	/^int gsl_sf_coulomb_CL_array(double Lmin, int kmax, double eta, double * cl);$/;"	p	signature:(double Lmin, int kmax, double eta, double * cl)
gsl_sf_coulomb_CL_e	/usr/local/gsl/include/gsl/gsl_sf_coulomb.h	/^int gsl_sf_coulomb_CL_e(double L, double eta, gsl_sf_result * result);$/;"	p	signature:(double L, double eta, gsl_sf_result * result)
gsl_sf_coulomb_wave_FG_array	/usr/local/gsl/include/gsl/gsl_sf_coulomb.h	/^int gsl_sf_coulomb_wave_FG_array(double lam_min, int kmax,$/;"	p	signature:(double lam_min, int kmax, double eta, double x, double * fc_array, double * gc_array, double * F_exponent, double * G_exponent )
gsl_sf_coulomb_wave_FG_e	/usr/local/gsl/include/gsl/gsl_sf_coulomb.h	/^gsl_sf_coulomb_wave_FG_e(const double eta, const double x,$/;"	p	signature:(const double eta, const double x, const double lam_F, const int k_lam_G, gsl_sf_result * F, gsl_sf_result * Fp, gsl_sf_result * G, gsl_sf_result * Gp, double * exp_F, double * exp_G)
gsl_sf_coulomb_wave_FGp_array	/usr/local/gsl/include/gsl/gsl_sf_coulomb.h	/^int gsl_sf_coulomb_wave_FGp_array(double lam_min, int kmax,$/;"	p	signature:(double lam_min, int kmax, double eta, double x, double * fc_array, double * fcp_array, double * gc_array, double * gcp_array, double * F_exponent, double * G_exponent )
gsl_sf_coulomb_wave_F_array	/usr/local/gsl/include/gsl/gsl_sf_coulomb.h	/^int gsl_sf_coulomb_wave_F_array($/;"	p	signature:( double lam_min, int kmax, double eta, double x, double * fc_array, double * F_exponent )
gsl_sf_coulomb_wave_sphF_array	/usr/local/gsl/include/gsl/gsl_sf_coulomb.h	/^int gsl_sf_coulomb_wave_sphF_array(double lam_min, int kmax,$/;"	p	signature:(double lam_min, int kmax, double eta, double x, double * fc_array, double * F_exponent )
gsl_sf_coupling_3j	/usr/local/gsl/include/gsl/gsl_sf_coupling.h	/^double gsl_sf_coupling_3j(int two_ja, int two_jb, int two_jc,$/;"	p	signature:(int two_ja, int two_jb, int two_jc, int two_ma, int two_mb, int two_mc )
gsl_sf_coupling_3j_e	/usr/local/gsl/include/gsl/gsl_sf_coupling.h	/^int gsl_sf_coupling_3j_e(int two_ja, int two_jb, int two_jc,$/;"	p	signature:(int two_ja, int two_jb, int two_jc, int two_ma, int two_mb, int two_mc, gsl_sf_result * result )
gsl_sf_coupling_6j	/usr/local/gsl/include/gsl/gsl_sf_coupling.h	/^double gsl_sf_coupling_6j(int two_ja, int two_jb, int two_jc,$/;"	p	signature:(int two_ja, int two_jb, int two_jc, int two_jd, int two_je, int two_jf )
gsl_sf_coupling_6j_INCORRECT	/usr/local/gsl/include/gsl/gsl_sf_coupling.h	/^double gsl_sf_coupling_6j_INCORRECT(int two_ja, int two_jb, int two_jc,$/;"	p	signature:(int two_ja, int two_jb, int two_jc, int two_jd, int two_je, int two_jf )
gsl_sf_coupling_6j_INCORRECT_e	/usr/local/gsl/include/gsl/gsl_sf_coupling.h	/^int gsl_sf_coupling_6j_INCORRECT_e(int two_ja, int two_jb, int two_jc,$/;"	p	signature:(int two_ja, int two_jb, int two_jc, int two_jd, int two_je, int two_jf, gsl_sf_result * result )
gsl_sf_coupling_6j_e	/usr/local/gsl/include/gsl/gsl_sf_coupling.h	/^int gsl_sf_coupling_6j_e(int two_ja, int two_jb, int two_jc,$/;"	p	signature:(int two_ja, int two_jb, int two_jc, int two_jd, int two_je, int two_jf, gsl_sf_result * result )
gsl_sf_coupling_9j	/usr/local/gsl/include/gsl/gsl_sf_coupling.h	/^double gsl_sf_coupling_9j(int two_ja, int two_jb, int two_jc,$/;"	p	signature:(int two_ja, int two_jb, int two_jc, int two_jd, int two_je, int two_jf, int two_jg, int two_jh, int two_ji )
gsl_sf_coupling_9j_e	/usr/local/gsl/include/gsl/gsl_sf_coupling.h	/^int gsl_sf_coupling_9j_e(int two_ja, int two_jb, int two_jc,$/;"	p	signature:(int two_ja, int two_jb, int two_jc, int two_jd, int two_je, int two_jf, int two_jg, int two_jh, int two_ji, gsl_sf_result * result )
gsl_sf_coupling_RacahW	/usr/local/gsl/include/gsl/gsl_sf_coupling.h	/^double gsl_sf_coupling_RacahW(int two_ja, int two_jb, int two_jc,$/;"	p	signature:(int two_ja, int two_jb, int two_jc, int two_jd, int two_je, int two_jf )
gsl_sf_coupling_RacahW_e	/usr/local/gsl/include/gsl/gsl_sf_coupling.h	/^int gsl_sf_coupling_RacahW_e(int two_ja, int two_jb, int two_jc,$/;"	p	signature:(int two_ja, int two_jb, int two_jc, int two_jd, int two_je, int two_jf, gsl_sf_result * result )
gsl_sf_dawson	/usr/local/gsl/include/gsl/gsl_sf_dawson.h	/^double     gsl_sf_dawson(double x);$/;"	p	signature:(double x)
gsl_sf_dawson_e	/usr/local/gsl/include/gsl/gsl_sf_dawson.h	/^int     gsl_sf_dawson_e(double x, gsl_sf_result * result);$/;"	p	signature:(double x, gsl_sf_result * result)
gsl_sf_debye_1	/usr/local/gsl/include/gsl/gsl_sf_debye.h	/^double     gsl_sf_debye_1(const double x);$/;"	p	signature:(const double x)
gsl_sf_debye_1_e	/usr/local/gsl/include/gsl/gsl_sf_debye.h	/^int     gsl_sf_debye_1_e(const double x, gsl_sf_result * result);$/;"	p	signature:(const double x, gsl_sf_result * result)
gsl_sf_debye_2	/usr/local/gsl/include/gsl/gsl_sf_debye.h	/^double     gsl_sf_debye_2(const double x);$/;"	p	signature:(const double x)
gsl_sf_debye_2_e	/usr/local/gsl/include/gsl/gsl_sf_debye.h	/^int     gsl_sf_debye_2_e(const double x, gsl_sf_result * result);$/;"	p	signature:(const double x, gsl_sf_result * result)
gsl_sf_debye_3	/usr/local/gsl/include/gsl/gsl_sf_debye.h	/^double     gsl_sf_debye_3(const double x);$/;"	p	signature:(const double x)
gsl_sf_debye_3_e	/usr/local/gsl/include/gsl/gsl_sf_debye.h	/^int     gsl_sf_debye_3_e(const double x, gsl_sf_result * result);$/;"	p	signature:(const double x, gsl_sf_result * result)
gsl_sf_debye_4	/usr/local/gsl/include/gsl/gsl_sf_debye.h	/^double     gsl_sf_debye_4(const double x);$/;"	p	signature:(const double x)
gsl_sf_debye_4_e	/usr/local/gsl/include/gsl/gsl_sf_debye.h	/^int     gsl_sf_debye_4_e(const double x, gsl_sf_result * result);$/;"	p	signature:(const double x, gsl_sf_result * result)
gsl_sf_debye_5	/usr/local/gsl/include/gsl/gsl_sf_debye.h	/^double     gsl_sf_debye_5(const double x);$/;"	p	signature:(const double x)
gsl_sf_debye_5_e	/usr/local/gsl/include/gsl/gsl_sf_debye.h	/^int     gsl_sf_debye_5_e(const double x, gsl_sf_result * result);$/;"	p	signature:(const double x, gsl_sf_result * result)
gsl_sf_debye_6	/usr/local/gsl/include/gsl/gsl_sf_debye.h	/^double     gsl_sf_debye_6(const double x);$/;"	p	signature:(const double x)
gsl_sf_debye_6_e	/usr/local/gsl/include/gsl/gsl_sf_debye.h	/^int     gsl_sf_debye_6_e(const double x, gsl_sf_result * result);$/;"	p	signature:(const double x, gsl_sf_result * result)
gsl_sf_dilog	/usr/local/gsl/include/gsl/gsl_sf_dilog.h	/^double  gsl_sf_dilog(const double x);$/;"	p	signature:(const double x)
gsl_sf_dilog_e	/usr/local/gsl/include/gsl/gsl_sf_dilog.h	/^int     gsl_sf_dilog_e(const double x, gsl_sf_result * result);$/;"	p	signature:(const double x, gsl_sf_result * result)
gsl_sf_doublefact	/usr/local/gsl/include/gsl/gsl_sf_gamma.h	/^double gsl_sf_doublefact(const unsigned int n);$/;"	p	signature:(const unsigned int n)
gsl_sf_doublefact_e	/usr/local/gsl/include/gsl/gsl_sf_gamma.h	/^int gsl_sf_doublefact_e(const unsigned int n, gsl_sf_result * result);$/;"	p	signature:(const unsigned int n, gsl_sf_result * result)
gsl_sf_ellint_D	/usr/local/gsl/include/gsl/gsl_sf_ellint.h	/^double gsl_sf_ellint_D(double phi, double k, double n, gsl_mode_t mode);$/;"	p	signature:(double phi, double k, double n, gsl_mode_t mode)
gsl_sf_ellint_D_e	/usr/local/gsl/include/gsl/gsl_sf_ellint.h	/^int gsl_sf_ellint_D_e(double phi, double k, double n, gsl_mode_t mode, gsl_sf_result * result);$/;"	p	signature:(double phi, double k, double n, gsl_mode_t mode, gsl_sf_result * result)
gsl_sf_ellint_Dcomp	/usr/local/gsl/include/gsl/gsl_sf_ellint.h	/^double gsl_sf_ellint_Dcomp(double k, gsl_mode_t mode);$/;"	p	signature:(double k, gsl_mode_t mode)
gsl_sf_ellint_Dcomp_e	/usr/local/gsl/include/gsl/gsl_sf_ellint.h	/^int gsl_sf_ellint_Dcomp_e(double k, gsl_mode_t mode, gsl_sf_result * result);$/;"	p	signature:(double k, gsl_mode_t mode, gsl_sf_result * result)
gsl_sf_ellint_E	/usr/local/gsl/include/gsl/gsl_sf_ellint.h	/^double gsl_sf_ellint_E(double phi, double k, gsl_mode_t mode);$/;"	p	signature:(double phi, double k, gsl_mode_t mode)
gsl_sf_ellint_E_e	/usr/local/gsl/include/gsl/gsl_sf_ellint.h	/^int gsl_sf_ellint_E_e(double phi, double k, gsl_mode_t mode, gsl_sf_result * result);$/;"	p	signature:(double phi, double k, gsl_mode_t mode, gsl_sf_result * result)
gsl_sf_ellint_Ecomp	/usr/local/gsl/include/gsl/gsl_sf_ellint.h	/^double gsl_sf_ellint_Ecomp(double k, gsl_mode_t mode);$/;"	p	signature:(double k, gsl_mode_t mode)
gsl_sf_ellint_Ecomp_e	/usr/local/gsl/include/gsl/gsl_sf_ellint.h	/^int gsl_sf_ellint_Ecomp_e(double k, gsl_mode_t mode, gsl_sf_result * result);$/;"	p	signature:(double k, gsl_mode_t mode, gsl_sf_result * result)
gsl_sf_ellint_F	/usr/local/gsl/include/gsl/gsl_sf_ellint.h	/^double gsl_sf_ellint_F(double phi, double k, gsl_mode_t mode);$/;"	p	signature:(double phi, double k, gsl_mode_t mode)
gsl_sf_ellint_F_e	/usr/local/gsl/include/gsl/gsl_sf_ellint.h	/^int gsl_sf_ellint_F_e(double phi, double k, gsl_mode_t mode, gsl_sf_result * result);$/;"	p	signature:(double phi, double k, gsl_mode_t mode, gsl_sf_result * result)
gsl_sf_ellint_Kcomp	/usr/local/gsl/include/gsl/gsl_sf_ellint.h	/^double gsl_sf_ellint_Kcomp(double k, gsl_mode_t mode);$/;"	p	signature:(double k, gsl_mode_t mode)
gsl_sf_ellint_Kcomp_e	/usr/local/gsl/include/gsl/gsl_sf_ellint.h	/^int gsl_sf_ellint_Kcomp_e(double k, gsl_mode_t mode, gsl_sf_result * result);$/;"	p	signature:(double k, gsl_mode_t mode, gsl_sf_result * result)
gsl_sf_ellint_P	/usr/local/gsl/include/gsl/gsl_sf_ellint.h	/^double gsl_sf_ellint_P(double phi, double k, double n, gsl_mode_t mode);$/;"	p	signature:(double phi, double k, double n, gsl_mode_t mode)
gsl_sf_ellint_P_e	/usr/local/gsl/include/gsl/gsl_sf_ellint.h	/^int gsl_sf_ellint_P_e(double phi, double k, double n, gsl_mode_t mode, gsl_sf_result * result);$/;"	p	signature:(double phi, double k, double n, gsl_mode_t mode, gsl_sf_result * result)
gsl_sf_ellint_Pcomp	/usr/local/gsl/include/gsl/gsl_sf_ellint.h	/^double gsl_sf_ellint_Pcomp(double k, double n, gsl_mode_t mode);$/;"	p	signature:(double k, double n, gsl_mode_t mode)
gsl_sf_ellint_Pcomp_e	/usr/local/gsl/include/gsl/gsl_sf_ellint.h	/^int gsl_sf_ellint_Pcomp_e(double k, double n, gsl_mode_t mode, gsl_sf_result * result);$/;"	p	signature:(double k, double n, gsl_mode_t mode, gsl_sf_result * result)
gsl_sf_ellint_RC	/usr/local/gsl/include/gsl/gsl_sf_ellint.h	/^double gsl_sf_ellint_RC(double x, double y, gsl_mode_t mode);$/;"	p	signature:(double x, double y, gsl_mode_t mode)
gsl_sf_ellint_RC_e	/usr/local/gsl/include/gsl/gsl_sf_ellint.h	/^int gsl_sf_ellint_RC_e(double x, double y, gsl_mode_t mode, gsl_sf_result * result);$/;"	p	signature:(double x, double y, gsl_mode_t mode, gsl_sf_result * result)
gsl_sf_ellint_RD	/usr/local/gsl/include/gsl/gsl_sf_ellint.h	/^double gsl_sf_ellint_RD(double x, double y, double z, gsl_mode_t mode);$/;"	p	signature:(double x, double y, double z, gsl_mode_t mode)
gsl_sf_ellint_RD_e	/usr/local/gsl/include/gsl/gsl_sf_ellint.h	/^int gsl_sf_ellint_RD_e(double x, double y, double z, gsl_mode_t mode, gsl_sf_result * result);$/;"	p	signature:(double x, double y, double z, gsl_mode_t mode, gsl_sf_result * result)
gsl_sf_ellint_RF	/usr/local/gsl/include/gsl/gsl_sf_ellint.h	/^double gsl_sf_ellint_RF(double x, double y, double z, gsl_mode_t mode);$/;"	p	signature:(double x, double y, double z, gsl_mode_t mode)
gsl_sf_ellint_RF_e	/usr/local/gsl/include/gsl/gsl_sf_ellint.h	/^int gsl_sf_ellint_RF_e(double x, double y, double z, gsl_mode_t mode, gsl_sf_result * result);$/;"	p	signature:(double x, double y, double z, gsl_mode_t mode, gsl_sf_result * result)
gsl_sf_ellint_RJ	/usr/local/gsl/include/gsl/gsl_sf_ellint.h	/^double gsl_sf_ellint_RJ(double x, double y, double z, double p, gsl_mode_t mode);$/;"	p	signature:(double x, double y, double z, double p, gsl_mode_t mode)
gsl_sf_ellint_RJ_e	/usr/local/gsl/include/gsl/gsl_sf_ellint.h	/^int gsl_sf_ellint_RJ_e(double x, double y, double z, double p, gsl_mode_t mode, gsl_sf_result * result);$/;"	p	signature:(double x, double y, double z, double p, gsl_mode_t mode, gsl_sf_result * result)
gsl_sf_elljac_e	/usr/local/gsl/include/gsl/gsl_sf_elljac.h	/^int gsl_sf_elljac_e(double u, double m, double * sn, double * cn, double * dn);$/;"	p	signature:(double u, double m, double * sn, double * cn, double * dn)
gsl_sf_erf	/usr/local/gsl/include/gsl/gsl_sf_erf.h	/^double gsl_sf_erf(double x);$/;"	p	signature:(double x)
gsl_sf_erf_Q	/usr/local/gsl/include/gsl/gsl_sf_erf.h	/^double gsl_sf_erf_Q(double x);$/;"	p	signature:(double x)
gsl_sf_erf_Q_e	/usr/local/gsl/include/gsl/gsl_sf_erf.h	/^int gsl_sf_erf_Q_e(double x, gsl_sf_result * result);$/;"	p	signature:(double x, gsl_sf_result * result)
gsl_sf_erf_Z	/usr/local/gsl/include/gsl/gsl_sf_erf.h	/^double gsl_sf_erf_Z(double x);$/;"	p	signature:(double x)
gsl_sf_erf_Z_e	/usr/local/gsl/include/gsl/gsl_sf_erf.h	/^int gsl_sf_erf_Z_e(double x, gsl_sf_result * result);$/;"	p	signature:(double x, gsl_sf_result * result)
gsl_sf_erf_e	/usr/local/gsl/include/gsl/gsl_sf_erf.h	/^int gsl_sf_erf_e(double x, gsl_sf_result * result);$/;"	p	signature:(double x, gsl_sf_result * result)
gsl_sf_erfc	/usr/local/gsl/include/gsl/gsl_sf_erf.h	/^double gsl_sf_erfc(double x);$/;"	p	signature:(double x)
gsl_sf_erfc_e	/usr/local/gsl/include/gsl/gsl_sf_erf.h	/^int gsl_sf_erfc_e(double x, gsl_sf_result * result);$/;"	p	signature:(double x, gsl_sf_result * result)
gsl_sf_eta	/usr/local/gsl/include/gsl/gsl_sf_zeta.h	/^double gsl_sf_eta(const double s);$/;"	p	signature:(const double s)
gsl_sf_eta_e	/usr/local/gsl/include/gsl/gsl_sf_zeta.h	/^int gsl_sf_eta_e(const double s, gsl_sf_result * result);$/;"	p	signature:(const double s, gsl_sf_result * result)
gsl_sf_eta_int	/usr/local/gsl/include/gsl/gsl_sf_zeta.h	/^double gsl_sf_eta_int(const int n);$/;"	p	signature:(const int n)
gsl_sf_eta_int_e	/usr/local/gsl/include/gsl/gsl_sf_zeta.h	/^int gsl_sf_eta_int_e(int n, gsl_sf_result * result);$/;"	p	signature:(int n, gsl_sf_result * result)
gsl_sf_exp	/usr/local/gsl/include/gsl/gsl_sf_exp.h	/^double gsl_sf_exp(const double x);$/;"	p	signature:(const double x)
gsl_sf_exp_e	/usr/local/gsl/include/gsl/gsl_sf_exp.h	/^int gsl_sf_exp_e(const double x, gsl_sf_result * result);$/;"	p	signature:(const double x, gsl_sf_result * result)
gsl_sf_exp_e10_e	/usr/local/gsl/include/gsl/gsl_sf_exp.h	/^int gsl_sf_exp_e10_e(const double x, gsl_sf_result_e10 * result);$/;"	p	signature:(const double x, gsl_sf_result_e10 * result)
gsl_sf_exp_err_e	/usr/local/gsl/include/gsl/gsl_sf_exp.h	/^int gsl_sf_exp_err_e(const double x, const double dx, gsl_sf_result * result);$/;"	p	signature:(const double x, const double dx, gsl_sf_result * result)
gsl_sf_exp_err_e10_e	/usr/local/gsl/include/gsl/gsl_sf_exp.h	/^int gsl_sf_exp_err_e10_e(const double x, const double dx, gsl_sf_result_e10 * result);$/;"	p	signature:(const double x, const double dx, gsl_sf_result_e10 * result)
gsl_sf_exp_mult	/usr/local/gsl/include/gsl/gsl_sf_exp.h	/^double gsl_sf_exp_mult(const double x, const double y);$/;"	p	signature:(const double x, const double y)
gsl_sf_exp_mult_e	/usr/local/gsl/include/gsl/gsl_sf_exp.h	/^int gsl_sf_exp_mult_e(const double x, const double y, gsl_sf_result * result);$/;"	p	signature:(const double x, const double y, gsl_sf_result * result)
gsl_sf_exp_mult_e10_e	/usr/local/gsl/include/gsl/gsl_sf_exp.h	/^int gsl_sf_exp_mult_e10_e(const double x, const double y, gsl_sf_result_e10 * result);$/;"	p	signature:(const double x, const double y, gsl_sf_result_e10 * result)
gsl_sf_exp_mult_err_e	/usr/local/gsl/include/gsl/gsl_sf_exp.h	/^int gsl_sf_exp_mult_err_e(const double x, const double dx, const double y, const double dy, gsl_sf_result * result);$/;"	p	signature:(const double x, const double dx, const double y, const double dy, gsl_sf_result * result)
gsl_sf_exp_mult_err_e10_e	/usr/local/gsl/include/gsl/gsl_sf_exp.h	/^int gsl_sf_exp_mult_err_e10_e(const double x, const double dx, const double y, const double dy, gsl_sf_result_e10 * result);$/;"	p	signature:(const double x, const double dx, const double y, const double dy, gsl_sf_result_e10 * result)
gsl_sf_expint_3	/usr/local/gsl/include/gsl/gsl_sf_expint.h	/^double  gsl_sf_expint_3(double x);$/;"	p	signature:(double x)
gsl_sf_expint_3_e	/usr/local/gsl/include/gsl/gsl_sf_expint.h	/^int     gsl_sf_expint_3_e(const double x, gsl_sf_result * result);$/;"	p	signature:(const double x, gsl_sf_result * result)
gsl_sf_expint_E1	/usr/local/gsl/include/gsl/gsl_sf_expint.h	/^double  gsl_sf_expint_E1(const double x);$/;"	p	signature:(const double x)
gsl_sf_expint_E1_e	/usr/local/gsl/include/gsl/gsl_sf_expint.h	/^int     gsl_sf_expint_E1_e(const double x, gsl_sf_result * result);$/;"	p	signature:(const double x, gsl_sf_result * result)
gsl_sf_expint_E1_scaled	/usr/local/gsl/include/gsl/gsl_sf_expint.h	/^double  gsl_sf_expint_E1_scaled(const double x);$/;"	p	signature:(const double x)
gsl_sf_expint_E1_scaled_e	/usr/local/gsl/include/gsl/gsl_sf_expint.h	/^int     gsl_sf_expint_E1_scaled_e(const double x, gsl_sf_result * result);$/;"	p	signature:(const double x, gsl_sf_result * result)
gsl_sf_expint_E2	/usr/local/gsl/include/gsl/gsl_sf_expint.h	/^double  gsl_sf_expint_E2(const double x);$/;"	p	signature:(const double x)
gsl_sf_expint_E2_e	/usr/local/gsl/include/gsl/gsl_sf_expint.h	/^int     gsl_sf_expint_E2_e(const double x, gsl_sf_result * result);$/;"	p	signature:(const double x, gsl_sf_result * result)
gsl_sf_expint_E2_scaled	/usr/local/gsl/include/gsl/gsl_sf_expint.h	/^double  gsl_sf_expint_E2_scaled(const double x);$/;"	p	signature:(const double x)
gsl_sf_expint_E2_scaled_e	/usr/local/gsl/include/gsl/gsl_sf_expint.h	/^int     gsl_sf_expint_E2_scaled_e(const double x, gsl_sf_result * result);$/;"	p	signature:(const double x, gsl_sf_result * result)
gsl_sf_expint_Ei	/usr/local/gsl/include/gsl/gsl_sf_expint.h	/^double  gsl_sf_expint_Ei(const double x);$/;"	p	signature:(const double x)
gsl_sf_expint_Ei_e	/usr/local/gsl/include/gsl/gsl_sf_expint.h	/^int     gsl_sf_expint_Ei_e(const double x, gsl_sf_result * result);$/;"	p	signature:(const double x, gsl_sf_result * result)
gsl_sf_expint_Ei_scaled	/usr/local/gsl/include/gsl/gsl_sf_expint.h	/^double  gsl_sf_expint_Ei_scaled(const double x);$/;"	p	signature:(const double x)
gsl_sf_expint_Ei_scaled_e	/usr/local/gsl/include/gsl/gsl_sf_expint.h	/^int     gsl_sf_expint_Ei_scaled_e(const double x, gsl_sf_result * result);$/;"	p	signature:(const double x, gsl_sf_result * result)
gsl_sf_expint_En	/usr/local/gsl/include/gsl/gsl_sf_expint.h	/^double  gsl_sf_expint_En(const int n, const double x);$/;"	p	signature:(const int n, const double x)
gsl_sf_expint_En_e	/usr/local/gsl/include/gsl/gsl_sf_expint.h	/^int     gsl_sf_expint_En_e(const int n, const double x, gsl_sf_result * result);$/;"	p	signature:(const int n, const double x, gsl_sf_result * result)
gsl_sf_expint_En_scaled	/usr/local/gsl/include/gsl/gsl_sf_expint.h	/^double  gsl_sf_expint_En_scaled(const int n, const double x);$/;"	p	signature:(const int n, const double x)
gsl_sf_expint_En_scaled_e	/usr/local/gsl/include/gsl/gsl_sf_expint.h	/^int     gsl_sf_expint_En_scaled_e(const int n, const double x, gsl_sf_result * result);$/;"	p	signature:(const int n, const double x, gsl_sf_result * result)
gsl_sf_expm1	/usr/local/gsl/include/gsl/gsl_sf_exp.h	/^double gsl_sf_expm1(const double x);$/;"	p	signature:(const double x)
gsl_sf_expm1_e	/usr/local/gsl/include/gsl/gsl_sf_exp.h	/^int gsl_sf_expm1_e(const double x, gsl_sf_result * result);$/;"	p	signature:(const double x, gsl_sf_result * result)
gsl_sf_exprel	/usr/local/gsl/include/gsl/gsl_sf_exp.h	/^double gsl_sf_exprel(const double x);$/;"	p	signature:(const double x)
gsl_sf_exprel_2	/usr/local/gsl/include/gsl/gsl_sf_exp.h	/^double gsl_sf_exprel_2(const double x);$/;"	p	signature:(const double x)
gsl_sf_exprel_2_e	/usr/local/gsl/include/gsl/gsl_sf_exp.h	/^int gsl_sf_exprel_2_e(double x, gsl_sf_result * result);$/;"	p	signature:(double x, gsl_sf_result * result)
gsl_sf_exprel_e	/usr/local/gsl/include/gsl/gsl_sf_exp.h	/^int gsl_sf_exprel_e(const double x, gsl_sf_result * result);$/;"	p	signature:(const double x, gsl_sf_result * result)
gsl_sf_exprel_n	/usr/local/gsl/include/gsl/gsl_sf_exp.h	/^double gsl_sf_exprel_n(const int n, const double x);$/;"	p	signature:(const int n, const double x)
gsl_sf_exprel_n_CF_e	/usr/local/gsl/include/gsl/gsl_sf_exp.h	/^int gsl_sf_exprel_n_CF_e(const double n, const double x, gsl_sf_result * result);$/;"	p	signature:(const double n, const double x, gsl_sf_result * result)
gsl_sf_exprel_n_e	/usr/local/gsl/include/gsl/gsl_sf_exp.h	/^int gsl_sf_exprel_n_e(const int n, const double x, gsl_sf_result * result);$/;"	p	signature:(const int n, const double x, gsl_sf_result * result)
gsl_sf_fact	/usr/local/gsl/include/gsl/gsl_sf_gamma.h	/^double gsl_sf_fact(const unsigned int n);$/;"	p	signature:(const unsigned int n)
gsl_sf_fact_e	/usr/local/gsl/include/gsl/gsl_sf_gamma.h	/^int gsl_sf_fact_e(const unsigned int n, gsl_sf_result * result);$/;"	p	signature:(const unsigned int n, gsl_sf_result * result)
gsl_sf_fermi_dirac_0	/usr/local/gsl/include/gsl/gsl_sf_fermi_dirac.h	/^double     gsl_sf_fermi_dirac_0(const double x);$/;"	p	signature:(const double x)
gsl_sf_fermi_dirac_0_e	/usr/local/gsl/include/gsl/gsl_sf_fermi_dirac.h	/^int     gsl_sf_fermi_dirac_0_e(const double x, gsl_sf_result * result);$/;"	p	signature:(const double x, gsl_sf_result * result)
gsl_sf_fermi_dirac_1	/usr/local/gsl/include/gsl/gsl_sf_fermi_dirac.h	/^double     gsl_sf_fermi_dirac_1(const double x);$/;"	p	signature:(const double x)
gsl_sf_fermi_dirac_1_e	/usr/local/gsl/include/gsl/gsl_sf_fermi_dirac.h	/^int     gsl_sf_fermi_dirac_1_e(const double x, gsl_sf_result * result);$/;"	p	signature:(const double x, gsl_sf_result * result)
gsl_sf_fermi_dirac_2	/usr/local/gsl/include/gsl/gsl_sf_fermi_dirac.h	/^double     gsl_sf_fermi_dirac_2(const double x);$/;"	p	signature:(const double x)
gsl_sf_fermi_dirac_2_e	/usr/local/gsl/include/gsl/gsl_sf_fermi_dirac.h	/^int     gsl_sf_fermi_dirac_2_e(const double x, gsl_sf_result * result);$/;"	p	signature:(const double x, gsl_sf_result * result)
gsl_sf_fermi_dirac_3half	/usr/local/gsl/include/gsl/gsl_sf_fermi_dirac.h	/^double     gsl_sf_fermi_dirac_3half(const double x);$/;"	p	signature:(const double x)
gsl_sf_fermi_dirac_3half_e	/usr/local/gsl/include/gsl/gsl_sf_fermi_dirac.h	/^int     gsl_sf_fermi_dirac_3half_e(const double x, gsl_sf_result * result);$/;"	p	signature:(const double x, gsl_sf_result * result)
gsl_sf_fermi_dirac_half	/usr/local/gsl/include/gsl/gsl_sf_fermi_dirac.h	/^double     gsl_sf_fermi_dirac_half(const double x);$/;"	p	signature:(const double x)
gsl_sf_fermi_dirac_half_e	/usr/local/gsl/include/gsl/gsl_sf_fermi_dirac.h	/^int     gsl_sf_fermi_dirac_half_e(const double x, gsl_sf_result * result);$/;"	p	signature:(const double x, gsl_sf_result * result)
gsl_sf_fermi_dirac_inc_0	/usr/local/gsl/include/gsl/gsl_sf_fermi_dirac.h	/^double     gsl_sf_fermi_dirac_inc_0(const double x, const double b);$/;"	p	signature:(const double x, const double b)
gsl_sf_fermi_dirac_inc_0_e	/usr/local/gsl/include/gsl/gsl_sf_fermi_dirac.h	/^int     gsl_sf_fermi_dirac_inc_0_e(const double x, const double b, gsl_sf_result * result);$/;"	p	signature:(const double x, const double b, gsl_sf_result * result)
gsl_sf_fermi_dirac_int	/usr/local/gsl/include/gsl/gsl_sf_fermi_dirac.h	/^double     gsl_sf_fermi_dirac_int(const int j, const double x);$/;"	p	signature:(const int j, const double x)
gsl_sf_fermi_dirac_int_e	/usr/local/gsl/include/gsl/gsl_sf_fermi_dirac.h	/^int     gsl_sf_fermi_dirac_int_e(const int j, const double x, gsl_sf_result * result);$/;"	p	signature:(const int j, const double x, gsl_sf_result * result)
gsl_sf_fermi_dirac_m1	/usr/local/gsl/include/gsl/gsl_sf_fermi_dirac.h	/^double     gsl_sf_fermi_dirac_m1(const double x);$/;"	p	signature:(const double x)
gsl_sf_fermi_dirac_m1_e	/usr/local/gsl/include/gsl/gsl_sf_fermi_dirac.h	/^int     gsl_sf_fermi_dirac_m1_e(const double x, gsl_sf_result * result);$/;"	p	signature:(const double x, gsl_sf_result * result)
gsl_sf_fermi_dirac_mhalf	/usr/local/gsl/include/gsl/gsl_sf_fermi_dirac.h	/^double     gsl_sf_fermi_dirac_mhalf(const double x);$/;"	p	signature:(const double x)
gsl_sf_fermi_dirac_mhalf_e	/usr/local/gsl/include/gsl/gsl_sf_fermi_dirac.h	/^int     gsl_sf_fermi_dirac_mhalf_e(const double x, gsl_sf_result * result);$/;"	p	signature:(const double x, gsl_sf_result * result)
gsl_sf_gamma	/usr/local/gsl/include/gsl/gsl_sf_gamma.h	/^double gsl_sf_gamma(const double x);$/;"	p	signature:(const double x)
gsl_sf_gamma_e	/usr/local/gsl/include/gsl/gsl_sf_gamma.h	/^int gsl_sf_gamma_e(const double x, gsl_sf_result * result);$/;"	p	signature:(const double x, gsl_sf_result * result)
gsl_sf_gamma_inc	/usr/local/gsl/include/gsl/gsl_sf_gamma.h	/^double gsl_sf_gamma_inc(const double a, const double x);$/;"	p	signature:(const double a, const double x)
gsl_sf_gamma_inc_P	/usr/local/gsl/include/gsl/gsl_sf_gamma.h	/^double gsl_sf_gamma_inc_P(const double a, const double x);$/;"	p	signature:(const double a, const double x)
gsl_sf_gamma_inc_P_e	/usr/local/gsl/include/gsl/gsl_sf_gamma.h	/^int gsl_sf_gamma_inc_P_e(const double a, const double x, gsl_sf_result * result);$/;"	p	signature:(const double a, const double x, gsl_sf_result * result)
gsl_sf_gamma_inc_Q	/usr/local/gsl/include/gsl/gsl_sf_gamma.h	/^double gsl_sf_gamma_inc_Q(const double a, const double x);$/;"	p	signature:(const double a, const double x)
gsl_sf_gamma_inc_Q_e	/usr/local/gsl/include/gsl/gsl_sf_gamma.h	/^int gsl_sf_gamma_inc_Q_e(const double a, const double x, gsl_sf_result * result);$/;"	p	signature:(const double a, const double x, gsl_sf_result * result)
gsl_sf_gamma_inc_e	/usr/local/gsl/include/gsl/gsl_sf_gamma.h	/^int gsl_sf_gamma_inc_e(const double a, const double x, gsl_sf_result * result);$/;"	p	signature:(const double a, const double x, gsl_sf_result * result)
gsl_sf_gammainv	/usr/local/gsl/include/gsl/gsl_sf_gamma.h	/^double gsl_sf_gammainv(const double x);$/;"	p	signature:(const double x)
gsl_sf_gammainv_e	/usr/local/gsl/include/gsl/gsl_sf_gamma.h	/^int gsl_sf_gammainv_e(const double x, gsl_sf_result * result);$/;"	p	signature:(const double x, gsl_sf_result * result)
gsl_sf_gammastar	/usr/local/gsl/include/gsl/gsl_sf_gamma.h	/^double gsl_sf_gammastar(const double x);$/;"	p	signature:(const double x)
gsl_sf_gammastar_e	/usr/local/gsl/include/gsl/gsl_sf_gamma.h	/^int gsl_sf_gammastar_e(const double x, gsl_sf_result * result);$/;"	p	signature:(const double x, gsl_sf_result * result)
gsl_sf_gegenpoly_1	/usr/local/gsl/include/gsl/gsl_sf_gegenbauer.h	/^double gsl_sf_gegenpoly_1(double lambda, double x);$/;"	p	signature:(double lambda, double x)
gsl_sf_gegenpoly_1_e	/usr/local/gsl/include/gsl/gsl_sf_gegenbauer.h	/^int gsl_sf_gegenpoly_1_e(double lambda, double x, gsl_sf_result * result);$/;"	p	signature:(double lambda, double x, gsl_sf_result * result)
gsl_sf_gegenpoly_2	/usr/local/gsl/include/gsl/gsl_sf_gegenbauer.h	/^double gsl_sf_gegenpoly_2(double lambda, double x);$/;"	p	signature:(double lambda, double x)
gsl_sf_gegenpoly_2_e	/usr/local/gsl/include/gsl/gsl_sf_gegenbauer.h	/^int gsl_sf_gegenpoly_2_e(double lambda, double x, gsl_sf_result * result);$/;"	p	signature:(double lambda, double x, gsl_sf_result * result)
gsl_sf_gegenpoly_3	/usr/local/gsl/include/gsl/gsl_sf_gegenbauer.h	/^double gsl_sf_gegenpoly_3(double lambda, double x);$/;"	p	signature:(double lambda, double x)
gsl_sf_gegenpoly_3_e	/usr/local/gsl/include/gsl/gsl_sf_gegenbauer.h	/^int gsl_sf_gegenpoly_3_e(double lambda, double x, gsl_sf_result * result);$/;"	p	signature:(double lambda, double x, gsl_sf_result * result)
gsl_sf_gegenpoly_array	/usr/local/gsl/include/gsl/gsl_sf_gegenbauer.h	/^int gsl_sf_gegenpoly_array(int nmax, double lambda, double x, double * result_array);$/;"	p	signature:(int nmax, double lambda, double x, double * result_array)
gsl_sf_gegenpoly_n	/usr/local/gsl/include/gsl/gsl_sf_gegenbauer.h	/^double gsl_sf_gegenpoly_n(int n, double lambda, double x);$/;"	p	signature:(int n, double lambda, double x)
gsl_sf_gegenpoly_n_e	/usr/local/gsl/include/gsl/gsl_sf_gegenbauer.h	/^int gsl_sf_gegenpoly_n_e(int n, double lambda, double x, gsl_sf_result * result);$/;"	p	signature:(int n, double lambda, double x, gsl_sf_result * result)
gsl_sf_hazard	/usr/local/gsl/include/gsl/gsl_sf_erf.h	/^double gsl_sf_hazard(double x);$/;"	p	signature:(double x)
gsl_sf_hazard_e	/usr/local/gsl/include/gsl/gsl_sf_erf.h	/^int gsl_sf_hazard_e(double x, gsl_sf_result * result);$/;"	p	signature:(double x, gsl_sf_result * result)
gsl_sf_hydrogenicR	/usr/local/gsl/include/gsl/gsl_sf_coulomb.h	/^double gsl_sf_hydrogenicR(const int n, const int l, const double Z, const double r);$/;"	p	signature:(const int n, const int l, const double Z, const double r)
gsl_sf_hydrogenicR_1	/usr/local/gsl/include/gsl/gsl_sf_coulomb.h	/^double gsl_sf_hydrogenicR_1(const double Z, const double r);$/;"	p	signature:(const double Z, const double r)
gsl_sf_hydrogenicR_1_e	/usr/local/gsl/include/gsl/gsl_sf_coulomb.h	/^int gsl_sf_hydrogenicR_1_e(const double Z, const double r, gsl_sf_result * result);$/;"	p	signature:(const double Z, const double r, gsl_sf_result * result)
gsl_sf_hydrogenicR_e	/usr/local/gsl/include/gsl/gsl_sf_coulomb.h	/^int gsl_sf_hydrogenicR_e(const int n, const int l, const double Z, const double r, gsl_sf_result * result);$/;"	p	signature:(const int n, const int l, const double Z, const double r, gsl_sf_result * result)
gsl_sf_hyperg_0F1	/usr/local/gsl/include/gsl/gsl_sf_hyperg.h	/^double gsl_sf_hyperg_0F1(const double c, const double x);$/;"	p	signature:(const double c, const double x)
gsl_sf_hyperg_0F1_e	/usr/local/gsl/include/gsl/gsl_sf_hyperg.h	/^int gsl_sf_hyperg_0F1_e(double c, double x, gsl_sf_result * result);$/;"	p	signature:(double c, double x, gsl_sf_result * result)
gsl_sf_hyperg_1F1	/usr/local/gsl/include/gsl/gsl_sf_hyperg.h	/^double gsl_sf_hyperg_1F1(double a, double b, double x);$/;"	p	signature:(double a, double b, double x)
gsl_sf_hyperg_1F1_e	/usr/local/gsl/include/gsl/gsl_sf_hyperg.h	/^int gsl_sf_hyperg_1F1_e(const double a, const double b, const double x, gsl_sf_result * result);$/;"	p	signature:(const double a, const double b, const double x, gsl_sf_result * result)
gsl_sf_hyperg_1F1_int	/usr/local/gsl/include/gsl/gsl_sf_hyperg.h	/^double gsl_sf_hyperg_1F1_int(const int m, const int n, double x);$/;"	p	signature:(const int m, const int n, double x)
gsl_sf_hyperg_1F1_int_e	/usr/local/gsl/include/gsl/gsl_sf_hyperg.h	/^int gsl_sf_hyperg_1F1_int_e(const int m, const int n, const double x, gsl_sf_result * result);$/;"	p	signature:(const int m, const int n, const double x, gsl_sf_result * result)
gsl_sf_hyperg_2F0	/usr/local/gsl/include/gsl/gsl_sf_hyperg.h	/^double     gsl_sf_hyperg_2F0(const double a, const double b, const double x);$/;"	p	signature:(const double a, const double b, const double x)
gsl_sf_hyperg_2F0_e	/usr/local/gsl/include/gsl/gsl_sf_hyperg.h	/^int     gsl_sf_hyperg_2F0_e(const double a, const double b, const double x, gsl_sf_result * result);$/;"	p	signature:(const double a, const double b, const double x, gsl_sf_result * result)
gsl_sf_hyperg_2F1	/usr/local/gsl/include/gsl/gsl_sf_hyperg.h	/^double gsl_sf_hyperg_2F1(double a, double b, double c, double x);$/;"	p	signature:(double a, double b, double c, double x)
gsl_sf_hyperg_2F1_conj	/usr/local/gsl/include/gsl/gsl_sf_hyperg.h	/^double gsl_sf_hyperg_2F1_conj(double aR, double aI, double c, double x);$/;"	p	signature:(double aR, double aI, double c, double x)
gsl_sf_hyperg_2F1_conj_e	/usr/local/gsl/include/gsl/gsl_sf_hyperg.h	/^int gsl_sf_hyperg_2F1_conj_e(const double aR, const double aI, const double c, const double x, gsl_sf_result * result);$/;"	p	signature:(const double aR, const double aI, const double c, const double x, gsl_sf_result * result)
gsl_sf_hyperg_2F1_conj_renorm	/usr/local/gsl/include/gsl/gsl_sf_hyperg.h	/^double gsl_sf_hyperg_2F1_conj_renorm(double aR, double aI, double c, double x);$/;"	p	signature:(double aR, double aI, double c, double x)
gsl_sf_hyperg_2F1_conj_renorm_e	/usr/local/gsl/include/gsl/gsl_sf_hyperg.h	/^int gsl_sf_hyperg_2F1_conj_renorm_e(const double aR, const double aI, const double c, const double x, gsl_sf_result * result);$/;"	p	signature:(const double aR, const double aI, const double c, const double x, gsl_sf_result * result)
gsl_sf_hyperg_2F1_e	/usr/local/gsl/include/gsl/gsl_sf_hyperg.h	/^int gsl_sf_hyperg_2F1_e(double a, double b, const double c, const double x, gsl_sf_result * result);$/;"	p	signature:(double a, double b, const double c, const double x, gsl_sf_result * result)
gsl_sf_hyperg_2F1_renorm	/usr/local/gsl/include/gsl/gsl_sf_hyperg.h	/^double gsl_sf_hyperg_2F1_renorm(double a, double b, double c, double x);$/;"	p	signature:(double a, double b, double c, double x)
gsl_sf_hyperg_2F1_renorm_e	/usr/local/gsl/include/gsl/gsl_sf_hyperg.h	/^int gsl_sf_hyperg_2F1_renorm_e(const double a, const double b, const double c, const double x, gsl_sf_result * result);$/;"	p	signature:(const double a, const double b, const double c, const double x, gsl_sf_result * result)
gsl_sf_hyperg_U	/usr/local/gsl/include/gsl/gsl_sf_hyperg.h	/^double gsl_sf_hyperg_U(const double a, const double b, const double x);$/;"	p	signature:(const double a, const double b, const double x)
gsl_sf_hyperg_U_e	/usr/local/gsl/include/gsl/gsl_sf_hyperg.h	/^int gsl_sf_hyperg_U_e(const double a, const double b, const double x, gsl_sf_result * result);$/;"	p	signature:(const double a, const double b, const double x, gsl_sf_result * result)
gsl_sf_hyperg_U_e10_e	/usr/local/gsl/include/gsl/gsl_sf_hyperg.h	/^int gsl_sf_hyperg_U_e10_e(const double a, const double b, const double x, gsl_sf_result_e10 * result);$/;"	p	signature:(const double a, const double b, const double x, gsl_sf_result_e10 * result)
gsl_sf_hyperg_U_int	/usr/local/gsl/include/gsl/gsl_sf_hyperg.h	/^double gsl_sf_hyperg_U_int(const int m, const int n, const double x);$/;"	p	signature:(const int m, const int n, const double x)
gsl_sf_hyperg_U_int_e	/usr/local/gsl/include/gsl/gsl_sf_hyperg.h	/^int gsl_sf_hyperg_U_int_e(const int m, const int n, const double x, gsl_sf_result * result);$/;"	p	signature:(const int m, const int n, const double x, gsl_sf_result * result)
gsl_sf_hyperg_U_int_e10_e	/usr/local/gsl/include/gsl/gsl_sf_hyperg.h	/^int gsl_sf_hyperg_U_int_e10_e(const int m, const int n, const double x, gsl_sf_result_e10 * result);$/;"	p	signature:(const int m, const int n, const double x, gsl_sf_result_e10 * result)
gsl_sf_hypot	/usr/local/gsl/include/gsl/gsl_sf_trig.h	/^double gsl_sf_hypot(const double x, const double y);$/;"	p	signature:(const double x, const double y)
gsl_sf_hypot_e	/usr/local/gsl/include/gsl/gsl_sf_trig.h	/^int gsl_sf_hypot_e(const double x, const double y, gsl_sf_result * result);$/;"	p	signature:(const double x, const double y, gsl_sf_result * result)
gsl_sf_hzeta	/usr/local/gsl/include/gsl/gsl_sf_zeta.h	/^double gsl_sf_hzeta(const double s, const double q);$/;"	p	signature:(const double s, const double q)
gsl_sf_hzeta_e	/usr/local/gsl/include/gsl/gsl_sf_zeta.h	/^int gsl_sf_hzeta_e(const double s, const double q, gsl_sf_result * result);$/;"	p	signature:(const double s, const double q, gsl_sf_result * result)
gsl_sf_laguerre_1	/usr/local/gsl/include/gsl/gsl_sf_laguerre.h	/^double gsl_sf_laguerre_1(double a, double x);$/;"	p	signature:(double a, double x)
gsl_sf_laguerre_1_e	/usr/local/gsl/include/gsl/gsl_sf_laguerre.h	/^int gsl_sf_laguerre_1_e(const double a, const double x, gsl_sf_result * result);$/;"	p	signature:(const double a, const double x, gsl_sf_result * result)
gsl_sf_laguerre_2	/usr/local/gsl/include/gsl/gsl_sf_laguerre.h	/^double gsl_sf_laguerre_2(double a, double x);$/;"	p	signature:(double a, double x)
gsl_sf_laguerre_2_e	/usr/local/gsl/include/gsl/gsl_sf_laguerre.h	/^int gsl_sf_laguerre_2_e(const double a, const double x, gsl_sf_result * result);$/;"	p	signature:(const double a, const double x, gsl_sf_result * result)
gsl_sf_laguerre_3	/usr/local/gsl/include/gsl/gsl_sf_laguerre.h	/^double gsl_sf_laguerre_3(double a, double x);$/;"	p	signature:(double a, double x)
gsl_sf_laguerre_3_e	/usr/local/gsl/include/gsl/gsl_sf_laguerre.h	/^int gsl_sf_laguerre_3_e(const double a, const double x, gsl_sf_result * result);$/;"	p	signature:(const double a, const double x, gsl_sf_result * result)
gsl_sf_laguerre_n	/usr/local/gsl/include/gsl/gsl_sf_laguerre.h	/^double     gsl_sf_laguerre_n(int n, double a, double x);$/;"	p	signature:(int n, double a, double x)
gsl_sf_laguerre_n_e	/usr/local/gsl/include/gsl/gsl_sf_laguerre.h	/^int     gsl_sf_laguerre_n_e(const int n, const double a, const double x, gsl_sf_result * result);$/;"	p	signature:(const int n, const double a, const double x, gsl_sf_result * result)
gsl_sf_lambert_W0	/usr/local/gsl/include/gsl/gsl_sf_lambert.h	/^double  gsl_sf_lambert_W0(double x);$/;"	p	signature:(double x)
gsl_sf_lambert_W0_e	/usr/local/gsl/include/gsl/gsl_sf_lambert.h	/^int     gsl_sf_lambert_W0_e(double x, gsl_sf_result * result);$/;"	p	signature:(double x, gsl_sf_result * result)
gsl_sf_lambert_Wm1	/usr/local/gsl/include/gsl/gsl_sf_lambert.h	/^double  gsl_sf_lambert_Wm1(double x);$/;"	p	signature:(double x)
gsl_sf_lambert_Wm1_e	/usr/local/gsl/include/gsl/gsl_sf_lambert.h	/^int     gsl_sf_lambert_Wm1_e(double x, gsl_sf_result * result);$/;"	p	signature:(double x, gsl_sf_result * result)
gsl_sf_legendre_H3d	/usr/local/gsl/include/gsl/gsl_sf_legendre.h	/^double gsl_sf_legendre_H3d(const int l, const double lambda, const double eta);$/;"	p	signature:(const int l, const double lambda, const double eta)
gsl_sf_legendre_H3d_0	/usr/local/gsl/include/gsl/gsl_sf_legendre.h	/^double gsl_sf_legendre_H3d_0(const double lambda, const double eta);$/;"	p	signature:(const double lambda, const double eta)
gsl_sf_legendre_H3d_0_e	/usr/local/gsl/include/gsl/gsl_sf_legendre.h	/^int gsl_sf_legendre_H3d_0_e(const double lambda, const double eta, gsl_sf_result * result);$/;"	p	signature:(const double lambda, const double eta, gsl_sf_result * result)
gsl_sf_legendre_H3d_1	/usr/local/gsl/include/gsl/gsl_sf_legendre.h	/^double gsl_sf_legendre_H3d_1(const double lambda, const double eta);$/;"	p	signature:(const double lambda, const double eta)
gsl_sf_legendre_H3d_1_e	/usr/local/gsl/include/gsl/gsl_sf_legendre.h	/^int gsl_sf_legendre_H3d_1_e(const double lambda, const double eta, gsl_sf_result * result);$/;"	p	signature:(const double lambda, const double eta, gsl_sf_result * result)
gsl_sf_legendre_H3d_array	/usr/local/gsl/include/gsl/gsl_sf_legendre.h	/^int gsl_sf_legendre_H3d_array(const int lmax, const double lambda, const double eta, double * result_array);$/;"	p	signature:(const int lmax, const double lambda, const double eta, double * result_array)
gsl_sf_legendre_H3d_e	/usr/local/gsl/include/gsl/gsl_sf_legendre.h	/^int gsl_sf_legendre_H3d_e(const int l, const double lambda, const double eta, gsl_sf_result * result);$/;"	p	signature:(const int l, const double lambda, const double eta, gsl_sf_result * result)
gsl_sf_legendre_P1	/usr/local/gsl/include/gsl/gsl_sf_legendre.h	/^double gsl_sf_legendre_P1(const double x);$/;"	p	signature:(const double x)
gsl_sf_legendre_P1_e	/usr/local/gsl/include/gsl/gsl_sf_legendre.h	/^int gsl_sf_legendre_P1_e(double x, gsl_sf_result * result);$/;"	p	signature:(double x, gsl_sf_result * result)
gsl_sf_legendre_P2	/usr/local/gsl/include/gsl/gsl_sf_legendre.h	/^double gsl_sf_legendre_P2(const double x);$/;"	p	signature:(const double x)
gsl_sf_legendre_P2_e	/usr/local/gsl/include/gsl/gsl_sf_legendre.h	/^int gsl_sf_legendre_P2_e(double x, gsl_sf_result * result);$/;"	p	signature:(double x, gsl_sf_result * result)
gsl_sf_legendre_P3	/usr/local/gsl/include/gsl/gsl_sf_legendre.h	/^double gsl_sf_legendre_P3(const double x);$/;"	p	signature:(const double x)
gsl_sf_legendre_P3_e	/usr/local/gsl/include/gsl/gsl_sf_legendre.h	/^int gsl_sf_legendre_P3_e(double x, gsl_sf_result * result);$/;"	p	signature:(double x, gsl_sf_result * result)
gsl_sf_legendre_Pl	/usr/local/gsl/include/gsl/gsl_sf_legendre.h	/^double  gsl_sf_legendre_Pl(const int l, const double x);$/;"	p	signature:(const int l, const double x)
gsl_sf_legendre_Pl_array	/usr/local/gsl/include/gsl/gsl_sf_legendre.h	/^int gsl_sf_legendre_Pl_array($/;"	p	signature:( const int lmax, const double x, double * result_array )
gsl_sf_legendre_Pl_deriv_array	/usr/local/gsl/include/gsl/gsl_sf_legendre.h	/^int gsl_sf_legendre_Pl_deriv_array($/;"	p	signature:( const int lmax, const double x, double * result_array, double * result_deriv_array )
gsl_sf_legendre_Pl_e	/usr/local/gsl/include/gsl/gsl_sf_legendre.h	/^int     gsl_sf_legendre_Pl_e(const int l, const double x, gsl_sf_result * result);$/;"	p	signature:(const int l, const double x, gsl_sf_result * result)
gsl_sf_legendre_Plm	/usr/local/gsl/include/gsl/gsl_sf_legendre.h	/^double  gsl_sf_legendre_Plm(const int l, const int m, const double x);$/;"	p	signature:(const int l, const int m, const double x)
gsl_sf_legendre_Plm_array	/usr/local/gsl/include/gsl/gsl_sf_legendre.h	/^int gsl_sf_legendre_Plm_array($/;"	p	signature:( const int lmax, const int m, const double x, double * result_array )
gsl_sf_legendre_Plm_deriv_array	/usr/local/gsl/include/gsl/gsl_sf_legendre.h	/^int gsl_sf_legendre_Plm_deriv_array($/;"	p	signature:( const int lmax, const int m, const double x, double * result_array, double * result_deriv_array )
gsl_sf_legendre_Plm_e	/usr/local/gsl/include/gsl/gsl_sf_legendre.h	/^int     gsl_sf_legendre_Plm_e(const int l, const int m, const double x, gsl_sf_result * result);$/;"	p	signature:(const int l, const int m, const double x, gsl_sf_result * result)
gsl_sf_legendre_Q0	/usr/local/gsl/include/gsl/gsl_sf_legendre.h	/^double gsl_sf_legendre_Q0(const double x);$/;"	p	signature:(const double x)
gsl_sf_legendre_Q0_e	/usr/local/gsl/include/gsl/gsl_sf_legendre.h	/^int gsl_sf_legendre_Q0_e(const double x, gsl_sf_result * result);$/;"	p	signature:(const double x, gsl_sf_result * result)
gsl_sf_legendre_Q1	/usr/local/gsl/include/gsl/gsl_sf_legendre.h	/^double gsl_sf_legendre_Q1(const double x);$/;"	p	signature:(const double x)
gsl_sf_legendre_Q1_e	/usr/local/gsl/include/gsl/gsl_sf_legendre.h	/^int gsl_sf_legendre_Q1_e(const double x, gsl_sf_result * result);$/;"	p	signature:(const double x, gsl_sf_result * result)
gsl_sf_legendre_Ql	/usr/local/gsl/include/gsl/gsl_sf_legendre.h	/^double gsl_sf_legendre_Ql(const int l, const double x);$/;"	p	signature:(const int l, const double x)
gsl_sf_legendre_Ql_e	/usr/local/gsl/include/gsl/gsl_sf_legendre.h	/^int gsl_sf_legendre_Ql_e(const int l, const double x, gsl_sf_result * result);$/;"	p	signature:(const int l, const double x, gsl_sf_result * result)
gsl_sf_legendre_array_size	/usr/local/gsl/include/gsl/gsl_sf_legendre.h	/^int gsl_sf_legendre_array_size(const int lmax, const int m);$/;"	p	signature:(const int lmax, const int m)
gsl_sf_legendre_sphPlm	/usr/local/gsl/include/gsl/gsl_sf_legendre.h	/^double  gsl_sf_legendre_sphPlm(const int l, const int m, const double x);$/;"	p	signature:(const int l, const int m, const double x)
gsl_sf_legendre_sphPlm_array	/usr/local/gsl/include/gsl/gsl_sf_legendre.h	/^int gsl_sf_legendre_sphPlm_array($/;"	p	signature:( const int lmax, int m, const double x, double * result_array )
gsl_sf_legendre_sphPlm_deriv_array	/usr/local/gsl/include/gsl/gsl_sf_legendre.h	/^int gsl_sf_legendre_sphPlm_deriv_array($/;"	p	signature:( const int lmax, const int m, const double x, double * result_array, double * result_deriv_array )
gsl_sf_legendre_sphPlm_e	/usr/local/gsl/include/gsl/gsl_sf_legendre.h	/^int     gsl_sf_legendre_sphPlm_e(const int l, int m, const double x, gsl_sf_result * result);$/;"	p	signature:(const int l, int m, const double x, gsl_sf_result * result)
gsl_sf_lnbeta	/usr/local/gsl/include/gsl/gsl_sf_gamma.h	/^double gsl_sf_lnbeta(const double a, const double b);$/;"	p	signature:(const double a, const double b)
gsl_sf_lnbeta_e	/usr/local/gsl/include/gsl/gsl_sf_gamma.h	/^int gsl_sf_lnbeta_e(const double a, const double b, gsl_sf_result * result);$/;"	p	signature:(const double a, const double b, gsl_sf_result * result)
gsl_sf_lnbeta_sgn_e	/usr/local/gsl/include/gsl/gsl_sf_gamma.h	/^int gsl_sf_lnbeta_sgn_e(const double x, const double y, gsl_sf_result * result, double * sgn);$/;"	p	signature:(const double x, const double y, gsl_sf_result * result, double * sgn)
gsl_sf_lnchoose	/usr/local/gsl/include/gsl/gsl_sf_gamma.h	/^double gsl_sf_lnchoose(unsigned int n, unsigned int m);$/;"	p	signature:(unsigned int n, unsigned int m)
gsl_sf_lnchoose_e	/usr/local/gsl/include/gsl/gsl_sf_gamma.h	/^int gsl_sf_lnchoose_e(unsigned int n, unsigned int m, gsl_sf_result * result);$/;"	p	signature:(unsigned int n, unsigned int m, gsl_sf_result * result)
gsl_sf_lncosh	/usr/local/gsl/include/gsl/gsl_sf_trig.h	/^double gsl_sf_lncosh(const double x);$/;"	p	signature:(const double x)
gsl_sf_lncosh_e	/usr/local/gsl/include/gsl/gsl_sf_trig.h	/^int gsl_sf_lncosh_e(const double x, gsl_sf_result * result);$/;"	p	signature:(const double x, gsl_sf_result * result)
gsl_sf_lndoublefact	/usr/local/gsl/include/gsl/gsl_sf_gamma.h	/^double gsl_sf_lndoublefact(const unsigned int n);$/;"	p	signature:(const unsigned int n)
gsl_sf_lndoublefact_e	/usr/local/gsl/include/gsl/gsl_sf_gamma.h	/^int gsl_sf_lndoublefact_e(const unsigned int n, gsl_sf_result * result);$/;"	p	signature:(const unsigned int n, gsl_sf_result * result)
gsl_sf_lnfact	/usr/local/gsl/include/gsl/gsl_sf_gamma.h	/^double gsl_sf_lnfact(const unsigned int n);$/;"	p	signature:(const unsigned int n)
gsl_sf_lnfact_e	/usr/local/gsl/include/gsl/gsl_sf_gamma.h	/^int gsl_sf_lnfact_e(const unsigned int n, gsl_sf_result * result);$/;"	p	signature:(const unsigned int n, gsl_sf_result * result)
gsl_sf_lngamma	/usr/local/gsl/include/gsl/gsl_sf_gamma.h	/^double gsl_sf_lngamma(const double x);$/;"	p	signature:(const double x)
gsl_sf_lngamma_complex_e	/usr/local/gsl/include/gsl/gsl_sf_gamma.h	/^int gsl_sf_lngamma_complex_e(double zr, double zi, gsl_sf_result * lnr, gsl_sf_result * arg);$/;"	p	signature:(double zr, double zi, gsl_sf_result * lnr, gsl_sf_result * arg)
gsl_sf_lngamma_e	/usr/local/gsl/include/gsl/gsl_sf_gamma.h	/^int gsl_sf_lngamma_e(double x, gsl_sf_result * result);$/;"	p	signature:(double x, gsl_sf_result * result)
gsl_sf_lngamma_sgn_e	/usr/local/gsl/include/gsl/gsl_sf_gamma.h	/^int gsl_sf_lngamma_sgn_e(double x, gsl_sf_result * result_lg, double *sgn);$/;"	p	signature:(double x, gsl_sf_result * result_lg, double *sgn)
gsl_sf_lnpoch	/usr/local/gsl/include/gsl/gsl_sf_gamma.h	/^double gsl_sf_lnpoch(const double a, const double x);$/;"	p	signature:(const double a, const double x)
gsl_sf_lnpoch_e	/usr/local/gsl/include/gsl/gsl_sf_gamma.h	/^int gsl_sf_lnpoch_e(const double a, const double x, gsl_sf_result * result);$/;"	p	signature:(const double a, const double x, gsl_sf_result * result)
gsl_sf_lnpoch_sgn_e	/usr/local/gsl/include/gsl/gsl_sf_gamma.h	/^int gsl_sf_lnpoch_sgn_e(const double a, const double x, gsl_sf_result * result, double * sgn);$/;"	p	signature:(const double a, const double x, gsl_sf_result * result, double * sgn)
gsl_sf_lnsinh	/usr/local/gsl/include/gsl/gsl_sf_trig.h	/^double gsl_sf_lnsinh(const double x);$/;"	p	signature:(const double x)
gsl_sf_lnsinh_e	/usr/local/gsl/include/gsl/gsl_sf_trig.h	/^int gsl_sf_lnsinh_e(const double x, gsl_sf_result * result);$/;"	p	signature:(const double x, gsl_sf_result * result)
gsl_sf_log	/usr/local/gsl/include/gsl/gsl_sf_log.h	/^double gsl_sf_log(const double x);$/;"	p	signature:(const double x)
gsl_sf_log_1plusx	/usr/local/gsl/include/gsl/gsl_sf_log.h	/^double gsl_sf_log_1plusx(const double x);$/;"	p	signature:(const double x)
gsl_sf_log_1plusx_e	/usr/local/gsl/include/gsl/gsl_sf_log.h	/^int gsl_sf_log_1plusx_e(const double x, gsl_sf_result * result);$/;"	p	signature:(const double x, gsl_sf_result * result)
gsl_sf_log_1plusx_mx	/usr/local/gsl/include/gsl/gsl_sf_log.h	/^double gsl_sf_log_1plusx_mx(const double x);$/;"	p	signature:(const double x)
gsl_sf_log_1plusx_mx_e	/usr/local/gsl/include/gsl/gsl_sf_log.h	/^int gsl_sf_log_1plusx_mx_e(const double x, gsl_sf_result * result);$/;"	p	signature:(const double x, gsl_sf_result * result)
gsl_sf_log_abs	/usr/local/gsl/include/gsl/gsl_sf_log.h	/^double gsl_sf_log_abs(const double x);$/;"	p	signature:(const double x)
gsl_sf_log_abs_e	/usr/local/gsl/include/gsl/gsl_sf_log.h	/^int gsl_sf_log_abs_e(const double x, gsl_sf_result * result);$/;"	p	signature:(const double x, gsl_sf_result * result)
gsl_sf_log_e	/usr/local/gsl/include/gsl/gsl_sf_log.h	/^int gsl_sf_log_e(const double x, gsl_sf_result * result);$/;"	p	signature:(const double x, gsl_sf_result * result)
gsl_sf_log_erfc	/usr/local/gsl/include/gsl/gsl_sf_erf.h	/^double gsl_sf_log_erfc(double x);$/;"	p	signature:(double x)
gsl_sf_log_erfc_e	/usr/local/gsl/include/gsl/gsl_sf_erf.h	/^int gsl_sf_log_erfc_e(double x, gsl_sf_result * result);$/;"	p	signature:(double x, gsl_sf_result * result)
gsl_sf_mathieu_Mc	/usr/local/gsl/include/gsl/gsl_sf_mathieu.h	/^int gsl_sf_mathieu_Mc(int kind, int order, double qq, double zz,$/;"	p	signature:(int kind, int order, double qq, double zz, gsl_sf_result *result)
gsl_sf_mathieu_Mc_array	/usr/local/gsl/include/gsl/gsl_sf_mathieu.h	/^int gsl_sf_mathieu_Mc_array(int kind, int nmin, int nmax, double qq,$/;"	p	signature:(int kind, int nmin, int nmax, double qq, double zz, gsl_sf_mathieu_workspace *work, double result_array[])
gsl_sf_mathieu_Ms	/usr/local/gsl/include/gsl/gsl_sf_mathieu.h	/^int gsl_sf_mathieu_Ms(int kind, int order, double qq, double zz,$/;"	p	signature:(int kind, int order, double qq, double zz, gsl_sf_result *result)
gsl_sf_mathieu_Ms_array	/usr/local/gsl/include/gsl/gsl_sf_mathieu.h	/^int gsl_sf_mathieu_Ms_array(int kind, int nmin, int nmax, double qq,$/;"	p	signature:(int kind, int nmin, int nmax, double qq, double zz, gsl_sf_mathieu_workspace *work, double result_array[])
gsl_sf_mathieu_a	/usr/local/gsl/include/gsl/gsl_sf_mathieu.h	/^int gsl_sf_mathieu_a(int order, double qq, gsl_sf_result *result);$/;"	p	signature:(int order, double qq, gsl_sf_result *result)
gsl_sf_mathieu_a_array	/usr/local/gsl/include/gsl/gsl_sf_mathieu.h	/^int gsl_sf_mathieu_a_array(int order_min, int order_max, double qq, gsl_sf_mathieu_workspace *work, double result_array[]);$/;"	p	signature:(int order_min, int order_max, double qq, gsl_sf_mathieu_workspace *work, double result_array[])
gsl_sf_mathieu_a_coeff	/usr/local/gsl/include/gsl/gsl_sf_mathieu.h	/^int gsl_sf_mathieu_a_coeff(int order, double qq, double aa, double coeff[]);$/;"	p	signature:(int order, double qq, double aa, double coeff[])
gsl_sf_mathieu_alloc	/usr/local/gsl/include/gsl/gsl_sf_mathieu.h	/^gsl_sf_mathieu_workspace *gsl_sf_mathieu_alloc(const size_t nn,$/;"	p	signature:(const size_t nn, const double qq)
gsl_sf_mathieu_b	/usr/local/gsl/include/gsl/gsl_sf_mathieu.h	/^int gsl_sf_mathieu_b(int order, double qq, gsl_sf_result *result);$/;"	p	signature:(int order, double qq, gsl_sf_result *result)
gsl_sf_mathieu_b_array	/usr/local/gsl/include/gsl/gsl_sf_mathieu.h	/^int gsl_sf_mathieu_b_array(int order_min, int order_max, double qq,  gsl_sf_mathieu_workspace *work, double result_array[]);$/;"	p	signature:(int order_min, int order_max, double qq, gsl_sf_mathieu_workspace *work, double result_array[])
gsl_sf_mathieu_b_coeff	/usr/local/gsl/include/gsl/gsl_sf_mathieu.h	/^int gsl_sf_mathieu_b_coeff(int order, double qq, double aa, double coeff[]);$/;"	p	signature:(int order, double qq, double aa, double coeff[])
gsl_sf_mathieu_ce	/usr/local/gsl/include/gsl/gsl_sf_mathieu.h	/^int gsl_sf_mathieu_ce(int order, double qq, double zz, gsl_sf_result *result);$/;"	p	signature:(int order, double qq, double zz, gsl_sf_result *result)
gsl_sf_mathieu_ce_array	/usr/local/gsl/include/gsl/gsl_sf_mathieu.h	/^int gsl_sf_mathieu_ce_array(int nmin, int nmax, double qq, double zz,$/;"	p	signature:(int nmin, int nmax, double qq, double zz, gsl_sf_mathieu_workspace *work, double result_array[])
gsl_sf_mathieu_free	/usr/local/gsl/include/gsl/gsl_sf_mathieu.h	/^void gsl_sf_mathieu_free(gsl_sf_mathieu_workspace *workspace);$/;"	p	signature:(gsl_sf_mathieu_workspace *workspace)
gsl_sf_mathieu_se	/usr/local/gsl/include/gsl/gsl_sf_mathieu.h	/^int gsl_sf_mathieu_se(int order, double qq, double zz, gsl_sf_result *result);$/;"	p	signature:(int order, double qq, double zz, gsl_sf_result *result)
gsl_sf_mathieu_se_array	/usr/local/gsl/include/gsl/gsl_sf_mathieu.h	/^int gsl_sf_mathieu_se_array(int nmin, int nmax, double qq, double zz,$/;"	p	signature:(int nmin, int nmax, double qq, double zz, gsl_sf_mathieu_workspace *work, double result_array[])
gsl_sf_mathieu_workspace	/usr/local/gsl/include/gsl/gsl_sf_mathieu.h	/^} gsl_sf_mathieu_workspace;$/;"	t	typeref:struct:__anon177
gsl_sf_multiply	/usr/local/gsl/include/gsl/gsl_sf_elementary.h	/^double gsl_sf_multiply(const double x, const double y);$/;"	p	signature:(const double x, const double y)
gsl_sf_multiply_e	/usr/local/gsl/include/gsl/gsl_sf_elementary.h	/^int gsl_sf_multiply_e(const double x, const double y, gsl_sf_result * result);$/;"	p	signature:(const double x, const double y, gsl_sf_result * result)
gsl_sf_multiply_err_e	/usr/local/gsl/include/gsl/gsl_sf_elementary.h	/^int gsl_sf_multiply_err_e(const double x, const double dx, const double y, const double dy, gsl_sf_result * result);$/;"	p	signature:(const double x, const double dx, const double y, const double dy, gsl_sf_result * result)
gsl_sf_poch	/usr/local/gsl/include/gsl/gsl_sf_gamma.h	/^double gsl_sf_poch(const double a, const double x);$/;"	p	signature:(const double a, const double x)
gsl_sf_poch_e	/usr/local/gsl/include/gsl/gsl_sf_gamma.h	/^int gsl_sf_poch_e(const double a, const double x, gsl_sf_result * result);$/;"	p	signature:(const double a, const double x, gsl_sf_result * result)
gsl_sf_pochrel	/usr/local/gsl/include/gsl/gsl_sf_gamma.h	/^double gsl_sf_pochrel(const double a, const double x);$/;"	p	signature:(const double a, const double x)
gsl_sf_pochrel_e	/usr/local/gsl/include/gsl/gsl_sf_gamma.h	/^int gsl_sf_pochrel_e(const double a, const double x, gsl_sf_result * result);$/;"	p	signature:(const double a, const double x, gsl_sf_result * result)
gsl_sf_polar_to_rect	/usr/local/gsl/include/gsl/gsl_sf_trig.h	/^int gsl_sf_polar_to_rect(const double r, const double theta, gsl_sf_result * x, gsl_sf_result * y);$/;"	p	signature:(const double r, const double theta, gsl_sf_result * x, gsl_sf_result * y)
gsl_sf_pow_int	/usr/local/gsl/include/gsl/gsl_sf_pow_int.h	/^double  gsl_sf_pow_int(const double x, const int n);$/;"	p	signature:(const double x, const int n)
gsl_sf_pow_int_e	/usr/local/gsl/include/gsl/gsl_sf_pow_int.h	/^int     gsl_sf_pow_int_e(double x, int n, gsl_sf_result * result);$/;"	p	signature:(double x, int n, gsl_sf_result * result)
gsl_sf_psi	/usr/local/gsl/include/gsl/gsl_sf_psi.h	/^double  gsl_sf_psi(const double x);$/;"	p	signature:(const double x)
gsl_sf_psi_1	/usr/local/gsl/include/gsl/gsl_sf_psi.h	/^double  gsl_sf_psi_1(const double x);$/;"	p	signature:(const double x)
gsl_sf_psi_1_e	/usr/local/gsl/include/gsl/gsl_sf_psi.h	/^int     gsl_sf_psi_1_e(const double x, gsl_sf_result * result);$/;"	p	signature:(const double x, gsl_sf_result * result)
gsl_sf_psi_1_int	/usr/local/gsl/include/gsl/gsl_sf_psi.h	/^double  gsl_sf_psi_1_int(const int n);$/;"	p	signature:(const int n)
gsl_sf_psi_1_int_e	/usr/local/gsl/include/gsl/gsl_sf_psi.h	/^int     gsl_sf_psi_1_int_e(const int n, gsl_sf_result * result);$/;"	p	signature:(const int n, gsl_sf_result * result)
gsl_sf_psi_1piy	/usr/local/gsl/include/gsl/gsl_sf_psi.h	/^double  gsl_sf_psi_1piy(const double y);$/;"	p	signature:(const double y)
gsl_sf_psi_1piy_e	/usr/local/gsl/include/gsl/gsl_sf_psi.h	/^int     gsl_sf_psi_1piy_e(const double y, gsl_sf_result * result);$/;"	p	signature:(const double y, gsl_sf_result * result)
gsl_sf_psi_e	/usr/local/gsl/include/gsl/gsl_sf_psi.h	/^int     gsl_sf_psi_e(const double x, gsl_sf_result * result);$/;"	p	signature:(const double x, gsl_sf_result * result)
gsl_sf_psi_int	/usr/local/gsl/include/gsl/gsl_sf_psi.h	/^double  gsl_sf_psi_int(const int n);$/;"	p	signature:(const int n)
gsl_sf_psi_int_e	/usr/local/gsl/include/gsl/gsl_sf_psi.h	/^int     gsl_sf_psi_int_e(const int n, gsl_sf_result * result);$/;"	p	signature:(const int n, gsl_sf_result * result)
gsl_sf_psi_n	/usr/local/gsl/include/gsl/gsl_sf_psi.h	/^double  gsl_sf_psi_n(const int n, const double x);$/;"	p	signature:(const int n, const double x)
gsl_sf_psi_n_e	/usr/local/gsl/include/gsl/gsl_sf_psi.h	/^int     gsl_sf_psi_n_e(const int n, const double x, gsl_sf_result * result);$/;"	p	signature:(const int n, const double x, gsl_sf_result * result)
gsl_sf_rect_to_polar	/usr/local/gsl/include/gsl/gsl_sf_trig.h	/^int gsl_sf_rect_to_polar(const double x, const double y, gsl_sf_result * r, gsl_sf_result * theta);$/;"	p	signature:(const double x, const double y, gsl_sf_result * r, gsl_sf_result * theta)
gsl_sf_result	/usr/local/gsl/include/gsl/gsl_sf_result.h	/^typedef struct gsl_sf_result_struct gsl_sf_result;$/;"	t	typeref:struct:gsl_sf_result_struct
gsl_sf_result_e10	/usr/local/gsl/include/gsl/gsl_sf_result.h	/^typedef struct gsl_sf_result_e10_struct gsl_sf_result_e10;$/;"	t	typeref:struct:gsl_sf_result_e10_struct
gsl_sf_result_e10_struct	/usr/local/gsl/include/gsl/gsl_sf_result.h	/^struct gsl_sf_result_e10_struct {$/;"	s
gsl_sf_result_e10_struct::e10	/usr/local/gsl/include/gsl/gsl_sf_result.h	/^  int    e10;$/;"	m	struct:gsl_sf_result_e10_struct	access:public
gsl_sf_result_e10_struct::err	/usr/local/gsl/include/gsl/gsl_sf_result.h	/^  double err;$/;"	m	struct:gsl_sf_result_e10_struct	access:public
gsl_sf_result_e10_struct::val	/usr/local/gsl/include/gsl/gsl_sf_result.h	/^  double val;$/;"	m	struct:gsl_sf_result_e10_struct	access:public
gsl_sf_result_smash_e	/usr/local/gsl/include/gsl/gsl_sf_result.h	/^int gsl_sf_result_smash_e(const gsl_sf_result_e10 * re, gsl_sf_result * r);$/;"	p	signature:(const gsl_sf_result_e10 * re, gsl_sf_result * r)
gsl_sf_result_struct	/usr/local/gsl/include/gsl/gsl_sf_result.h	/^struct gsl_sf_result_struct {$/;"	s
gsl_sf_result_struct::err	/usr/local/gsl/include/gsl/gsl_sf_result.h	/^  double err;$/;"	m	struct:gsl_sf_result_struct	access:public
gsl_sf_result_struct::val	/usr/local/gsl/include/gsl/gsl_sf_result.h	/^  double val;$/;"	m	struct:gsl_sf_result_struct	access:public
gsl_sf_sin	/usr/local/gsl/include/gsl/gsl_sf_trig.h	/^double gsl_sf_sin(const double x);$/;"	p	signature:(const double x)
gsl_sf_sin_e	/usr/local/gsl/include/gsl/gsl_sf_trig.h	/^int gsl_sf_sin_e(double x, gsl_sf_result * result);$/;"	p	signature:(double x, gsl_sf_result * result)
gsl_sf_sin_err_e	/usr/local/gsl/include/gsl/gsl_sf_trig.h	/^int gsl_sf_sin_err_e(const double x, const double dx, gsl_sf_result * result);$/;"	p	signature:(const double x, const double dx, gsl_sf_result * result)
gsl_sf_sinc	/usr/local/gsl/include/gsl/gsl_sf_trig.h	/^double gsl_sf_sinc(const double x);$/;"	p	signature:(const double x)
gsl_sf_sinc_e	/usr/local/gsl/include/gsl/gsl_sf_trig.h	/^int gsl_sf_sinc_e(double x, gsl_sf_result * result);$/;"	p	signature:(double x, gsl_sf_result * result)
gsl_sf_synchrotron_1	/usr/local/gsl/include/gsl/gsl_sf_synchrotron.h	/^double     gsl_sf_synchrotron_1(const double x);$/;"	p	signature:(const double x)
gsl_sf_synchrotron_1_e	/usr/local/gsl/include/gsl/gsl_sf_synchrotron.h	/^int     gsl_sf_synchrotron_1_e(const double x, gsl_sf_result * result);$/;"	p	signature:(const double x, gsl_sf_result * result)
gsl_sf_synchrotron_2	/usr/local/gsl/include/gsl/gsl_sf_synchrotron.h	/^double     gsl_sf_synchrotron_2(const double x);$/;"	p	signature:(const double x)
gsl_sf_synchrotron_2_e	/usr/local/gsl/include/gsl/gsl_sf_synchrotron.h	/^int     gsl_sf_synchrotron_2_e(const double x, gsl_sf_result * result);$/;"	p	signature:(const double x, gsl_sf_result * result)
gsl_sf_taylorcoeff	/usr/local/gsl/include/gsl/gsl_sf_gamma.h	/^double gsl_sf_taylorcoeff(const int n, const double x);$/;"	p	signature:(const int n, const double x)
gsl_sf_taylorcoeff_e	/usr/local/gsl/include/gsl/gsl_sf_gamma.h	/^int gsl_sf_taylorcoeff_e(const int n, const double x, gsl_sf_result * result);$/;"	p	signature:(const int n, const double x, gsl_sf_result * result)
gsl_sf_transport_2	/usr/local/gsl/include/gsl/gsl_sf_transport.h	/^double     gsl_sf_transport_2(const double x);$/;"	p	signature:(const double x)
gsl_sf_transport_2_e	/usr/local/gsl/include/gsl/gsl_sf_transport.h	/^int     gsl_sf_transport_2_e(const double x, gsl_sf_result * result);$/;"	p	signature:(const double x, gsl_sf_result * result)
gsl_sf_transport_3	/usr/local/gsl/include/gsl/gsl_sf_transport.h	/^double     gsl_sf_transport_3(const double x);$/;"	p	signature:(const double x)
gsl_sf_transport_3_e	/usr/local/gsl/include/gsl/gsl_sf_transport.h	/^int     gsl_sf_transport_3_e(const double x, gsl_sf_result * result);$/;"	p	signature:(const double x, gsl_sf_result * result)
gsl_sf_transport_4	/usr/local/gsl/include/gsl/gsl_sf_transport.h	/^double     gsl_sf_transport_4(const double x);$/;"	p	signature:(const double x)
gsl_sf_transport_4_e	/usr/local/gsl/include/gsl/gsl_sf_transport.h	/^int     gsl_sf_transport_4_e(const double x, gsl_sf_result * result);$/;"	p	signature:(const double x, gsl_sf_result * result)
gsl_sf_transport_5	/usr/local/gsl/include/gsl/gsl_sf_transport.h	/^double     gsl_sf_transport_5(const double x);$/;"	p	signature:(const double x)
gsl_sf_transport_5_e	/usr/local/gsl/include/gsl/gsl_sf_transport.h	/^int     gsl_sf_transport_5_e(const double x, gsl_sf_result * result);$/;"	p	signature:(const double x, gsl_sf_result * result)
gsl_sf_zeta	/usr/local/gsl/include/gsl/gsl_sf_zeta.h	/^double gsl_sf_zeta(const double s);$/;"	p	signature:(const double s)
gsl_sf_zeta_e	/usr/local/gsl/include/gsl/gsl_sf_zeta.h	/^int gsl_sf_zeta_e(const double s, gsl_sf_result * result);$/;"	p	signature:(const double s, gsl_sf_result * result)
gsl_sf_zeta_int	/usr/local/gsl/include/gsl/gsl_sf_zeta.h	/^double gsl_sf_zeta_int(const int n);$/;"	p	signature:(const int n)
gsl_sf_zeta_int_e	/usr/local/gsl/include/gsl/gsl_sf_zeta.h	/^int gsl_sf_zeta_int_e(const int n, gsl_sf_result * result);$/;"	p	signature:(const int n, gsl_sf_result * result)
gsl_sf_zetam1	/usr/local/gsl/include/gsl/gsl_sf_zeta.h	/^double gsl_sf_zetam1(const double s);$/;"	p	signature:(const double s)
gsl_sf_zetam1_e	/usr/local/gsl/include/gsl/gsl_sf_zeta.h	/^int gsl_sf_zetam1_e(const double s, gsl_sf_result * result);$/;"	p	signature:(const double s, gsl_sf_result * result)
gsl_sf_zetam1_int	/usr/local/gsl/include/gsl/gsl_sf_zeta.h	/^double gsl_sf_zetam1_int(const int s);$/;"	p	signature:(const int s)
gsl_sf_zetam1_int_e	/usr/local/gsl/include/gsl/gsl_sf_zeta.h	/^int gsl_sf_zetam1_int_e(const int s, gsl_sf_result * result);$/;"	p	signature:(const int s, gsl_sf_result * result)
gsl_siman_Efunc_t	/usr/local/gsl/include/gsl/gsl_siman.h	/^typedef double (*gsl_siman_Efunc_t) (void *xp);$/;"	t
gsl_siman_copy_construct_t	/usr/local/gsl/include/gsl/gsl_siman.h	/^typedef void * (*gsl_siman_copy_construct_t) (void *xp);$/;"	t
gsl_siman_copy_t	/usr/local/gsl/include/gsl/gsl_siman.h	/^typedef void (*gsl_siman_copy_t) (void *source, void *dest);$/;"	t
gsl_siman_destroy_t	/usr/local/gsl/include/gsl/gsl_siman.h	/^typedef void (*gsl_siman_destroy_t) (void *xp);$/;"	t
gsl_siman_metric_t	/usr/local/gsl/include/gsl/gsl_siman.h	/^typedef double (*gsl_siman_metric_t) (void *xp, void *yp);$/;"	t
gsl_siman_params_t	/usr/local/gsl/include/gsl/gsl_siman.h	/^} gsl_siman_params_t;$/;"	t	typeref:struct:__anon139
gsl_siman_print_t	/usr/local/gsl/include/gsl/gsl_siman.h	/^typedef void (*gsl_siman_print_t) (void *xp);$/;"	t
gsl_siman_solve	/usr/local/gsl/include/gsl/gsl_siman.h	/^void gsl_siman_solve(const gsl_rng * r, $/;"	p	signature:(const gsl_rng * r, void *x0_p, gsl_siman_Efunc_t Ef, gsl_siman_step_t take_step, gsl_siman_metric_t distance, gsl_siman_print_t print_position, gsl_siman_copy_t copyfunc, gsl_siman_copy_construct_t copy_constructor, gsl_siman_destroy_t destructor, size_t element_size, gsl_siman_params_t params)
gsl_siman_solve_many	/usr/local/gsl/include/gsl/gsl_siman.h	/^gsl_siman_solve_many (const gsl_rng * r, void *x0_p, gsl_siman_Efunc_t Ef,$/;"	p	signature:(const gsl_rng * r, void *x0_p, gsl_siman_Efunc_t Ef, gsl_siman_step_t take_step, gsl_siman_metric_t distance, gsl_siman_print_t print_position, size_t element_size, gsl_siman_params_t params)
gsl_siman_step_t	/usr/local/gsl/include/gsl/gsl_siman.h	/^typedef void (*gsl_siman_step_t) (const gsl_rng *r, void *xp, double step_size);$/;"	t
gsl_sort	/usr/local/gsl/include/gsl/gsl_sort_double.h	/^void gsl_sort (double * data, const size_t stride, const size_t n);$/;"	p	signature:(double * data, const size_t stride, const size_t n)
gsl_sort_char	/usr/local/gsl/include/gsl/gsl_sort_char.h	/^void gsl_sort_char (char * data, const size_t stride, const size_t n);$/;"	p	signature:(char * data, const size_t stride, const size_t n)
gsl_sort_char_index	/usr/local/gsl/include/gsl/gsl_sort_char.h	/^void gsl_sort_char_index (size_t * p, const char * data, const size_t stride, const size_t n);$/;"	p	signature:(size_t * p, const char * data, const size_t stride, const size_t n)
gsl_sort_char_largest	/usr/local/gsl/include/gsl/gsl_sort_char.h	/^int gsl_sort_char_largest (char * dest, const size_t k, const char * src, const size_t stride, const size_t n);$/;"	p	signature:(char * dest, const size_t k, const char * src, const size_t stride, const size_t n)
gsl_sort_char_largest_index	/usr/local/gsl/include/gsl/gsl_sort_char.h	/^int gsl_sort_char_largest_index (size_t * p, const size_t k, const char * src, const size_t stride, const size_t n);$/;"	p	signature:(size_t * p, const size_t k, const char * src, const size_t stride, const size_t n)
gsl_sort_char_smallest	/usr/local/gsl/include/gsl/gsl_sort_char.h	/^int gsl_sort_char_smallest (char * dest, const size_t k, const char * src, const size_t stride, const size_t n);$/;"	p	signature:(char * dest, const size_t k, const char * src, const size_t stride, const size_t n)
gsl_sort_char_smallest_index	/usr/local/gsl/include/gsl/gsl_sort_char.h	/^int gsl_sort_char_smallest_index (size_t * p, const size_t k, const char * src, const size_t stride, const size_t n);$/;"	p	signature:(size_t * p, const size_t k, const char * src, const size_t stride, const size_t n)
gsl_sort_float	/usr/local/gsl/include/gsl/gsl_sort_float.h	/^void gsl_sort_float (float * data, const size_t stride, const size_t n);$/;"	p	signature:(float * data, const size_t stride, const size_t n)
gsl_sort_float_index	/usr/local/gsl/include/gsl/gsl_sort_float.h	/^void gsl_sort_float_index (size_t * p, const float * data, const size_t stride, const size_t n);$/;"	p	signature:(size_t * p, const float * data, const size_t stride, const size_t n)
gsl_sort_float_largest	/usr/local/gsl/include/gsl/gsl_sort_float.h	/^int gsl_sort_float_largest (float * dest, const size_t k, const float * src, const size_t stride, const size_t n);$/;"	p	signature:(float * dest, const size_t k, const float * src, const size_t stride, const size_t n)
gsl_sort_float_largest_index	/usr/local/gsl/include/gsl/gsl_sort_float.h	/^int gsl_sort_float_largest_index (size_t * p, const size_t k, const float * src, const size_t stride, const size_t n);$/;"	p	signature:(size_t * p, const size_t k, const float * src, const size_t stride, const size_t n)
gsl_sort_float_smallest	/usr/local/gsl/include/gsl/gsl_sort_float.h	/^int gsl_sort_float_smallest (float * dest, const size_t k, const float * src, const size_t stride, const size_t n);$/;"	p	signature:(float * dest, const size_t k, const float * src, const size_t stride, const size_t n)
gsl_sort_float_smallest_index	/usr/local/gsl/include/gsl/gsl_sort_float.h	/^int gsl_sort_float_smallest_index (size_t * p, const size_t k, const float * src, const size_t stride, const size_t n);$/;"	p	signature:(size_t * p, const size_t k, const float * src, const size_t stride, const size_t n)
gsl_sort_index	/usr/local/gsl/include/gsl/gsl_sort_double.h	/^void gsl_sort_index (size_t * p, const double * data, const size_t stride, const size_t n);$/;"	p	signature:(size_t * p, const double * data, const size_t stride, const size_t n)
gsl_sort_int	/usr/local/gsl/include/gsl/gsl_sort_int.h	/^void gsl_sort_int (int * data, const size_t stride, const size_t n);$/;"	p	signature:(int * data, const size_t stride, const size_t n)
gsl_sort_int_index	/usr/local/gsl/include/gsl/gsl_sort_int.h	/^void gsl_sort_int_index (size_t * p, const int * data, const size_t stride, const size_t n);$/;"	p	signature:(size_t * p, const int * data, const size_t stride, const size_t n)
gsl_sort_int_largest	/usr/local/gsl/include/gsl/gsl_sort_int.h	/^int gsl_sort_int_largest (int * dest, const size_t k, const int * src, const size_t stride, const size_t n);$/;"	p	signature:(int * dest, const size_t k, const int * src, const size_t stride, const size_t n)
gsl_sort_int_largest_index	/usr/local/gsl/include/gsl/gsl_sort_int.h	/^int gsl_sort_int_largest_index (size_t * p, const size_t k, const int * src, const size_t stride, const size_t n);$/;"	p	signature:(size_t * p, const size_t k, const int * src, const size_t stride, const size_t n)
gsl_sort_int_smallest	/usr/local/gsl/include/gsl/gsl_sort_int.h	/^int gsl_sort_int_smallest (int * dest, const size_t k, const int * src, const size_t stride, const size_t n);$/;"	p	signature:(int * dest, const size_t k, const int * src, const size_t stride, const size_t n)
gsl_sort_int_smallest_index	/usr/local/gsl/include/gsl/gsl_sort_int.h	/^int gsl_sort_int_smallest_index (size_t * p, const size_t k, const int * src, const size_t stride, const size_t n);$/;"	p	signature:(size_t * p, const size_t k, const int * src, const size_t stride, const size_t n)
gsl_sort_largest	/usr/local/gsl/include/gsl/gsl_sort_double.h	/^int gsl_sort_largest (double * dest, const size_t k, const double * src, const size_t stride, const size_t n);$/;"	p	signature:(double * dest, const size_t k, const double * src, const size_t stride, const size_t n)
gsl_sort_largest_index	/usr/local/gsl/include/gsl/gsl_sort_double.h	/^int gsl_sort_largest_index (size_t * p, const size_t k, const double * src, const size_t stride, const size_t n);$/;"	p	signature:(size_t * p, const size_t k, const double * src, const size_t stride, const size_t n)
gsl_sort_long	/usr/local/gsl/include/gsl/gsl_sort_long.h	/^void gsl_sort_long (long * data, const size_t stride, const size_t n);$/;"	p	signature:(long * data, const size_t stride, const size_t n)
gsl_sort_long_double	/usr/local/gsl/include/gsl/gsl_sort_long_double.h	/^void gsl_sort_long_double (long double * data, const size_t stride, const size_t n);$/;"	p	signature:(long double * data, const size_t stride, const size_t n)
gsl_sort_long_double_index	/usr/local/gsl/include/gsl/gsl_sort_long_double.h	/^void gsl_sort_long_double_index (size_t * p, const long double * data, const size_t stride, const size_t n);$/;"	p	signature:(size_t * p, const long double * data, const size_t stride, const size_t n)
gsl_sort_long_double_largest	/usr/local/gsl/include/gsl/gsl_sort_long_double.h	/^int gsl_sort_long_double_largest (long double * dest, const size_t k, const long double * src, const size_t stride, const size_t n);$/;"	p	signature:(long double * dest, const size_t k, const long double * src, const size_t stride, const size_t n)
gsl_sort_long_double_largest_index	/usr/local/gsl/include/gsl/gsl_sort_long_double.h	/^int gsl_sort_long_double_largest_index (size_t * p, const size_t k, const long double * src, const size_t stride, const size_t n);$/;"	p	signature:(size_t * p, const size_t k, const long double * src, const size_t stride, const size_t n)
gsl_sort_long_double_smallest	/usr/local/gsl/include/gsl/gsl_sort_long_double.h	/^int gsl_sort_long_double_smallest (long double * dest, const size_t k, const long double * src, const size_t stride, const size_t n);$/;"	p	signature:(long double * dest, const size_t k, const long double * src, const size_t stride, const size_t n)
gsl_sort_long_double_smallest_index	/usr/local/gsl/include/gsl/gsl_sort_long_double.h	/^int gsl_sort_long_double_smallest_index (size_t * p, const size_t k, const long double * src, const size_t stride, const size_t n);$/;"	p	signature:(size_t * p, const size_t k, const long double * src, const size_t stride, const size_t n)
gsl_sort_long_index	/usr/local/gsl/include/gsl/gsl_sort_long.h	/^void gsl_sort_long_index (size_t * p, const long * data, const size_t stride, const size_t n);$/;"	p	signature:(size_t * p, const long * data, const size_t stride, const size_t n)
gsl_sort_long_largest	/usr/local/gsl/include/gsl/gsl_sort_long.h	/^int gsl_sort_long_largest (long * dest, const size_t k, const long * src, const size_t stride, const size_t n);$/;"	p	signature:(long * dest, const size_t k, const long * src, const size_t stride, const size_t n)
gsl_sort_long_largest_index	/usr/local/gsl/include/gsl/gsl_sort_long.h	/^int gsl_sort_long_largest_index (size_t * p, const size_t k, const long * src, const size_t stride, const size_t n);$/;"	p	signature:(size_t * p, const size_t k, const long * src, const size_t stride, const size_t n)
gsl_sort_long_smallest	/usr/local/gsl/include/gsl/gsl_sort_long.h	/^int gsl_sort_long_smallest (long * dest, const size_t k, const long * src, const size_t stride, const size_t n);$/;"	p	signature:(long * dest, const size_t k, const long * src, const size_t stride, const size_t n)
gsl_sort_long_smallest_index	/usr/local/gsl/include/gsl/gsl_sort_long.h	/^int gsl_sort_long_smallest_index (size_t * p, const size_t k, const long * src, const size_t stride, const size_t n);$/;"	p	signature:(size_t * p, const size_t k, const long * src, const size_t stride, const size_t n)
gsl_sort_short	/usr/local/gsl/include/gsl/gsl_sort_short.h	/^void gsl_sort_short (short * data, const size_t stride, const size_t n);$/;"	p	signature:(short * data, const size_t stride, const size_t n)
gsl_sort_short_index	/usr/local/gsl/include/gsl/gsl_sort_short.h	/^void gsl_sort_short_index (size_t * p, const short * data, const size_t stride, const size_t n);$/;"	p	signature:(size_t * p, const short * data, const size_t stride, const size_t n)
gsl_sort_short_largest	/usr/local/gsl/include/gsl/gsl_sort_short.h	/^int gsl_sort_short_largest (short * dest, const size_t k, const short * src, const size_t stride, const size_t n);$/;"	p	signature:(short * dest, const size_t k, const short * src, const size_t stride, const size_t n)
gsl_sort_short_largest_index	/usr/local/gsl/include/gsl/gsl_sort_short.h	/^int gsl_sort_short_largest_index (size_t * p, const size_t k, const short * src, const size_t stride, const size_t n);$/;"	p	signature:(size_t * p, const size_t k, const short * src, const size_t stride, const size_t n)
gsl_sort_short_smallest	/usr/local/gsl/include/gsl/gsl_sort_short.h	/^int gsl_sort_short_smallest (short * dest, const size_t k, const short * src, const size_t stride, const size_t n);$/;"	p	signature:(short * dest, const size_t k, const short * src, const size_t stride, const size_t n)
gsl_sort_short_smallest_index	/usr/local/gsl/include/gsl/gsl_sort_short.h	/^int gsl_sort_short_smallest_index (size_t * p, const size_t k, const short * src, const size_t stride, const size_t n);$/;"	p	signature:(size_t * p, const size_t k, const short * src, const size_t stride, const size_t n)
gsl_sort_smallest	/usr/local/gsl/include/gsl/gsl_sort_double.h	/^int gsl_sort_smallest (double * dest, const size_t k, const double * src, const size_t stride, const size_t n);$/;"	p	signature:(double * dest, const size_t k, const double * src, const size_t stride, const size_t n)
gsl_sort_smallest_index	/usr/local/gsl/include/gsl/gsl_sort_double.h	/^int gsl_sort_smallest_index (size_t * p, const size_t k, const double * src, const size_t stride, const size_t n);$/;"	p	signature:(size_t * p, const size_t k, const double * src, const size_t stride, const size_t n)
gsl_sort_uchar	/usr/local/gsl/include/gsl/gsl_sort_uchar.h	/^void gsl_sort_uchar (unsigned char * data, const size_t stride, const size_t n);$/;"	p	signature:(unsigned char * data, const size_t stride, const size_t n)
gsl_sort_uchar_index	/usr/local/gsl/include/gsl/gsl_sort_uchar.h	/^void gsl_sort_uchar_index (size_t * p, const unsigned char * data, const size_t stride, const size_t n);$/;"	p	signature:(size_t * p, const unsigned char * data, const size_t stride, const size_t n)
gsl_sort_uchar_largest	/usr/local/gsl/include/gsl/gsl_sort_uchar.h	/^int gsl_sort_uchar_largest (unsigned char * dest, const size_t k, const unsigned char * src, const size_t stride, const size_t n);$/;"	p	signature:(unsigned char * dest, const size_t k, const unsigned char * src, const size_t stride, const size_t n)
gsl_sort_uchar_largest_index	/usr/local/gsl/include/gsl/gsl_sort_uchar.h	/^int gsl_sort_uchar_largest_index (size_t * p, const size_t k, const unsigned char * src, const size_t stride, const size_t n);$/;"	p	signature:(size_t * p, const size_t k, const unsigned char * src, const size_t stride, const size_t n)
gsl_sort_uchar_smallest	/usr/local/gsl/include/gsl/gsl_sort_uchar.h	/^int gsl_sort_uchar_smallest (unsigned char * dest, const size_t k, const unsigned char * src, const size_t stride, const size_t n);$/;"	p	signature:(unsigned char * dest, const size_t k, const unsigned char * src, const size_t stride, const size_t n)
gsl_sort_uchar_smallest_index	/usr/local/gsl/include/gsl/gsl_sort_uchar.h	/^int gsl_sort_uchar_smallest_index (size_t * p, const size_t k, const unsigned char * src, const size_t stride, const size_t n);$/;"	p	signature:(size_t * p, const size_t k, const unsigned char * src, const size_t stride, const size_t n)
gsl_sort_uint	/usr/local/gsl/include/gsl/gsl_sort_uint.h	/^void gsl_sort_uint (unsigned int * data, const size_t stride, const size_t n);$/;"	p	signature:(unsigned int * data, const size_t stride, const size_t n)
gsl_sort_uint_index	/usr/local/gsl/include/gsl/gsl_sort_uint.h	/^void gsl_sort_uint_index (size_t * p, const unsigned int * data, const size_t stride, const size_t n);$/;"	p	signature:(size_t * p, const unsigned int * data, const size_t stride, const size_t n)
gsl_sort_uint_largest	/usr/local/gsl/include/gsl/gsl_sort_uint.h	/^int gsl_sort_uint_largest (unsigned int * dest, const size_t k, const unsigned int * src, const size_t stride, const size_t n);$/;"	p	signature:(unsigned int * dest, const size_t k, const unsigned int * src, const size_t stride, const size_t n)
gsl_sort_uint_largest_index	/usr/local/gsl/include/gsl/gsl_sort_uint.h	/^int gsl_sort_uint_largest_index (size_t * p, const size_t k, const unsigned int * src, const size_t stride, const size_t n);$/;"	p	signature:(size_t * p, const size_t k, const unsigned int * src, const size_t stride, const size_t n)
gsl_sort_uint_smallest	/usr/local/gsl/include/gsl/gsl_sort_uint.h	/^int gsl_sort_uint_smallest (unsigned int * dest, const size_t k, const unsigned int * src, const size_t stride, const size_t n);$/;"	p	signature:(unsigned int * dest, const size_t k, const unsigned int * src, const size_t stride, const size_t n)
gsl_sort_uint_smallest_index	/usr/local/gsl/include/gsl/gsl_sort_uint.h	/^int gsl_sort_uint_smallest_index (size_t * p, const size_t k, const unsigned int * src, const size_t stride, const size_t n);$/;"	p	signature:(size_t * p, const size_t k, const unsigned int * src, const size_t stride, const size_t n)
gsl_sort_ulong	/usr/local/gsl/include/gsl/gsl_sort_ulong.h	/^void gsl_sort_ulong (unsigned long * data, const size_t stride, const size_t n);$/;"	p	signature:(unsigned long * data, const size_t stride, const size_t n)
gsl_sort_ulong_index	/usr/local/gsl/include/gsl/gsl_sort_ulong.h	/^void gsl_sort_ulong_index (size_t * p, const unsigned long * data, const size_t stride, const size_t n);$/;"	p	signature:(size_t * p, const unsigned long * data, const size_t stride, const size_t n)
gsl_sort_ulong_largest	/usr/local/gsl/include/gsl/gsl_sort_ulong.h	/^int gsl_sort_ulong_largest (unsigned long * dest, const size_t k, const unsigned long * src, const size_t stride, const size_t n);$/;"	p	signature:(unsigned long * dest, const size_t k, const unsigned long * src, const size_t stride, const size_t n)
gsl_sort_ulong_largest_index	/usr/local/gsl/include/gsl/gsl_sort_ulong.h	/^int gsl_sort_ulong_largest_index (size_t * p, const size_t k, const unsigned long * src, const size_t stride, const size_t n);$/;"	p	signature:(size_t * p, const size_t k, const unsigned long * src, const size_t stride, const size_t n)
gsl_sort_ulong_smallest	/usr/local/gsl/include/gsl/gsl_sort_ulong.h	/^int gsl_sort_ulong_smallest (unsigned long * dest, const size_t k, const unsigned long * src, const size_t stride, const size_t n);$/;"	p	signature:(unsigned long * dest, const size_t k, const unsigned long * src, const size_t stride, const size_t n)
gsl_sort_ulong_smallest_index	/usr/local/gsl/include/gsl/gsl_sort_ulong.h	/^int gsl_sort_ulong_smallest_index (size_t * p, const size_t k, const unsigned long * src, const size_t stride, const size_t n);$/;"	p	signature:(size_t * p, const size_t k, const unsigned long * src, const size_t stride, const size_t n)
gsl_sort_ushort	/usr/local/gsl/include/gsl/gsl_sort_ushort.h	/^void gsl_sort_ushort (unsigned short * data, const size_t stride, const size_t n);$/;"	p	signature:(unsigned short * data, const size_t stride, const size_t n)
gsl_sort_ushort_index	/usr/local/gsl/include/gsl/gsl_sort_ushort.h	/^void gsl_sort_ushort_index (size_t * p, const unsigned short * data, const size_t stride, const size_t n);$/;"	p	signature:(size_t * p, const unsigned short * data, const size_t stride, const size_t n)
gsl_sort_ushort_largest	/usr/local/gsl/include/gsl/gsl_sort_ushort.h	/^int gsl_sort_ushort_largest (unsigned short * dest, const size_t k, const unsigned short * src, const size_t stride, const size_t n);$/;"	p	signature:(unsigned short * dest, const size_t k, const unsigned short * src, const size_t stride, const size_t n)
gsl_sort_ushort_largest_index	/usr/local/gsl/include/gsl/gsl_sort_ushort.h	/^int gsl_sort_ushort_largest_index (size_t * p, const size_t k, const unsigned short * src, const size_t stride, const size_t n);$/;"	p	signature:(size_t * p, const size_t k, const unsigned short * src, const size_t stride, const size_t n)
gsl_sort_ushort_smallest	/usr/local/gsl/include/gsl/gsl_sort_ushort.h	/^int gsl_sort_ushort_smallest (unsigned short * dest, const size_t k, const unsigned short * src, const size_t stride, const size_t n);$/;"	p	signature:(unsigned short * dest, const size_t k, const unsigned short * src, const size_t stride, const size_t n)
gsl_sort_ushort_smallest_index	/usr/local/gsl/include/gsl/gsl_sort_ushort.h	/^int gsl_sort_ushort_smallest_index (size_t * p, const size_t k, const unsigned short * src, const size_t stride, const size_t n);$/;"	p	signature:(size_t * p, const size_t k, const unsigned short * src, const size_t stride, const size_t n)
gsl_sort_vector	/usr/local/gsl/include/gsl/gsl_sort_vector_double.h	/^void gsl_sort_vector (gsl_vector * v);$/;"	p	signature:(gsl_vector * v)
gsl_sort_vector_char	/usr/local/gsl/include/gsl/gsl_sort_vector_char.h	/^void gsl_sort_vector_char (gsl_vector_char * v);$/;"	p	signature:(gsl_vector_char * v)
gsl_sort_vector_char_index	/usr/local/gsl/include/gsl/gsl_sort_vector_char.h	/^int gsl_sort_vector_char_index (gsl_permutation * p, const gsl_vector_char * v);$/;"	p	signature:(gsl_permutation * p, const gsl_vector_char * v)
gsl_sort_vector_char_largest	/usr/local/gsl/include/gsl/gsl_sort_vector_char.h	/^int gsl_sort_vector_char_largest (char * dest, const size_t k, const gsl_vector_char * v);$/;"	p	signature:(char * dest, const size_t k, const gsl_vector_char * v)
gsl_sort_vector_char_largest_index	/usr/local/gsl/include/gsl/gsl_sort_vector_char.h	/^int gsl_sort_vector_char_largest_index (size_t * p, const size_t k, const gsl_vector_char * v);$/;"	p	signature:(size_t * p, const size_t k, const gsl_vector_char * v)
gsl_sort_vector_char_smallest	/usr/local/gsl/include/gsl/gsl_sort_vector_char.h	/^int gsl_sort_vector_char_smallest (char * dest, const size_t k, const gsl_vector_char * v);$/;"	p	signature:(char * dest, const size_t k, const gsl_vector_char * v)
gsl_sort_vector_char_smallest_index	/usr/local/gsl/include/gsl/gsl_sort_vector_char.h	/^int gsl_sort_vector_char_smallest_index (size_t * p, const size_t k, const gsl_vector_char * v);$/;"	p	signature:(size_t * p, const size_t k, const gsl_vector_char * v)
gsl_sort_vector_float	/usr/local/gsl/include/gsl/gsl_sort_vector_float.h	/^void gsl_sort_vector_float (gsl_vector_float * v);$/;"	p	signature:(gsl_vector_float * v)
gsl_sort_vector_float_index	/usr/local/gsl/include/gsl/gsl_sort_vector_float.h	/^int gsl_sort_vector_float_index (gsl_permutation * p, const gsl_vector_float * v);$/;"	p	signature:(gsl_permutation * p, const gsl_vector_float * v)
gsl_sort_vector_float_largest	/usr/local/gsl/include/gsl/gsl_sort_vector_float.h	/^int gsl_sort_vector_float_largest (float * dest, const size_t k, const gsl_vector_float * v);$/;"	p	signature:(float * dest, const size_t k, const gsl_vector_float * v)
gsl_sort_vector_float_largest_index	/usr/local/gsl/include/gsl/gsl_sort_vector_float.h	/^int gsl_sort_vector_float_largest_index (size_t * p, const size_t k, const gsl_vector_float * v);$/;"	p	signature:(size_t * p, const size_t k, const gsl_vector_float * v)
gsl_sort_vector_float_smallest	/usr/local/gsl/include/gsl/gsl_sort_vector_float.h	/^int gsl_sort_vector_float_smallest (float * dest, const size_t k, const gsl_vector_float * v);$/;"	p	signature:(float * dest, const size_t k, const gsl_vector_float * v)
gsl_sort_vector_float_smallest_index	/usr/local/gsl/include/gsl/gsl_sort_vector_float.h	/^int gsl_sort_vector_float_smallest_index (size_t * p, const size_t k, const gsl_vector_float * v);$/;"	p	signature:(size_t * p, const size_t k, const gsl_vector_float * v)
gsl_sort_vector_index	/usr/local/gsl/include/gsl/gsl_sort_vector_double.h	/^int gsl_sort_vector_index (gsl_permutation * p, const gsl_vector * v);$/;"	p	signature:(gsl_permutation * p, const gsl_vector * v)
gsl_sort_vector_int	/usr/local/gsl/include/gsl/gsl_sort_vector_int.h	/^void gsl_sort_vector_int (gsl_vector_int * v);$/;"	p	signature:(gsl_vector_int * v)
gsl_sort_vector_int_index	/usr/local/gsl/include/gsl/gsl_sort_vector_int.h	/^int gsl_sort_vector_int_index (gsl_permutation * p, const gsl_vector_int * v);$/;"	p	signature:(gsl_permutation * p, const gsl_vector_int * v)
gsl_sort_vector_int_largest	/usr/local/gsl/include/gsl/gsl_sort_vector_int.h	/^int gsl_sort_vector_int_largest (int * dest, const size_t k, const gsl_vector_int * v);$/;"	p	signature:(int * dest, const size_t k, const gsl_vector_int * v)
gsl_sort_vector_int_largest_index	/usr/local/gsl/include/gsl/gsl_sort_vector_int.h	/^int gsl_sort_vector_int_largest_index (size_t * p, const size_t k, const gsl_vector_int * v);$/;"	p	signature:(size_t * p, const size_t k, const gsl_vector_int * v)
gsl_sort_vector_int_smallest	/usr/local/gsl/include/gsl/gsl_sort_vector_int.h	/^int gsl_sort_vector_int_smallest (int * dest, const size_t k, const gsl_vector_int * v);$/;"	p	signature:(int * dest, const size_t k, const gsl_vector_int * v)
gsl_sort_vector_int_smallest_index	/usr/local/gsl/include/gsl/gsl_sort_vector_int.h	/^int gsl_sort_vector_int_smallest_index (size_t * p, const size_t k, const gsl_vector_int * v);$/;"	p	signature:(size_t * p, const size_t k, const gsl_vector_int * v)
gsl_sort_vector_largest	/usr/local/gsl/include/gsl/gsl_sort_vector_double.h	/^int gsl_sort_vector_largest (double * dest, const size_t k, const gsl_vector * v);$/;"	p	signature:(double * dest, const size_t k, const gsl_vector * v)
gsl_sort_vector_largest_index	/usr/local/gsl/include/gsl/gsl_sort_vector_double.h	/^int gsl_sort_vector_largest_index (size_t * p, const size_t k, const gsl_vector * v);$/;"	p	signature:(size_t * p, const size_t k, const gsl_vector * v)
gsl_sort_vector_long	/usr/local/gsl/include/gsl/gsl_sort_vector_long.h	/^void gsl_sort_vector_long (gsl_vector_long * v);$/;"	p	signature:(gsl_vector_long * v)
gsl_sort_vector_long_double	/usr/local/gsl/include/gsl/gsl_sort_vector_long_double.h	/^void gsl_sort_vector_long_double (gsl_vector_long_double * v);$/;"	p	signature:(gsl_vector_long_double * v)
gsl_sort_vector_long_double_index	/usr/local/gsl/include/gsl/gsl_sort_vector_long_double.h	/^int gsl_sort_vector_long_double_index (gsl_permutation * p, const gsl_vector_long_double * v);$/;"	p	signature:(gsl_permutation * p, const gsl_vector_long_double * v)
gsl_sort_vector_long_double_largest	/usr/local/gsl/include/gsl/gsl_sort_vector_long_double.h	/^int gsl_sort_vector_long_double_largest (long double * dest, const size_t k, const gsl_vector_long_double * v);$/;"	p	signature:(long double * dest, const size_t k, const gsl_vector_long_double * v)
gsl_sort_vector_long_double_largest_index	/usr/local/gsl/include/gsl/gsl_sort_vector_long_double.h	/^int gsl_sort_vector_long_double_largest_index (size_t * p, const size_t k, const gsl_vector_long_double * v);$/;"	p	signature:(size_t * p, const size_t k, const gsl_vector_long_double * v)
gsl_sort_vector_long_double_smallest	/usr/local/gsl/include/gsl/gsl_sort_vector_long_double.h	/^int gsl_sort_vector_long_double_smallest (long double * dest, const size_t k, const gsl_vector_long_double * v);$/;"	p	signature:(long double * dest, const size_t k, const gsl_vector_long_double * v)
gsl_sort_vector_long_double_smallest_index	/usr/local/gsl/include/gsl/gsl_sort_vector_long_double.h	/^int gsl_sort_vector_long_double_smallest_index (size_t * p, const size_t k, const gsl_vector_long_double * v);$/;"	p	signature:(size_t * p, const size_t k, const gsl_vector_long_double * v)
gsl_sort_vector_long_index	/usr/local/gsl/include/gsl/gsl_sort_vector_long.h	/^int gsl_sort_vector_long_index (gsl_permutation * p, const gsl_vector_long * v);$/;"	p	signature:(gsl_permutation * p, const gsl_vector_long * v)
gsl_sort_vector_long_largest	/usr/local/gsl/include/gsl/gsl_sort_vector_long.h	/^int gsl_sort_vector_long_largest (long * dest, const size_t k, const gsl_vector_long * v);$/;"	p	signature:(long * dest, const size_t k, const gsl_vector_long * v)
gsl_sort_vector_long_largest_index	/usr/local/gsl/include/gsl/gsl_sort_vector_long.h	/^int gsl_sort_vector_long_largest_index (size_t * p, const size_t k, const gsl_vector_long * v);$/;"	p	signature:(size_t * p, const size_t k, const gsl_vector_long * v)
gsl_sort_vector_long_smallest	/usr/local/gsl/include/gsl/gsl_sort_vector_long.h	/^int gsl_sort_vector_long_smallest (long * dest, const size_t k, const gsl_vector_long * v);$/;"	p	signature:(long * dest, const size_t k, const gsl_vector_long * v)
gsl_sort_vector_long_smallest_index	/usr/local/gsl/include/gsl/gsl_sort_vector_long.h	/^int gsl_sort_vector_long_smallest_index (size_t * p, const size_t k, const gsl_vector_long * v);$/;"	p	signature:(size_t * p, const size_t k, const gsl_vector_long * v)
gsl_sort_vector_short	/usr/local/gsl/include/gsl/gsl_sort_vector_short.h	/^void gsl_sort_vector_short (gsl_vector_short * v);$/;"	p	signature:(gsl_vector_short * v)
gsl_sort_vector_short_index	/usr/local/gsl/include/gsl/gsl_sort_vector_short.h	/^int gsl_sort_vector_short_index (gsl_permutation * p, const gsl_vector_short * v);$/;"	p	signature:(gsl_permutation * p, const gsl_vector_short * v)
gsl_sort_vector_short_largest	/usr/local/gsl/include/gsl/gsl_sort_vector_short.h	/^int gsl_sort_vector_short_largest (short * dest, const size_t k, const gsl_vector_short * v);$/;"	p	signature:(short * dest, const size_t k, const gsl_vector_short * v)
gsl_sort_vector_short_largest_index	/usr/local/gsl/include/gsl/gsl_sort_vector_short.h	/^int gsl_sort_vector_short_largest_index (size_t * p, const size_t k, const gsl_vector_short * v);$/;"	p	signature:(size_t * p, const size_t k, const gsl_vector_short * v)
gsl_sort_vector_short_smallest	/usr/local/gsl/include/gsl/gsl_sort_vector_short.h	/^int gsl_sort_vector_short_smallest (short * dest, const size_t k, const gsl_vector_short * v);$/;"	p	signature:(short * dest, const size_t k, const gsl_vector_short * v)
gsl_sort_vector_short_smallest_index	/usr/local/gsl/include/gsl/gsl_sort_vector_short.h	/^int gsl_sort_vector_short_smallest_index (size_t * p, const size_t k, const gsl_vector_short * v);$/;"	p	signature:(size_t * p, const size_t k, const gsl_vector_short * v)
gsl_sort_vector_smallest	/usr/local/gsl/include/gsl/gsl_sort_vector_double.h	/^int gsl_sort_vector_smallest (double * dest, const size_t k, const gsl_vector * v);$/;"	p	signature:(double * dest, const size_t k, const gsl_vector * v)
gsl_sort_vector_smallest_index	/usr/local/gsl/include/gsl/gsl_sort_vector_double.h	/^int gsl_sort_vector_smallest_index (size_t * p, const size_t k, const gsl_vector * v);$/;"	p	signature:(size_t * p, const size_t k, const gsl_vector * v)
gsl_sort_vector_uchar	/usr/local/gsl/include/gsl/gsl_sort_vector_uchar.h	/^void gsl_sort_vector_uchar (gsl_vector_uchar * v);$/;"	p	signature:(gsl_vector_uchar * v)
gsl_sort_vector_uchar_index	/usr/local/gsl/include/gsl/gsl_sort_vector_uchar.h	/^int gsl_sort_vector_uchar_index (gsl_permutation * p, const gsl_vector_uchar * v);$/;"	p	signature:(gsl_permutation * p, const gsl_vector_uchar * v)
gsl_sort_vector_uchar_largest	/usr/local/gsl/include/gsl/gsl_sort_vector_uchar.h	/^int gsl_sort_vector_uchar_largest (unsigned char * dest, const size_t k, const gsl_vector_uchar * v);$/;"	p	signature:(unsigned char * dest, const size_t k, const gsl_vector_uchar * v)
gsl_sort_vector_uchar_largest_index	/usr/local/gsl/include/gsl/gsl_sort_vector_uchar.h	/^int gsl_sort_vector_uchar_largest_index (size_t * p, const size_t k, const gsl_vector_uchar * v);$/;"	p	signature:(size_t * p, const size_t k, const gsl_vector_uchar * v)
gsl_sort_vector_uchar_smallest	/usr/local/gsl/include/gsl/gsl_sort_vector_uchar.h	/^int gsl_sort_vector_uchar_smallest (unsigned char * dest, const size_t k, const gsl_vector_uchar * v);$/;"	p	signature:(unsigned char * dest, const size_t k, const gsl_vector_uchar * v)
gsl_sort_vector_uchar_smallest_index	/usr/local/gsl/include/gsl/gsl_sort_vector_uchar.h	/^int gsl_sort_vector_uchar_smallest_index (size_t * p, const size_t k, const gsl_vector_uchar * v);$/;"	p	signature:(size_t * p, const size_t k, const gsl_vector_uchar * v)
gsl_sort_vector_uint	/usr/local/gsl/include/gsl/gsl_sort_vector_uint.h	/^void gsl_sort_vector_uint (gsl_vector_uint * v);$/;"	p	signature:(gsl_vector_uint * v)
gsl_sort_vector_uint_index	/usr/local/gsl/include/gsl/gsl_sort_vector_uint.h	/^int gsl_sort_vector_uint_index (gsl_permutation * p, const gsl_vector_uint * v);$/;"	p	signature:(gsl_permutation * p, const gsl_vector_uint * v)
gsl_sort_vector_uint_largest	/usr/local/gsl/include/gsl/gsl_sort_vector_uint.h	/^int gsl_sort_vector_uint_largest (unsigned int * dest, const size_t k, const gsl_vector_uint * v);$/;"	p	signature:(unsigned int * dest, const size_t k, const gsl_vector_uint * v)
gsl_sort_vector_uint_largest_index	/usr/local/gsl/include/gsl/gsl_sort_vector_uint.h	/^int gsl_sort_vector_uint_largest_index (size_t * p, const size_t k, const gsl_vector_uint * v);$/;"	p	signature:(size_t * p, const size_t k, const gsl_vector_uint * v)
gsl_sort_vector_uint_smallest	/usr/local/gsl/include/gsl/gsl_sort_vector_uint.h	/^int gsl_sort_vector_uint_smallest (unsigned int * dest, const size_t k, const gsl_vector_uint * v);$/;"	p	signature:(unsigned int * dest, const size_t k, const gsl_vector_uint * v)
gsl_sort_vector_uint_smallest_index	/usr/local/gsl/include/gsl/gsl_sort_vector_uint.h	/^int gsl_sort_vector_uint_smallest_index (size_t * p, const size_t k, const gsl_vector_uint * v);$/;"	p	signature:(size_t * p, const size_t k, const gsl_vector_uint * v)
gsl_sort_vector_ulong	/usr/local/gsl/include/gsl/gsl_sort_vector_ulong.h	/^void gsl_sort_vector_ulong (gsl_vector_ulong * v);$/;"	p	signature:(gsl_vector_ulong * v)
gsl_sort_vector_ulong_index	/usr/local/gsl/include/gsl/gsl_sort_vector_ulong.h	/^int gsl_sort_vector_ulong_index (gsl_permutation * p, const gsl_vector_ulong * v);$/;"	p	signature:(gsl_permutation * p, const gsl_vector_ulong * v)
gsl_sort_vector_ulong_largest	/usr/local/gsl/include/gsl/gsl_sort_vector_ulong.h	/^int gsl_sort_vector_ulong_largest (unsigned long * dest, const size_t k, const gsl_vector_ulong * v);$/;"	p	signature:(unsigned long * dest, const size_t k, const gsl_vector_ulong * v)
gsl_sort_vector_ulong_largest_index	/usr/local/gsl/include/gsl/gsl_sort_vector_ulong.h	/^int gsl_sort_vector_ulong_largest_index (size_t * p, const size_t k, const gsl_vector_ulong * v);$/;"	p	signature:(size_t * p, const size_t k, const gsl_vector_ulong * v)
gsl_sort_vector_ulong_smallest	/usr/local/gsl/include/gsl/gsl_sort_vector_ulong.h	/^int gsl_sort_vector_ulong_smallest (unsigned long * dest, const size_t k, const gsl_vector_ulong * v);$/;"	p	signature:(unsigned long * dest, const size_t k, const gsl_vector_ulong * v)
gsl_sort_vector_ulong_smallest_index	/usr/local/gsl/include/gsl/gsl_sort_vector_ulong.h	/^int gsl_sort_vector_ulong_smallest_index (size_t * p, const size_t k, const gsl_vector_ulong * v);$/;"	p	signature:(size_t * p, const size_t k, const gsl_vector_ulong * v)
gsl_sort_vector_ushort	/usr/local/gsl/include/gsl/gsl_sort_vector_ushort.h	/^void gsl_sort_vector_ushort (gsl_vector_ushort * v);$/;"	p	signature:(gsl_vector_ushort * v)
gsl_sort_vector_ushort_index	/usr/local/gsl/include/gsl/gsl_sort_vector_ushort.h	/^int gsl_sort_vector_ushort_index (gsl_permutation * p, const gsl_vector_ushort * v);$/;"	p	signature:(gsl_permutation * p, const gsl_vector_ushort * v)
gsl_sort_vector_ushort_largest	/usr/local/gsl/include/gsl/gsl_sort_vector_ushort.h	/^int gsl_sort_vector_ushort_largest (unsigned short * dest, const size_t k, const gsl_vector_ushort * v);$/;"	p	signature:(unsigned short * dest, const size_t k, const gsl_vector_ushort * v)
gsl_sort_vector_ushort_largest_index	/usr/local/gsl/include/gsl/gsl_sort_vector_ushort.h	/^int gsl_sort_vector_ushort_largest_index (size_t * p, const size_t k, const gsl_vector_ushort * v);$/;"	p	signature:(size_t * p, const size_t k, const gsl_vector_ushort * v)
gsl_sort_vector_ushort_smallest	/usr/local/gsl/include/gsl/gsl_sort_vector_ushort.h	/^int gsl_sort_vector_ushort_smallest (unsigned short * dest, const size_t k, const gsl_vector_ushort * v);$/;"	p	signature:(unsigned short * dest, const size_t k, const gsl_vector_ushort * v)
gsl_sort_vector_ushort_smallest_index	/usr/local/gsl/include/gsl/gsl_sort_vector_ushort.h	/^int gsl_sort_vector_ushort_smallest_index (size_t * p, const size_t k, const gsl_vector_ushort * v);$/;"	p	signature:(size_t * p, const size_t k, const gsl_vector_ushort * v)
gsl_spline	/usr/local/gsl/include/gsl/gsl_spline.h	/^} gsl_spline;$/;"	t	typeref:struct:__anon41
gsl_spline_alloc	/usr/local/gsl/include/gsl/gsl_spline.h	/^gsl_spline_alloc(const gsl_interp_type * T, size_t size);$/;"	p	signature:(const gsl_interp_type * T, size_t size)
gsl_spline_eval	/usr/local/gsl/include/gsl/gsl_spline.h	/^gsl_spline_eval(const gsl_spline * spline, double x, gsl_interp_accel * a);$/;"	p	signature:(const gsl_spline * spline, double x, gsl_interp_accel * a)
gsl_spline_eval_deriv	/usr/local/gsl/include/gsl/gsl_spline.h	/^gsl_spline_eval_deriv(const gsl_spline * spline,$/;"	p	signature:(const gsl_spline * spline, double x, gsl_interp_accel * a)
gsl_spline_eval_deriv2	/usr/local/gsl/include/gsl/gsl_spline.h	/^gsl_spline_eval_deriv2(const gsl_spline * spline,$/;"	p	signature:(const gsl_spline * spline, double x, gsl_interp_accel * a)
gsl_spline_eval_deriv2_e	/usr/local/gsl/include/gsl/gsl_spline.h	/^gsl_spline_eval_deriv2_e(const gsl_spline * spline,$/;"	p	signature:(const gsl_spline * spline, double x, gsl_interp_accel * a, double * y)
gsl_spline_eval_deriv_e	/usr/local/gsl/include/gsl/gsl_spline.h	/^gsl_spline_eval_deriv_e(const gsl_spline * spline,$/;"	p	signature:(const gsl_spline * spline, double x, gsl_interp_accel * a, double * y)
gsl_spline_eval_e	/usr/local/gsl/include/gsl/gsl_spline.h	/^gsl_spline_eval_e(const gsl_spline * spline, double x,$/;"	p	signature:(const gsl_spline * spline, double x, gsl_interp_accel * a, double * y)
gsl_spline_eval_integ	/usr/local/gsl/include/gsl/gsl_spline.h	/^gsl_spline_eval_integ(const gsl_spline * spline,$/;"	p	signature:(const gsl_spline * spline, double a, double b, gsl_interp_accel * acc)
gsl_spline_eval_integ_e	/usr/local/gsl/include/gsl/gsl_spline.h	/^gsl_spline_eval_integ_e(const gsl_spline * spline,$/;"	p	signature:(const gsl_spline * spline, double a, double b, gsl_interp_accel * acc, double * y)
gsl_spline_free	/usr/local/gsl/include/gsl/gsl_spline.h	/^gsl_spline_free(gsl_spline * spline);$/;"	p	signature:(gsl_spline * spline)
gsl_spline_init	/usr/local/gsl/include/gsl/gsl_spline.h	/^gsl_spline_init(gsl_spline * spline, const double xa[], const double ya[], size_t size);$/;"	p	signature:(gsl_spline * spline, const double xa[], const double ya[], size_t size)
gsl_spline_min_size	/usr/local/gsl/include/gsl/gsl_spline.h	/^unsigned int gsl_spline_min_size(const gsl_spline * spline);$/;"	p	signature:(const gsl_spline * spline)
gsl_spline_name	/usr/local/gsl/include/gsl/gsl_spline.h	/^const char * gsl_spline_name(const gsl_spline * spline);$/;"	p	signature:(const gsl_spline * spline)
gsl_stats_absdev	/usr/local/gsl/include/gsl/gsl_statistics_double.h	/^double gsl_stats_absdev (const double data[], const size_t stride, const size_t n);$/;"	p	signature:(const double data[], const size_t stride, const size_t n)
gsl_stats_absdev_m	/usr/local/gsl/include/gsl/gsl_statistics_double.h	/^double gsl_stats_absdev_m (const double data[], const size_t stride, const size_t n, const double mean);$/;"	p	signature:(const double data[], const size_t stride, const size_t n, const double mean)
gsl_stats_char_absdev	/usr/local/gsl/include/gsl/gsl_statistics_char.h	/^double gsl_stats_char_absdev (const char data[], const size_t stride, const size_t n);$/;"	p	signature:(const char data[], const size_t stride, const size_t n)
gsl_stats_char_absdev_m	/usr/local/gsl/include/gsl/gsl_statistics_char.h	/^double gsl_stats_char_absdev_m (const char data[], const size_t stride, const size_t n, const double mean);$/;"	p	signature:(const char data[], const size_t stride, const size_t n, const double mean)
gsl_stats_char_correlation	/usr/local/gsl/include/gsl/gsl_statistics_char.h	/^double gsl_stats_char_correlation (const char data1[], const size_t stride1,const char data2[], const size_t stride2, const size_t n);$/;"	p	signature:(const char data1[], const size_t stride1,const char data2[], const size_t stride2, const size_t n)
gsl_stats_char_covariance	/usr/local/gsl/include/gsl/gsl_statistics_char.h	/^double gsl_stats_char_covariance (const char data1[], const size_t stride1,const char data2[], const size_t stride2, const size_t n);$/;"	p	signature:(const char data1[], const size_t stride1,const char data2[], const size_t stride2, const size_t n)
gsl_stats_char_covariance_m	/usr/local/gsl/include/gsl/gsl_statistics_char.h	/^double gsl_stats_char_covariance_m (const char data1[], const size_t stride1,const char data2[], const size_t stride2, const size_t n, const double mean1, const double mean2);$/;"	p	signature:(const char data1[], const size_t stride1,const char data2[], const size_t stride2, const size_t n, const double mean1, const double mean2)
gsl_stats_char_kurtosis	/usr/local/gsl/include/gsl/gsl_statistics_char.h	/^double gsl_stats_char_kurtosis (const char data[], const size_t stride, const size_t n);$/;"	p	signature:(const char data[], const size_t stride, const size_t n)
gsl_stats_char_kurtosis_m_sd	/usr/local/gsl/include/gsl/gsl_statistics_char.h	/^double gsl_stats_char_kurtosis_m_sd (const char data[], const size_t stride, const size_t n, const double mean, const double sd);$/;"	p	signature:(const char data[], const size_t stride, const size_t n, const double mean, const double sd)
gsl_stats_char_lag1_autocorrelation	/usr/local/gsl/include/gsl/gsl_statistics_char.h	/^double gsl_stats_char_lag1_autocorrelation (const char data[], const size_t stride, const size_t n);$/;"	p	signature:(const char data[], const size_t stride, const size_t n)
gsl_stats_char_lag1_autocorrelation_m	/usr/local/gsl/include/gsl/gsl_statistics_char.h	/^double gsl_stats_char_lag1_autocorrelation_m (const char data[], const size_t stride, const size_t n, const double mean);$/;"	p	signature:(const char data[], const size_t stride, const size_t n, const double mean)
gsl_stats_char_max	/usr/local/gsl/include/gsl/gsl_statistics_char.h	/^char gsl_stats_char_max (const char data[], const size_t stride, const size_t n);$/;"	p	signature:(const char data[], const size_t stride, const size_t n)
gsl_stats_char_max_index	/usr/local/gsl/include/gsl/gsl_statistics_char.h	/^size_t gsl_stats_char_max_index (const char data[], const size_t stride, const size_t n);$/;"	p	signature:(const char data[], const size_t stride, const size_t n)
gsl_stats_char_mean	/usr/local/gsl/include/gsl/gsl_statistics_char.h	/^double gsl_stats_char_mean (const char data[], const size_t stride, const size_t n);$/;"	p	signature:(const char data[], const size_t stride, const size_t n)
gsl_stats_char_median_from_sorted_data	/usr/local/gsl/include/gsl/gsl_statistics_char.h	/^double gsl_stats_char_median_from_sorted_data (const char sorted_data[], const size_t stride, const size_t n) ;$/;"	p	signature:(const char sorted_data[], const size_t stride, const size_t n)
gsl_stats_char_min	/usr/local/gsl/include/gsl/gsl_statistics_char.h	/^char gsl_stats_char_min (const char data[], const size_t stride, const size_t n);$/;"	p	signature:(const char data[], const size_t stride, const size_t n)
gsl_stats_char_min_index	/usr/local/gsl/include/gsl/gsl_statistics_char.h	/^size_t gsl_stats_char_min_index (const char data[], const size_t stride, const size_t n);$/;"	p	signature:(const char data[], const size_t stride, const size_t n)
gsl_stats_char_minmax	/usr/local/gsl/include/gsl/gsl_statistics_char.h	/^void gsl_stats_char_minmax (char * min, char * max, const char data[], const size_t stride, const size_t n);$/;"	p	signature:(char * min, char * max, const char data[], const size_t stride, const size_t n)
gsl_stats_char_minmax_index	/usr/local/gsl/include/gsl/gsl_statistics_char.h	/^void gsl_stats_char_minmax_index (size_t * min_index, size_t * max_index, const char data[], const size_t stride, const size_t n);$/;"	p	signature:(size_t * min_index, size_t * max_index, const char data[], const size_t stride, const size_t n)
gsl_stats_char_pvariance	/usr/local/gsl/include/gsl/gsl_statistics_char.h	/^double gsl_stats_char_pvariance (const char data1[], const size_t stride1, const size_t n1, const char data2[], const size_t stride2, const size_t n2);$/;"	p	signature:(const char data1[], const size_t stride1, const size_t n1, const char data2[], const size_t stride2, const size_t n2)
gsl_stats_char_quantile_from_sorted_data	/usr/local/gsl/include/gsl/gsl_statistics_char.h	/^double gsl_stats_char_quantile_from_sorted_data (const char sorted_data[], const size_t stride, const size_t n, const double f) ;$/;"	p	signature:(const char sorted_data[], const size_t stride, const size_t n, const double f)
gsl_stats_char_sd	/usr/local/gsl/include/gsl/gsl_statistics_char.h	/^double gsl_stats_char_sd (const char data[], const size_t stride, const size_t n);$/;"	p	signature:(const char data[], const size_t stride, const size_t n)
gsl_stats_char_sd_m	/usr/local/gsl/include/gsl/gsl_statistics_char.h	/^double gsl_stats_char_sd_m (const char data[], const size_t stride, const size_t n, const double mean);$/;"	p	signature:(const char data[], const size_t stride, const size_t n, const double mean)
gsl_stats_char_sd_with_fixed_mean	/usr/local/gsl/include/gsl/gsl_statistics_char.h	/^double gsl_stats_char_sd_with_fixed_mean (const char data[], const size_t stride, const size_t n, const double mean);$/;"	p	signature:(const char data[], const size_t stride, const size_t n, const double mean)
gsl_stats_char_skew	/usr/local/gsl/include/gsl/gsl_statistics_char.h	/^double gsl_stats_char_skew (const char data[], const size_t stride, const size_t n);$/;"	p	signature:(const char data[], const size_t stride, const size_t n)
gsl_stats_char_skew_m_sd	/usr/local/gsl/include/gsl/gsl_statistics_char.h	/^double gsl_stats_char_skew_m_sd (const char data[], const size_t stride, const size_t n, const double mean, const double sd);$/;"	p	signature:(const char data[], const size_t stride, const size_t n, const double mean, const double sd)
gsl_stats_char_tss	/usr/local/gsl/include/gsl/gsl_statistics_char.h	/^double gsl_stats_char_tss (const char data[], const size_t stride, const size_t n);$/;"	p	signature:(const char data[], const size_t stride, const size_t n)
gsl_stats_char_tss_m	/usr/local/gsl/include/gsl/gsl_statistics_char.h	/^double gsl_stats_char_tss_m (const char data[], const size_t stride, const size_t n, const double mean);$/;"	p	signature:(const char data[], const size_t stride, const size_t n, const double mean)
gsl_stats_char_ttest	/usr/local/gsl/include/gsl/gsl_statistics_char.h	/^double gsl_stats_char_ttest (const char data1[], const size_t stride1, const size_t n1, const char data2[], const size_t stride2, const size_t n2);$/;"	p	signature:(const char data1[], const size_t stride1, const size_t n1, const char data2[], const size_t stride2, const size_t n2)
gsl_stats_char_variance	/usr/local/gsl/include/gsl/gsl_statistics_char.h	/^double gsl_stats_char_variance (const char data[], const size_t stride, const size_t n);$/;"	p	signature:(const char data[], const size_t stride, const size_t n)
gsl_stats_char_variance_m	/usr/local/gsl/include/gsl/gsl_statistics_char.h	/^double gsl_stats_char_variance_m (const char data[], const size_t stride, const size_t n, const double mean);$/;"	p	signature:(const char data[], const size_t stride, const size_t n, const double mean)
gsl_stats_char_variance_with_fixed_mean	/usr/local/gsl/include/gsl/gsl_statistics_char.h	/^double gsl_stats_char_variance_with_fixed_mean (const char data[], const size_t stride, const size_t n, const double mean);$/;"	p	signature:(const char data[], const size_t stride, const size_t n, const double mean)
gsl_stats_correlation	/usr/local/gsl/include/gsl/gsl_statistics_double.h	/^double gsl_stats_correlation (const double data1[], const size_t stride1,const double data2[], const size_t stride2, const size_t n);$/;"	p	signature:(const double data1[], const size_t stride1,const double data2[], const size_t stride2, const size_t n)
gsl_stats_covariance	/usr/local/gsl/include/gsl/gsl_statistics_double.h	/^double gsl_stats_covariance (const double data1[], const size_t stride1,const double data2[], const size_t stride2, const size_t n);$/;"	p	signature:(const double data1[], const size_t stride1,const double data2[], const size_t stride2, const size_t n)
gsl_stats_covariance_m	/usr/local/gsl/include/gsl/gsl_statistics_double.h	/^double gsl_stats_covariance_m (const double data1[], const size_t stride1,const double data2[], const size_t stride2, const size_t n, const double mean1, const double mean2);$/;"	p	signature:(const double data1[], const size_t stride1,const double data2[], const size_t stride2, const size_t n, const double mean1, const double mean2)
gsl_stats_float_absdev	/usr/local/gsl/include/gsl/gsl_statistics_float.h	/^double gsl_stats_float_absdev (const float data[], const size_t stride, const size_t n);$/;"	p	signature:(const float data[], const size_t stride, const size_t n)
gsl_stats_float_absdev_m	/usr/local/gsl/include/gsl/gsl_statistics_float.h	/^double gsl_stats_float_absdev_m (const float data[], const size_t stride, const size_t n, const double mean);$/;"	p	signature:(const float data[], const size_t stride, const size_t n, const double mean)
gsl_stats_float_correlation	/usr/local/gsl/include/gsl/gsl_statistics_float.h	/^double gsl_stats_float_correlation (const float data1[], const size_t stride1,const float data2[], const size_t stride2, const size_t n);$/;"	p	signature:(const float data1[], const size_t stride1,const float data2[], const size_t stride2, const size_t n)
gsl_stats_float_covariance	/usr/local/gsl/include/gsl/gsl_statistics_float.h	/^double gsl_stats_float_covariance (const float data1[], const size_t stride1,const float data2[], const size_t stride2, const size_t n);$/;"	p	signature:(const float data1[], const size_t stride1,const float data2[], const size_t stride2, const size_t n)
gsl_stats_float_covariance_m	/usr/local/gsl/include/gsl/gsl_statistics_float.h	/^double gsl_stats_float_covariance_m (const float data1[], const size_t stride1,const float data2[], const size_t stride2, const size_t n, const double mean1, const double mean2);$/;"	p	signature:(const float data1[], const size_t stride1,const float data2[], const size_t stride2, const size_t n, const double mean1, const double mean2)
gsl_stats_float_kurtosis	/usr/local/gsl/include/gsl/gsl_statistics_float.h	/^double gsl_stats_float_kurtosis (const float data[], const size_t stride, const size_t n);$/;"	p	signature:(const float data[], const size_t stride, const size_t n)
gsl_stats_float_kurtosis_m_sd	/usr/local/gsl/include/gsl/gsl_statistics_float.h	/^double gsl_stats_float_kurtosis_m_sd (const float data[], const size_t stride, const size_t n, const double mean, const double sd);$/;"	p	signature:(const float data[], const size_t stride, const size_t n, const double mean, const double sd)
gsl_stats_float_lag1_autocorrelation	/usr/local/gsl/include/gsl/gsl_statistics_float.h	/^double gsl_stats_float_lag1_autocorrelation (const float data[], const size_t stride, const size_t n);$/;"	p	signature:(const float data[], const size_t stride, const size_t n)
gsl_stats_float_lag1_autocorrelation_m	/usr/local/gsl/include/gsl/gsl_statistics_float.h	/^double gsl_stats_float_lag1_autocorrelation_m (const float data[], const size_t stride, const size_t n, const double mean);$/;"	p	signature:(const float data[], const size_t stride, const size_t n, const double mean)
gsl_stats_float_max	/usr/local/gsl/include/gsl/gsl_statistics_float.h	/^float gsl_stats_float_max (const float data[], const size_t stride, const size_t n);$/;"	p	signature:(const float data[], const size_t stride, const size_t n)
gsl_stats_float_max_index	/usr/local/gsl/include/gsl/gsl_statistics_float.h	/^size_t gsl_stats_float_max_index (const float data[], const size_t stride, const size_t n);$/;"	p	signature:(const float data[], const size_t stride, const size_t n)
gsl_stats_float_mean	/usr/local/gsl/include/gsl/gsl_statistics_float.h	/^double gsl_stats_float_mean (const float data[], const size_t stride, const size_t n);$/;"	p	signature:(const float data[], const size_t stride, const size_t n)
gsl_stats_float_median_from_sorted_data	/usr/local/gsl/include/gsl/gsl_statistics_float.h	/^double gsl_stats_float_median_from_sorted_data (const float sorted_data[], const size_t stride, const size_t n) ;$/;"	p	signature:(const float sorted_data[], const size_t stride, const size_t n)
gsl_stats_float_min	/usr/local/gsl/include/gsl/gsl_statistics_float.h	/^float gsl_stats_float_min (const float data[], const size_t stride, const size_t n);$/;"	p	signature:(const float data[], const size_t stride, const size_t n)
gsl_stats_float_min_index	/usr/local/gsl/include/gsl/gsl_statistics_float.h	/^size_t gsl_stats_float_min_index (const float data[], const size_t stride, const size_t n);$/;"	p	signature:(const float data[], const size_t stride, const size_t n)
gsl_stats_float_minmax	/usr/local/gsl/include/gsl/gsl_statistics_float.h	/^void gsl_stats_float_minmax (float * min, float * max, const float data[], const size_t stride, const size_t n);$/;"	p	signature:(float * min, float * max, const float data[], const size_t stride, const size_t n)
gsl_stats_float_minmax_index	/usr/local/gsl/include/gsl/gsl_statistics_float.h	/^void gsl_stats_float_minmax_index (size_t * min_index, size_t * max_index, const float data[], const size_t stride, const size_t n);$/;"	p	signature:(size_t * min_index, size_t * max_index, const float data[], const size_t stride, const size_t n)
gsl_stats_float_pvariance	/usr/local/gsl/include/gsl/gsl_statistics_float.h	/^double gsl_stats_float_pvariance (const float data1[], const size_t stride1, const size_t n1, const float data2[], const size_t stride2, const size_t n2);$/;"	p	signature:(const float data1[], const size_t stride1, const size_t n1, const float data2[], const size_t stride2, const size_t n2)
gsl_stats_float_quantile_from_sorted_data	/usr/local/gsl/include/gsl/gsl_statistics_float.h	/^double gsl_stats_float_quantile_from_sorted_data (const float sorted_data[], const size_t stride, const size_t n, const double f) ;$/;"	p	signature:(const float sorted_data[], const size_t stride, const size_t n, const double f)
gsl_stats_float_sd	/usr/local/gsl/include/gsl/gsl_statistics_float.h	/^double gsl_stats_float_sd (const float data[], const size_t stride, const size_t n);$/;"	p	signature:(const float data[], const size_t stride, const size_t n)
gsl_stats_float_sd_m	/usr/local/gsl/include/gsl/gsl_statistics_float.h	/^double gsl_stats_float_sd_m (const float data[], const size_t stride, const size_t n, const double mean);$/;"	p	signature:(const float data[], const size_t stride, const size_t n, const double mean)
gsl_stats_float_sd_with_fixed_mean	/usr/local/gsl/include/gsl/gsl_statistics_float.h	/^double gsl_stats_float_sd_with_fixed_mean (const float data[], const size_t stride, const size_t n, const double mean);$/;"	p	signature:(const float data[], const size_t stride, const size_t n, const double mean)
gsl_stats_float_skew	/usr/local/gsl/include/gsl/gsl_statistics_float.h	/^double gsl_stats_float_skew (const float data[], const size_t stride, const size_t n);$/;"	p	signature:(const float data[], const size_t stride, const size_t n)
gsl_stats_float_skew_m_sd	/usr/local/gsl/include/gsl/gsl_statistics_float.h	/^double gsl_stats_float_skew_m_sd (const float data[], const size_t stride, const size_t n, const double mean, const double sd);$/;"	p	signature:(const float data[], const size_t stride, const size_t n, const double mean, const double sd)
gsl_stats_float_tss	/usr/local/gsl/include/gsl/gsl_statistics_float.h	/^double gsl_stats_float_tss (const float data[], const size_t stride, const size_t n);$/;"	p	signature:(const float data[], const size_t stride, const size_t n)
gsl_stats_float_tss_m	/usr/local/gsl/include/gsl/gsl_statistics_float.h	/^double gsl_stats_float_tss_m (const float data[], const size_t stride, const size_t n, const double mean);$/;"	p	signature:(const float data[], const size_t stride, const size_t n, const double mean)
gsl_stats_float_ttest	/usr/local/gsl/include/gsl/gsl_statistics_float.h	/^double gsl_stats_float_ttest (const float data1[], const size_t stride1, const size_t n1, const float data2[], const size_t stride2, const size_t n2);$/;"	p	signature:(const float data1[], const size_t stride1, const size_t n1, const float data2[], const size_t stride2, const size_t n2)
gsl_stats_float_variance	/usr/local/gsl/include/gsl/gsl_statistics_float.h	/^double gsl_stats_float_variance (const float data[], const size_t stride, const size_t n);$/;"	p	signature:(const float data[], const size_t stride, const size_t n)
gsl_stats_float_variance_m	/usr/local/gsl/include/gsl/gsl_statistics_float.h	/^double gsl_stats_float_variance_m (const float data[], const size_t stride, const size_t n, const double mean);$/;"	p	signature:(const float data[], const size_t stride, const size_t n, const double mean)
gsl_stats_float_variance_with_fixed_mean	/usr/local/gsl/include/gsl/gsl_statistics_float.h	/^double gsl_stats_float_variance_with_fixed_mean (const float data[], const size_t stride, const size_t n, const double mean);$/;"	p	signature:(const float data[], const size_t stride, const size_t n, const double mean)
gsl_stats_float_wabsdev	/usr/local/gsl/include/gsl/gsl_statistics_float.h	/^double gsl_stats_float_wabsdev (const float w[], const size_t wstride, const float data[], const size_t stride, const size_t n);$/;"	p	signature:(const float w[], const size_t wstride, const float data[], const size_t stride, const size_t n)
gsl_stats_float_wabsdev_m	/usr/local/gsl/include/gsl/gsl_statistics_float.h	/^double gsl_stats_float_wabsdev_m (const float w[], const size_t wstride, const float data[], const size_t stride, const size_t n, const double wmean);$/;"	p	signature:(const float w[], const size_t wstride, const float data[], const size_t stride, const size_t n, const double wmean)
gsl_stats_float_wkurtosis	/usr/local/gsl/include/gsl/gsl_statistics_float.h	/^double gsl_stats_float_wkurtosis (const float w[], const size_t wstride, const float data[], const size_t stride, const size_t n);$/;"	p	signature:(const float w[], const size_t wstride, const float data[], const size_t stride, const size_t n)
gsl_stats_float_wkurtosis_m_sd	/usr/local/gsl/include/gsl/gsl_statistics_float.h	/^double gsl_stats_float_wkurtosis_m_sd (const float w[], const size_t wstride, const float data[], const size_t stride, const size_t n, const double wmean, const double wsd);$/;"	p	signature:(const float w[], const size_t wstride, const float data[], const size_t stride, const size_t n, const double wmean, const double wsd)
gsl_stats_float_wmean	/usr/local/gsl/include/gsl/gsl_statistics_float.h	/^double gsl_stats_float_wmean (const float w[], const size_t wstride, const float data[], const size_t stride, const size_t n);$/;"	p	signature:(const float w[], const size_t wstride, const float data[], const size_t stride, const size_t n)
gsl_stats_float_wsd	/usr/local/gsl/include/gsl/gsl_statistics_float.h	/^double gsl_stats_float_wsd (const float w[], const size_t wstride, const float data[], const size_t stride, const size_t n);$/;"	p	signature:(const float w[], const size_t wstride, const float data[], const size_t stride, const size_t n)
gsl_stats_float_wsd_m	/usr/local/gsl/include/gsl/gsl_statistics_float.h	/^double gsl_stats_float_wsd_m (const float w[], const size_t wstride, const float data[], const size_t stride, const size_t n, const double wmean);$/;"	p	signature:(const float w[], const size_t wstride, const float data[], const size_t stride, const size_t n, const double wmean)
gsl_stats_float_wsd_with_fixed_mean	/usr/local/gsl/include/gsl/gsl_statistics_float.h	/^double gsl_stats_float_wsd_with_fixed_mean (const float w[], const size_t wstride, const float data[], const size_t stride, const size_t n, const double mean);$/;"	p	signature:(const float w[], const size_t wstride, const float data[], const size_t stride, const size_t n, const double mean)
gsl_stats_float_wskew	/usr/local/gsl/include/gsl/gsl_statistics_float.h	/^double gsl_stats_float_wskew (const float w[], const size_t wstride, const float data[], const size_t stride, const size_t n);$/;"	p	signature:(const float w[], const size_t wstride, const float data[], const size_t stride, const size_t n)
gsl_stats_float_wskew_m_sd	/usr/local/gsl/include/gsl/gsl_statistics_float.h	/^double gsl_stats_float_wskew_m_sd (const float w[], const size_t wstride, const float data[], const size_t stride, const size_t n, const double wmean, const double wsd);$/;"	p	signature:(const float w[], const size_t wstride, const float data[], const size_t stride, const size_t n, const double wmean, const double wsd)
gsl_stats_float_wtss	/usr/local/gsl/include/gsl/gsl_statistics_float.h	/^double gsl_stats_float_wtss (const float w[], const size_t wstride, const float data[], const size_t stride, const size_t n);$/;"	p	signature:(const float w[], const size_t wstride, const float data[], const size_t stride, const size_t n)
gsl_stats_float_wtss_m	/usr/local/gsl/include/gsl/gsl_statistics_float.h	/^double gsl_stats_float_wtss_m (const float w[], const size_t wstride, const float data[], const size_t stride, const size_t n, const double wmean);$/;"	p	signature:(const float w[], const size_t wstride, const float data[], const size_t stride, const size_t n, const double wmean)
gsl_stats_float_wvariance	/usr/local/gsl/include/gsl/gsl_statistics_float.h	/^double gsl_stats_float_wvariance (const float w[], const size_t wstride, const float data[], const size_t stride, const size_t n);$/;"	p	signature:(const float w[], const size_t wstride, const float data[], const size_t stride, const size_t n)
gsl_stats_float_wvariance_m	/usr/local/gsl/include/gsl/gsl_statistics_float.h	/^double gsl_stats_float_wvariance_m (const float w[], const size_t wstride, const float data[], const size_t stride, const size_t n, const double wmean);$/;"	p	signature:(const float w[], const size_t wstride, const float data[], const size_t stride, const size_t n, const double wmean)
gsl_stats_float_wvariance_with_fixed_mean	/usr/local/gsl/include/gsl/gsl_statistics_float.h	/^double gsl_stats_float_wvariance_with_fixed_mean (const float w[], const size_t wstride, const float data[], const size_t stride, const size_t n, const double mean);$/;"	p	signature:(const float w[], const size_t wstride, const float data[], const size_t stride, const size_t n, const double mean)
gsl_stats_int_absdev	/usr/local/gsl/include/gsl/gsl_statistics_int.h	/^double gsl_stats_int_absdev (const int data[], const size_t stride, const size_t n);$/;"	p	signature:(const int data[], const size_t stride, const size_t n)
gsl_stats_int_absdev_m	/usr/local/gsl/include/gsl/gsl_statistics_int.h	/^double gsl_stats_int_absdev_m (const int data[], const size_t stride, const size_t n, const double mean);$/;"	p	signature:(const int data[], const size_t stride, const size_t n, const double mean)
gsl_stats_int_correlation	/usr/local/gsl/include/gsl/gsl_statistics_int.h	/^double gsl_stats_int_correlation (const int data1[], const size_t stride1,const int data2[], const size_t stride2, const size_t n);$/;"	p	signature:(const int data1[], const size_t stride1,const int data2[], const size_t stride2, const size_t n)
gsl_stats_int_covariance	/usr/local/gsl/include/gsl/gsl_statistics_int.h	/^double gsl_stats_int_covariance (const int data1[], const size_t stride1,const int data2[], const size_t stride2, const size_t n);$/;"	p	signature:(const int data1[], const size_t stride1,const int data2[], const size_t stride2, const size_t n)
gsl_stats_int_covariance_m	/usr/local/gsl/include/gsl/gsl_statistics_int.h	/^double gsl_stats_int_covariance_m (const int data1[], const size_t stride1,const int data2[], const size_t stride2, const size_t n, const double mean1, const double mean2);$/;"	p	signature:(const int data1[], const size_t stride1,const int data2[], const size_t stride2, const size_t n, const double mean1, const double mean2)
gsl_stats_int_kurtosis	/usr/local/gsl/include/gsl/gsl_statistics_int.h	/^double gsl_stats_int_kurtosis (const int data[], const size_t stride, const size_t n);$/;"	p	signature:(const int data[], const size_t stride, const size_t n)
gsl_stats_int_kurtosis_m_sd	/usr/local/gsl/include/gsl/gsl_statistics_int.h	/^double gsl_stats_int_kurtosis_m_sd (const int data[], const size_t stride, const size_t n, const double mean, const double sd);$/;"	p	signature:(const int data[], const size_t stride, const size_t n, const double mean, const double sd)
gsl_stats_int_lag1_autocorrelation	/usr/local/gsl/include/gsl/gsl_statistics_int.h	/^double gsl_stats_int_lag1_autocorrelation (const int data[], const size_t stride, const size_t n);$/;"	p	signature:(const int data[], const size_t stride, const size_t n)
gsl_stats_int_lag1_autocorrelation_m	/usr/local/gsl/include/gsl/gsl_statistics_int.h	/^double gsl_stats_int_lag1_autocorrelation_m (const int data[], const size_t stride, const size_t n, const double mean);$/;"	p	signature:(const int data[], const size_t stride, const size_t n, const double mean)
gsl_stats_int_max	/usr/local/gsl/include/gsl/gsl_statistics_int.h	/^int gsl_stats_int_max (const int data[], const size_t stride, const size_t n);$/;"	p	signature:(const int data[], const size_t stride, const size_t n)
gsl_stats_int_max_index	/usr/local/gsl/include/gsl/gsl_statistics_int.h	/^size_t gsl_stats_int_max_index (const int data[], const size_t stride, const size_t n);$/;"	p	signature:(const int data[], const size_t stride, const size_t n)
gsl_stats_int_mean	/usr/local/gsl/include/gsl/gsl_statistics_int.h	/^double gsl_stats_int_mean (const int data[], const size_t stride, const size_t n);$/;"	p	signature:(const int data[], const size_t stride, const size_t n)
gsl_stats_int_median_from_sorted_data	/usr/local/gsl/include/gsl/gsl_statistics_int.h	/^double gsl_stats_int_median_from_sorted_data (const int sorted_data[], const size_t stride, const size_t n) ;$/;"	p	signature:(const int sorted_data[], const size_t stride, const size_t n)
gsl_stats_int_min	/usr/local/gsl/include/gsl/gsl_statistics_int.h	/^int gsl_stats_int_min (const int data[], const size_t stride, const size_t n);$/;"	p	signature:(const int data[], const size_t stride, const size_t n)
gsl_stats_int_min_index	/usr/local/gsl/include/gsl/gsl_statistics_int.h	/^size_t gsl_stats_int_min_index (const int data[], const size_t stride, const size_t n);$/;"	p	signature:(const int data[], const size_t stride, const size_t n)
gsl_stats_int_minmax	/usr/local/gsl/include/gsl/gsl_statistics_int.h	/^void gsl_stats_int_minmax (int * min, int * max, const int data[], const size_t stride, const size_t n);$/;"	p	signature:(int * min, int * max, const int data[], const size_t stride, const size_t n)
gsl_stats_int_minmax_index	/usr/local/gsl/include/gsl/gsl_statistics_int.h	/^void gsl_stats_int_minmax_index (size_t * min_index, size_t * max_index, const int data[], const size_t stride, const size_t n);$/;"	p	signature:(size_t * min_index, size_t * max_index, const int data[], const size_t stride, const size_t n)
gsl_stats_int_pvariance	/usr/local/gsl/include/gsl/gsl_statistics_int.h	/^double gsl_stats_int_pvariance (const int data1[], const size_t stride1, const size_t n1, const int data2[], const size_t stride2, const size_t n2);$/;"	p	signature:(const int data1[], const size_t stride1, const size_t n1, const int data2[], const size_t stride2, const size_t n2)
gsl_stats_int_quantile_from_sorted_data	/usr/local/gsl/include/gsl/gsl_statistics_int.h	/^double gsl_stats_int_quantile_from_sorted_data (const int sorted_data[], const size_t stride, const size_t n, const double f) ;$/;"	p	signature:(const int sorted_data[], const size_t stride, const size_t n, const double f)
gsl_stats_int_sd	/usr/local/gsl/include/gsl/gsl_statistics_int.h	/^double gsl_stats_int_sd (const int data[], const size_t stride, const size_t n);$/;"	p	signature:(const int data[], const size_t stride, const size_t n)
gsl_stats_int_sd_m	/usr/local/gsl/include/gsl/gsl_statistics_int.h	/^double gsl_stats_int_sd_m (const int data[], const size_t stride, const size_t n, const double mean);$/;"	p	signature:(const int data[], const size_t stride, const size_t n, const double mean)
gsl_stats_int_sd_with_fixed_mean	/usr/local/gsl/include/gsl/gsl_statistics_int.h	/^double gsl_stats_int_sd_with_fixed_mean (const int data[], const size_t stride, const size_t n, const double mean);$/;"	p	signature:(const int data[], const size_t stride, const size_t n, const double mean)
gsl_stats_int_skew	/usr/local/gsl/include/gsl/gsl_statistics_int.h	/^double gsl_stats_int_skew (const int data[], const size_t stride, const size_t n);$/;"	p	signature:(const int data[], const size_t stride, const size_t n)
gsl_stats_int_skew_m_sd	/usr/local/gsl/include/gsl/gsl_statistics_int.h	/^double gsl_stats_int_skew_m_sd (const int data[], const size_t stride, const size_t n, const double mean, const double sd);$/;"	p	signature:(const int data[], const size_t stride, const size_t n, const double mean, const double sd)
gsl_stats_int_tss	/usr/local/gsl/include/gsl/gsl_statistics_int.h	/^double gsl_stats_int_tss (const int data[], const size_t stride, const size_t n);$/;"	p	signature:(const int data[], const size_t stride, const size_t n)
gsl_stats_int_tss_m	/usr/local/gsl/include/gsl/gsl_statistics_int.h	/^double gsl_stats_int_tss_m (const int data[], const size_t stride, const size_t n, const double mean);$/;"	p	signature:(const int data[], const size_t stride, const size_t n, const double mean)
gsl_stats_int_ttest	/usr/local/gsl/include/gsl/gsl_statistics_int.h	/^double gsl_stats_int_ttest (const int data1[], const size_t stride1, const size_t n1, const int data2[], const size_t stride2, const size_t n2);$/;"	p	signature:(const int data1[], const size_t stride1, const size_t n1, const int data2[], const size_t stride2, const size_t n2)
gsl_stats_int_variance	/usr/local/gsl/include/gsl/gsl_statistics_int.h	/^double gsl_stats_int_variance (const int data[], const size_t stride, const size_t n);$/;"	p	signature:(const int data[], const size_t stride, const size_t n)
gsl_stats_int_variance_m	/usr/local/gsl/include/gsl/gsl_statistics_int.h	/^double gsl_stats_int_variance_m (const int data[], const size_t stride, const size_t n, const double mean);$/;"	p	signature:(const int data[], const size_t stride, const size_t n, const double mean)
gsl_stats_int_variance_with_fixed_mean	/usr/local/gsl/include/gsl/gsl_statistics_int.h	/^double gsl_stats_int_variance_with_fixed_mean (const int data[], const size_t stride, const size_t n, const double mean);$/;"	p	signature:(const int data[], const size_t stride, const size_t n, const double mean)
gsl_stats_kurtosis	/usr/local/gsl/include/gsl/gsl_statistics_double.h	/^double gsl_stats_kurtosis (const double data[], const size_t stride, const size_t n);$/;"	p	signature:(const double data[], const size_t stride, const size_t n)
gsl_stats_kurtosis_m_sd	/usr/local/gsl/include/gsl/gsl_statistics_double.h	/^double gsl_stats_kurtosis_m_sd (const double data[], const size_t stride, const size_t n, const double mean, const double sd);$/;"	p	signature:(const double data[], const size_t stride, const size_t n, const double mean, const double sd)
gsl_stats_lag1_autocorrelation	/usr/local/gsl/include/gsl/gsl_statistics_double.h	/^double gsl_stats_lag1_autocorrelation (const double data[], const size_t stride, const size_t n);$/;"	p	signature:(const double data[], const size_t stride, const size_t n)
gsl_stats_lag1_autocorrelation_m	/usr/local/gsl/include/gsl/gsl_statistics_double.h	/^double gsl_stats_lag1_autocorrelation_m (const double data[], const size_t stride, const size_t n, const double mean);$/;"	p	signature:(const double data[], const size_t stride, const size_t n, const double mean)
gsl_stats_long_absdev	/usr/local/gsl/include/gsl/gsl_statistics_long.h	/^double gsl_stats_long_absdev (const long data[], const size_t stride, const size_t n);$/;"	p	signature:(const long data[], const size_t stride, const size_t n)
gsl_stats_long_absdev_m	/usr/local/gsl/include/gsl/gsl_statistics_long.h	/^double gsl_stats_long_absdev_m (const long data[], const size_t stride, const size_t n, const double mean);$/;"	p	signature:(const long data[], const size_t stride, const size_t n, const double mean)
gsl_stats_long_correlation	/usr/local/gsl/include/gsl/gsl_statistics_long.h	/^double gsl_stats_long_correlation (const long data1[], const size_t stride1,const long data2[], const size_t stride2, const size_t n);$/;"	p	signature:(const long data1[], const size_t stride1,const long data2[], const size_t stride2, const size_t n)
gsl_stats_long_covariance	/usr/local/gsl/include/gsl/gsl_statistics_long.h	/^double gsl_stats_long_covariance (const long data1[], const size_t stride1,const long data2[], const size_t stride2, const size_t n);$/;"	p	signature:(const long data1[], const size_t stride1,const long data2[], const size_t stride2, const size_t n)
gsl_stats_long_covariance_m	/usr/local/gsl/include/gsl/gsl_statistics_long.h	/^double gsl_stats_long_covariance_m (const long data1[], const size_t stride1,const long data2[], const size_t stride2, const size_t n, const double mean1, const double mean2);$/;"	p	signature:(const long data1[], const size_t stride1,const long data2[], const size_t stride2, const size_t n, const double mean1, const double mean2)
gsl_stats_long_double_absdev	/usr/local/gsl/include/gsl/gsl_statistics_long_double.h	/^double gsl_stats_long_double_absdev (const long double data[], const size_t stride, const size_t n);$/;"	p	signature:(const long double data[], const size_t stride, const size_t n)
gsl_stats_long_double_absdev_m	/usr/local/gsl/include/gsl/gsl_statistics_long_double.h	/^double gsl_stats_long_double_absdev_m (const long double data[], const size_t stride, const size_t n, const double mean);$/;"	p	signature:(const long double data[], const size_t stride, const size_t n, const double mean)
gsl_stats_long_double_correlation	/usr/local/gsl/include/gsl/gsl_statistics_long_double.h	/^double gsl_stats_long_double_correlation (const long double data1[], const size_t stride1,const long double data2[], const size_t stride2, const size_t n);$/;"	p	signature:(const long double data1[], const size_t stride1,const long double data2[], const size_t stride2, const size_t n)
gsl_stats_long_double_covariance	/usr/local/gsl/include/gsl/gsl_statistics_long_double.h	/^double gsl_stats_long_double_covariance (const long double data1[], const size_t stride1,const long double data2[], const size_t stride2, const size_t n);$/;"	p	signature:(const long double data1[], const size_t stride1,const long double data2[], const size_t stride2, const size_t n)
gsl_stats_long_double_covariance_m	/usr/local/gsl/include/gsl/gsl_statistics_long_double.h	/^double gsl_stats_long_double_covariance_m (const long double data1[], const size_t stride1,const long double data2[], const size_t stride2, const size_t n, const double mean1, const double mean2);$/;"	p	signature:(const long double data1[], const size_t stride1,const long double data2[], const size_t stride2, const size_t n, const double mean1, const double mean2)
gsl_stats_long_double_kurtosis	/usr/local/gsl/include/gsl/gsl_statistics_long_double.h	/^double gsl_stats_long_double_kurtosis (const long double data[], const size_t stride, const size_t n);$/;"	p	signature:(const long double data[], const size_t stride, const size_t n)
gsl_stats_long_double_kurtosis_m_sd	/usr/local/gsl/include/gsl/gsl_statistics_long_double.h	/^double gsl_stats_long_double_kurtosis_m_sd (const long double data[], const size_t stride, const size_t n, const double mean, const double sd);$/;"	p	signature:(const long double data[], const size_t stride, const size_t n, const double mean, const double sd)
gsl_stats_long_double_lag1_autocorrelation	/usr/local/gsl/include/gsl/gsl_statistics_long_double.h	/^double gsl_stats_long_double_lag1_autocorrelation (const long double data[], const size_t stride, const size_t n);$/;"	p	signature:(const long double data[], const size_t stride, const size_t n)
gsl_stats_long_double_lag1_autocorrelation_m	/usr/local/gsl/include/gsl/gsl_statistics_long_double.h	/^double gsl_stats_long_double_lag1_autocorrelation_m (const long double data[], const size_t stride, const size_t n, const double mean);$/;"	p	signature:(const long double data[], const size_t stride, const size_t n, const double mean)
gsl_stats_long_double_max	/usr/local/gsl/include/gsl/gsl_statistics_long_double.h	/^long double gsl_stats_long_double_max (const long double data[], const size_t stride, const size_t n);$/;"	p	signature:(const long double data[], const size_t stride, const size_t n)
gsl_stats_long_double_max_index	/usr/local/gsl/include/gsl/gsl_statistics_long_double.h	/^size_t gsl_stats_long_double_max_index (const long double data[], const size_t stride, const size_t n);$/;"	p	signature:(const long double data[], const size_t stride, const size_t n)
gsl_stats_long_double_mean	/usr/local/gsl/include/gsl/gsl_statistics_long_double.h	/^double gsl_stats_long_double_mean (const long double data[], const size_t stride, const size_t n);$/;"	p	signature:(const long double data[], const size_t stride, const size_t n)
gsl_stats_long_double_median_from_sorted_data	/usr/local/gsl/include/gsl/gsl_statistics_long_double.h	/^double gsl_stats_long_double_median_from_sorted_data (const long double sorted_data[], const size_t stride, const size_t n) ;$/;"	p	signature:(const long double sorted_data[], const size_t stride, const size_t n)
gsl_stats_long_double_min	/usr/local/gsl/include/gsl/gsl_statistics_long_double.h	/^long double gsl_stats_long_double_min (const long double data[], const size_t stride, const size_t n);$/;"	p	signature:(const long double data[], const size_t stride, const size_t n)
gsl_stats_long_double_min_index	/usr/local/gsl/include/gsl/gsl_statistics_long_double.h	/^size_t gsl_stats_long_double_min_index (const long double data[], const size_t stride, const size_t n);$/;"	p	signature:(const long double data[], const size_t stride, const size_t n)
gsl_stats_long_double_minmax	/usr/local/gsl/include/gsl/gsl_statistics_long_double.h	/^void gsl_stats_long_double_minmax (long double * min, long double * max, const long double data[], const size_t stride, const size_t n);$/;"	p	signature:(long double * min, long double * max, const long double data[], const size_t stride, const size_t n)
gsl_stats_long_double_minmax_index	/usr/local/gsl/include/gsl/gsl_statistics_long_double.h	/^void gsl_stats_long_double_minmax_index (size_t * min_index, size_t * max_index, const long double data[], const size_t stride, const size_t n);$/;"	p	signature:(size_t * min_index, size_t * max_index, const long double data[], const size_t stride, const size_t n)
gsl_stats_long_double_pvariance	/usr/local/gsl/include/gsl/gsl_statistics_long_double.h	/^double gsl_stats_long_double_pvariance (const long double data1[], const size_t stride1, const size_t n1, const long double data2[], const size_t stride2, const size_t n2);$/;"	p	signature:(const long double data1[], const size_t stride1, const size_t n1, const long double data2[], const size_t stride2, const size_t n2)
gsl_stats_long_double_quantile_from_sorted_data	/usr/local/gsl/include/gsl/gsl_statistics_long_double.h	/^double gsl_stats_long_double_quantile_from_sorted_data (const long double sorted_data[], const size_t stride, const size_t n, const double f) ;$/;"	p	signature:(const long double sorted_data[], const size_t stride, const size_t n, const double f)
gsl_stats_long_double_sd	/usr/local/gsl/include/gsl/gsl_statistics_long_double.h	/^double gsl_stats_long_double_sd (const long double data[], const size_t stride, const size_t n);$/;"	p	signature:(const long double data[], const size_t stride, const size_t n)
gsl_stats_long_double_sd_m	/usr/local/gsl/include/gsl/gsl_statistics_long_double.h	/^double gsl_stats_long_double_sd_m (const long double data[], const size_t stride, const size_t n, const double mean);$/;"	p	signature:(const long double data[], const size_t stride, const size_t n, const double mean)
gsl_stats_long_double_sd_with_fixed_mean	/usr/local/gsl/include/gsl/gsl_statistics_long_double.h	/^double gsl_stats_long_double_sd_with_fixed_mean (const long double data[], const size_t stride, const size_t n, const double mean);$/;"	p	signature:(const long double data[], const size_t stride, const size_t n, const double mean)
gsl_stats_long_double_skew	/usr/local/gsl/include/gsl/gsl_statistics_long_double.h	/^double gsl_stats_long_double_skew (const long double data[], const size_t stride, const size_t n);$/;"	p	signature:(const long double data[], const size_t stride, const size_t n)
gsl_stats_long_double_skew_m_sd	/usr/local/gsl/include/gsl/gsl_statistics_long_double.h	/^double gsl_stats_long_double_skew_m_sd (const long double data[], const size_t stride, const size_t n, const double mean, const double sd);$/;"	p	signature:(const long double data[], const size_t stride, const size_t n, const double mean, const double sd)
gsl_stats_long_double_tss	/usr/local/gsl/include/gsl/gsl_statistics_long_double.h	/^double gsl_stats_long_double_tss (const long double data[], const size_t stride, const size_t n);$/;"	p	signature:(const long double data[], const size_t stride, const size_t n)
gsl_stats_long_double_tss_m	/usr/local/gsl/include/gsl/gsl_statistics_long_double.h	/^double gsl_stats_long_double_tss_m (const long double data[], const size_t stride, const size_t n, const double mean);$/;"	p	signature:(const long double data[], const size_t stride, const size_t n, const double mean)
gsl_stats_long_double_ttest	/usr/local/gsl/include/gsl/gsl_statistics_long_double.h	/^double gsl_stats_long_double_ttest (const long double data1[], const size_t stride1, const size_t n1, const long double data2[], const size_t stride2, const size_t n2);$/;"	p	signature:(const long double data1[], const size_t stride1, const size_t n1, const long double data2[], const size_t stride2, const size_t n2)
gsl_stats_long_double_variance	/usr/local/gsl/include/gsl/gsl_statistics_long_double.h	/^double gsl_stats_long_double_variance (const long double data[], const size_t stride, const size_t n);$/;"	p	signature:(const long double data[], const size_t stride, const size_t n)
gsl_stats_long_double_variance_m	/usr/local/gsl/include/gsl/gsl_statistics_long_double.h	/^double gsl_stats_long_double_variance_m (const long double data[], const size_t stride, const size_t n, const double mean);$/;"	p	signature:(const long double data[], const size_t stride, const size_t n, const double mean)
gsl_stats_long_double_variance_with_fixed_mean	/usr/local/gsl/include/gsl/gsl_statistics_long_double.h	/^double gsl_stats_long_double_variance_with_fixed_mean (const long double data[], const size_t stride, const size_t n, const double mean);$/;"	p	signature:(const long double data[], const size_t stride, const size_t n, const double mean)
gsl_stats_long_double_wabsdev	/usr/local/gsl/include/gsl/gsl_statistics_long_double.h	/^double gsl_stats_long_double_wabsdev (const long double w[], const size_t wstride, const long double data[], const size_t stride, const size_t n);$/;"	p	signature:(const long double w[], const size_t wstride, const long double data[], const size_t stride, const size_t n)
gsl_stats_long_double_wabsdev_m	/usr/local/gsl/include/gsl/gsl_statistics_long_double.h	/^double gsl_stats_long_double_wabsdev_m (const long double w[], const size_t wstride, const long double data[], const size_t stride, const size_t n, const double wmean);$/;"	p	signature:(const long double w[], const size_t wstride, const long double data[], const size_t stride, const size_t n, const double wmean)
gsl_stats_long_double_wkurtosis	/usr/local/gsl/include/gsl/gsl_statistics_long_double.h	/^double gsl_stats_long_double_wkurtosis (const long double w[], const size_t wstride, const long double data[], const size_t stride, const size_t n);$/;"	p	signature:(const long double w[], const size_t wstride, const long double data[], const size_t stride, const size_t n)
gsl_stats_long_double_wkurtosis_m_sd	/usr/local/gsl/include/gsl/gsl_statistics_long_double.h	/^double gsl_stats_long_double_wkurtosis_m_sd (const long double w[], const size_t wstride, const long double data[], const size_t stride, const size_t n, const double wmean, const double wsd);$/;"	p	signature:(const long double w[], const size_t wstride, const long double data[], const size_t stride, const size_t n, const double wmean, const double wsd)
gsl_stats_long_double_wmean	/usr/local/gsl/include/gsl/gsl_statistics_long_double.h	/^double gsl_stats_long_double_wmean (const long double w[], const size_t wstride, const long double data[], const size_t stride, const size_t n);$/;"	p	signature:(const long double w[], const size_t wstride, const long double data[], const size_t stride, const size_t n)
gsl_stats_long_double_wsd	/usr/local/gsl/include/gsl/gsl_statistics_long_double.h	/^double gsl_stats_long_double_wsd (const long double w[], const size_t wstride, const long double data[], const size_t stride, const size_t n);$/;"	p	signature:(const long double w[], const size_t wstride, const long double data[], const size_t stride, const size_t n)
gsl_stats_long_double_wsd_m	/usr/local/gsl/include/gsl/gsl_statistics_long_double.h	/^double gsl_stats_long_double_wsd_m (const long double w[], const size_t wstride, const long double data[], const size_t stride, const size_t n, const double wmean);$/;"	p	signature:(const long double w[], const size_t wstride, const long double data[], const size_t stride, const size_t n, const double wmean)
gsl_stats_long_double_wsd_with_fixed_mean	/usr/local/gsl/include/gsl/gsl_statistics_long_double.h	/^double gsl_stats_long_double_wsd_with_fixed_mean (const long double w[], const size_t wstride, const long double data[], const size_t stride, const size_t n, const double mean);$/;"	p	signature:(const long double w[], const size_t wstride, const long double data[], const size_t stride, const size_t n, const double mean)
gsl_stats_long_double_wskew	/usr/local/gsl/include/gsl/gsl_statistics_long_double.h	/^double gsl_stats_long_double_wskew (const long double w[], const size_t wstride, const long double data[], const size_t stride, const size_t n);$/;"	p	signature:(const long double w[], const size_t wstride, const long double data[], const size_t stride, const size_t n)
gsl_stats_long_double_wskew_m_sd	/usr/local/gsl/include/gsl/gsl_statistics_long_double.h	/^double gsl_stats_long_double_wskew_m_sd (const long double w[], const size_t wstride, const long double data[], const size_t stride, const size_t n, const double wmean, const double wsd);$/;"	p	signature:(const long double w[], const size_t wstride, const long double data[], const size_t stride, const size_t n, const double wmean, const double wsd)
gsl_stats_long_double_wtss	/usr/local/gsl/include/gsl/gsl_statistics_long_double.h	/^double gsl_stats_long_double_wtss (const long double w[], const size_t wstride, const long double data[], const size_t stride, const size_t n);$/;"	p	signature:(const long double w[], const size_t wstride, const long double data[], const size_t stride, const size_t n)
gsl_stats_long_double_wtss_m	/usr/local/gsl/include/gsl/gsl_statistics_long_double.h	/^double gsl_stats_long_double_wtss_m (const long double w[], const size_t wstride, const long double data[], const size_t stride, const size_t n, const double wmean);$/;"	p	signature:(const long double w[], const size_t wstride, const long double data[], const size_t stride, const size_t n, const double wmean)
gsl_stats_long_double_wvariance	/usr/local/gsl/include/gsl/gsl_statistics_long_double.h	/^double gsl_stats_long_double_wvariance (const long double w[], const size_t wstride, const long double data[], const size_t stride, const size_t n);$/;"	p	signature:(const long double w[], const size_t wstride, const long double data[], const size_t stride, const size_t n)
gsl_stats_long_double_wvariance_m	/usr/local/gsl/include/gsl/gsl_statistics_long_double.h	/^double gsl_stats_long_double_wvariance_m (const long double w[], const size_t wstride, const long double data[], const size_t stride, const size_t n, const double wmean);$/;"	p	signature:(const long double w[], const size_t wstride, const long double data[], const size_t stride, const size_t n, const double wmean)
gsl_stats_long_double_wvariance_with_fixed_mean	/usr/local/gsl/include/gsl/gsl_statistics_long_double.h	/^double gsl_stats_long_double_wvariance_with_fixed_mean (const long double w[], const size_t wstride, const long double data[], const size_t stride, const size_t n, const double mean);$/;"	p	signature:(const long double w[], const size_t wstride, const long double data[], const size_t stride, const size_t n, const double mean)
gsl_stats_long_kurtosis	/usr/local/gsl/include/gsl/gsl_statistics_long.h	/^double gsl_stats_long_kurtosis (const long data[], const size_t stride, const size_t n);$/;"	p	signature:(const long data[], const size_t stride, const size_t n)
gsl_stats_long_kurtosis_m_sd	/usr/local/gsl/include/gsl/gsl_statistics_long.h	/^double gsl_stats_long_kurtosis_m_sd (const long data[], const size_t stride, const size_t n, const double mean, const double sd);$/;"	p	signature:(const long data[], const size_t stride, const size_t n, const double mean, const double sd)
gsl_stats_long_lag1_autocorrelation	/usr/local/gsl/include/gsl/gsl_statistics_long.h	/^double gsl_stats_long_lag1_autocorrelation (const long data[], const size_t stride, const size_t n);$/;"	p	signature:(const long data[], const size_t stride, const size_t n)
gsl_stats_long_lag1_autocorrelation_m	/usr/local/gsl/include/gsl/gsl_statistics_long.h	/^double gsl_stats_long_lag1_autocorrelation_m (const long data[], const size_t stride, const size_t n, const double mean);$/;"	p	signature:(const long data[], const size_t stride, const size_t n, const double mean)
gsl_stats_long_max	/usr/local/gsl/include/gsl/gsl_statistics_long.h	/^long gsl_stats_long_max (const long data[], const size_t stride, const size_t n);$/;"	p	signature:(const long data[], const size_t stride, const size_t n)
gsl_stats_long_max_index	/usr/local/gsl/include/gsl/gsl_statistics_long.h	/^size_t gsl_stats_long_max_index (const long data[], const size_t stride, const size_t n);$/;"	p	signature:(const long data[], const size_t stride, const size_t n)
gsl_stats_long_mean	/usr/local/gsl/include/gsl/gsl_statistics_long.h	/^double gsl_stats_long_mean (const long data[], const size_t stride, const size_t n);$/;"	p	signature:(const long data[], const size_t stride, const size_t n)
gsl_stats_long_median_from_sorted_data	/usr/local/gsl/include/gsl/gsl_statistics_long.h	/^double gsl_stats_long_median_from_sorted_data (const long sorted_data[], const size_t stride, const size_t n) ;$/;"	p	signature:(const long sorted_data[], const size_t stride, const size_t n)
gsl_stats_long_min	/usr/local/gsl/include/gsl/gsl_statistics_long.h	/^long gsl_stats_long_min (const long data[], const size_t stride, const size_t n);$/;"	p	signature:(const long data[], const size_t stride, const size_t n)
gsl_stats_long_min_index	/usr/local/gsl/include/gsl/gsl_statistics_long.h	/^size_t gsl_stats_long_min_index (const long data[], const size_t stride, const size_t n);$/;"	p	signature:(const long data[], const size_t stride, const size_t n)
gsl_stats_long_minmax	/usr/local/gsl/include/gsl/gsl_statistics_long.h	/^void gsl_stats_long_minmax (long * min, long * max, const long data[], const size_t stride, const size_t n);$/;"	p	signature:(long * min, long * max, const long data[], const size_t stride, const size_t n)
gsl_stats_long_minmax_index	/usr/local/gsl/include/gsl/gsl_statistics_long.h	/^void gsl_stats_long_minmax_index (size_t * min_index, size_t * max_index, const long data[], const size_t stride, const size_t n);$/;"	p	signature:(size_t * min_index, size_t * max_index, const long data[], const size_t stride, const size_t n)
gsl_stats_long_pvariance	/usr/local/gsl/include/gsl/gsl_statistics_long.h	/^double gsl_stats_long_pvariance (const long data1[], const size_t stride1, const size_t n1, const long data2[], const size_t stride2, const size_t n2);$/;"	p	signature:(const long data1[], const size_t stride1, const size_t n1, const long data2[], const size_t stride2, const size_t n2)
gsl_stats_long_quantile_from_sorted_data	/usr/local/gsl/include/gsl/gsl_statistics_long.h	/^double gsl_stats_long_quantile_from_sorted_data (const long sorted_data[], const size_t stride, const size_t n, const double f) ;$/;"	p	signature:(const long sorted_data[], const size_t stride, const size_t n, const double f)
gsl_stats_long_sd	/usr/local/gsl/include/gsl/gsl_statistics_long.h	/^double gsl_stats_long_sd (const long data[], const size_t stride, const size_t n);$/;"	p	signature:(const long data[], const size_t stride, const size_t n)
gsl_stats_long_sd_m	/usr/local/gsl/include/gsl/gsl_statistics_long.h	/^double gsl_stats_long_sd_m (const long data[], const size_t stride, const size_t n, const double mean);$/;"	p	signature:(const long data[], const size_t stride, const size_t n, const double mean)
gsl_stats_long_sd_with_fixed_mean	/usr/local/gsl/include/gsl/gsl_statistics_long.h	/^double gsl_stats_long_sd_with_fixed_mean (const long data[], const size_t stride, const size_t n, const double mean);$/;"	p	signature:(const long data[], const size_t stride, const size_t n, const double mean)
gsl_stats_long_skew	/usr/local/gsl/include/gsl/gsl_statistics_long.h	/^double gsl_stats_long_skew (const long data[], const size_t stride, const size_t n);$/;"	p	signature:(const long data[], const size_t stride, const size_t n)
gsl_stats_long_skew_m_sd	/usr/local/gsl/include/gsl/gsl_statistics_long.h	/^double gsl_stats_long_skew_m_sd (const long data[], const size_t stride, const size_t n, const double mean, const double sd);$/;"	p	signature:(const long data[], const size_t stride, const size_t n, const double mean, const double sd)
gsl_stats_long_tss	/usr/local/gsl/include/gsl/gsl_statistics_long.h	/^double gsl_stats_long_tss (const long data[], const size_t stride, const size_t n);$/;"	p	signature:(const long data[], const size_t stride, const size_t n)
gsl_stats_long_tss_m	/usr/local/gsl/include/gsl/gsl_statistics_long.h	/^double gsl_stats_long_tss_m (const long data[], const size_t stride, const size_t n, const double mean);$/;"	p	signature:(const long data[], const size_t stride, const size_t n, const double mean)
gsl_stats_long_ttest	/usr/local/gsl/include/gsl/gsl_statistics_long.h	/^double gsl_stats_long_ttest (const long data1[], const size_t stride1, const size_t n1, const long data2[], const size_t stride2, const size_t n2);$/;"	p	signature:(const long data1[], const size_t stride1, const size_t n1, const long data2[], const size_t stride2, const size_t n2)
gsl_stats_long_variance	/usr/local/gsl/include/gsl/gsl_statistics_long.h	/^double gsl_stats_long_variance (const long data[], const size_t stride, const size_t n);$/;"	p	signature:(const long data[], const size_t stride, const size_t n)
gsl_stats_long_variance_m	/usr/local/gsl/include/gsl/gsl_statistics_long.h	/^double gsl_stats_long_variance_m (const long data[], const size_t stride, const size_t n, const double mean);$/;"	p	signature:(const long data[], const size_t stride, const size_t n, const double mean)
gsl_stats_long_variance_with_fixed_mean	/usr/local/gsl/include/gsl/gsl_statistics_long.h	/^double gsl_stats_long_variance_with_fixed_mean (const long data[], const size_t stride, const size_t n, const double mean);$/;"	p	signature:(const long data[], const size_t stride, const size_t n, const double mean)
gsl_stats_max	/usr/local/gsl/include/gsl/gsl_statistics_double.h	/^double gsl_stats_max (const double data[], const size_t stride, const size_t n);$/;"	p	signature:(const double data[], const size_t stride, const size_t n)
gsl_stats_max_index	/usr/local/gsl/include/gsl/gsl_statistics_double.h	/^size_t gsl_stats_max_index (const double data[], const size_t stride, const size_t n);$/;"	p	signature:(const double data[], const size_t stride, const size_t n)
gsl_stats_mean	/usr/local/gsl/include/gsl/gsl_statistics_double.h	/^double gsl_stats_mean (const double data[], const size_t stride, const size_t n);$/;"	p	signature:(const double data[], const size_t stride, const size_t n)
gsl_stats_median_from_sorted_data	/usr/local/gsl/include/gsl/gsl_statistics_double.h	/^double gsl_stats_median_from_sorted_data (const double sorted_data[], const size_t stride, const size_t n) ;$/;"	p	signature:(const double sorted_data[], const size_t stride, const size_t n)
gsl_stats_min	/usr/local/gsl/include/gsl/gsl_statistics_double.h	/^double gsl_stats_min (const double data[], const size_t stride, const size_t n);$/;"	p	signature:(const double data[], const size_t stride, const size_t n)
gsl_stats_min_index	/usr/local/gsl/include/gsl/gsl_statistics_double.h	/^size_t gsl_stats_min_index (const double data[], const size_t stride, const size_t n);$/;"	p	signature:(const double data[], const size_t stride, const size_t n)
gsl_stats_minmax	/usr/local/gsl/include/gsl/gsl_statistics_double.h	/^void gsl_stats_minmax (double * min, double * max, const double data[], const size_t stride, const size_t n);$/;"	p	signature:(double * min, double * max, const double data[], const size_t stride, const size_t n)
gsl_stats_minmax_index	/usr/local/gsl/include/gsl/gsl_statistics_double.h	/^void gsl_stats_minmax_index (size_t * min_index, size_t * max_index, const double data[], const size_t stride, const size_t n);$/;"	p	signature:(size_t * min_index, size_t * max_index, const double data[], const size_t stride, const size_t n)
gsl_stats_pvariance	/usr/local/gsl/include/gsl/gsl_statistics_double.h	/^double gsl_stats_pvariance (const double data1[], const size_t stride1, const size_t n1, const double data2[], const size_t stride2, const size_t n2);$/;"	p	signature:(const double data1[], const size_t stride1, const size_t n1, const double data2[], const size_t stride2, const size_t n2)
gsl_stats_quantile_from_sorted_data	/usr/local/gsl/include/gsl/gsl_statistics_double.h	/^double gsl_stats_quantile_from_sorted_data (const double sorted_data[], const size_t stride, const size_t n, const double f) ;$/;"	p	signature:(const double sorted_data[], const size_t stride, const size_t n, const double f)
gsl_stats_sd	/usr/local/gsl/include/gsl/gsl_statistics_double.h	/^double gsl_stats_sd (const double data[], const size_t stride, const size_t n);$/;"	p	signature:(const double data[], const size_t stride, const size_t n)
gsl_stats_sd_m	/usr/local/gsl/include/gsl/gsl_statistics_double.h	/^double gsl_stats_sd_m (const double data[], const size_t stride, const size_t n, const double mean);$/;"	p	signature:(const double data[], const size_t stride, const size_t n, const double mean)
gsl_stats_sd_with_fixed_mean	/usr/local/gsl/include/gsl/gsl_statistics_double.h	/^double gsl_stats_sd_with_fixed_mean (const double data[], const size_t stride, const size_t n, const double mean);$/;"	p	signature:(const double data[], const size_t stride, const size_t n, const double mean)
gsl_stats_short_absdev	/usr/local/gsl/include/gsl/gsl_statistics_short.h	/^double gsl_stats_short_absdev (const short data[], const size_t stride, const size_t n);$/;"	p	signature:(const short data[], const size_t stride, const size_t n)
gsl_stats_short_absdev_m	/usr/local/gsl/include/gsl/gsl_statistics_short.h	/^double gsl_stats_short_absdev_m (const short data[], const size_t stride, const size_t n, const double mean);$/;"	p	signature:(const short data[], const size_t stride, const size_t n, const double mean)
gsl_stats_short_correlation	/usr/local/gsl/include/gsl/gsl_statistics_short.h	/^double gsl_stats_short_correlation (const short data1[], const size_t stride1,const short data2[], const size_t stride2, const size_t n);$/;"	p	signature:(const short data1[], const size_t stride1,const short data2[], const size_t stride2, const size_t n)
gsl_stats_short_covariance	/usr/local/gsl/include/gsl/gsl_statistics_short.h	/^double gsl_stats_short_covariance (const short data1[], const size_t stride1,const short data2[], const size_t stride2, const size_t n);$/;"	p	signature:(const short data1[], const size_t stride1,const short data2[], const size_t stride2, const size_t n)
gsl_stats_short_covariance_m	/usr/local/gsl/include/gsl/gsl_statistics_short.h	/^double gsl_stats_short_covariance_m (const short data1[], const size_t stride1,const short data2[], const size_t stride2, const size_t n, const double mean1, const double mean2);$/;"	p	signature:(const short data1[], const size_t stride1,const short data2[], const size_t stride2, const size_t n, const double mean1, const double mean2)
gsl_stats_short_kurtosis	/usr/local/gsl/include/gsl/gsl_statistics_short.h	/^double gsl_stats_short_kurtosis (const short data[], const size_t stride, const size_t n);$/;"	p	signature:(const short data[], const size_t stride, const size_t n)
gsl_stats_short_kurtosis_m_sd	/usr/local/gsl/include/gsl/gsl_statistics_short.h	/^double gsl_stats_short_kurtosis_m_sd (const short data[], const size_t stride, const size_t n, const double mean, const double sd);$/;"	p	signature:(const short data[], const size_t stride, const size_t n, const double mean, const double sd)
gsl_stats_short_lag1_autocorrelation	/usr/local/gsl/include/gsl/gsl_statistics_short.h	/^double gsl_stats_short_lag1_autocorrelation (const short data[], const size_t stride, const size_t n);$/;"	p	signature:(const short data[], const size_t stride, const size_t n)
gsl_stats_short_lag1_autocorrelation_m	/usr/local/gsl/include/gsl/gsl_statistics_short.h	/^double gsl_stats_short_lag1_autocorrelation_m (const short data[], const size_t stride, const size_t n, const double mean);$/;"	p	signature:(const short data[], const size_t stride, const size_t n, const double mean)
gsl_stats_short_max	/usr/local/gsl/include/gsl/gsl_statistics_short.h	/^short gsl_stats_short_max (const short data[], const size_t stride, const size_t n);$/;"	p	signature:(const short data[], const size_t stride, const size_t n)
gsl_stats_short_max_index	/usr/local/gsl/include/gsl/gsl_statistics_short.h	/^size_t gsl_stats_short_max_index (const short data[], const size_t stride, const size_t n);$/;"	p	signature:(const short data[], const size_t stride, const size_t n)
gsl_stats_short_mean	/usr/local/gsl/include/gsl/gsl_statistics_short.h	/^double gsl_stats_short_mean (const short data[], const size_t stride, const size_t n);$/;"	p	signature:(const short data[], const size_t stride, const size_t n)
gsl_stats_short_median_from_sorted_data	/usr/local/gsl/include/gsl/gsl_statistics_short.h	/^double gsl_stats_short_median_from_sorted_data (const short sorted_data[], const size_t stride, const size_t n) ;$/;"	p	signature:(const short sorted_data[], const size_t stride, const size_t n)
gsl_stats_short_min	/usr/local/gsl/include/gsl/gsl_statistics_short.h	/^short gsl_stats_short_min (const short data[], const size_t stride, const size_t n);$/;"	p	signature:(const short data[], const size_t stride, const size_t n)
gsl_stats_short_min_index	/usr/local/gsl/include/gsl/gsl_statistics_short.h	/^size_t gsl_stats_short_min_index (const short data[], const size_t stride, const size_t n);$/;"	p	signature:(const short data[], const size_t stride, const size_t n)
gsl_stats_short_minmax	/usr/local/gsl/include/gsl/gsl_statistics_short.h	/^void gsl_stats_short_minmax (short * min, short * max, const short data[], const size_t stride, const size_t n);$/;"	p	signature:(short * min, short * max, const short data[], const size_t stride, const size_t n)
gsl_stats_short_minmax_index	/usr/local/gsl/include/gsl/gsl_statistics_short.h	/^void gsl_stats_short_minmax_index (size_t * min_index, size_t * max_index, const short data[], const size_t stride, const size_t n);$/;"	p	signature:(size_t * min_index, size_t * max_index, const short data[], const size_t stride, const size_t n)
gsl_stats_short_pvariance	/usr/local/gsl/include/gsl/gsl_statistics_short.h	/^double gsl_stats_short_pvariance (const short data1[], const size_t stride1, const size_t n1, const short data2[], const size_t stride2, const size_t n2);$/;"	p	signature:(const short data1[], const size_t stride1, const size_t n1, const short data2[], const size_t stride2, const size_t n2)
gsl_stats_short_quantile_from_sorted_data	/usr/local/gsl/include/gsl/gsl_statistics_short.h	/^double gsl_stats_short_quantile_from_sorted_data (const short sorted_data[], const size_t stride, const size_t n, const double f) ;$/;"	p	signature:(const short sorted_data[], const size_t stride, const size_t n, const double f)
gsl_stats_short_sd	/usr/local/gsl/include/gsl/gsl_statistics_short.h	/^double gsl_stats_short_sd (const short data[], const size_t stride, const size_t n);$/;"	p	signature:(const short data[], const size_t stride, const size_t n)
gsl_stats_short_sd_m	/usr/local/gsl/include/gsl/gsl_statistics_short.h	/^double gsl_stats_short_sd_m (const short data[], const size_t stride, const size_t n, const double mean);$/;"	p	signature:(const short data[], const size_t stride, const size_t n, const double mean)
gsl_stats_short_sd_with_fixed_mean	/usr/local/gsl/include/gsl/gsl_statistics_short.h	/^double gsl_stats_short_sd_with_fixed_mean (const short data[], const size_t stride, const size_t n, const double mean);$/;"	p	signature:(const short data[], const size_t stride, const size_t n, const double mean)
gsl_stats_short_skew	/usr/local/gsl/include/gsl/gsl_statistics_short.h	/^double gsl_stats_short_skew (const short data[], const size_t stride, const size_t n);$/;"	p	signature:(const short data[], const size_t stride, const size_t n)
gsl_stats_short_skew_m_sd	/usr/local/gsl/include/gsl/gsl_statistics_short.h	/^double gsl_stats_short_skew_m_sd (const short data[], const size_t stride, const size_t n, const double mean, const double sd);$/;"	p	signature:(const short data[], const size_t stride, const size_t n, const double mean, const double sd)
gsl_stats_short_tss	/usr/local/gsl/include/gsl/gsl_statistics_short.h	/^double gsl_stats_short_tss (const short data[], const size_t stride, const size_t n);$/;"	p	signature:(const short data[], const size_t stride, const size_t n)
gsl_stats_short_tss_m	/usr/local/gsl/include/gsl/gsl_statistics_short.h	/^double gsl_stats_short_tss_m (const short data[], const size_t stride, const size_t n, const double mean);$/;"	p	signature:(const short data[], const size_t stride, const size_t n, const double mean)
gsl_stats_short_ttest	/usr/local/gsl/include/gsl/gsl_statistics_short.h	/^double gsl_stats_short_ttest (const short data1[], const size_t stride1, const size_t n1, const short data2[], const size_t stride2, const size_t n2);$/;"	p	signature:(const short data1[], const size_t stride1, const size_t n1, const short data2[], const size_t stride2, const size_t n2)
gsl_stats_short_variance	/usr/local/gsl/include/gsl/gsl_statistics_short.h	/^double gsl_stats_short_variance (const short data[], const size_t stride, const size_t n);$/;"	p	signature:(const short data[], const size_t stride, const size_t n)
gsl_stats_short_variance_m	/usr/local/gsl/include/gsl/gsl_statistics_short.h	/^double gsl_stats_short_variance_m (const short data[], const size_t stride, const size_t n, const double mean);$/;"	p	signature:(const short data[], const size_t stride, const size_t n, const double mean)
gsl_stats_short_variance_with_fixed_mean	/usr/local/gsl/include/gsl/gsl_statistics_short.h	/^double gsl_stats_short_variance_with_fixed_mean (const short data[], const size_t stride, const size_t n, const double mean);$/;"	p	signature:(const short data[], const size_t stride, const size_t n, const double mean)
gsl_stats_skew	/usr/local/gsl/include/gsl/gsl_statistics_double.h	/^double gsl_stats_skew (const double data[], const size_t stride, const size_t n);$/;"	p	signature:(const double data[], const size_t stride, const size_t n)
gsl_stats_skew_m_sd	/usr/local/gsl/include/gsl/gsl_statistics_double.h	/^double gsl_stats_skew_m_sd (const double data[], const size_t stride, const size_t n, const double mean, const double sd);$/;"	p	signature:(const double data[], const size_t stride, const size_t n, const double mean, const double sd)
gsl_stats_tss	/usr/local/gsl/include/gsl/gsl_statistics_double.h	/^double gsl_stats_tss (const double data[], const size_t stride, const size_t n);$/;"	p	signature:(const double data[], const size_t stride, const size_t n)
gsl_stats_tss_m	/usr/local/gsl/include/gsl/gsl_statistics_double.h	/^double gsl_stats_tss_m (const double data[], const size_t stride, const size_t n, const double mean);$/;"	p	signature:(const double data[], const size_t stride, const size_t n, const double mean)
gsl_stats_ttest	/usr/local/gsl/include/gsl/gsl_statistics_double.h	/^double gsl_stats_ttest (const double data1[], const size_t stride1, const size_t n1, const double data2[], const size_t stride2, const size_t n2);$/;"	p	signature:(const double data1[], const size_t stride1, const size_t n1, const double data2[], const size_t stride2, const size_t n2)
gsl_stats_uchar_absdev	/usr/local/gsl/include/gsl/gsl_statistics_uchar.h	/^double gsl_stats_uchar_absdev (const unsigned char data[], const size_t stride, const size_t n);$/;"	p	signature:(const unsigned char data[], const size_t stride, const size_t n)
gsl_stats_uchar_absdev_m	/usr/local/gsl/include/gsl/gsl_statistics_uchar.h	/^double gsl_stats_uchar_absdev_m (const unsigned char data[], const size_t stride, const size_t n, const double mean);$/;"	p	signature:(const unsigned char data[], const size_t stride, const size_t n, const double mean)
gsl_stats_uchar_correlation	/usr/local/gsl/include/gsl/gsl_statistics_uchar.h	/^double gsl_stats_uchar_correlation (const unsigned char data1[], const size_t stride1,const unsigned char data2[], const size_t stride2, const size_t n);$/;"	p	signature:(const unsigned char data1[], const size_t stride1,const unsigned char data2[], const size_t stride2, const size_t n)
gsl_stats_uchar_covariance	/usr/local/gsl/include/gsl/gsl_statistics_uchar.h	/^double gsl_stats_uchar_covariance (const unsigned char data1[], const size_t stride1,const unsigned char data2[], const size_t stride2, const size_t n);$/;"	p	signature:(const unsigned char data1[], const size_t stride1,const unsigned char data2[], const size_t stride2, const size_t n)
gsl_stats_uchar_covariance_m	/usr/local/gsl/include/gsl/gsl_statistics_uchar.h	/^double gsl_stats_uchar_covariance_m (const unsigned char data1[], const size_t stride1,const unsigned char data2[], const size_t stride2, const size_t n, const double mean1, const double mean2);$/;"	p	signature:(const unsigned char data1[], const size_t stride1,const unsigned char data2[], const size_t stride2, const size_t n, const double mean1, const double mean2)
gsl_stats_uchar_kurtosis	/usr/local/gsl/include/gsl/gsl_statistics_uchar.h	/^double gsl_stats_uchar_kurtosis (const unsigned char data[], const size_t stride, const size_t n);$/;"	p	signature:(const unsigned char data[], const size_t stride, const size_t n)
gsl_stats_uchar_kurtosis_m_sd	/usr/local/gsl/include/gsl/gsl_statistics_uchar.h	/^double gsl_stats_uchar_kurtosis_m_sd (const unsigned char data[], const size_t stride, const size_t n, const double mean, const double sd);$/;"	p	signature:(const unsigned char data[], const size_t stride, const size_t n, const double mean, const double sd)
gsl_stats_uchar_lag1_autocorrelation	/usr/local/gsl/include/gsl/gsl_statistics_uchar.h	/^double gsl_stats_uchar_lag1_autocorrelation (const unsigned char data[], const size_t stride, const size_t n);$/;"	p	signature:(const unsigned char data[], const size_t stride, const size_t n)
gsl_stats_uchar_lag1_autocorrelation_m	/usr/local/gsl/include/gsl/gsl_statistics_uchar.h	/^double gsl_stats_uchar_lag1_autocorrelation_m (const unsigned char data[], const size_t stride, const size_t n, const double mean);$/;"	p	signature:(const unsigned char data[], const size_t stride, const size_t n, const double mean)
gsl_stats_uchar_max	/usr/local/gsl/include/gsl/gsl_statistics_uchar.h	/^unsigned char gsl_stats_uchar_max (const unsigned char data[], const size_t stride, const size_t n);$/;"	p	signature:(const unsigned char data[], const size_t stride, const size_t n)
gsl_stats_uchar_max_index	/usr/local/gsl/include/gsl/gsl_statistics_uchar.h	/^size_t gsl_stats_uchar_max_index (const unsigned char data[], const size_t stride, const size_t n);$/;"	p	signature:(const unsigned char data[], const size_t stride, const size_t n)
gsl_stats_uchar_mean	/usr/local/gsl/include/gsl/gsl_statistics_uchar.h	/^double gsl_stats_uchar_mean (const unsigned char data[], const size_t stride, const size_t n);$/;"	p	signature:(const unsigned char data[], const size_t stride, const size_t n)
gsl_stats_uchar_median_from_sorted_data	/usr/local/gsl/include/gsl/gsl_statistics_uchar.h	/^double gsl_stats_uchar_median_from_sorted_data (const unsigned char sorted_data[], const size_t stride, const size_t n) ;$/;"	p	signature:(const unsigned char sorted_data[], const size_t stride, const size_t n)
gsl_stats_uchar_min	/usr/local/gsl/include/gsl/gsl_statistics_uchar.h	/^unsigned char gsl_stats_uchar_min (const unsigned char data[], const size_t stride, const size_t n);$/;"	p	signature:(const unsigned char data[], const size_t stride, const size_t n)
gsl_stats_uchar_min_index	/usr/local/gsl/include/gsl/gsl_statistics_uchar.h	/^size_t gsl_stats_uchar_min_index (const unsigned char data[], const size_t stride, const size_t n);$/;"	p	signature:(const unsigned char data[], const size_t stride, const size_t n)
gsl_stats_uchar_minmax	/usr/local/gsl/include/gsl/gsl_statistics_uchar.h	/^void gsl_stats_uchar_minmax (unsigned char * min, unsigned char * max, const unsigned char data[], const size_t stride, const size_t n);$/;"	p	signature:(unsigned char * min, unsigned char * max, const unsigned char data[], const size_t stride, const size_t n)
gsl_stats_uchar_minmax_index	/usr/local/gsl/include/gsl/gsl_statistics_uchar.h	/^void gsl_stats_uchar_minmax_index (size_t * min_index, size_t * max_index, const unsigned char data[], const size_t stride, const size_t n);$/;"	p	signature:(size_t * min_index, size_t * max_index, const unsigned char data[], const size_t stride, const size_t n)
gsl_stats_uchar_pvariance	/usr/local/gsl/include/gsl/gsl_statistics_uchar.h	/^double gsl_stats_uchar_pvariance (const unsigned char data1[], const size_t stride1, const size_t n1, const unsigned char data2[], const size_t stride2, const size_t n2);$/;"	p	signature:(const unsigned char data1[], const size_t stride1, const size_t n1, const unsigned char data2[], const size_t stride2, const size_t n2)
gsl_stats_uchar_quantile_from_sorted_data	/usr/local/gsl/include/gsl/gsl_statistics_uchar.h	/^double gsl_stats_uchar_quantile_from_sorted_data (const unsigned char sorted_data[], const size_t stride, const size_t n, const double f) ;$/;"	p	signature:(const unsigned char sorted_data[], const size_t stride, const size_t n, const double f)
gsl_stats_uchar_sd	/usr/local/gsl/include/gsl/gsl_statistics_uchar.h	/^double gsl_stats_uchar_sd (const unsigned char data[], const size_t stride, const size_t n);$/;"	p	signature:(const unsigned char data[], const size_t stride, const size_t n)
gsl_stats_uchar_sd_m	/usr/local/gsl/include/gsl/gsl_statistics_uchar.h	/^double gsl_stats_uchar_sd_m (const unsigned char data[], const size_t stride, const size_t n, const double mean);$/;"	p	signature:(const unsigned char data[], const size_t stride, const size_t n, const double mean)
gsl_stats_uchar_sd_with_fixed_mean	/usr/local/gsl/include/gsl/gsl_statistics_uchar.h	/^double gsl_stats_uchar_sd_with_fixed_mean (const unsigned char data[], const size_t stride, const size_t n, const double mean);$/;"	p	signature:(const unsigned char data[], const size_t stride, const size_t n, const double mean)
gsl_stats_uchar_skew	/usr/local/gsl/include/gsl/gsl_statistics_uchar.h	/^double gsl_stats_uchar_skew (const unsigned char data[], const size_t stride, const size_t n);$/;"	p	signature:(const unsigned char data[], const size_t stride, const size_t n)
gsl_stats_uchar_skew_m_sd	/usr/local/gsl/include/gsl/gsl_statistics_uchar.h	/^double gsl_stats_uchar_skew_m_sd (const unsigned char data[], const size_t stride, const size_t n, const double mean, const double sd);$/;"	p	signature:(const unsigned char data[], const size_t stride, const size_t n, const double mean, const double sd)
gsl_stats_uchar_tss	/usr/local/gsl/include/gsl/gsl_statistics_uchar.h	/^double gsl_stats_uchar_tss (const unsigned char data[], const size_t stride, const size_t n);$/;"	p	signature:(const unsigned char data[], const size_t stride, const size_t n)
gsl_stats_uchar_tss_m	/usr/local/gsl/include/gsl/gsl_statistics_uchar.h	/^double gsl_stats_uchar_tss_m (const unsigned char data[], const size_t stride, const size_t n, const double mean);$/;"	p	signature:(const unsigned char data[], const size_t stride, const size_t n, const double mean)
gsl_stats_uchar_ttest	/usr/local/gsl/include/gsl/gsl_statistics_uchar.h	/^double gsl_stats_uchar_ttest (const unsigned char data1[], const size_t stride1, const size_t n1, const unsigned char data2[], const size_t stride2, const size_t n2);$/;"	p	signature:(const unsigned char data1[], const size_t stride1, const size_t n1, const unsigned char data2[], const size_t stride2, const size_t n2)
gsl_stats_uchar_variance	/usr/local/gsl/include/gsl/gsl_statistics_uchar.h	/^double gsl_stats_uchar_variance (const unsigned char data[], const size_t stride, const size_t n);$/;"	p	signature:(const unsigned char data[], const size_t stride, const size_t n)
gsl_stats_uchar_variance_m	/usr/local/gsl/include/gsl/gsl_statistics_uchar.h	/^double gsl_stats_uchar_variance_m (const unsigned char data[], const size_t stride, const size_t n, const double mean);$/;"	p	signature:(const unsigned char data[], const size_t stride, const size_t n, const double mean)
gsl_stats_uchar_variance_with_fixed_mean	/usr/local/gsl/include/gsl/gsl_statistics_uchar.h	/^double gsl_stats_uchar_variance_with_fixed_mean (const unsigned char data[], const size_t stride, const size_t n, const double mean);$/;"	p	signature:(const unsigned char data[], const size_t stride, const size_t n, const double mean)
gsl_stats_uint_absdev	/usr/local/gsl/include/gsl/gsl_statistics_uint.h	/^double gsl_stats_uint_absdev (const unsigned int data[], const size_t stride, const size_t n);$/;"	p	signature:(const unsigned int data[], const size_t stride, const size_t n)
gsl_stats_uint_absdev_m	/usr/local/gsl/include/gsl/gsl_statistics_uint.h	/^double gsl_stats_uint_absdev_m (const unsigned int data[], const size_t stride, const size_t n, const double mean);$/;"	p	signature:(const unsigned int data[], const size_t stride, const size_t n, const double mean)
gsl_stats_uint_correlation	/usr/local/gsl/include/gsl/gsl_statistics_uint.h	/^double gsl_stats_uint_correlation (const unsigned int data1[], const size_t stride1,const unsigned int data2[], const size_t stride2, const size_t n);$/;"	p	signature:(const unsigned int data1[], const size_t stride1,const unsigned int data2[], const size_t stride2, const size_t n)
gsl_stats_uint_covariance	/usr/local/gsl/include/gsl/gsl_statistics_uint.h	/^double gsl_stats_uint_covariance (const unsigned int data1[], const size_t stride1,const unsigned int data2[], const size_t stride2, const size_t n);$/;"	p	signature:(const unsigned int data1[], const size_t stride1,const unsigned int data2[], const size_t stride2, const size_t n)
gsl_stats_uint_covariance_m	/usr/local/gsl/include/gsl/gsl_statistics_uint.h	/^double gsl_stats_uint_covariance_m (const unsigned int data1[], const size_t stride1,const unsigned int data2[], const size_t stride2, const size_t n, const double mean1, const double mean2);$/;"	p	signature:(const unsigned int data1[], const size_t stride1,const unsigned int data2[], const size_t stride2, const size_t n, const double mean1, const double mean2)
gsl_stats_uint_kurtosis	/usr/local/gsl/include/gsl/gsl_statistics_uint.h	/^double gsl_stats_uint_kurtosis (const unsigned int data[], const size_t stride, const size_t n);$/;"	p	signature:(const unsigned int data[], const size_t stride, const size_t n)
gsl_stats_uint_kurtosis_m_sd	/usr/local/gsl/include/gsl/gsl_statistics_uint.h	/^double gsl_stats_uint_kurtosis_m_sd (const unsigned int data[], const size_t stride, const size_t n, const double mean, const double sd);$/;"	p	signature:(const unsigned int data[], const size_t stride, const size_t n, const double mean, const double sd)
gsl_stats_uint_lag1_autocorrelation	/usr/local/gsl/include/gsl/gsl_statistics_uint.h	/^double gsl_stats_uint_lag1_autocorrelation (const unsigned int data[], const size_t stride, const size_t n);$/;"	p	signature:(const unsigned int data[], const size_t stride, const size_t n)
gsl_stats_uint_lag1_autocorrelation_m	/usr/local/gsl/include/gsl/gsl_statistics_uint.h	/^double gsl_stats_uint_lag1_autocorrelation_m (const unsigned int data[], const size_t stride, const size_t n, const double mean);$/;"	p	signature:(const unsigned int data[], const size_t stride, const size_t n, const double mean)
gsl_stats_uint_max	/usr/local/gsl/include/gsl/gsl_statistics_uint.h	/^unsigned int gsl_stats_uint_max (const unsigned int data[], const size_t stride, const size_t n);$/;"	p	signature:(const unsigned int data[], const size_t stride, const size_t n)
gsl_stats_uint_max_index	/usr/local/gsl/include/gsl/gsl_statistics_uint.h	/^size_t gsl_stats_uint_max_index (const unsigned int data[], const size_t stride, const size_t n);$/;"	p	signature:(const unsigned int data[], const size_t stride, const size_t n)
gsl_stats_uint_mean	/usr/local/gsl/include/gsl/gsl_statistics_uint.h	/^double gsl_stats_uint_mean (const unsigned int data[], const size_t stride, const size_t n);$/;"	p	signature:(const unsigned int data[], const size_t stride, const size_t n)
gsl_stats_uint_median_from_sorted_data	/usr/local/gsl/include/gsl/gsl_statistics_uint.h	/^double gsl_stats_uint_median_from_sorted_data (const unsigned int sorted_data[], const size_t stride, const size_t n) ;$/;"	p	signature:(const unsigned int sorted_data[], const size_t stride, const size_t n)
gsl_stats_uint_min	/usr/local/gsl/include/gsl/gsl_statistics_uint.h	/^unsigned int gsl_stats_uint_min (const unsigned int data[], const size_t stride, const size_t n);$/;"	p	signature:(const unsigned int data[], const size_t stride, const size_t n)
gsl_stats_uint_min_index	/usr/local/gsl/include/gsl/gsl_statistics_uint.h	/^size_t gsl_stats_uint_min_index (const unsigned int data[], const size_t stride, const size_t n);$/;"	p	signature:(const unsigned int data[], const size_t stride, const size_t n)
gsl_stats_uint_minmax	/usr/local/gsl/include/gsl/gsl_statistics_uint.h	/^void gsl_stats_uint_minmax (unsigned int * min, unsigned int * max, const unsigned int data[], const size_t stride, const size_t n);$/;"	p	signature:(unsigned int * min, unsigned int * max, const unsigned int data[], const size_t stride, const size_t n)
gsl_stats_uint_minmax_index	/usr/local/gsl/include/gsl/gsl_statistics_uint.h	/^void gsl_stats_uint_minmax_index (size_t * min_index, size_t * max_index, const unsigned int data[], const size_t stride, const size_t n);$/;"	p	signature:(size_t * min_index, size_t * max_index, const unsigned int data[], const size_t stride, const size_t n)
gsl_stats_uint_pvariance	/usr/local/gsl/include/gsl/gsl_statistics_uint.h	/^double gsl_stats_uint_pvariance (const unsigned int data1[], const size_t stride1, const size_t n1, const unsigned int data2[], const size_t stride2, const size_t n2);$/;"	p	signature:(const unsigned int data1[], const size_t stride1, const size_t n1, const unsigned int data2[], const size_t stride2, const size_t n2)
gsl_stats_uint_quantile_from_sorted_data	/usr/local/gsl/include/gsl/gsl_statistics_uint.h	/^double gsl_stats_uint_quantile_from_sorted_data (const unsigned int sorted_data[], const size_t stride, const size_t n, const double f) ;$/;"	p	signature:(const unsigned int sorted_data[], const size_t stride, const size_t n, const double f)
gsl_stats_uint_sd	/usr/local/gsl/include/gsl/gsl_statistics_uint.h	/^double gsl_stats_uint_sd (const unsigned int data[], const size_t stride, const size_t n);$/;"	p	signature:(const unsigned int data[], const size_t stride, const size_t n)
gsl_stats_uint_sd_m	/usr/local/gsl/include/gsl/gsl_statistics_uint.h	/^double gsl_stats_uint_sd_m (const unsigned int data[], const size_t stride, const size_t n, const double mean);$/;"	p	signature:(const unsigned int data[], const size_t stride, const size_t n, const double mean)
gsl_stats_uint_sd_with_fixed_mean	/usr/local/gsl/include/gsl/gsl_statistics_uint.h	/^double gsl_stats_uint_sd_with_fixed_mean (const unsigned int data[], const size_t stride, const size_t n, const double mean);$/;"	p	signature:(const unsigned int data[], const size_t stride, const size_t n, const double mean)
gsl_stats_uint_skew	/usr/local/gsl/include/gsl/gsl_statistics_uint.h	/^double gsl_stats_uint_skew (const unsigned int data[], const size_t stride, const size_t n);$/;"	p	signature:(const unsigned int data[], const size_t stride, const size_t n)
gsl_stats_uint_skew_m_sd	/usr/local/gsl/include/gsl/gsl_statistics_uint.h	/^double gsl_stats_uint_skew_m_sd (const unsigned int data[], const size_t stride, const size_t n, const double mean, const double sd);$/;"	p	signature:(const unsigned int data[], const size_t stride, const size_t n, const double mean, const double sd)
gsl_stats_uint_tss	/usr/local/gsl/include/gsl/gsl_statistics_uint.h	/^double gsl_stats_uint_tss (const unsigned int data[], const size_t stride, const size_t n);$/;"	p	signature:(const unsigned int data[], const size_t stride, const size_t n)
gsl_stats_uint_tss_m	/usr/local/gsl/include/gsl/gsl_statistics_uint.h	/^double gsl_stats_uint_tss_m (const unsigned int data[], const size_t stride, const size_t n, const double mean);$/;"	p	signature:(const unsigned int data[], const size_t stride, const size_t n, const double mean)
gsl_stats_uint_ttest	/usr/local/gsl/include/gsl/gsl_statistics_uint.h	/^double gsl_stats_uint_ttest (const unsigned int data1[], const size_t stride1, const size_t n1, const unsigned int data2[], const size_t stride2, const size_t n2);$/;"	p	signature:(const unsigned int data1[], const size_t stride1, const size_t n1, const unsigned int data2[], const size_t stride2, const size_t n2)
gsl_stats_uint_variance	/usr/local/gsl/include/gsl/gsl_statistics_uint.h	/^double gsl_stats_uint_variance (const unsigned int data[], const size_t stride, const size_t n);$/;"	p	signature:(const unsigned int data[], const size_t stride, const size_t n)
gsl_stats_uint_variance_m	/usr/local/gsl/include/gsl/gsl_statistics_uint.h	/^double gsl_stats_uint_variance_m (const unsigned int data[], const size_t stride, const size_t n, const double mean);$/;"	p	signature:(const unsigned int data[], const size_t stride, const size_t n, const double mean)
gsl_stats_uint_variance_with_fixed_mean	/usr/local/gsl/include/gsl/gsl_statistics_uint.h	/^double gsl_stats_uint_variance_with_fixed_mean (const unsigned int data[], const size_t stride, const size_t n, const double mean);$/;"	p	signature:(const unsigned int data[], const size_t stride, const size_t n, const double mean)
gsl_stats_ulong_absdev	/usr/local/gsl/include/gsl/gsl_statistics_ulong.h	/^double gsl_stats_ulong_absdev (const unsigned long data[], const size_t stride, const size_t n);$/;"	p	signature:(const unsigned long data[], const size_t stride, const size_t n)
gsl_stats_ulong_absdev_m	/usr/local/gsl/include/gsl/gsl_statistics_ulong.h	/^double gsl_stats_ulong_absdev_m (const unsigned long data[], const size_t stride, const size_t n, const double mean);$/;"	p	signature:(const unsigned long data[], const size_t stride, const size_t n, const double mean)
gsl_stats_ulong_correlation	/usr/local/gsl/include/gsl/gsl_statistics_ulong.h	/^double gsl_stats_ulong_correlation (const unsigned long data1[], const size_t stride1,const unsigned long data2[], const size_t stride2, const size_t n);$/;"	p	signature:(const unsigned long data1[], const size_t stride1,const unsigned long data2[], const size_t stride2, const size_t n)
gsl_stats_ulong_covariance	/usr/local/gsl/include/gsl/gsl_statistics_ulong.h	/^double gsl_stats_ulong_covariance (const unsigned long data1[], const size_t stride1,const unsigned long data2[], const size_t stride2, const size_t n);$/;"	p	signature:(const unsigned long data1[], const size_t stride1,const unsigned long data2[], const size_t stride2, const size_t n)
gsl_stats_ulong_covariance_m	/usr/local/gsl/include/gsl/gsl_statistics_ulong.h	/^double gsl_stats_ulong_covariance_m (const unsigned long data1[], const size_t stride1,const unsigned long data2[], const size_t stride2, const size_t n, const double mean1, const double mean2);$/;"	p	signature:(const unsigned long data1[], const size_t stride1,const unsigned long data2[], const size_t stride2, const size_t n, const double mean1, const double mean2)
gsl_stats_ulong_kurtosis	/usr/local/gsl/include/gsl/gsl_statistics_ulong.h	/^double gsl_stats_ulong_kurtosis (const unsigned long data[], const size_t stride, const size_t n);$/;"	p	signature:(const unsigned long data[], const size_t stride, const size_t n)
gsl_stats_ulong_kurtosis_m_sd	/usr/local/gsl/include/gsl/gsl_statistics_ulong.h	/^double gsl_stats_ulong_kurtosis_m_sd (const unsigned long data[], const size_t stride, const size_t n, const double mean, const double sd);$/;"	p	signature:(const unsigned long data[], const size_t stride, const size_t n, const double mean, const double sd)
gsl_stats_ulong_lag1_autocorrelation	/usr/local/gsl/include/gsl/gsl_statistics_ulong.h	/^double gsl_stats_ulong_lag1_autocorrelation (const unsigned long data[], const size_t stride, const size_t n);$/;"	p	signature:(const unsigned long data[], const size_t stride, const size_t n)
gsl_stats_ulong_lag1_autocorrelation_m	/usr/local/gsl/include/gsl/gsl_statistics_ulong.h	/^double gsl_stats_ulong_lag1_autocorrelation_m (const unsigned long data[], const size_t stride, const size_t n, const double mean);$/;"	p	signature:(const unsigned long data[], const size_t stride, const size_t n, const double mean)
gsl_stats_ulong_max	/usr/local/gsl/include/gsl/gsl_statistics_ulong.h	/^unsigned long gsl_stats_ulong_max (const unsigned long data[], const size_t stride, const size_t n);$/;"	p	signature:(const unsigned long data[], const size_t stride, const size_t n)
gsl_stats_ulong_max_index	/usr/local/gsl/include/gsl/gsl_statistics_ulong.h	/^size_t gsl_stats_ulong_max_index (const unsigned long data[], const size_t stride, const size_t n);$/;"	p	signature:(const unsigned long data[], const size_t stride, const size_t n)
gsl_stats_ulong_mean	/usr/local/gsl/include/gsl/gsl_statistics_ulong.h	/^double gsl_stats_ulong_mean (const unsigned long data[], const size_t stride, const size_t n);$/;"	p	signature:(const unsigned long data[], const size_t stride, const size_t n)
gsl_stats_ulong_median_from_sorted_data	/usr/local/gsl/include/gsl/gsl_statistics_ulong.h	/^double gsl_stats_ulong_median_from_sorted_data (const unsigned long sorted_data[], const size_t stride, const size_t n) ;$/;"	p	signature:(const unsigned long sorted_data[], const size_t stride, const size_t n)
gsl_stats_ulong_min	/usr/local/gsl/include/gsl/gsl_statistics_ulong.h	/^unsigned long gsl_stats_ulong_min (const unsigned long data[], const size_t stride, const size_t n);$/;"	p	signature:(const unsigned long data[], const size_t stride, const size_t n)
gsl_stats_ulong_min_index	/usr/local/gsl/include/gsl/gsl_statistics_ulong.h	/^size_t gsl_stats_ulong_min_index (const unsigned long data[], const size_t stride, const size_t n);$/;"	p	signature:(const unsigned long data[], const size_t stride, const size_t n)
gsl_stats_ulong_minmax	/usr/local/gsl/include/gsl/gsl_statistics_ulong.h	/^void gsl_stats_ulong_minmax (unsigned long * min, unsigned long * max, const unsigned long data[], const size_t stride, const size_t n);$/;"	p	signature:(unsigned long * min, unsigned long * max, const unsigned long data[], const size_t stride, const size_t n)
gsl_stats_ulong_minmax_index	/usr/local/gsl/include/gsl/gsl_statistics_ulong.h	/^void gsl_stats_ulong_minmax_index (size_t * min_index, size_t * max_index, const unsigned long data[], const size_t stride, const size_t n);$/;"	p	signature:(size_t * min_index, size_t * max_index, const unsigned long data[], const size_t stride, const size_t n)
gsl_stats_ulong_pvariance	/usr/local/gsl/include/gsl/gsl_statistics_ulong.h	/^double gsl_stats_ulong_pvariance (const unsigned long data1[], const size_t stride1, const size_t n1, const unsigned long data2[], const size_t stride2, const size_t n2);$/;"	p	signature:(const unsigned long data1[], const size_t stride1, const size_t n1, const unsigned long data2[], const size_t stride2, const size_t n2)
gsl_stats_ulong_quantile_from_sorted_data	/usr/local/gsl/include/gsl/gsl_statistics_ulong.h	/^double gsl_stats_ulong_quantile_from_sorted_data (const unsigned long sorted_data[], const size_t stride, const size_t n, const double f) ;$/;"	p	signature:(const unsigned long sorted_data[], const size_t stride, const size_t n, const double f)
gsl_stats_ulong_sd	/usr/local/gsl/include/gsl/gsl_statistics_ulong.h	/^double gsl_stats_ulong_sd (const unsigned long data[], const size_t stride, const size_t n);$/;"	p	signature:(const unsigned long data[], const size_t stride, const size_t n)
gsl_stats_ulong_sd_m	/usr/local/gsl/include/gsl/gsl_statistics_ulong.h	/^double gsl_stats_ulong_sd_m (const unsigned long data[], const size_t stride, const size_t n, const double mean);$/;"	p	signature:(const unsigned long data[], const size_t stride, const size_t n, const double mean)
gsl_stats_ulong_sd_with_fixed_mean	/usr/local/gsl/include/gsl/gsl_statistics_ulong.h	/^double gsl_stats_ulong_sd_with_fixed_mean (const unsigned long data[], const size_t stride, const size_t n, const double mean);$/;"	p	signature:(const unsigned long data[], const size_t stride, const size_t n, const double mean)
gsl_stats_ulong_skew	/usr/local/gsl/include/gsl/gsl_statistics_ulong.h	/^double gsl_stats_ulong_skew (const unsigned long data[], const size_t stride, const size_t n);$/;"	p	signature:(const unsigned long data[], const size_t stride, const size_t n)
gsl_stats_ulong_skew_m_sd	/usr/local/gsl/include/gsl/gsl_statistics_ulong.h	/^double gsl_stats_ulong_skew_m_sd (const unsigned long data[], const size_t stride, const size_t n, const double mean, const double sd);$/;"	p	signature:(const unsigned long data[], const size_t stride, const size_t n, const double mean, const double sd)
gsl_stats_ulong_tss	/usr/local/gsl/include/gsl/gsl_statistics_ulong.h	/^double gsl_stats_ulong_tss (const unsigned long data[], const size_t stride, const size_t n);$/;"	p	signature:(const unsigned long data[], const size_t stride, const size_t n)
gsl_stats_ulong_tss_m	/usr/local/gsl/include/gsl/gsl_statistics_ulong.h	/^double gsl_stats_ulong_tss_m (const unsigned long data[], const size_t stride, const size_t n, const double mean);$/;"	p	signature:(const unsigned long data[], const size_t stride, const size_t n, const double mean)
gsl_stats_ulong_ttest	/usr/local/gsl/include/gsl/gsl_statistics_ulong.h	/^double gsl_stats_ulong_ttest (const unsigned long data1[], const size_t stride1, const size_t n1, const unsigned long data2[], const size_t stride2, const size_t n2);$/;"	p	signature:(const unsigned long data1[], const size_t stride1, const size_t n1, const unsigned long data2[], const size_t stride2, const size_t n2)
gsl_stats_ulong_variance	/usr/local/gsl/include/gsl/gsl_statistics_ulong.h	/^double gsl_stats_ulong_variance (const unsigned long data[], const size_t stride, const size_t n);$/;"	p	signature:(const unsigned long data[], const size_t stride, const size_t n)
gsl_stats_ulong_variance_m	/usr/local/gsl/include/gsl/gsl_statistics_ulong.h	/^double gsl_stats_ulong_variance_m (const unsigned long data[], const size_t stride, const size_t n, const double mean);$/;"	p	signature:(const unsigned long data[], const size_t stride, const size_t n, const double mean)
gsl_stats_ulong_variance_with_fixed_mean	/usr/local/gsl/include/gsl/gsl_statistics_ulong.h	/^double gsl_stats_ulong_variance_with_fixed_mean (const unsigned long data[], const size_t stride, const size_t n, const double mean);$/;"	p	signature:(const unsigned long data[], const size_t stride, const size_t n, const double mean)
gsl_stats_ushort_absdev	/usr/local/gsl/include/gsl/gsl_statistics_ushort.h	/^double gsl_stats_ushort_absdev (const unsigned short data[], const size_t stride, const size_t n);$/;"	p	signature:(const unsigned short data[], const size_t stride, const size_t n)
gsl_stats_ushort_absdev_m	/usr/local/gsl/include/gsl/gsl_statistics_ushort.h	/^double gsl_stats_ushort_absdev_m (const unsigned short data[], const size_t stride, const size_t n, const double mean);$/;"	p	signature:(const unsigned short data[], const size_t stride, const size_t n, const double mean)
gsl_stats_ushort_correlation	/usr/local/gsl/include/gsl/gsl_statistics_ushort.h	/^double gsl_stats_ushort_correlation (const unsigned short data1[], const size_t stride1,const unsigned short data2[], const size_t stride2, const size_t n);$/;"	p	signature:(const unsigned short data1[], const size_t stride1,const unsigned short data2[], const size_t stride2, const size_t n)
gsl_stats_ushort_covariance	/usr/local/gsl/include/gsl/gsl_statistics_ushort.h	/^double gsl_stats_ushort_covariance (const unsigned short data1[], const size_t stride1,const unsigned short data2[], const size_t stride2, const size_t n);$/;"	p	signature:(const unsigned short data1[], const size_t stride1,const unsigned short data2[], const size_t stride2, const size_t n)
gsl_stats_ushort_covariance_m	/usr/local/gsl/include/gsl/gsl_statistics_ushort.h	/^double gsl_stats_ushort_covariance_m (const unsigned short data1[], const size_t stride1,const unsigned short data2[], const size_t stride2, const size_t n, const double mean1, const double mean2);$/;"	p	signature:(const unsigned short data1[], const size_t stride1,const unsigned short data2[], const size_t stride2, const size_t n, const double mean1, const double mean2)
gsl_stats_ushort_kurtosis	/usr/local/gsl/include/gsl/gsl_statistics_ushort.h	/^double gsl_stats_ushort_kurtosis (const unsigned short data[], const size_t stride, const size_t n);$/;"	p	signature:(const unsigned short data[], const size_t stride, const size_t n)
gsl_stats_ushort_kurtosis_m_sd	/usr/local/gsl/include/gsl/gsl_statistics_ushort.h	/^double gsl_stats_ushort_kurtosis_m_sd (const unsigned short data[], const size_t stride, const size_t n, const double mean, const double sd);$/;"	p	signature:(const unsigned short data[], const size_t stride, const size_t n, const double mean, const double sd)
gsl_stats_ushort_lag1_autocorrelation	/usr/local/gsl/include/gsl/gsl_statistics_ushort.h	/^double gsl_stats_ushort_lag1_autocorrelation (const unsigned short data[], const size_t stride, const size_t n);$/;"	p	signature:(const unsigned short data[], const size_t stride, const size_t n)
gsl_stats_ushort_lag1_autocorrelation_m	/usr/local/gsl/include/gsl/gsl_statistics_ushort.h	/^double gsl_stats_ushort_lag1_autocorrelation_m (const unsigned short data[], const size_t stride, const size_t n, const double mean);$/;"	p	signature:(const unsigned short data[], const size_t stride, const size_t n, const double mean)
gsl_stats_ushort_max	/usr/local/gsl/include/gsl/gsl_statistics_ushort.h	/^unsigned short gsl_stats_ushort_max (const unsigned short data[], const size_t stride, const size_t n);$/;"	p	signature:(const unsigned short data[], const size_t stride, const size_t n)
gsl_stats_ushort_max_index	/usr/local/gsl/include/gsl/gsl_statistics_ushort.h	/^size_t gsl_stats_ushort_max_index (const unsigned short data[], const size_t stride, const size_t n);$/;"	p	signature:(const unsigned short data[], const size_t stride, const size_t n)
gsl_stats_ushort_mean	/usr/local/gsl/include/gsl/gsl_statistics_ushort.h	/^double gsl_stats_ushort_mean (const unsigned short data[], const size_t stride, const size_t n);$/;"	p	signature:(const unsigned short data[], const size_t stride, const size_t n)
gsl_stats_ushort_median_from_sorted_data	/usr/local/gsl/include/gsl/gsl_statistics_ushort.h	/^double gsl_stats_ushort_median_from_sorted_data (const unsigned short sorted_data[], const size_t stride, const size_t n) ;$/;"	p	signature:(const unsigned short sorted_data[], const size_t stride, const size_t n)
gsl_stats_ushort_min	/usr/local/gsl/include/gsl/gsl_statistics_ushort.h	/^unsigned short gsl_stats_ushort_min (const unsigned short data[], const size_t stride, const size_t n);$/;"	p	signature:(const unsigned short data[], const size_t stride, const size_t n)
gsl_stats_ushort_min_index	/usr/local/gsl/include/gsl/gsl_statistics_ushort.h	/^size_t gsl_stats_ushort_min_index (const unsigned short data[], const size_t stride, const size_t n);$/;"	p	signature:(const unsigned short data[], const size_t stride, const size_t n)
gsl_stats_ushort_minmax	/usr/local/gsl/include/gsl/gsl_statistics_ushort.h	/^void gsl_stats_ushort_minmax (unsigned short * min, unsigned short * max, const unsigned short data[], const size_t stride, const size_t n);$/;"	p	signature:(unsigned short * min, unsigned short * max, const unsigned short data[], const size_t stride, const size_t n)
gsl_stats_ushort_minmax_index	/usr/local/gsl/include/gsl/gsl_statistics_ushort.h	/^void gsl_stats_ushort_minmax_index (size_t * min_index, size_t * max_index, const unsigned short data[], const size_t stride, const size_t n);$/;"	p	signature:(size_t * min_index, size_t * max_index, const unsigned short data[], const size_t stride, const size_t n)
gsl_stats_ushort_pvariance	/usr/local/gsl/include/gsl/gsl_statistics_ushort.h	/^double gsl_stats_ushort_pvariance (const unsigned short data1[], const size_t stride1, const size_t n1, const unsigned short data2[], const size_t stride2, const size_t n2);$/;"	p	signature:(const unsigned short data1[], const size_t stride1, const size_t n1, const unsigned short data2[], const size_t stride2, const size_t n2)
gsl_stats_ushort_quantile_from_sorted_data	/usr/local/gsl/include/gsl/gsl_statistics_ushort.h	/^double gsl_stats_ushort_quantile_from_sorted_data (const unsigned short sorted_data[], const size_t stride, const size_t n, const double f) ;$/;"	p	signature:(const unsigned short sorted_data[], const size_t stride, const size_t n, const double f)
gsl_stats_ushort_sd	/usr/local/gsl/include/gsl/gsl_statistics_ushort.h	/^double gsl_stats_ushort_sd (const unsigned short data[], const size_t stride, const size_t n);$/;"	p	signature:(const unsigned short data[], const size_t stride, const size_t n)
gsl_stats_ushort_sd_m	/usr/local/gsl/include/gsl/gsl_statistics_ushort.h	/^double gsl_stats_ushort_sd_m (const unsigned short data[], const size_t stride, const size_t n, const double mean);$/;"	p	signature:(const unsigned short data[], const size_t stride, const size_t n, const double mean)
gsl_stats_ushort_sd_with_fixed_mean	/usr/local/gsl/include/gsl/gsl_statistics_ushort.h	/^double gsl_stats_ushort_sd_with_fixed_mean (const unsigned short data[], const size_t stride, const size_t n, const double mean);$/;"	p	signature:(const unsigned short data[], const size_t stride, const size_t n, const double mean)
gsl_stats_ushort_skew	/usr/local/gsl/include/gsl/gsl_statistics_ushort.h	/^double gsl_stats_ushort_skew (const unsigned short data[], const size_t stride, const size_t n);$/;"	p	signature:(const unsigned short data[], const size_t stride, const size_t n)
gsl_stats_ushort_skew_m_sd	/usr/local/gsl/include/gsl/gsl_statistics_ushort.h	/^double gsl_stats_ushort_skew_m_sd (const unsigned short data[], const size_t stride, const size_t n, const double mean, const double sd);$/;"	p	signature:(const unsigned short data[], const size_t stride, const size_t n, const double mean, const double sd)
gsl_stats_ushort_tss	/usr/local/gsl/include/gsl/gsl_statistics_ushort.h	/^double gsl_stats_ushort_tss (const unsigned short data[], const size_t stride, const size_t n);$/;"	p	signature:(const unsigned short data[], const size_t stride, const size_t n)
gsl_stats_ushort_tss_m	/usr/local/gsl/include/gsl/gsl_statistics_ushort.h	/^double gsl_stats_ushort_tss_m (const unsigned short data[], const size_t stride, const size_t n, const double mean);$/;"	p	signature:(const unsigned short data[], const size_t stride, const size_t n, const double mean)
gsl_stats_ushort_ttest	/usr/local/gsl/include/gsl/gsl_statistics_ushort.h	/^double gsl_stats_ushort_ttest (const unsigned short data1[], const size_t stride1, const size_t n1, const unsigned short data2[], const size_t stride2, const size_t n2);$/;"	p	signature:(const unsigned short data1[], const size_t stride1, const size_t n1, const unsigned short data2[], const size_t stride2, const size_t n2)
gsl_stats_ushort_variance	/usr/local/gsl/include/gsl/gsl_statistics_ushort.h	/^double gsl_stats_ushort_variance (const unsigned short data[], const size_t stride, const size_t n);$/;"	p	signature:(const unsigned short data[], const size_t stride, const size_t n)
gsl_stats_ushort_variance_m	/usr/local/gsl/include/gsl/gsl_statistics_ushort.h	/^double gsl_stats_ushort_variance_m (const unsigned short data[], const size_t stride, const size_t n, const double mean);$/;"	p	signature:(const unsigned short data[], const size_t stride, const size_t n, const double mean)
gsl_stats_ushort_variance_with_fixed_mean	/usr/local/gsl/include/gsl/gsl_statistics_ushort.h	/^double gsl_stats_ushort_variance_with_fixed_mean (const unsigned short data[], const size_t stride, const size_t n, const double mean);$/;"	p	signature:(const unsigned short data[], const size_t stride, const size_t n, const double mean)
gsl_stats_variance	/usr/local/gsl/include/gsl/gsl_statistics_double.h	/^double gsl_stats_variance (const double data[], const size_t stride, const size_t n);$/;"	p	signature:(const double data[], const size_t stride, const size_t n)
gsl_stats_variance_m	/usr/local/gsl/include/gsl/gsl_statistics_double.h	/^double gsl_stats_variance_m (const double data[], const size_t stride, const size_t n, const double mean);$/;"	p	signature:(const double data[], const size_t stride, const size_t n, const double mean)
gsl_stats_variance_with_fixed_mean	/usr/local/gsl/include/gsl/gsl_statistics_double.h	/^double gsl_stats_variance_with_fixed_mean (const double data[], const size_t stride, const size_t n, const double mean);$/;"	p	signature:(const double data[], const size_t stride, const size_t n, const double mean)
gsl_stats_wabsdev	/usr/local/gsl/include/gsl/gsl_statistics_double.h	/^double gsl_stats_wabsdev (const double w[], const size_t wstride, const double data[], const size_t stride, const size_t n);$/;"	p	signature:(const double w[], const size_t wstride, const double data[], const size_t stride, const size_t n)
gsl_stats_wabsdev_m	/usr/local/gsl/include/gsl/gsl_statistics_double.h	/^double gsl_stats_wabsdev_m (const double w[], const size_t wstride, const double data[], const size_t stride, const size_t n, const double wmean);$/;"	p	signature:(const double w[], const size_t wstride, const double data[], const size_t stride, const size_t n, const double wmean)
gsl_stats_wkurtosis	/usr/local/gsl/include/gsl/gsl_statistics_double.h	/^double gsl_stats_wkurtosis (const double w[], const size_t wstride, const double data[], const size_t stride, const size_t n);$/;"	p	signature:(const double w[], const size_t wstride, const double data[], const size_t stride, const size_t n)
gsl_stats_wkurtosis_m_sd	/usr/local/gsl/include/gsl/gsl_statistics_double.h	/^double gsl_stats_wkurtosis_m_sd (const double w[], const size_t wstride, const double data[], const size_t stride, const size_t n, const double wmean, const double wsd);$/;"	p	signature:(const double w[], const size_t wstride, const double data[], const size_t stride, const size_t n, const double wmean, const double wsd)
gsl_stats_wmean	/usr/local/gsl/include/gsl/gsl_statistics_double.h	/^double gsl_stats_wmean (const double w[], const size_t wstride, const double data[], const size_t stride, const size_t n);$/;"	p	signature:(const double w[], const size_t wstride, const double data[], const size_t stride, const size_t n)
gsl_stats_wsd	/usr/local/gsl/include/gsl/gsl_statistics_double.h	/^double gsl_stats_wsd (const double w[], const size_t wstride, const double data[], const size_t stride, const size_t n);$/;"	p	signature:(const double w[], const size_t wstride, const double data[], const size_t stride, const size_t n)
gsl_stats_wsd_m	/usr/local/gsl/include/gsl/gsl_statistics_double.h	/^double gsl_stats_wsd_m (const double w[], const size_t wstride, const double data[], const size_t stride, const size_t n, const double wmean);$/;"	p	signature:(const double w[], const size_t wstride, const double data[], const size_t stride, const size_t n, const double wmean)
gsl_stats_wsd_with_fixed_mean	/usr/local/gsl/include/gsl/gsl_statistics_double.h	/^double gsl_stats_wsd_with_fixed_mean (const double w[], const size_t wstride, const double data[], const size_t stride, const size_t n, const double mean);$/;"	p	signature:(const double w[], const size_t wstride, const double data[], const size_t stride, const size_t n, const double mean)
gsl_stats_wskew	/usr/local/gsl/include/gsl/gsl_statistics_double.h	/^double gsl_stats_wskew (const double w[], const size_t wstride, const double data[], const size_t stride, const size_t n);$/;"	p	signature:(const double w[], const size_t wstride, const double data[], const size_t stride, const size_t n)
gsl_stats_wskew_m_sd	/usr/local/gsl/include/gsl/gsl_statistics_double.h	/^double gsl_stats_wskew_m_sd (const double w[], const size_t wstride, const double data[], const size_t stride, const size_t n, const double wmean, const double wsd);$/;"	p	signature:(const double w[], const size_t wstride, const double data[], const size_t stride, const size_t n, const double wmean, const double wsd)
gsl_stats_wtss	/usr/local/gsl/include/gsl/gsl_statistics_double.h	/^double gsl_stats_wtss (const double w[], const size_t wstride, const double data[], const size_t stride, const size_t n);$/;"	p	signature:(const double w[], const size_t wstride, const double data[], const size_t stride, const size_t n)
gsl_stats_wtss_m	/usr/local/gsl/include/gsl/gsl_statistics_double.h	/^double gsl_stats_wtss_m (const double w[], const size_t wstride, const double data[], const size_t stride, const size_t n, const double wmean);$/;"	p	signature:(const double w[], const size_t wstride, const double data[], const size_t stride, const size_t n, const double wmean)
gsl_stats_wvariance	/usr/local/gsl/include/gsl/gsl_statistics_double.h	/^double gsl_stats_wvariance (const double w[], const size_t wstride, const double data[], const size_t stride, const size_t n);$/;"	p	signature:(const double w[], const size_t wstride, const double data[], const size_t stride, const size_t n)
gsl_stats_wvariance_m	/usr/local/gsl/include/gsl/gsl_statistics_double.h	/^double gsl_stats_wvariance_m (const double w[], const size_t wstride, const double data[], const size_t stride, const size_t n, const double wmean);$/;"	p	signature:(const double w[], const size_t wstride, const double data[], const size_t stride, const size_t n, const double wmean)
gsl_stats_wvariance_with_fixed_mean	/usr/local/gsl/include/gsl/gsl_statistics_double.h	/^double gsl_stats_wvariance_with_fixed_mean (const double w[], const size_t wstride, const double data[], const size_t stride, const size_t n, const double mean);$/;"	p	signature:(const double w[], const size_t wstride, const double data[], const size_t stride, const size_t n, const double mean)
gsl_stream_handler_t	/usr/local/gsl/include/gsl/gsl_errno.h	/^typedef void gsl_stream_handler_t (const char * label, const char * file,$/;"	t
gsl_stream_printf	/usr/local/gsl/include/gsl/gsl_errno.h	/^void gsl_stream_printf (const char *label, const char *file,$/;"	p	signature:(const char *label, const char *file, int line, const char *reason)
gsl_strerror	/usr/local/gsl/include/gsl/gsl_errno.h	/^const char * gsl_strerror (const int gsl_errno);$/;"	p	signature:(const int gsl_errno)
gsl_sum_levin_u_accel	/usr/local/gsl/include/gsl/gsl_sum.h	/^int gsl_sum_levin_u_accel (const double *array,$/;"	p	signature:(const double *array, const size_t n, gsl_sum_levin_u_workspace * w, double *sum_accel, double *abserr)
gsl_sum_levin_u_alloc	/usr/local/gsl/include/gsl/gsl_sum.h	/^gsl_sum_levin_u_workspace *gsl_sum_levin_u_alloc (size_t n);$/;"	p	signature:(size_t n)
gsl_sum_levin_u_free	/usr/local/gsl/include/gsl/gsl_sum.h	/^void gsl_sum_levin_u_free (gsl_sum_levin_u_workspace * w);$/;"	p	signature:(gsl_sum_levin_u_workspace * w)
gsl_sum_levin_u_minmax	/usr/local/gsl/include/gsl/gsl_sum.h	/^int gsl_sum_levin_u_minmax (const double *array,$/;"	p	signature:(const double *array, const size_t n, const size_t min_terms, const size_t max_terms, gsl_sum_levin_u_workspace * w, double *sum_accel, double *abserr)
gsl_sum_levin_u_step	/usr/local/gsl/include/gsl/gsl_sum.h	/^gsl_sum_levin_u_step (const double term,$/;"	p	signature:(const double term, const size_t n, const size_t nmax, gsl_sum_levin_u_workspace * w, double *sum_accel)
gsl_sum_levin_u_workspace	/usr/local/gsl/include/gsl/gsl_sum.h	/^gsl_sum_levin_u_workspace;$/;"	t	typeref:struct:__anon170
gsl_sum_levin_utrunc_accel	/usr/local/gsl/include/gsl/gsl_sum.h	/^int gsl_sum_levin_utrunc_accel (const double *array,$/;"	p	signature:(const double *array, const size_t n, gsl_sum_levin_utrunc_workspace * w, double *sum_accel, double *abserr_trunc)
gsl_sum_levin_utrunc_alloc	/usr/local/gsl/include/gsl/gsl_sum.h	/^gsl_sum_levin_utrunc_workspace *gsl_sum_levin_utrunc_alloc (size_t n);$/;"	p	signature:(size_t n)
gsl_sum_levin_utrunc_free	/usr/local/gsl/include/gsl/gsl_sum.h	/^void gsl_sum_levin_utrunc_free (gsl_sum_levin_utrunc_workspace * w);$/;"	p	signature:(gsl_sum_levin_utrunc_workspace * w)
gsl_sum_levin_utrunc_minmax	/usr/local/gsl/include/gsl/gsl_sum.h	/^int gsl_sum_levin_utrunc_minmax (const double *array,$/;"	p	signature:(const double *array, const size_t n, const size_t min_terms, const size_t max_terms, gsl_sum_levin_utrunc_workspace * w, double *sum_accel, double *abserr_trunc)
gsl_sum_levin_utrunc_step	/usr/local/gsl/include/gsl/gsl_sum.h	/^int gsl_sum_levin_utrunc_step (const double term,$/;"	p	signature:(const double term, const size_t n, gsl_sum_levin_utrunc_workspace * w, double *sum_accel)
gsl_sum_levin_utrunc_workspace	/usr/local/gsl/include/gsl/gsl_sum.h	/^gsl_sum_levin_utrunc_workspace;$/;"	t	typeref:struct:__anon171
gsl_test	/usr/local/gsl/include/gsl/gsl_test.h	/^  gsl_test (int status, const char *test_description, ...);$/;"	p	signature:(int status, const char *test_description, ...)
gsl_test_abs	/usr/local/gsl/include/gsl/gsl_test.h	/^gsl_test_abs (double result, double expected, double absolute_error,$/;"	p	signature:(double result, double expected, double absolute_error, const char *test_description, ...)
gsl_test_factor	/usr/local/gsl/include/gsl/gsl_test.h	/^gsl_test_factor (double result, double expected, double factor,$/;"	p	signature:(double result, double expected, double factor, const char *test_description, ...)
gsl_test_int	/usr/local/gsl/include/gsl/gsl_test.h	/^gsl_test_int (int result, int expected, const char *test_description, ...) ;$/;"	p	signature:(int result, int expected, const char *test_description, ...)
gsl_test_rel	/usr/local/gsl/include/gsl/gsl_test.h	/^gsl_test_rel (double result, double expected, double relative_error,$/;"	p	signature:(double result, double expected, double relative_error, const char *test_description, ...)
gsl_test_str	/usr/local/gsl/include/gsl/gsl_test.h	/^gsl_test_str (const char * result, const char * expected, $/;"	p	signature:(const char * result, const char * expected, const char *test_description, ...)
gsl_test_summary	/usr/local/gsl/include/gsl/gsl_test.h	/^  gsl_test_summary (void) ;$/;"	p	signature:(void)
gsl_test_verbose	/usr/local/gsl/include/gsl/gsl_test.h	/^  gsl_test_verbose (int verbose) ;$/;"	p	signature:(int verbose)
gsl_vector	/usr/local/gsl/include/gsl/gsl_vector_double.h	/^gsl_vector;$/;"	t	typeref:struct:__anon56
gsl_vector_add	/usr/local/gsl/include/gsl/gsl_vector_double.h	/^int gsl_vector_add (gsl_vector * a, const gsl_vector * b);$/;"	p	signature:(gsl_vector * a, const gsl_vector * b)
gsl_vector_add_constant	/usr/local/gsl/include/gsl/gsl_vector_double.h	/^int gsl_vector_add_constant (gsl_vector * a, const double x);$/;"	p	signature:(gsl_vector * a, const double x)
gsl_vector_alloc	/usr/local/gsl/include/gsl/gsl_vector_double.h	/^gsl_vector *gsl_vector_alloc (const size_t n);$/;"	p	signature:(const size_t n)
gsl_vector_alloc_col_from_matrix	/usr/local/gsl/include/gsl/gsl_matrix_double.h	/^gsl_vector_alloc_col_from_matrix (gsl_matrix * m,$/;"	p	signature:(gsl_matrix * m, const size_t j)
gsl_vector_alloc_from_block	/usr/local/gsl/include/gsl/gsl_vector_double.h	/^gsl_vector *gsl_vector_alloc_from_block (gsl_block * b,$/;"	p	signature:(gsl_block * b, const size_t offset, const size_t n, const size_t stride)
gsl_vector_alloc_from_vector	/usr/local/gsl/include/gsl/gsl_vector_double.h	/^gsl_vector *gsl_vector_alloc_from_vector (gsl_vector * v,$/;"	p	signature:(gsl_vector * v, const size_t offset, const size_t n, const size_t stride)
gsl_vector_alloc_row_from_matrix	/usr/local/gsl/include/gsl/gsl_matrix_double.h	/^gsl_vector_alloc_row_from_matrix (gsl_matrix * m,$/;"	p	signature:(gsl_matrix * m, const size_t i)
gsl_vector_calloc	/usr/local/gsl/include/gsl/gsl_vector_double.h	/^gsl_vector *gsl_vector_calloc (const size_t n);$/;"	p	signature:(const size_t n)
gsl_vector_char	/usr/local/gsl/include/gsl/gsl_vector_char.h	/^gsl_vector_char;$/;"	t	typeref:struct:__anon70
gsl_vector_char_add	/usr/local/gsl/include/gsl/gsl_vector_char.h	/^int gsl_vector_char_add (gsl_vector_char * a, const gsl_vector_char * b);$/;"	p	signature:(gsl_vector_char * a, const gsl_vector_char * b)
gsl_vector_char_add_constant	/usr/local/gsl/include/gsl/gsl_vector_char.h	/^int gsl_vector_char_add_constant (gsl_vector_char * a, const double x);$/;"	p	signature:(gsl_vector_char * a, const double x)
gsl_vector_char_alloc	/usr/local/gsl/include/gsl/gsl_vector_char.h	/^gsl_vector_char *gsl_vector_char_alloc (const size_t n);$/;"	p	signature:(const size_t n)
gsl_vector_char_alloc_col_from_matrix	/usr/local/gsl/include/gsl/gsl_matrix_char.h	/^gsl_vector_char_alloc_col_from_matrix (gsl_matrix_char * m,$/;"	p	signature:(gsl_matrix_char * m, const size_t j)
gsl_vector_char_alloc_from_block	/usr/local/gsl/include/gsl/gsl_vector_char.h	/^gsl_vector_char *gsl_vector_char_alloc_from_block (gsl_block_char * b,$/;"	p	signature:(gsl_block_char * b, const size_t offset, const size_t n, const size_t stride)
gsl_vector_char_alloc_from_vector	/usr/local/gsl/include/gsl/gsl_vector_char.h	/^gsl_vector_char *gsl_vector_char_alloc_from_vector (gsl_vector_char * v,$/;"	p	signature:(gsl_vector_char * v, const size_t offset, const size_t n, const size_t stride)
gsl_vector_char_alloc_row_from_matrix	/usr/local/gsl/include/gsl/gsl_matrix_char.h	/^gsl_vector_char_alloc_row_from_matrix (gsl_matrix_char * m,$/;"	p	signature:(gsl_matrix_char * m, const size_t i)
gsl_vector_char_calloc	/usr/local/gsl/include/gsl/gsl_vector_char.h	/^gsl_vector_char *gsl_vector_char_calloc (const size_t n);$/;"	p	signature:(const size_t n)
gsl_vector_char_const_ptr	/usr/local/gsl/include/gsl/gsl_vector_char.h	/^INLINE_DECL const char * gsl_vector_char_const_ptr (const gsl_vector_char * v, const size_t i);$/;"	p	signature:(const gsl_vector_char * v, const size_t i)
gsl_vector_char_const_ptr	/usr/local/gsl/include/gsl/gsl_vector_char.h	/^gsl_vector_char_const_ptr (const gsl_vector_char * v, const size_t i)$/;"	f	signature:(const gsl_vector_char * v, const size_t i)
gsl_vector_char_const_subvector	/usr/local/gsl/include/gsl/gsl_vector_char.h	/^gsl_vector_char_const_subvector (const gsl_vector_char *v, $/;"	p	signature:(const gsl_vector_char *v, size_t i, size_t n)
gsl_vector_char_const_subvector_with_stride	/usr/local/gsl/include/gsl/gsl_vector_char.h	/^gsl_vector_char_const_subvector_with_stride (const gsl_vector_char *v, $/;"	p	signature:(const gsl_vector_char *v, size_t i, size_t stride, size_t n)
gsl_vector_char_const_view	/usr/local/gsl/include/gsl/gsl_vector_char.h	/^typedef const _gsl_vector_char_const_view gsl_vector_char_const_view;$/;"	t
gsl_vector_char_const_view_array	/usr/local/gsl/include/gsl/gsl_vector_char.h	/^gsl_vector_char_const_view_array (const char *v, size_t n);$/;"	p	signature:(const char *v, size_t n)
gsl_vector_char_const_view_array_with_stride	/usr/local/gsl/include/gsl/gsl_vector_char.h	/^gsl_vector_char_const_view_array_with_stride (const char *base,$/;"	p	signature:(const char *base, size_t stride, size_t n)
gsl_vector_char_div	/usr/local/gsl/include/gsl/gsl_vector_char.h	/^int gsl_vector_char_div (gsl_vector_char * a, const gsl_vector_char * b);$/;"	p	signature:(gsl_vector_char * a, const gsl_vector_char * b)
gsl_vector_char_fprintf	/usr/local/gsl/include/gsl/gsl_vector_char.h	/^int gsl_vector_char_fprintf (FILE * stream, const gsl_vector_char * v,$/;"	p	signature:(FILE * stream, const gsl_vector_char * v, const char *format)
gsl_vector_char_fread	/usr/local/gsl/include/gsl/gsl_vector_char.h	/^int gsl_vector_char_fread (FILE * stream, gsl_vector_char * v);$/;"	p	signature:(FILE * stream, gsl_vector_char * v)
gsl_vector_char_free	/usr/local/gsl/include/gsl/gsl_vector_char.h	/^void gsl_vector_char_free (gsl_vector_char * v);$/;"	p	signature:(gsl_vector_char * v)
gsl_vector_char_fscanf	/usr/local/gsl/include/gsl/gsl_vector_char.h	/^int gsl_vector_char_fscanf (FILE * stream, gsl_vector_char * v);$/;"	p	signature:(FILE * stream, gsl_vector_char * v)
gsl_vector_char_fwrite	/usr/local/gsl/include/gsl/gsl_vector_char.h	/^int gsl_vector_char_fwrite (FILE * stream, const gsl_vector_char * v);$/;"	p	signature:(FILE * stream, const gsl_vector_char * v)
gsl_vector_char_get	/usr/local/gsl/include/gsl/gsl_vector_char.h	/^INLINE_DECL char gsl_vector_char_get (const gsl_vector_char * v, const size_t i);$/;"	p	signature:(const gsl_vector_char * v, const size_t i)
gsl_vector_char_get	/usr/local/gsl/include/gsl/gsl_vector_char.h	/^gsl_vector_char_get (const gsl_vector_char * v, const size_t i)$/;"	f	signature:(const gsl_vector_char * v, const size_t i)
gsl_vector_char_isneg	/usr/local/gsl/include/gsl/gsl_vector_char.h	/^int gsl_vector_char_isneg (const gsl_vector_char * v);$/;"	p	signature:(const gsl_vector_char * v)
gsl_vector_char_isnonneg	/usr/local/gsl/include/gsl/gsl_vector_char.h	/^int gsl_vector_char_isnonneg (const gsl_vector_char * v);$/;"	p	signature:(const gsl_vector_char * v)
gsl_vector_char_isnull	/usr/local/gsl/include/gsl/gsl_vector_char.h	/^int gsl_vector_char_isnull (const gsl_vector_char * v);$/;"	p	signature:(const gsl_vector_char * v)
gsl_vector_char_ispos	/usr/local/gsl/include/gsl/gsl_vector_char.h	/^int gsl_vector_char_ispos (const gsl_vector_char * v);$/;"	p	signature:(const gsl_vector_char * v)
gsl_vector_char_max	/usr/local/gsl/include/gsl/gsl_vector_char.h	/^char gsl_vector_char_max (const gsl_vector_char * v);$/;"	p	signature:(const gsl_vector_char * v)
gsl_vector_char_max_index	/usr/local/gsl/include/gsl/gsl_vector_char.h	/^size_t gsl_vector_char_max_index (const gsl_vector_char * v);$/;"	p	signature:(const gsl_vector_char * v)
gsl_vector_char_memcpy	/usr/local/gsl/include/gsl/gsl_vector_char.h	/^int gsl_vector_char_memcpy (gsl_vector_char * dest, const gsl_vector_char * src);$/;"	p	signature:(gsl_vector_char * dest, const gsl_vector_char * src)
gsl_vector_char_min	/usr/local/gsl/include/gsl/gsl_vector_char.h	/^char gsl_vector_char_min (const gsl_vector_char * v);$/;"	p	signature:(const gsl_vector_char * v)
gsl_vector_char_min_index	/usr/local/gsl/include/gsl/gsl_vector_char.h	/^size_t gsl_vector_char_min_index (const gsl_vector_char * v);$/;"	p	signature:(const gsl_vector_char * v)
gsl_vector_char_minmax	/usr/local/gsl/include/gsl/gsl_vector_char.h	/^void gsl_vector_char_minmax (const gsl_vector_char * v, char * min_out, char * max_out);$/;"	p	signature:(const gsl_vector_char * v, char * min_out, char * max_out)
gsl_vector_char_minmax_index	/usr/local/gsl/include/gsl/gsl_vector_char.h	/^void gsl_vector_char_minmax_index (const gsl_vector_char * v, size_t * imin, size_t * imax);$/;"	p	signature:(const gsl_vector_char * v, size_t * imin, size_t * imax)
gsl_vector_char_mul	/usr/local/gsl/include/gsl/gsl_vector_char.h	/^int gsl_vector_char_mul (gsl_vector_char * a, const gsl_vector_char * b);$/;"	p	signature:(gsl_vector_char * a, const gsl_vector_char * b)
gsl_vector_char_ptr	/usr/local/gsl/include/gsl/gsl_vector_char.h	/^INLINE_DECL char * gsl_vector_char_ptr (gsl_vector_char * v, const size_t i);$/;"	p	signature:(gsl_vector_char * v, const size_t i)
gsl_vector_char_ptr	/usr/local/gsl/include/gsl/gsl_vector_char.h	/^gsl_vector_char_ptr (gsl_vector_char * v, const size_t i)$/;"	f	signature:(gsl_vector_char * v, const size_t i)
gsl_vector_char_reverse	/usr/local/gsl/include/gsl/gsl_vector_char.h	/^int gsl_vector_char_reverse (gsl_vector_char * v);$/;"	p	signature:(gsl_vector_char * v)
gsl_vector_char_scale	/usr/local/gsl/include/gsl/gsl_vector_char.h	/^int gsl_vector_char_scale (gsl_vector_char * a, const double x);$/;"	p	signature:(gsl_vector_char * a, const double x)
gsl_vector_char_set	/usr/local/gsl/include/gsl/gsl_vector_char.h	/^INLINE_DECL void gsl_vector_char_set (gsl_vector_char * v, const size_t i, char x);$/;"	p	signature:(gsl_vector_char * v, const size_t i, char x)
gsl_vector_char_set	/usr/local/gsl/include/gsl/gsl_vector_char.h	/^gsl_vector_char_set (gsl_vector_char * v, const size_t i, char x)$/;"	f	signature:(gsl_vector_char * v, const size_t i, char x)
gsl_vector_char_set_all	/usr/local/gsl/include/gsl/gsl_vector_char.h	/^void gsl_vector_char_set_all (gsl_vector_char * v, char x);$/;"	p	signature:(gsl_vector_char * v, char x)
gsl_vector_char_set_basis	/usr/local/gsl/include/gsl/gsl_vector_char.h	/^int gsl_vector_char_set_basis (gsl_vector_char * v, size_t i);$/;"	p	signature:(gsl_vector_char * v, size_t i)
gsl_vector_char_set_zero	/usr/local/gsl/include/gsl/gsl_vector_char.h	/^void gsl_vector_char_set_zero (gsl_vector_char * v);$/;"	p	signature:(gsl_vector_char * v)
gsl_vector_char_sub	/usr/local/gsl/include/gsl/gsl_vector_char.h	/^int gsl_vector_char_sub (gsl_vector_char * a, const gsl_vector_char * b);$/;"	p	signature:(gsl_vector_char * a, const gsl_vector_char * b)
gsl_vector_char_subvector	/usr/local/gsl/include/gsl/gsl_vector_char.h	/^gsl_vector_char_subvector (gsl_vector_char *v, $/;"	p	signature:(gsl_vector_char *v, size_t i, size_t n)
gsl_vector_char_subvector_with_stride	/usr/local/gsl/include/gsl/gsl_vector_char.h	/^gsl_vector_char_subvector_with_stride (gsl_vector_char *v, $/;"	p	signature:(gsl_vector_char *v, size_t i, size_t stride, size_t n)
gsl_vector_char_swap	/usr/local/gsl/include/gsl/gsl_vector_char.h	/^int gsl_vector_char_swap (gsl_vector_char * v, gsl_vector_char * w);$/;"	p	signature:(gsl_vector_char * v, gsl_vector_char * w)
gsl_vector_char_swap_elements	/usr/local/gsl/include/gsl/gsl_vector_char.h	/^int gsl_vector_char_swap_elements (gsl_vector_char * v, const size_t i, const size_t j);$/;"	p	signature:(gsl_vector_char * v, const size_t i, const size_t j)
gsl_vector_char_view	/usr/local/gsl/include/gsl/gsl_vector_char.h	/^typedef _gsl_vector_char_view gsl_vector_char_view;$/;"	t
gsl_vector_char_view_array	/usr/local/gsl/include/gsl/gsl_vector_char.h	/^gsl_vector_char_view_array (char *v, size_t n);$/;"	p	signature:(char *v, size_t n)
gsl_vector_char_view_array_with_stride	/usr/local/gsl/include/gsl/gsl_vector_char.h	/^gsl_vector_char_view_array_with_stride (char *base,$/;"	p	signature:(char *base, size_t stride, size_t n)
gsl_vector_complex	/usr/local/gsl/include/gsl/gsl_vector_complex_double.h	/^} gsl_vector_complex;$/;"	t	typeref:struct:__anon134
gsl_vector_complex_add	/usr/local/gsl/include/gsl/gsl_vector_complex_double.h	/^int gsl_vector_complex_add (gsl_vector_complex * a, const gsl_vector_complex * b);$/;"	p	signature:(gsl_vector_complex * a, const gsl_vector_complex * b)
gsl_vector_complex_add_constant	/usr/local/gsl/include/gsl/gsl_vector_complex_double.h	/^int gsl_vector_complex_add_constant (gsl_vector_complex * a, const gsl_complex x);$/;"	p	signature:(gsl_vector_complex * a, const gsl_complex x)
gsl_vector_complex_alloc	/usr/local/gsl/include/gsl/gsl_vector_complex_double.h	/^gsl_vector_complex *gsl_vector_complex_alloc (const size_t n);$/;"	p	signature:(const size_t n)
gsl_vector_complex_alloc_col_from_matrix	/usr/local/gsl/include/gsl/gsl_matrix_complex_double.h	/^gsl_vector_complex_alloc_col_from_matrix (gsl_matrix_complex * m,$/;"	p	signature:(gsl_matrix_complex * m, const size_t j)
gsl_vector_complex_alloc_from_block	/usr/local/gsl/include/gsl/gsl_vector_complex_double.h	/^gsl_vector_complex_alloc_from_block (gsl_block_complex * b, $/;"	p	signature:(gsl_block_complex * b, const size_t offset, const size_t n, const size_t stride)
gsl_vector_complex_alloc_from_vector	/usr/local/gsl/include/gsl/gsl_vector_complex_double.h	/^gsl_vector_complex_alloc_from_vector (gsl_vector_complex * v, $/;"	p	signature:(gsl_vector_complex * v, const size_t offset, const size_t n, const size_t stride)
gsl_vector_complex_alloc_row_from_matrix	/usr/local/gsl/include/gsl/gsl_matrix_complex_double.h	/^gsl_vector_complex_alloc_row_from_matrix (gsl_matrix_complex * m,$/;"	p	signature:(gsl_matrix_complex * m, const size_t i)
gsl_vector_complex_calloc	/usr/local/gsl/include/gsl/gsl_vector_complex_double.h	/^gsl_vector_complex *gsl_vector_complex_calloc (const size_t n);$/;"	p	signature:(const size_t n)
gsl_vector_complex_const_imag	/usr/local/gsl/include/gsl/gsl_vector_complex_double.h	/^gsl_vector_complex_const_imag (const gsl_vector_complex *v);$/;"	p	signature:(const gsl_vector_complex *v)
gsl_vector_complex_const_ptr	/usr/local/gsl/include/gsl/gsl_vector_complex_double.h	/^INLINE_DECL const gsl_complex *gsl_vector_complex_const_ptr (const gsl_vector_complex * v, const size_t i);$/;"	p	signature:(const gsl_vector_complex * v, const size_t i)
gsl_vector_complex_const_ptr	/usr/local/gsl/include/gsl/gsl_vector_complex_double.h	/^gsl_vector_complex_const_ptr (const gsl_vector_complex * v,$/;"	f	signature:(const gsl_vector_complex * v, const size_t i)
gsl_vector_complex_const_real	/usr/local/gsl/include/gsl/gsl_vector_complex_double.h	/^gsl_vector_complex_const_real (const gsl_vector_complex *v);$/;"	p	signature:(const gsl_vector_complex *v)
gsl_vector_complex_const_subvector	/usr/local/gsl/include/gsl/gsl_vector_complex_double.h	/^gsl_vector_complex_const_subvector (const gsl_vector_complex *base,$/;"	p	signature:(const gsl_vector_complex *base, size_t i, size_t n)
gsl_vector_complex_const_subvector_with_stride	/usr/local/gsl/include/gsl/gsl_vector_complex_double.h	/^gsl_vector_complex_const_subvector_with_stride (const gsl_vector_complex *v, $/;"	p	signature:(const gsl_vector_complex *v, size_t i, size_t stride, size_t n)
gsl_vector_complex_const_view	/usr/local/gsl/include/gsl/gsl_vector_complex_double.h	/^typedef const _gsl_vector_complex_const_view gsl_vector_complex_const_view;$/;"	t
gsl_vector_complex_const_view_array	/usr/local/gsl/include/gsl/gsl_vector_complex_double.h	/^gsl_vector_complex_const_view_array (const double *base,$/;"	p	signature:(const double *base, size_t n)
gsl_vector_complex_const_view_array_with_stride	/usr/local/gsl/include/gsl/gsl_vector_complex_double.h	/^gsl_vector_complex_const_view_array_with_stride (const double *base,$/;"	p	signature:(const double *base, size_t stride, size_t n)
gsl_vector_complex_div	/usr/local/gsl/include/gsl/gsl_vector_complex_double.h	/^int gsl_vector_complex_div (gsl_vector_complex * a, const gsl_vector_complex * b);$/;"	p	signature:(gsl_vector_complex * a, const gsl_vector_complex * b)
gsl_vector_complex_float	/usr/local/gsl/include/gsl/gsl_vector_complex_float.h	/^} gsl_vector_complex_float;$/;"	t	typeref:struct:__anon115
gsl_vector_complex_float_add	/usr/local/gsl/include/gsl/gsl_vector_complex_float.h	/^int gsl_vector_complex_float_add (gsl_vector_complex_float * a, const gsl_vector_complex_float * b);$/;"	p	signature:(gsl_vector_complex_float * a, const gsl_vector_complex_float * b)
gsl_vector_complex_float_add_constant	/usr/local/gsl/include/gsl/gsl_vector_complex_float.h	/^int gsl_vector_complex_float_add_constant (gsl_vector_complex_float * a, const gsl_complex_float x);$/;"	p	signature:(gsl_vector_complex_float * a, const gsl_complex_float x)
gsl_vector_complex_float_alloc	/usr/local/gsl/include/gsl/gsl_vector_complex_float.h	/^gsl_vector_complex_float *gsl_vector_complex_float_alloc (const size_t n);$/;"	p	signature:(const size_t n)
gsl_vector_complex_float_alloc_col_from_matrix	/usr/local/gsl/include/gsl/gsl_matrix_complex_float.h	/^gsl_vector_complex_float_alloc_col_from_matrix (gsl_matrix_complex_float * m,$/;"	p	signature:(gsl_matrix_complex_float * m, const size_t j)
gsl_vector_complex_float_alloc_from_block	/usr/local/gsl/include/gsl/gsl_vector_complex_float.h	/^gsl_vector_complex_float_alloc_from_block (gsl_block_complex_float * b, $/;"	p	signature:(gsl_block_complex_float * b, const size_t offset, const size_t n, const size_t stride)
gsl_vector_complex_float_alloc_from_vector	/usr/local/gsl/include/gsl/gsl_vector_complex_float.h	/^gsl_vector_complex_float_alloc_from_vector (gsl_vector_complex_float * v, $/;"	p	signature:(gsl_vector_complex_float * v, const size_t offset, const size_t n, const size_t stride)
gsl_vector_complex_float_alloc_row_from_matrix	/usr/local/gsl/include/gsl/gsl_matrix_complex_float.h	/^gsl_vector_complex_float_alloc_row_from_matrix (gsl_matrix_complex_float * m,$/;"	p	signature:(gsl_matrix_complex_float * m, const size_t i)
gsl_vector_complex_float_calloc	/usr/local/gsl/include/gsl/gsl_vector_complex_float.h	/^gsl_vector_complex_float *gsl_vector_complex_float_calloc (const size_t n);$/;"	p	signature:(const size_t n)
gsl_vector_complex_float_const_imag	/usr/local/gsl/include/gsl/gsl_vector_complex_float.h	/^gsl_vector_complex_float_const_imag (const gsl_vector_complex_float *v);$/;"	p	signature:(const gsl_vector_complex_float *v)
gsl_vector_complex_float_const_ptr	/usr/local/gsl/include/gsl/gsl_vector_complex_float.h	/^INLINE_DECL const gsl_complex_float *gsl_vector_complex_float_const_ptr (const gsl_vector_complex_float * v, const size_t i);$/;"	p	signature:(const gsl_vector_complex_float * v, const size_t i)
gsl_vector_complex_float_const_ptr	/usr/local/gsl/include/gsl/gsl_vector_complex_float.h	/^gsl_vector_complex_float_const_ptr (const gsl_vector_complex_float * v,$/;"	f	signature:(const gsl_vector_complex_float * v, const size_t i)
gsl_vector_complex_float_const_real	/usr/local/gsl/include/gsl/gsl_vector_complex_float.h	/^gsl_vector_complex_float_const_real (const gsl_vector_complex_float *v);$/;"	p	signature:(const gsl_vector_complex_float *v)
gsl_vector_complex_float_const_subvector	/usr/local/gsl/include/gsl/gsl_vector_complex_float.h	/^gsl_vector_complex_float_const_subvector (const gsl_vector_complex_float *base,$/;"	p	signature:(const gsl_vector_complex_float *base, size_t i, size_t n)
gsl_vector_complex_float_const_subvector_with_stride	/usr/local/gsl/include/gsl/gsl_vector_complex_float.h	/^gsl_vector_complex_float_const_subvector_with_stride (const gsl_vector_complex_float *v, $/;"	p	signature:(const gsl_vector_complex_float *v, size_t i, size_t stride, size_t n)
gsl_vector_complex_float_const_view	/usr/local/gsl/include/gsl/gsl_vector_complex_float.h	/^typedef const _gsl_vector_complex_float_const_view gsl_vector_complex_float_const_view;$/;"	t
gsl_vector_complex_float_const_view_array	/usr/local/gsl/include/gsl/gsl_vector_complex_float.h	/^gsl_vector_complex_float_const_view_array (const float *base,$/;"	p	signature:(const float *base, size_t n)
gsl_vector_complex_float_const_view_array_with_stride	/usr/local/gsl/include/gsl/gsl_vector_complex_float.h	/^gsl_vector_complex_float_const_view_array_with_stride (const float *base,$/;"	p	signature:(const float *base, size_t stride, size_t n)
gsl_vector_complex_float_div	/usr/local/gsl/include/gsl/gsl_vector_complex_float.h	/^int gsl_vector_complex_float_div (gsl_vector_complex_float * a, const gsl_vector_complex_float * b);$/;"	p	signature:(gsl_vector_complex_float * a, const gsl_vector_complex_float * b)
gsl_vector_complex_float_fprintf	/usr/local/gsl/include/gsl/gsl_vector_complex_float.h	/^int gsl_vector_complex_float_fprintf (FILE * stream,$/;"	p	signature:(FILE * stream, const gsl_vector_complex_float * v, const char *format)
gsl_vector_complex_float_fread	/usr/local/gsl/include/gsl/gsl_vector_complex_float.h	/^int gsl_vector_complex_float_fread (FILE * stream,$/;"	p	signature:(FILE * stream, gsl_vector_complex_float * v)
gsl_vector_complex_float_free	/usr/local/gsl/include/gsl/gsl_vector_complex_float.h	/^void gsl_vector_complex_float_free (gsl_vector_complex_float * v);$/;"	p	signature:(gsl_vector_complex_float * v)
gsl_vector_complex_float_fscanf	/usr/local/gsl/include/gsl/gsl_vector_complex_float.h	/^int gsl_vector_complex_float_fscanf (FILE * stream,$/;"	p	signature:(FILE * stream, gsl_vector_complex_float * v)
gsl_vector_complex_float_fwrite	/usr/local/gsl/include/gsl/gsl_vector_complex_float.h	/^int gsl_vector_complex_float_fwrite (FILE * stream,$/;"	p	signature:(FILE * stream, const gsl_vector_complex_float * v)
gsl_vector_complex_float_get	/usr/local/gsl/include/gsl/gsl_vector_complex_float.h	/^INLINE_DECL gsl_complex_float gsl_vector_complex_float_get (const gsl_vector_complex_float * v, const size_t i);$/;"	p	signature:(const gsl_vector_complex_float * v, const size_t i)
gsl_vector_complex_float_get	/usr/local/gsl/include/gsl/gsl_vector_complex_float.h	/^gsl_vector_complex_float_get (const gsl_vector_complex_float * v,$/;"	f	signature:(const gsl_vector_complex_float * v, const size_t i)
gsl_vector_complex_float_imag	/usr/local/gsl/include/gsl/gsl_vector_complex_float.h	/^gsl_vector_complex_float_imag (gsl_vector_complex_float *v);$/;"	p	signature:(gsl_vector_complex_float *v)
gsl_vector_complex_float_isneg	/usr/local/gsl/include/gsl/gsl_vector_complex_float.h	/^int gsl_vector_complex_float_isneg (const gsl_vector_complex_float * v);$/;"	p	signature:(const gsl_vector_complex_float * v)
gsl_vector_complex_float_isnonneg	/usr/local/gsl/include/gsl/gsl_vector_complex_float.h	/^int gsl_vector_complex_float_isnonneg (const gsl_vector_complex_float * v);$/;"	p	signature:(const gsl_vector_complex_float * v)
gsl_vector_complex_float_isnull	/usr/local/gsl/include/gsl/gsl_vector_complex_float.h	/^int gsl_vector_complex_float_isnull (const gsl_vector_complex_float * v);$/;"	p	signature:(const gsl_vector_complex_float * v)
gsl_vector_complex_float_ispos	/usr/local/gsl/include/gsl/gsl_vector_complex_float.h	/^int gsl_vector_complex_float_ispos (const gsl_vector_complex_float * v);$/;"	p	signature:(const gsl_vector_complex_float * v)
gsl_vector_complex_float_memcpy	/usr/local/gsl/include/gsl/gsl_vector_complex_float.h	/^int gsl_vector_complex_float_memcpy (gsl_vector_complex_float * dest, const gsl_vector_complex_float * src);$/;"	p	signature:(gsl_vector_complex_float * dest, const gsl_vector_complex_float * src)
gsl_vector_complex_float_mul	/usr/local/gsl/include/gsl/gsl_vector_complex_float.h	/^int gsl_vector_complex_float_mul (gsl_vector_complex_float * a, const gsl_vector_complex_float * b);$/;"	p	signature:(gsl_vector_complex_float * a, const gsl_vector_complex_float * b)
gsl_vector_complex_float_ptr	/usr/local/gsl/include/gsl/gsl_vector_complex_float.h	/^INLINE_DECL gsl_complex_float *gsl_vector_complex_float_ptr (gsl_vector_complex_float * v, const size_t i);$/;"	p	signature:(gsl_vector_complex_float * v, const size_t i)
gsl_vector_complex_float_ptr	/usr/local/gsl/include/gsl/gsl_vector_complex_float.h	/^gsl_vector_complex_float_ptr (gsl_vector_complex_float * v,$/;"	f	signature:(gsl_vector_complex_float * v, const size_t i)
gsl_vector_complex_float_real	/usr/local/gsl/include/gsl/gsl_vector_complex_float.h	/^gsl_vector_complex_float_real (gsl_vector_complex_float *v);$/;"	p	signature:(gsl_vector_complex_float *v)
gsl_vector_complex_float_reverse	/usr/local/gsl/include/gsl/gsl_vector_complex_float.h	/^int gsl_vector_complex_float_reverse (gsl_vector_complex_float * v);$/;"	p	signature:(gsl_vector_complex_float * v)
gsl_vector_complex_float_scale	/usr/local/gsl/include/gsl/gsl_vector_complex_float.h	/^int gsl_vector_complex_float_scale (gsl_vector_complex_float * a, const gsl_complex_float x);$/;"	p	signature:(gsl_vector_complex_float * a, const gsl_complex_float x)
gsl_vector_complex_float_set	/usr/local/gsl/include/gsl/gsl_vector_complex_float.h	/^INLINE_DECL void gsl_vector_complex_float_set (gsl_vector_complex_float * v, const size_t i, gsl_complex_float z);$/;"	p	signature:(gsl_vector_complex_float * v, const size_t i, gsl_complex_float z)
gsl_vector_complex_float_set	/usr/local/gsl/include/gsl/gsl_vector_complex_float.h	/^gsl_vector_complex_float_set (gsl_vector_complex_float * v,$/;"	f	signature:(gsl_vector_complex_float * v, const size_t i, gsl_complex_float z)
gsl_vector_complex_float_set_all	/usr/local/gsl/include/gsl/gsl_vector_complex_float.h	/^void gsl_vector_complex_float_set_all (gsl_vector_complex_float * v,$/;"	p	signature:(gsl_vector_complex_float * v, gsl_complex_float z)
gsl_vector_complex_float_set_basis	/usr/local/gsl/include/gsl/gsl_vector_complex_float.h	/^int gsl_vector_complex_float_set_basis (gsl_vector_complex_float * v, size_t i);$/;"	p	signature:(gsl_vector_complex_float * v, size_t i)
gsl_vector_complex_float_set_zero	/usr/local/gsl/include/gsl/gsl_vector_complex_float.h	/^void gsl_vector_complex_float_set_zero (gsl_vector_complex_float * v);$/;"	p	signature:(gsl_vector_complex_float * v)
gsl_vector_complex_float_sub	/usr/local/gsl/include/gsl/gsl_vector_complex_float.h	/^int gsl_vector_complex_float_sub (gsl_vector_complex_float * a, const gsl_vector_complex_float * b);$/;"	p	signature:(gsl_vector_complex_float * a, const gsl_vector_complex_float * b)
gsl_vector_complex_float_subvector	/usr/local/gsl/include/gsl/gsl_vector_complex_float.h	/^gsl_vector_complex_float_subvector (gsl_vector_complex_float *base,$/;"	p	signature:(gsl_vector_complex_float *base, size_t i, size_t n)
gsl_vector_complex_float_subvector_with_stride	/usr/local/gsl/include/gsl/gsl_vector_complex_float.h	/^gsl_vector_complex_float_subvector_with_stride (gsl_vector_complex_float *v, $/;"	p	signature:(gsl_vector_complex_float *v, size_t i, size_t stride, size_t n)
gsl_vector_complex_float_swap	/usr/local/gsl/include/gsl/gsl_vector_complex_float.h	/^int gsl_vector_complex_float_swap (gsl_vector_complex_float * v, gsl_vector_complex_float * w);$/;"	p	signature:(gsl_vector_complex_float * v, gsl_vector_complex_float * w)
gsl_vector_complex_float_swap_elements	/usr/local/gsl/include/gsl/gsl_vector_complex_float.h	/^int gsl_vector_complex_float_swap_elements (gsl_vector_complex_float * v, const size_t i, const size_t j);$/;"	p	signature:(gsl_vector_complex_float * v, const size_t i, const size_t j)
gsl_vector_complex_float_view	/usr/local/gsl/include/gsl/gsl_vector_complex_float.h	/^typedef _gsl_vector_complex_float_view gsl_vector_complex_float_view;$/;"	t
gsl_vector_complex_float_view_array	/usr/local/gsl/include/gsl/gsl_vector_complex_float.h	/^gsl_vector_complex_float_view_array (float *base,$/;"	p	signature:(float *base, size_t n)
gsl_vector_complex_float_view_array_with_stride	/usr/local/gsl/include/gsl/gsl_vector_complex_float.h	/^gsl_vector_complex_float_view_array_with_stride (float *base,$/;"	p	signature:(float *base, size_t stride, size_t n)
gsl_vector_complex_fprintf	/usr/local/gsl/include/gsl/gsl_vector_complex_double.h	/^int gsl_vector_complex_fprintf (FILE * stream,$/;"	p	signature:(FILE * stream, const gsl_vector_complex * v, const char *format)
gsl_vector_complex_fread	/usr/local/gsl/include/gsl/gsl_vector_complex_double.h	/^int gsl_vector_complex_fread (FILE * stream,$/;"	p	signature:(FILE * stream, gsl_vector_complex * v)
gsl_vector_complex_free	/usr/local/gsl/include/gsl/gsl_vector_complex_double.h	/^void gsl_vector_complex_free (gsl_vector_complex * v);$/;"	p	signature:(gsl_vector_complex * v)
gsl_vector_complex_fscanf	/usr/local/gsl/include/gsl/gsl_vector_complex_double.h	/^int gsl_vector_complex_fscanf (FILE * stream,$/;"	p	signature:(FILE * stream, gsl_vector_complex * v)
gsl_vector_complex_fwrite	/usr/local/gsl/include/gsl/gsl_vector_complex_double.h	/^int gsl_vector_complex_fwrite (FILE * stream,$/;"	p	signature:(FILE * stream, const gsl_vector_complex * v)
gsl_vector_complex_get	/usr/local/gsl/include/gsl/gsl_vector_complex_double.h	/^INLINE_DECL gsl_complex gsl_vector_complex_get (const gsl_vector_complex * v, const size_t i);$/;"	p	signature:(const gsl_vector_complex * v, const size_t i)
gsl_vector_complex_get	/usr/local/gsl/include/gsl/gsl_vector_complex_double.h	/^gsl_vector_complex_get (const gsl_vector_complex * v,$/;"	f	signature:(const gsl_vector_complex * v, const size_t i)
gsl_vector_complex_imag	/usr/local/gsl/include/gsl/gsl_vector_complex_double.h	/^gsl_vector_complex_imag (gsl_vector_complex *v);$/;"	p	signature:(gsl_vector_complex *v)
gsl_vector_complex_isneg	/usr/local/gsl/include/gsl/gsl_vector_complex_double.h	/^int gsl_vector_complex_isneg (const gsl_vector_complex * v);$/;"	p	signature:(const gsl_vector_complex * v)
gsl_vector_complex_isnonneg	/usr/local/gsl/include/gsl/gsl_vector_complex_double.h	/^int gsl_vector_complex_isnonneg (const gsl_vector_complex * v);$/;"	p	signature:(const gsl_vector_complex * v)
gsl_vector_complex_isnull	/usr/local/gsl/include/gsl/gsl_vector_complex_double.h	/^int gsl_vector_complex_isnull (const gsl_vector_complex * v);$/;"	p	signature:(const gsl_vector_complex * v)
gsl_vector_complex_ispos	/usr/local/gsl/include/gsl/gsl_vector_complex_double.h	/^int gsl_vector_complex_ispos (const gsl_vector_complex * v);$/;"	p	signature:(const gsl_vector_complex * v)
gsl_vector_complex_long_double	/usr/local/gsl/include/gsl/gsl_vector_complex_long_double.h	/^} gsl_vector_complex_long_double;$/;"	t	typeref:struct:__anon31
gsl_vector_complex_long_double_add	/usr/local/gsl/include/gsl/gsl_vector_complex_long_double.h	/^int gsl_vector_complex_long_double_add (gsl_vector_complex_long_double * a, const gsl_vector_complex_long_double * b);$/;"	p	signature:(gsl_vector_complex_long_double * a, const gsl_vector_complex_long_double * b)
gsl_vector_complex_long_double_add_constant	/usr/local/gsl/include/gsl/gsl_vector_complex_long_double.h	/^int gsl_vector_complex_long_double_add_constant (gsl_vector_complex_long_double * a, const gsl_complex_long_double x);$/;"	p	signature:(gsl_vector_complex_long_double * a, const gsl_complex_long_double x)
gsl_vector_complex_long_double_alloc	/usr/local/gsl/include/gsl/gsl_vector_complex_long_double.h	/^gsl_vector_complex_long_double *gsl_vector_complex_long_double_alloc (const size_t n);$/;"	p	signature:(const size_t n)
gsl_vector_complex_long_double_alloc_col_from_matrix	/usr/local/gsl/include/gsl/gsl_matrix_complex_long_double.h	/^gsl_vector_complex_long_double_alloc_col_from_matrix (gsl_matrix_complex_long_double * m,$/;"	p	signature:(gsl_matrix_complex_long_double * m, const size_t j)
gsl_vector_complex_long_double_alloc_from_block	/usr/local/gsl/include/gsl/gsl_vector_complex_long_double.h	/^gsl_vector_complex_long_double_alloc_from_block (gsl_block_complex_long_double * b, $/;"	p	signature:(gsl_block_complex_long_double * b, const size_t offset, const size_t n, const size_t stride)
gsl_vector_complex_long_double_alloc_from_vector	/usr/local/gsl/include/gsl/gsl_vector_complex_long_double.h	/^gsl_vector_complex_long_double_alloc_from_vector (gsl_vector_complex_long_double * v, $/;"	p	signature:(gsl_vector_complex_long_double * v, const size_t offset, const size_t n, const size_t stride)
gsl_vector_complex_long_double_alloc_row_from_matrix	/usr/local/gsl/include/gsl/gsl_matrix_complex_long_double.h	/^gsl_vector_complex_long_double_alloc_row_from_matrix (gsl_matrix_complex_long_double * m,$/;"	p	signature:(gsl_matrix_complex_long_double * m, const size_t i)
gsl_vector_complex_long_double_calloc	/usr/local/gsl/include/gsl/gsl_vector_complex_long_double.h	/^gsl_vector_complex_long_double *gsl_vector_complex_long_double_calloc (const size_t n);$/;"	p	signature:(const size_t n)
gsl_vector_complex_long_double_const_imag	/usr/local/gsl/include/gsl/gsl_vector_complex_long_double.h	/^gsl_vector_complex_long_double_const_imag (const gsl_vector_complex_long_double *v);$/;"	p	signature:(const gsl_vector_complex_long_double *v)
gsl_vector_complex_long_double_const_ptr	/usr/local/gsl/include/gsl/gsl_vector_complex_long_double.h	/^INLINE_DECL const gsl_complex_long_double *gsl_vector_complex_long_double_const_ptr (const gsl_vector_complex_long_double * v, const size_t i);$/;"	p	signature:(const gsl_vector_complex_long_double * v, const size_t i)
gsl_vector_complex_long_double_const_ptr	/usr/local/gsl/include/gsl/gsl_vector_complex_long_double.h	/^gsl_vector_complex_long_double_const_ptr (const gsl_vector_complex_long_double * v,$/;"	f	signature:(const gsl_vector_complex_long_double * v, const size_t i)
gsl_vector_complex_long_double_const_real	/usr/local/gsl/include/gsl/gsl_vector_complex_long_double.h	/^gsl_vector_complex_long_double_const_real (const gsl_vector_complex_long_double *v);$/;"	p	signature:(const gsl_vector_complex_long_double *v)
gsl_vector_complex_long_double_const_subvector	/usr/local/gsl/include/gsl/gsl_vector_complex_long_double.h	/^gsl_vector_complex_long_double_const_subvector (const gsl_vector_complex_long_double *base,$/;"	p	signature:(const gsl_vector_complex_long_double *base, size_t i, size_t n)
gsl_vector_complex_long_double_const_subvector_with_stride	/usr/local/gsl/include/gsl/gsl_vector_complex_long_double.h	/^gsl_vector_complex_long_double_const_subvector_with_stride (const gsl_vector_complex_long_double *v, $/;"	p	signature:(const gsl_vector_complex_long_double *v, size_t i, size_t stride, size_t n)
gsl_vector_complex_long_double_const_view	/usr/local/gsl/include/gsl/gsl_vector_complex_long_double.h	/^typedef const _gsl_vector_complex_long_double_const_view gsl_vector_complex_long_double_const_view;$/;"	t
gsl_vector_complex_long_double_const_view_array	/usr/local/gsl/include/gsl/gsl_vector_complex_long_double.h	/^gsl_vector_complex_long_double_const_view_array (const long double *base,$/;"	p	signature:(const long double *base, size_t n)
gsl_vector_complex_long_double_const_view_array_with_stride	/usr/local/gsl/include/gsl/gsl_vector_complex_long_double.h	/^gsl_vector_complex_long_double_const_view_array_with_stride (const long double *base,$/;"	p	signature:(const long double *base, size_t stride, size_t n)
gsl_vector_complex_long_double_div	/usr/local/gsl/include/gsl/gsl_vector_complex_long_double.h	/^int gsl_vector_complex_long_double_div (gsl_vector_complex_long_double * a, const gsl_vector_complex_long_double * b);$/;"	p	signature:(gsl_vector_complex_long_double * a, const gsl_vector_complex_long_double * b)
gsl_vector_complex_long_double_fprintf	/usr/local/gsl/include/gsl/gsl_vector_complex_long_double.h	/^int gsl_vector_complex_long_double_fprintf (FILE * stream,$/;"	p	signature:(FILE * stream, const gsl_vector_complex_long_double * v, const char *format)
gsl_vector_complex_long_double_fread	/usr/local/gsl/include/gsl/gsl_vector_complex_long_double.h	/^int gsl_vector_complex_long_double_fread (FILE * stream,$/;"	p	signature:(FILE * stream, gsl_vector_complex_long_double * v)
gsl_vector_complex_long_double_free	/usr/local/gsl/include/gsl/gsl_vector_complex_long_double.h	/^void gsl_vector_complex_long_double_free (gsl_vector_complex_long_double * v);$/;"	p	signature:(gsl_vector_complex_long_double * v)
gsl_vector_complex_long_double_fscanf	/usr/local/gsl/include/gsl/gsl_vector_complex_long_double.h	/^int gsl_vector_complex_long_double_fscanf (FILE * stream,$/;"	p	signature:(FILE * stream, gsl_vector_complex_long_double * v)
gsl_vector_complex_long_double_fwrite	/usr/local/gsl/include/gsl/gsl_vector_complex_long_double.h	/^int gsl_vector_complex_long_double_fwrite (FILE * stream,$/;"	p	signature:(FILE * stream, const gsl_vector_complex_long_double * v)
gsl_vector_complex_long_double_get	/usr/local/gsl/include/gsl/gsl_vector_complex_long_double.h	/^INLINE_DECL gsl_complex_long_double gsl_vector_complex_long_double_get (const gsl_vector_complex_long_double * v, const size_t i);$/;"	p	signature:(const gsl_vector_complex_long_double * v, const size_t i)
gsl_vector_complex_long_double_get	/usr/local/gsl/include/gsl/gsl_vector_complex_long_double.h	/^gsl_vector_complex_long_double_get (const gsl_vector_complex_long_double * v,$/;"	f	signature:(const gsl_vector_complex_long_double * v, const size_t i)
gsl_vector_complex_long_double_imag	/usr/local/gsl/include/gsl/gsl_vector_complex_long_double.h	/^gsl_vector_complex_long_double_imag (gsl_vector_complex_long_double *v);$/;"	p	signature:(gsl_vector_complex_long_double *v)
gsl_vector_complex_long_double_isneg	/usr/local/gsl/include/gsl/gsl_vector_complex_long_double.h	/^int gsl_vector_complex_long_double_isneg (const gsl_vector_complex_long_double * v);$/;"	p	signature:(const gsl_vector_complex_long_double * v)
gsl_vector_complex_long_double_isnonneg	/usr/local/gsl/include/gsl/gsl_vector_complex_long_double.h	/^int gsl_vector_complex_long_double_isnonneg (const gsl_vector_complex_long_double * v);$/;"	p	signature:(const gsl_vector_complex_long_double * v)
gsl_vector_complex_long_double_isnull	/usr/local/gsl/include/gsl/gsl_vector_complex_long_double.h	/^int gsl_vector_complex_long_double_isnull (const gsl_vector_complex_long_double * v);$/;"	p	signature:(const gsl_vector_complex_long_double * v)
gsl_vector_complex_long_double_ispos	/usr/local/gsl/include/gsl/gsl_vector_complex_long_double.h	/^int gsl_vector_complex_long_double_ispos (const gsl_vector_complex_long_double * v);$/;"	p	signature:(const gsl_vector_complex_long_double * v)
gsl_vector_complex_long_double_memcpy	/usr/local/gsl/include/gsl/gsl_vector_complex_long_double.h	/^int gsl_vector_complex_long_double_memcpy (gsl_vector_complex_long_double * dest, const gsl_vector_complex_long_double * src);$/;"	p	signature:(gsl_vector_complex_long_double * dest, const gsl_vector_complex_long_double * src)
gsl_vector_complex_long_double_mul	/usr/local/gsl/include/gsl/gsl_vector_complex_long_double.h	/^int gsl_vector_complex_long_double_mul (gsl_vector_complex_long_double * a, const gsl_vector_complex_long_double * b);$/;"	p	signature:(gsl_vector_complex_long_double * a, const gsl_vector_complex_long_double * b)
gsl_vector_complex_long_double_ptr	/usr/local/gsl/include/gsl/gsl_vector_complex_long_double.h	/^INLINE_DECL gsl_complex_long_double *gsl_vector_complex_long_double_ptr (gsl_vector_complex_long_double * v, const size_t i);$/;"	p	signature:(gsl_vector_complex_long_double * v, const size_t i)
gsl_vector_complex_long_double_ptr	/usr/local/gsl/include/gsl/gsl_vector_complex_long_double.h	/^gsl_vector_complex_long_double_ptr (gsl_vector_complex_long_double * v,$/;"	f	signature:(gsl_vector_complex_long_double * v, const size_t i)
gsl_vector_complex_long_double_real	/usr/local/gsl/include/gsl/gsl_vector_complex_long_double.h	/^gsl_vector_complex_long_double_real (gsl_vector_complex_long_double *v);$/;"	p	signature:(gsl_vector_complex_long_double *v)
gsl_vector_complex_long_double_reverse	/usr/local/gsl/include/gsl/gsl_vector_complex_long_double.h	/^int gsl_vector_complex_long_double_reverse (gsl_vector_complex_long_double * v);$/;"	p	signature:(gsl_vector_complex_long_double * v)
gsl_vector_complex_long_double_scale	/usr/local/gsl/include/gsl/gsl_vector_complex_long_double.h	/^int gsl_vector_complex_long_double_scale (gsl_vector_complex_long_double * a, const gsl_complex_long_double x);$/;"	p	signature:(gsl_vector_complex_long_double * a, const gsl_complex_long_double x)
gsl_vector_complex_long_double_set	/usr/local/gsl/include/gsl/gsl_vector_complex_long_double.h	/^INLINE_DECL void gsl_vector_complex_long_double_set (gsl_vector_complex_long_double * v, const size_t i, gsl_complex_long_double z);$/;"	p	signature:(gsl_vector_complex_long_double * v, const size_t i, gsl_complex_long_double z)
gsl_vector_complex_long_double_set	/usr/local/gsl/include/gsl/gsl_vector_complex_long_double.h	/^gsl_vector_complex_long_double_set (gsl_vector_complex_long_double * v,$/;"	f	signature:(gsl_vector_complex_long_double * v, const size_t i, gsl_complex_long_double z)
gsl_vector_complex_long_double_set_all	/usr/local/gsl/include/gsl/gsl_vector_complex_long_double.h	/^void gsl_vector_complex_long_double_set_all (gsl_vector_complex_long_double * v,$/;"	p	signature:(gsl_vector_complex_long_double * v, gsl_complex_long_double z)
gsl_vector_complex_long_double_set_basis	/usr/local/gsl/include/gsl/gsl_vector_complex_long_double.h	/^int gsl_vector_complex_long_double_set_basis (gsl_vector_complex_long_double * v, size_t i);$/;"	p	signature:(gsl_vector_complex_long_double * v, size_t i)
gsl_vector_complex_long_double_set_zero	/usr/local/gsl/include/gsl/gsl_vector_complex_long_double.h	/^void gsl_vector_complex_long_double_set_zero (gsl_vector_complex_long_double * v);$/;"	p	signature:(gsl_vector_complex_long_double * v)
gsl_vector_complex_long_double_sub	/usr/local/gsl/include/gsl/gsl_vector_complex_long_double.h	/^int gsl_vector_complex_long_double_sub (gsl_vector_complex_long_double * a, const gsl_vector_complex_long_double * b);$/;"	p	signature:(gsl_vector_complex_long_double * a, const gsl_vector_complex_long_double * b)
gsl_vector_complex_long_double_subvector	/usr/local/gsl/include/gsl/gsl_vector_complex_long_double.h	/^gsl_vector_complex_long_double_subvector (gsl_vector_complex_long_double *base,$/;"	p	signature:(gsl_vector_complex_long_double *base, size_t i, size_t n)
gsl_vector_complex_long_double_subvector_with_stride	/usr/local/gsl/include/gsl/gsl_vector_complex_long_double.h	/^gsl_vector_complex_long_double_subvector_with_stride (gsl_vector_complex_long_double *v, $/;"	p	signature:(gsl_vector_complex_long_double *v, size_t i, size_t stride, size_t n)
gsl_vector_complex_long_double_swap	/usr/local/gsl/include/gsl/gsl_vector_complex_long_double.h	/^int gsl_vector_complex_long_double_swap (gsl_vector_complex_long_double * v, gsl_vector_complex_long_double * w);$/;"	p	signature:(gsl_vector_complex_long_double * v, gsl_vector_complex_long_double * w)
gsl_vector_complex_long_double_swap_elements	/usr/local/gsl/include/gsl/gsl_vector_complex_long_double.h	/^int gsl_vector_complex_long_double_swap_elements (gsl_vector_complex_long_double * v, const size_t i, const size_t j);$/;"	p	signature:(gsl_vector_complex_long_double * v, const size_t i, const size_t j)
gsl_vector_complex_long_double_view	/usr/local/gsl/include/gsl/gsl_vector_complex_long_double.h	/^typedef _gsl_vector_complex_long_double_view gsl_vector_complex_long_double_view;$/;"	t
gsl_vector_complex_long_double_view_array	/usr/local/gsl/include/gsl/gsl_vector_complex_long_double.h	/^gsl_vector_complex_long_double_view_array (long double *base,$/;"	p	signature:(long double *base, size_t n)
gsl_vector_complex_long_double_view_array_with_stride	/usr/local/gsl/include/gsl/gsl_vector_complex_long_double.h	/^gsl_vector_complex_long_double_view_array_with_stride (long double *base,$/;"	p	signature:(long double *base, size_t stride, size_t n)
gsl_vector_complex_memcpy	/usr/local/gsl/include/gsl/gsl_vector_complex_double.h	/^int gsl_vector_complex_memcpy (gsl_vector_complex * dest, const gsl_vector_complex * src);$/;"	p	signature:(gsl_vector_complex * dest, const gsl_vector_complex * src)
gsl_vector_complex_mul	/usr/local/gsl/include/gsl/gsl_vector_complex_double.h	/^int gsl_vector_complex_mul (gsl_vector_complex * a, const gsl_vector_complex * b);$/;"	p	signature:(gsl_vector_complex * a, const gsl_vector_complex * b)
gsl_vector_complex_ptr	/usr/local/gsl/include/gsl/gsl_vector_complex_double.h	/^INLINE_DECL gsl_complex *gsl_vector_complex_ptr (gsl_vector_complex * v, const size_t i);$/;"	p	signature:(gsl_vector_complex * v, const size_t i)
gsl_vector_complex_ptr	/usr/local/gsl/include/gsl/gsl_vector_complex_double.h	/^gsl_vector_complex_ptr (gsl_vector_complex * v,$/;"	f	signature:(gsl_vector_complex * v, const size_t i)
gsl_vector_complex_real	/usr/local/gsl/include/gsl/gsl_vector_complex_double.h	/^gsl_vector_complex_real (gsl_vector_complex *v);$/;"	p	signature:(gsl_vector_complex *v)
gsl_vector_complex_reverse	/usr/local/gsl/include/gsl/gsl_vector_complex_double.h	/^int gsl_vector_complex_reverse (gsl_vector_complex * v);$/;"	p	signature:(gsl_vector_complex * v)
gsl_vector_complex_scale	/usr/local/gsl/include/gsl/gsl_vector_complex_double.h	/^int gsl_vector_complex_scale (gsl_vector_complex * a, const gsl_complex x);$/;"	p	signature:(gsl_vector_complex * a, const gsl_complex x)
gsl_vector_complex_set	/usr/local/gsl/include/gsl/gsl_vector_complex_double.h	/^INLINE_DECL void gsl_vector_complex_set (gsl_vector_complex * v, const size_t i, gsl_complex z);$/;"	p	signature:(gsl_vector_complex * v, const size_t i, gsl_complex z)
gsl_vector_complex_set	/usr/local/gsl/include/gsl/gsl_vector_complex_double.h	/^gsl_vector_complex_set (gsl_vector_complex * v,$/;"	f	signature:(gsl_vector_complex * v, const size_t i, gsl_complex z)
gsl_vector_complex_set_all	/usr/local/gsl/include/gsl/gsl_vector_complex_double.h	/^void gsl_vector_complex_set_all (gsl_vector_complex * v,$/;"	p	signature:(gsl_vector_complex * v, gsl_complex z)
gsl_vector_complex_set_basis	/usr/local/gsl/include/gsl/gsl_vector_complex_double.h	/^int gsl_vector_complex_set_basis (gsl_vector_complex * v, size_t i);$/;"	p	signature:(gsl_vector_complex * v, size_t i)
gsl_vector_complex_set_zero	/usr/local/gsl/include/gsl/gsl_vector_complex_double.h	/^void gsl_vector_complex_set_zero (gsl_vector_complex * v);$/;"	p	signature:(gsl_vector_complex * v)
gsl_vector_complex_sub	/usr/local/gsl/include/gsl/gsl_vector_complex_double.h	/^int gsl_vector_complex_sub (gsl_vector_complex * a, const gsl_vector_complex * b);$/;"	p	signature:(gsl_vector_complex * a, const gsl_vector_complex * b)
gsl_vector_complex_subvector	/usr/local/gsl/include/gsl/gsl_vector_complex_double.h	/^gsl_vector_complex_subvector (gsl_vector_complex *base,$/;"	p	signature:(gsl_vector_complex *base, size_t i, size_t n)
gsl_vector_complex_subvector_with_stride	/usr/local/gsl/include/gsl/gsl_vector_complex_double.h	/^gsl_vector_complex_subvector_with_stride (gsl_vector_complex *v, $/;"	p	signature:(gsl_vector_complex *v, size_t i, size_t stride, size_t n)
gsl_vector_complex_swap	/usr/local/gsl/include/gsl/gsl_vector_complex_double.h	/^int gsl_vector_complex_swap (gsl_vector_complex * v, gsl_vector_complex * w);$/;"	p	signature:(gsl_vector_complex * v, gsl_vector_complex * w)
gsl_vector_complex_swap_elements	/usr/local/gsl/include/gsl/gsl_vector_complex_double.h	/^int gsl_vector_complex_swap_elements (gsl_vector_complex * v, const size_t i, const size_t j);$/;"	p	signature:(gsl_vector_complex * v, const size_t i, const size_t j)
gsl_vector_complex_view	/usr/local/gsl/include/gsl/gsl_vector_complex_double.h	/^typedef _gsl_vector_complex_view gsl_vector_complex_view;$/;"	t
gsl_vector_complex_view_array	/usr/local/gsl/include/gsl/gsl_vector_complex_double.h	/^gsl_vector_complex_view_array (double *base,$/;"	p	signature:(double *base, size_t n)
gsl_vector_complex_view_array_with_stride	/usr/local/gsl/include/gsl/gsl_vector_complex_double.h	/^gsl_vector_complex_view_array_with_stride (double *base,$/;"	p	signature:(double *base, size_t stride, size_t n)
gsl_vector_const_ptr	/usr/local/gsl/include/gsl/gsl_vector_double.h	/^INLINE_DECL const double * gsl_vector_const_ptr (const gsl_vector * v, const size_t i);$/;"	p	signature:(const gsl_vector * v, const size_t i)
gsl_vector_const_ptr	/usr/local/gsl/include/gsl/gsl_vector_double.h	/^gsl_vector_const_ptr (const gsl_vector * v, const size_t i)$/;"	f	signature:(const gsl_vector * v, const size_t i)
gsl_vector_const_subvector	/usr/local/gsl/include/gsl/gsl_vector_double.h	/^gsl_vector_const_subvector (const gsl_vector *v, $/;"	p	signature:(const gsl_vector *v, size_t i, size_t n)
gsl_vector_const_subvector_with_stride	/usr/local/gsl/include/gsl/gsl_vector_double.h	/^gsl_vector_const_subvector_with_stride (const gsl_vector *v, $/;"	p	signature:(const gsl_vector *v, size_t i, size_t stride, size_t n)
gsl_vector_const_view	/usr/local/gsl/include/gsl/gsl_vector_double.h	/^typedef const _gsl_vector_const_view gsl_vector_const_view;$/;"	t
gsl_vector_const_view_array	/usr/local/gsl/include/gsl/gsl_vector_double.h	/^gsl_vector_const_view_array (const double *v, size_t n);$/;"	p	signature:(const double *v, size_t n)
gsl_vector_const_view_array_with_stride	/usr/local/gsl/include/gsl/gsl_vector_double.h	/^gsl_vector_const_view_array_with_stride (const double *base,$/;"	p	signature:(const double *base, size_t stride, size_t n)
gsl_vector_div	/usr/local/gsl/include/gsl/gsl_vector_double.h	/^int gsl_vector_div (gsl_vector * a, const gsl_vector * b);$/;"	p	signature:(gsl_vector * a, const gsl_vector * b)
gsl_vector_float	/usr/local/gsl/include/gsl/gsl_vector_float.h	/^gsl_vector_float;$/;"	t	typeref:struct:__anon35
gsl_vector_float_add	/usr/local/gsl/include/gsl/gsl_vector_float.h	/^int gsl_vector_float_add (gsl_vector_float * a, const gsl_vector_float * b);$/;"	p	signature:(gsl_vector_float * a, const gsl_vector_float * b)
gsl_vector_float_add_constant	/usr/local/gsl/include/gsl/gsl_vector_float.h	/^int gsl_vector_float_add_constant (gsl_vector_float * a, const double x);$/;"	p	signature:(gsl_vector_float * a, const double x)
gsl_vector_float_alloc	/usr/local/gsl/include/gsl/gsl_vector_float.h	/^gsl_vector_float *gsl_vector_float_alloc (const size_t n);$/;"	p	signature:(const size_t n)
gsl_vector_float_alloc_col_from_matrix	/usr/local/gsl/include/gsl/gsl_matrix_float.h	/^gsl_vector_float_alloc_col_from_matrix (gsl_matrix_float * m,$/;"	p	signature:(gsl_matrix_float * m, const size_t j)
gsl_vector_float_alloc_from_block	/usr/local/gsl/include/gsl/gsl_vector_float.h	/^gsl_vector_float *gsl_vector_float_alloc_from_block (gsl_block_float * b,$/;"	p	signature:(gsl_block_float * b, const size_t offset, const size_t n, const size_t stride)
gsl_vector_float_alloc_from_vector	/usr/local/gsl/include/gsl/gsl_vector_float.h	/^gsl_vector_float *gsl_vector_float_alloc_from_vector (gsl_vector_float * v,$/;"	p	signature:(gsl_vector_float * v, const size_t offset, const size_t n, const size_t stride)
gsl_vector_float_alloc_row_from_matrix	/usr/local/gsl/include/gsl/gsl_matrix_float.h	/^gsl_vector_float_alloc_row_from_matrix (gsl_matrix_float * m,$/;"	p	signature:(gsl_matrix_float * m, const size_t i)
gsl_vector_float_calloc	/usr/local/gsl/include/gsl/gsl_vector_float.h	/^gsl_vector_float *gsl_vector_float_calloc (const size_t n);$/;"	p	signature:(const size_t n)
gsl_vector_float_const_ptr	/usr/local/gsl/include/gsl/gsl_vector_float.h	/^INLINE_DECL const float * gsl_vector_float_const_ptr (const gsl_vector_float * v, const size_t i);$/;"	p	signature:(const gsl_vector_float * v, const size_t i)
gsl_vector_float_const_ptr	/usr/local/gsl/include/gsl/gsl_vector_float.h	/^gsl_vector_float_const_ptr (const gsl_vector_float * v, const size_t i)$/;"	f	signature:(const gsl_vector_float * v, const size_t i)
gsl_vector_float_const_subvector	/usr/local/gsl/include/gsl/gsl_vector_float.h	/^gsl_vector_float_const_subvector (const gsl_vector_float *v, $/;"	p	signature:(const gsl_vector_float *v, size_t i, size_t n)
gsl_vector_float_const_subvector_with_stride	/usr/local/gsl/include/gsl/gsl_vector_float.h	/^gsl_vector_float_const_subvector_with_stride (const gsl_vector_float *v, $/;"	p	signature:(const gsl_vector_float *v, size_t i, size_t stride, size_t n)
gsl_vector_float_const_view	/usr/local/gsl/include/gsl/gsl_vector_float.h	/^typedef const _gsl_vector_float_const_view gsl_vector_float_const_view;$/;"	t
gsl_vector_float_const_view_array	/usr/local/gsl/include/gsl/gsl_vector_float.h	/^gsl_vector_float_const_view_array (const float *v, size_t n);$/;"	p	signature:(const float *v, size_t n)
gsl_vector_float_const_view_array_with_stride	/usr/local/gsl/include/gsl/gsl_vector_float.h	/^gsl_vector_float_const_view_array_with_stride (const float *base,$/;"	p	signature:(const float *base, size_t stride, size_t n)
gsl_vector_float_div	/usr/local/gsl/include/gsl/gsl_vector_float.h	/^int gsl_vector_float_div (gsl_vector_float * a, const gsl_vector_float * b);$/;"	p	signature:(gsl_vector_float * a, const gsl_vector_float * b)
gsl_vector_float_fprintf	/usr/local/gsl/include/gsl/gsl_vector_float.h	/^int gsl_vector_float_fprintf (FILE * stream, const gsl_vector_float * v,$/;"	p	signature:(FILE * stream, const gsl_vector_float * v, const char *format)
gsl_vector_float_fread	/usr/local/gsl/include/gsl/gsl_vector_float.h	/^int gsl_vector_float_fread (FILE * stream, gsl_vector_float * v);$/;"	p	signature:(FILE * stream, gsl_vector_float * v)
gsl_vector_float_free	/usr/local/gsl/include/gsl/gsl_vector_float.h	/^void gsl_vector_float_free (gsl_vector_float * v);$/;"	p	signature:(gsl_vector_float * v)
gsl_vector_float_fscanf	/usr/local/gsl/include/gsl/gsl_vector_float.h	/^int gsl_vector_float_fscanf (FILE * stream, gsl_vector_float * v);$/;"	p	signature:(FILE * stream, gsl_vector_float * v)
gsl_vector_float_fwrite	/usr/local/gsl/include/gsl/gsl_vector_float.h	/^int gsl_vector_float_fwrite (FILE * stream, const gsl_vector_float * v);$/;"	p	signature:(FILE * stream, const gsl_vector_float * v)
gsl_vector_float_get	/usr/local/gsl/include/gsl/gsl_vector_float.h	/^INLINE_DECL float gsl_vector_float_get (const gsl_vector_float * v, const size_t i);$/;"	p	signature:(const gsl_vector_float * v, const size_t i)
gsl_vector_float_get	/usr/local/gsl/include/gsl/gsl_vector_float.h	/^gsl_vector_float_get (const gsl_vector_float * v, const size_t i)$/;"	f	signature:(const gsl_vector_float * v, const size_t i)
gsl_vector_float_isneg	/usr/local/gsl/include/gsl/gsl_vector_float.h	/^int gsl_vector_float_isneg (const gsl_vector_float * v);$/;"	p	signature:(const gsl_vector_float * v)
gsl_vector_float_isnonneg	/usr/local/gsl/include/gsl/gsl_vector_float.h	/^int gsl_vector_float_isnonneg (const gsl_vector_float * v);$/;"	p	signature:(const gsl_vector_float * v)
gsl_vector_float_isnull	/usr/local/gsl/include/gsl/gsl_vector_float.h	/^int gsl_vector_float_isnull (const gsl_vector_float * v);$/;"	p	signature:(const gsl_vector_float * v)
gsl_vector_float_ispos	/usr/local/gsl/include/gsl/gsl_vector_float.h	/^int gsl_vector_float_ispos (const gsl_vector_float * v);$/;"	p	signature:(const gsl_vector_float * v)
gsl_vector_float_max	/usr/local/gsl/include/gsl/gsl_vector_float.h	/^float gsl_vector_float_max (const gsl_vector_float * v);$/;"	p	signature:(const gsl_vector_float * v)
gsl_vector_float_max_index	/usr/local/gsl/include/gsl/gsl_vector_float.h	/^size_t gsl_vector_float_max_index (const gsl_vector_float * v);$/;"	p	signature:(const gsl_vector_float * v)
gsl_vector_float_memcpy	/usr/local/gsl/include/gsl/gsl_vector_float.h	/^int gsl_vector_float_memcpy (gsl_vector_float * dest, const gsl_vector_float * src);$/;"	p	signature:(gsl_vector_float * dest, const gsl_vector_float * src)
gsl_vector_float_min	/usr/local/gsl/include/gsl/gsl_vector_float.h	/^float gsl_vector_float_min (const gsl_vector_float * v);$/;"	p	signature:(const gsl_vector_float * v)
gsl_vector_float_min_index	/usr/local/gsl/include/gsl/gsl_vector_float.h	/^size_t gsl_vector_float_min_index (const gsl_vector_float * v);$/;"	p	signature:(const gsl_vector_float * v)
gsl_vector_float_minmax	/usr/local/gsl/include/gsl/gsl_vector_float.h	/^void gsl_vector_float_minmax (const gsl_vector_float * v, float * min_out, float * max_out);$/;"	p	signature:(const gsl_vector_float * v, float * min_out, float * max_out)
gsl_vector_float_minmax_index	/usr/local/gsl/include/gsl/gsl_vector_float.h	/^void gsl_vector_float_minmax_index (const gsl_vector_float * v, size_t * imin, size_t * imax);$/;"	p	signature:(const gsl_vector_float * v, size_t * imin, size_t * imax)
gsl_vector_float_mul	/usr/local/gsl/include/gsl/gsl_vector_float.h	/^int gsl_vector_float_mul (gsl_vector_float * a, const gsl_vector_float * b);$/;"	p	signature:(gsl_vector_float * a, const gsl_vector_float * b)
gsl_vector_float_ptr	/usr/local/gsl/include/gsl/gsl_vector_float.h	/^INLINE_DECL float * gsl_vector_float_ptr (gsl_vector_float * v, const size_t i);$/;"	p	signature:(gsl_vector_float * v, const size_t i)
gsl_vector_float_ptr	/usr/local/gsl/include/gsl/gsl_vector_float.h	/^gsl_vector_float_ptr (gsl_vector_float * v, const size_t i)$/;"	f	signature:(gsl_vector_float * v, const size_t i)
gsl_vector_float_reverse	/usr/local/gsl/include/gsl/gsl_vector_float.h	/^int gsl_vector_float_reverse (gsl_vector_float * v);$/;"	p	signature:(gsl_vector_float * v)
gsl_vector_float_scale	/usr/local/gsl/include/gsl/gsl_vector_float.h	/^int gsl_vector_float_scale (gsl_vector_float * a, const double x);$/;"	p	signature:(gsl_vector_float * a, const double x)
gsl_vector_float_set	/usr/local/gsl/include/gsl/gsl_vector_float.h	/^INLINE_DECL void gsl_vector_float_set (gsl_vector_float * v, const size_t i, float x);$/;"	p	signature:(gsl_vector_float * v, const size_t i, float x)
gsl_vector_float_set	/usr/local/gsl/include/gsl/gsl_vector_float.h	/^gsl_vector_float_set (gsl_vector_float * v, const size_t i, float x)$/;"	f	signature:(gsl_vector_float * v, const size_t i, float x)
gsl_vector_float_set_all	/usr/local/gsl/include/gsl/gsl_vector_float.h	/^void gsl_vector_float_set_all (gsl_vector_float * v, float x);$/;"	p	signature:(gsl_vector_float * v, float x)
gsl_vector_float_set_basis	/usr/local/gsl/include/gsl/gsl_vector_float.h	/^int gsl_vector_float_set_basis (gsl_vector_float * v, size_t i);$/;"	p	signature:(gsl_vector_float * v, size_t i)
gsl_vector_float_set_zero	/usr/local/gsl/include/gsl/gsl_vector_float.h	/^void gsl_vector_float_set_zero (gsl_vector_float * v);$/;"	p	signature:(gsl_vector_float * v)
gsl_vector_float_sub	/usr/local/gsl/include/gsl/gsl_vector_float.h	/^int gsl_vector_float_sub (gsl_vector_float * a, const gsl_vector_float * b);$/;"	p	signature:(gsl_vector_float * a, const gsl_vector_float * b)
gsl_vector_float_subvector	/usr/local/gsl/include/gsl/gsl_vector_float.h	/^gsl_vector_float_subvector (gsl_vector_float *v, $/;"	p	signature:(gsl_vector_float *v, size_t i, size_t n)
gsl_vector_float_subvector_with_stride	/usr/local/gsl/include/gsl/gsl_vector_float.h	/^gsl_vector_float_subvector_with_stride (gsl_vector_float *v, $/;"	p	signature:(gsl_vector_float *v, size_t i, size_t stride, size_t n)
gsl_vector_float_swap	/usr/local/gsl/include/gsl/gsl_vector_float.h	/^int gsl_vector_float_swap (gsl_vector_float * v, gsl_vector_float * w);$/;"	p	signature:(gsl_vector_float * v, gsl_vector_float * w)
gsl_vector_float_swap_elements	/usr/local/gsl/include/gsl/gsl_vector_float.h	/^int gsl_vector_float_swap_elements (gsl_vector_float * v, const size_t i, const size_t j);$/;"	p	signature:(gsl_vector_float * v, const size_t i, const size_t j)
gsl_vector_float_view	/usr/local/gsl/include/gsl/gsl_vector_float.h	/^typedef _gsl_vector_float_view gsl_vector_float_view;$/;"	t
gsl_vector_float_view_array	/usr/local/gsl/include/gsl/gsl_vector_float.h	/^gsl_vector_float_view_array (float *v, size_t n);$/;"	p	signature:(float *v, size_t n)
gsl_vector_float_view_array_with_stride	/usr/local/gsl/include/gsl/gsl_vector_float.h	/^gsl_vector_float_view_array_with_stride (float *base,$/;"	p	signature:(float *base, size_t stride, size_t n)
gsl_vector_fprintf	/usr/local/gsl/include/gsl/gsl_vector_double.h	/^int gsl_vector_fprintf (FILE * stream, const gsl_vector * v,$/;"	p	signature:(FILE * stream, const gsl_vector * v, const char *format)
gsl_vector_fread	/usr/local/gsl/include/gsl/gsl_vector_double.h	/^int gsl_vector_fread (FILE * stream, gsl_vector * v);$/;"	p	signature:(FILE * stream, gsl_vector * v)
gsl_vector_free	/usr/local/gsl/include/gsl/gsl_vector_double.h	/^void gsl_vector_free (gsl_vector * v);$/;"	p	signature:(gsl_vector * v)
gsl_vector_fscanf	/usr/local/gsl/include/gsl/gsl_vector_double.h	/^int gsl_vector_fscanf (FILE * stream, gsl_vector * v);$/;"	p	signature:(FILE * stream, gsl_vector * v)
gsl_vector_fwrite	/usr/local/gsl/include/gsl/gsl_vector_double.h	/^int gsl_vector_fwrite (FILE * stream, const gsl_vector * v);$/;"	p	signature:(FILE * stream, const gsl_vector * v)
gsl_vector_get	/usr/local/gsl/include/gsl/gsl_vector_double.h	/^INLINE_DECL double gsl_vector_get (const gsl_vector * v, const size_t i);$/;"	p	signature:(const gsl_vector * v, const size_t i)
gsl_vector_get	/usr/local/gsl/include/gsl/gsl_vector_double.h	/^gsl_vector_get (const gsl_vector * v, const size_t i)$/;"	f	signature:(const gsl_vector * v, const size_t i)
gsl_vector_int	/usr/local/gsl/include/gsl/gsl_vector_int.h	/^gsl_vector_int;$/;"	t	typeref:struct:__anon158
gsl_vector_int_add	/usr/local/gsl/include/gsl/gsl_vector_int.h	/^int gsl_vector_int_add (gsl_vector_int * a, const gsl_vector_int * b);$/;"	p	signature:(gsl_vector_int * a, const gsl_vector_int * b)
gsl_vector_int_add_constant	/usr/local/gsl/include/gsl/gsl_vector_int.h	/^int gsl_vector_int_add_constant (gsl_vector_int * a, const double x);$/;"	p	signature:(gsl_vector_int * a, const double x)
gsl_vector_int_alloc	/usr/local/gsl/include/gsl/gsl_vector_int.h	/^gsl_vector_int *gsl_vector_int_alloc (const size_t n);$/;"	p	signature:(const size_t n)
gsl_vector_int_alloc_col_from_matrix	/usr/local/gsl/include/gsl/gsl_matrix_int.h	/^gsl_vector_int_alloc_col_from_matrix (gsl_matrix_int * m,$/;"	p	signature:(gsl_matrix_int * m, const size_t j)
gsl_vector_int_alloc_from_block	/usr/local/gsl/include/gsl/gsl_vector_int.h	/^gsl_vector_int *gsl_vector_int_alloc_from_block (gsl_block_int * b,$/;"	p	signature:(gsl_block_int * b, const size_t offset, const size_t n, const size_t stride)
gsl_vector_int_alloc_from_vector	/usr/local/gsl/include/gsl/gsl_vector_int.h	/^gsl_vector_int *gsl_vector_int_alloc_from_vector (gsl_vector_int * v,$/;"	p	signature:(gsl_vector_int * v, const size_t offset, const size_t n, const size_t stride)
gsl_vector_int_alloc_row_from_matrix	/usr/local/gsl/include/gsl/gsl_matrix_int.h	/^gsl_vector_int_alloc_row_from_matrix (gsl_matrix_int * m,$/;"	p	signature:(gsl_matrix_int * m, const size_t i)
gsl_vector_int_calloc	/usr/local/gsl/include/gsl/gsl_vector_int.h	/^gsl_vector_int *gsl_vector_int_calloc (const size_t n);$/;"	p	signature:(const size_t n)
gsl_vector_int_const_ptr	/usr/local/gsl/include/gsl/gsl_vector_int.h	/^INLINE_DECL const int * gsl_vector_int_const_ptr (const gsl_vector_int * v, const size_t i);$/;"	p	signature:(const gsl_vector_int * v, const size_t i)
gsl_vector_int_const_ptr	/usr/local/gsl/include/gsl/gsl_vector_int.h	/^gsl_vector_int_const_ptr (const gsl_vector_int * v, const size_t i)$/;"	f	signature:(const gsl_vector_int * v, const size_t i)
gsl_vector_int_const_subvector	/usr/local/gsl/include/gsl/gsl_vector_int.h	/^gsl_vector_int_const_subvector (const gsl_vector_int *v, $/;"	p	signature:(const gsl_vector_int *v, size_t i, size_t n)
gsl_vector_int_const_subvector_with_stride	/usr/local/gsl/include/gsl/gsl_vector_int.h	/^gsl_vector_int_const_subvector_with_stride (const gsl_vector_int *v, $/;"	p	signature:(const gsl_vector_int *v, size_t i, size_t stride, size_t n)
gsl_vector_int_const_view	/usr/local/gsl/include/gsl/gsl_vector_int.h	/^typedef const _gsl_vector_int_const_view gsl_vector_int_const_view;$/;"	t
gsl_vector_int_const_view_array	/usr/local/gsl/include/gsl/gsl_vector_int.h	/^gsl_vector_int_const_view_array (const int *v, size_t n);$/;"	p	signature:(const int *v, size_t n)
gsl_vector_int_const_view_array_with_stride	/usr/local/gsl/include/gsl/gsl_vector_int.h	/^gsl_vector_int_const_view_array_with_stride (const int *base,$/;"	p	signature:(const int *base, size_t stride, size_t n)
gsl_vector_int_div	/usr/local/gsl/include/gsl/gsl_vector_int.h	/^int gsl_vector_int_div (gsl_vector_int * a, const gsl_vector_int * b);$/;"	p	signature:(gsl_vector_int * a, const gsl_vector_int * b)
gsl_vector_int_fprintf	/usr/local/gsl/include/gsl/gsl_vector_int.h	/^int gsl_vector_int_fprintf (FILE * stream, const gsl_vector_int * v,$/;"	p	signature:(FILE * stream, const gsl_vector_int * v, const char *format)
gsl_vector_int_fread	/usr/local/gsl/include/gsl/gsl_vector_int.h	/^int gsl_vector_int_fread (FILE * stream, gsl_vector_int * v);$/;"	p	signature:(FILE * stream, gsl_vector_int * v)
gsl_vector_int_free	/usr/local/gsl/include/gsl/gsl_vector_int.h	/^void gsl_vector_int_free (gsl_vector_int * v);$/;"	p	signature:(gsl_vector_int * v)
gsl_vector_int_fscanf	/usr/local/gsl/include/gsl/gsl_vector_int.h	/^int gsl_vector_int_fscanf (FILE * stream, gsl_vector_int * v);$/;"	p	signature:(FILE * stream, gsl_vector_int * v)
gsl_vector_int_fwrite	/usr/local/gsl/include/gsl/gsl_vector_int.h	/^int gsl_vector_int_fwrite (FILE * stream, const gsl_vector_int * v);$/;"	p	signature:(FILE * stream, const gsl_vector_int * v)
gsl_vector_int_get	/usr/local/gsl/include/gsl/gsl_vector_int.h	/^INLINE_DECL int gsl_vector_int_get (const gsl_vector_int * v, const size_t i);$/;"	p	signature:(const gsl_vector_int * v, const size_t i)
gsl_vector_int_get	/usr/local/gsl/include/gsl/gsl_vector_int.h	/^gsl_vector_int_get (const gsl_vector_int * v, const size_t i)$/;"	f	signature:(const gsl_vector_int * v, const size_t i)
gsl_vector_int_isneg	/usr/local/gsl/include/gsl/gsl_vector_int.h	/^int gsl_vector_int_isneg (const gsl_vector_int * v);$/;"	p	signature:(const gsl_vector_int * v)
gsl_vector_int_isnonneg	/usr/local/gsl/include/gsl/gsl_vector_int.h	/^int gsl_vector_int_isnonneg (const gsl_vector_int * v);$/;"	p	signature:(const gsl_vector_int * v)
gsl_vector_int_isnull	/usr/local/gsl/include/gsl/gsl_vector_int.h	/^int gsl_vector_int_isnull (const gsl_vector_int * v);$/;"	p	signature:(const gsl_vector_int * v)
gsl_vector_int_ispos	/usr/local/gsl/include/gsl/gsl_vector_int.h	/^int gsl_vector_int_ispos (const gsl_vector_int * v);$/;"	p	signature:(const gsl_vector_int * v)
gsl_vector_int_max	/usr/local/gsl/include/gsl/gsl_vector_int.h	/^int gsl_vector_int_max (const gsl_vector_int * v);$/;"	p	signature:(const gsl_vector_int * v)
gsl_vector_int_max_index	/usr/local/gsl/include/gsl/gsl_vector_int.h	/^size_t gsl_vector_int_max_index (const gsl_vector_int * v);$/;"	p	signature:(const gsl_vector_int * v)
gsl_vector_int_memcpy	/usr/local/gsl/include/gsl/gsl_vector_int.h	/^int gsl_vector_int_memcpy (gsl_vector_int * dest, const gsl_vector_int * src);$/;"	p	signature:(gsl_vector_int * dest, const gsl_vector_int * src)
gsl_vector_int_min	/usr/local/gsl/include/gsl/gsl_vector_int.h	/^int gsl_vector_int_min (const gsl_vector_int * v);$/;"	p	signature:(const gsl_vector_int * v)
gsl_vector_int_min_index	/usr/local/gsl/include/gsl/gsl_vector_int.h	/^size_t gsl_vector_int_min_index (const gsl_vector_int * v);$/;"	p	signature:(const gsl_vector_int * v)
gsl_vector_int_minmax	/usr/local/gsl/include/gsl/gsl_vector_int.h	/^void gsl_vector_int_minmax (const gsl_vector_int * v, int * min_out, int * max_out);$/;"	p	signature:(const gsl_vector_int * v, int * min_out, int * max_out)
gsl_vector_int_minmax_index	/usr/local/gsl/include/gsl/gsl_vector_int.h	/^void gsl_vector_int_minmax_index (const gsl_vector_int * v, size_t * imin, size_t * imax);$/;"	p	signature:(const gsl_vector_int * v, size_t * imin, size_t * imax)
gsl_vector_int_mul	/usr/local/gsl/include/gsl/gsl_vector_int.h	/^int gsl_vector_int_mul (gsl_vector_int * a, const gsl_vector_int * b);$/;"	p	signature:(gsl_vector_int * a, const gsl_vector_int * b)
gsl_vector_int_ptr	/usr/local/gsl/include/gsl/gsl_vector_int.h	/^INLINE_DECL int * gsl_vector_int_ptr (gsl_vector_int * v, const size_t i);$/;"	p	signature:(gsl_vector_int * v, const size_t i)
gsl_vector_int_ptr	/usr/local/gsl/include/gsl/gsl_vector_int.h	/^gsl_vector_int_ptr (gsl_vector_int * v, const size_t i)$/;"	f	signature:(gsl_vector_int * v, const size_t i)
gsl_vector_int_reverse	/usr/local/gsl/include/gsl/gsl_vector_int.h	/^int gsl_vector_int_reverse (gsl_vector_int * v);$/;"	p	signature:(gsl_vector_int * v)
gsl_vector_int_scale	/usr/local/gsl/include/gsl/gsl_vector_int.h	/^int gsl_vector_int_scale (gsl_vector_int * a, const double x);$/;"	p	signature:(gsl_vector_int * a, const double x)
gsl_vector_int_set	/usr/local/gsl/include/gsl/gsl_vector_int.h	/^INLINE_DECL void gsl_vector_int_set (gsl_vector_int * v, const size_t i, int x);$/;"	p	signature:(gsl_vector_int * v, const size_t i, int x)
gsl_vector_int_set	/usr/local/gsl/include/gsl/gsl_vector_int.h	/^gsl_vector_int_set (gsl_vector_int * v, const size_t i, int x)$/;"	f	signature:(gsl_vector_int * v, const size_t i, int x)
gsl_vector_int_set_all	/usr/local/gsl/include/gsl/gsl_vector_int.h	/^void gsl_vector_int_set_all (gsl_vector_int * v, int x);$/;"	p	signature:(gsl_vector_int * v, int x)
gsl_vector_int_set_basis	/usr/local/gsl/include/gsl/gsl_vector_int.h	/^int gsl_vector_int_set_basis (gsl_vector_int * v, size_t i);$/;"	p	signature:(gsl_vector_int * v, size_t i)
gsl_vector_int_set_zero	/usr/local/gsl/include/gsl/gsl_vector_int.h	/^void gsl_vector_int_set_zero (gsl_vector_int * v);$/;"	p	signature:(gsl_vector_int * v)
gsl_vector_int_sub	/usr/local/gsl/include/gsl/gsl_vector_int.h	/^int gsl_vector_int_sub (gsl_vector_int * a, const gsl_vector_int * b);$/;"	p	signature:(gsl_vector_int * a, const gsl_vector_int * b)
gsl_vector_int_subvector	/usr/local/gsl/include/gsl/gsl_vector_int.h	/^gsl_vector_int_subvector (gsl_vector_int *v, $/;"	p	signature:(gsl_vector_int *v, size_t i, size_t n)
gsl_vector_int_subvector_with_stride	/usr/local/gsl/include/gsl/gsl_vector_int.h	/^gsl_vector_int_subvector_with_stride (gsl_vector_int *v, $/;"	p	signature:(gsl_vector_int *v, size_t i, size_t stride, size_t n)
gsl_vector_int_swap	/usr/local/gsl/include/gsl/gsl_vector_int.h	/^int gsl_vector_int_swap (gsl_vector_int * v, gsl_vector_int * w);$/;"	p	signature:(gsl_vector_int * v, gsl_vector_int * w)
gsl_vector_int_swap_elements	/usr/local/gsl/include/gsl/gsl_vector_int.h	/^int gsl_vector_int_swap_elements (gsl_vector_int * v, const size_t i, const size_t j);$/;"	p	signature:(gsl_vector_int * v, const size_t i, const size_t j)
gsl_vector_int_view	/usr/local/gsl/include/gsl/gsl_vector_int.h	/^typedef _gsl_vector_int_view gsl_vector_int_view;$/;"	t
gsl_vector_int_view_array	/usr/local/gsl/include/gsl/gsl_vector_int.h	/^gsl_vector_int_view_array (int *v, size_t n);$/;"	p	signature:(int *v, size_t n)
gsl_vector_int_view_array_with_stride	/usr/local/gsl/include/gsl/gsl_vector_int.h	/^gsl_vector_int_view_array_with_stride (int *base,$/;"	p	signature:(int *base, size_t stride, size_t n)
gsl_vector_isneg	/usr/local/gsl/include/gsl/gsl_vector_double.h	/^int gsl_vector_isneg (const gsl_vector * v);$/;"	p	signature:(const gsl_vector * v)
gsl_vector_isnonneg	/usr/local/gsl/include/gsl/gsl_vector_double.h	/^int gsl_vector_isnonneg (const gsl_vector * v);$/;"	p	signature:(const gsl_vector * v)
gsl_vector_isnull	/usr/local/gsl/include/gsl/gsl_vector_double.h	/^int gsl_vector_isnull (const gsl_vector * v);$/;"	p	signature:(const gsl_vector * v)
gsl_vector_ispos	/usr/local/gsl/include/gsl/gsl_vector_double.h	/^int gsl_vector_ispos (const gsl_vector * v);$/;"	p	signature:(const gsl_vector * v)
gsl_vector_long	/usr/local/gsl/include/gsl/gsl_vector_long.h	/^gsl_vector_long;$/;"	t	typeref:struct:__anon22
gsl_vector_long_add	/usr/local/gsl/include/gsl/gsl_vector_long.h	/^int gsl_vector_long_add (gsl_vector_long * a, const gsl_vector_long * b);$/;"	p	signature:(gsl_vector_long * a, const gsl_vector_long * b)
gsl_vector_long_add_constant	/usr/local/gsl/include/gsl/gsl_vector_long.h	/^int gsl_vector_long_add_constant (gsl_vector_long * a, const double x);$/;"	p	signature:(gsl_vector_long * a, const double x)
gsl_vector_long_alloc	/usr/local/gsl/include/gsl/gsl_vector_long.h	/^gsl_vector_long *gsl_vector_long_alloc (const size_t n);$/;"	p	signature:(const size_t n)
gsl_vector_long_alloc_col_from_matrix	/usr/local/gsl/include/gsl/gsl_matrix_long.h	/^gsl_vector_long_alloc_col_from_matrix (gsl_matrix_long * m,$/;"	p	signature:(gsl_matrix_long * m, const size_t j)
gsl_vector_long_alloc_from_block	/usr/local/gsl/include/gsl/gsl_vector_long.h	/^gsl_vector_long *gsl_vector_long_alloc_from_block (gsl_block_long * b,$/;"	p	signature:(gsl_block_long * b, const size_t offset, const size_t n, const size_t stride)
gsl_vector_long_alloc_from_vector	/usr/local/gsl/include/gsl/gsl_vector_long.h	/^gsl_vector_long *gsl_vector_long_alloc_from_vector (gsl_vector_long * v,$/;"	p	signature:(gsl_vector_long * v, const size_t offset, const size_t n, const size_t stride)
gsl_vector_long_alloc_row_from_matrix	/usr/local/gsl/include/gsl/gsl_matrix_long.h	/^gsl_vector_long_alloc_row_from_matrix (gsl_matrix_long * m,$/;"	p	signature:(gsl_matrix_long * m, const size_t i)
gsl_vector_long_calloc	/usr/local/gsl/include/gsl/gsl_vector_long.h	/^gsl_vector_long *gsl_vector_long_calloc (const size_t n);$/;"	p	signature:(const size_t n)
gsl_vector_long_const_ptr	/usr/local/gsl/include/gsl/gsl_vector_long.h	/^INLINE_DECL const long * gsl_vector_long_const_ptr (const gsl_vector_long * v, const size_t i);$/;"	p	signature:(const gsl_vector_long * v, const size_t i)
gsl_vector_long_const_ptr	/usr/local/gsl/include/gsl/gsl_vector_long.h	/^gsl_vector_long_const_ptr (const gsl_vector_long * v, const size_t i)$/;"	f	signature:(const gsl_vector_long * v, const size_t i)
gsl_vector_long_const_subvector	/usr/local/gsl/include/gsl/gsl_vector_long.h	/^gsl_vector_long_const_subvector (const gsl_vector_long *v, $/;"	p	signature:(const gsl_vector_long *v, size_t i, size_t n)
gsl_vector_long_const_subvector_with_stride	/usr/local/gsl/include/gsl/gsl_vector_long.h	/^gsl_vector_long_const_subvector_with_stride (const gsl_vector_long *v, $/;"	p	signature:(const gsl_vector_long *v, size_t i, size_t stride, size_t n)
gsl_vector_long_const_view	/usr/local/gsl/include/gsl/gsl_vector_long.h	/^typedef const _gsl_vector_long_const_view gsl_vector_long_const_view;$/;"	t
gsl_vector_long_const_view_array	/usr/local/gsl/include/gsl/gsl_vector_long.h	/^gsl_vector_long_const_view_array (const long *v, size_t n);$/;"	p	signature:(const long *v, size_t n)
gsl_vector_long_const_view_array_with_stride	/usr/local/gsl/include/gsl/gsl_vector_long.h	/^gsl_vector_long_const_view_array_with_stride (const long *base,$/;"	p	signature:(const long *base, size_t stride, size_t n)
gsl_vector_long_div	/usr/local/gsl/include/gsl/gsl_vector_long.h	/^int gsl_vector_long_div (gsl_vector_long * a, const gsl_vector_long * b);$/;"	p	signature:(gsl_vector_long * a, const gsl_vector_long * b)
gsl_vector_long_double	/usr/local/gsl/include/gsl/gsl_vector_long_double.h	/^gsl_vector_long_double;$/;"	t	typeref:struct:__anon125
gsl_vector_long_double_add	/usr/local/gsl/include/gsl/gsl_vector_long_double.h	/^int gsl_vector_long_double_add (gsl_vector_long_double * a, const gsl_vector_long_double * b);$/;"	p	signature:(gsl_vector_long_double * a, const gsl_vector_long_double * b)
gsl_vector_long_double_add_constant	/usr/local/gsl/include/gsl/gsl_vector_long_double.h	/^int gsl_vector_long_double_add_constant (gsl_vector_long_double * a, const double x);$/;"	p	signature:(gsl_vector_long_double * a, const double x)
gsl_vector_long_double_alloc	/usr/local/gsl/include/gsl/gsl_vector_long_double.h	/^gsl_vector_long_double *gsl_vector_long_double_alloc (const size_t n);$/;"	p	signature:(const size_t n)
gsl_vector_long_double_alloc_col_from_matrix	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	/^gsl_vector_long_double_alloc_col_from_matrix (gsl_matrix_long_double * m,$/;"	p	signature:(gsl_matrix_long_double * m, const size_t j)
gsl_vector_long_double_alloc_from_block	/usr/local/gsl/include/gsl/gsl_vector_long_double.h	/^gsl_vector_long_double *gsl_vector_long_double_alloc_from_block (gsl_block_long_double * b,$/;"	p	signature:(gsl_block_long_double * b, const size_t offset, const size_t n, const size_t stride)
gsl_vector_long_double_alloc_from_vector	/usr/local/gsl/include/gsl/gsl_vector_long_double.h	/^gsl_vector_long_double *gsl_vector_long_double_alloc_from_vector (gsl_vector_long_double * v,$/;"	p	signature:(gsl_vector_long_double * v, const size_t offset, const size_t n, const size_t stride)
gsl_vector_long_double_alloc_row_from_matrix	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	/^gsl_vector_long_double_alloc_row_from_matrix (gsl_matrix_long_double * m,$/;"	p	signature:(gsl_matrix_long_double * m, const size_t i)
gsl_vector_long_double_calloc	/usr/local/gsl/include/gsl/gsl_vector_long_double.h	/^gsl_vector_long_double *gsl_vector_long_double_calloc (const size_t n);$/;"	p	signature:(const size_t n)
gsl_vector_long_double_const_ptr	/usr/local/gsl/include/gsl/gsl_vector_long_double.h	/^INLINE_DECL const long double * gsl_vector_long_double_const_ptr (const gsl_vector_long_double * v, const size_t i);$/;"	p	signature:(const gsl_vector_long_double * v, const size_t i)
gsl_vector_long_double_const_ptr	/usr/local/gsl/include/gsl/gsl_vector_long_double.h	/^gsl_vector_long_double_const_ptr (const gsl_vector_long_double * v, const size_t i)$/;"	f	signature:(const gsl_vector_long_double * v, const size_t i)
gsl_vector_long_double_const_subvector	/usr/local/gsl/include/gsl/gsl_vector_long_double.h	/^gsl_vector_long_double_const_subvector (const gsl_vector_long_double *v, $/;"	p	signature:(const gsl_vector_long_double *v, size_t i, size_t n)
gsl_vector_long_double_const_subvector_with_stride	/usr/local/gsl/include/gsl/gsl_vector_long_double.h	/^gsl_vector_long_double_const_subvector_with_stride (const gsl_vector_long_double *v, $/;"	p	signature:(const gsl_vector_long_double *v, size_t i, size_t stride, size_t n)
gsl_vector_long_double_const_view	/usr/local/gsl/include/gsl/gsl_vector_long_double.h	/^typedef const _gsl_vector_long_double_const_view gsl_vector_long_double_const_view;$/;"	t
gsl_vector_long_double_const_view_array	/usr/local/gsl/include/gsl/gsl_vector_long_double.h	/^gsl_vector_long_double_const_view_array (const long double *v, size_t n);$/;"	p	signature:(const long double *v, size_t n)
gsl_vector_long_double_const_view_array_with_stride	/usr/local/gsl/include/gsl/gsl_vector_long_double.h	/^gsl_vector_long_double_const_view_array_with_stride (const long double *base,$/;"	p	signature:(const long double *base, size_t stride, size_t n)
gsl_vector_long_double_div	/usr/local/gsl/include/gsl/gsl_vector_long_double.h	/^int gsl_vector_long_double_div (gsl_vector_long_double * a, const gsl_vector_long_double * b);$/;"	p	signature:(gsl_vector_long_double * a, const gsl_vector_long_double * b)
gsl_vector_long_double_fprintf	/usr/local/gsl/include/gsl/gsl_vector_long_double.h	/^int gsl_vector_long_double_fprintf (FILE * stream, const gsl_vector_long_double * v,$/;"	p	signature:(FILE * stream, const gsl_vector_long_double * v, const char *format)
gsl_vector_long_double_fread	/usr/local/gsl/include/gsl/gsl_vector_long_double.h	/^int gsl_vector_long_double_fread (FILE * stream, gsl_vector_long_double * v);$/;"	p	signature:(FILE * stream, gsl_vector_long_double * v)
gsl_vector_long_double_free	/usr/local/gsl/include/gsl/gsl_vector_long_double.h	/^void gsl_vector_long_double_free (gsl_vector_long_double * v);$/;"	p	signature:(gsl_vector_long_double * v)
gsl_vector_long_double_fscanf	/usr/local/gsl/include/gsl/gsl_vector_long_double.h	/^int gsl_vector_long_double_fscanf (FILE * stream, gsl_vector_long_double * v);$/;"	p	signature:(FILE * stream, gsl_vector_long_double * v)
gsl_vector_long_double_fwrite	/usr/local/gsl/include/gsl/gsl_vector_long_double.h	/^int gsl_vector_long_double_fwrite (FILE * stream, const gsl_vector_long_double * v);$/;"	p	signature:(FILE * stream, const gsl_vector_long_double * v)
gsl_vector_long_double_get	/usr/local/gsl/include/gsl/gsl_vector_long_double.h	/^INLINE_DECL long double gsl_vector_long_double_get (const gsl_vector_long_double * v, const size_t i);$/;"	p	signature:(const gsl_vector_long_double * v, const size_t i)
gsl_vector_long_double_get	/usr/local/gsl/include/gsl/gsl_vector_long_double.h	/^gsl_vector_long_double_get (const gsl_vector_long_double * v, const size_t i)$/;"	f	signature:(const gsl_vector_long_double * v, const size_t i)
gsl_vector_long_double_isneg	/usr/local/gsl/include/gsl/gsl_vector_long_double.h	/^int gsl_vector_long_double_isneg (const gsl_vector_long_double * v);$/;"	p	signature:(const gsl_vector_long_double * v)
gsl_vector_long_double_isnonneg	/usr/local/gsl/include/gsl/gsl_vector_long_double.h	/^int gsl_vector_long_double_isnonneg (const gsl_vector_long_double * v);$/;"	p	signature:(const gsl_vector_long_double * v)
gsl_vector_long_double_isnull	/usr/local/gsl/include/gsl/gsl_vector_long_double.h	/^int gsl_vector_long_double_isnull (const gsl_vector_long_double * v);$/;"	p	signature:(const gsl_vector_long_double * v)
gsl_vector_long_double_ispos	/usr/local/gsl/include/gsl/gsl_vector_long_double.h	/^int gsl_vector_long_double_ispos (const gsl_vector_long_double * v);$/;"	p	signature:(const gsl_vector_long_double * v)
gsl_vector_long_double_max	/usr/local/gsl/include/gsl/gsl_vector_long_double.h	/^long double gsl_vector_long_double_max (const gsl_vector_long_double * v);$/;"	p	signature:(const gsl_vector_long_double * v)
gsl_vector_long_double_max_index	/usr/local/gsl/include/gsl/gsl_vector_long_double.h	/^size_t gsl_vector_long_double_max_index (const gsl_vector_long_double * v);$/;"	p	signature:(const gsl_vector_long_double * v)
gsl_vector_long_double_memcpy	/usr/local/gsl/include/gsl/gsl_vector_long_double.h	/^int gsl_vector_long_double_memcpy (gsl_vector_long_double * dest, const gsl_vector_long_double * src);$/;"	p	signature:(gsl_vector_long_double * dest, const gsl_vector_long_double * src)
gsl_vector_long_double_min	/usr/local/gsl/include/gsl/gsl_vector_long_double.h	/^long double gsl_vector_long_double_min (const gsl_vector_long_double * v);$/;"	p	signature:(const gsl_vector_long_double * v)
gsl_vector_long_double_min_index	/usr/local/gsl/include/gsl/gsl_vector_long_double.h	/^size_t gsl_vector_long_double_min_index (const gsl_vector_long_double * v);$/;"	p	signature:(const gsl_vector_long_double * v)
gsl_vector_long_double_minmax	/usr/local/gsl/include/gsl/gsl_vector_long_double.h	/^void gsl_vector_long_double_minmax (const gsl_vector_long_double * v, long double * min_out, long double * max_out);$/;"	p	signature:(const gsl_vector_long_double * v, long double * min_out, long double * max_out)
gsl_vector_long_double_minmax_index	/usr/local/gsl/include/gsl/gsl_vector_long_double.h	/^void gsl_vector_long_double_minmax_index (const gsl_vector_long_double * v, size_t * imin, size_t * imax);$/;"	p	signature:(const gsl_vector_long_double * v, size_t * imin, size_t * imax)
gsl_vector_long_double_mul	/usr/local/gsl/include/gsl/gsl_vector_long_double.h	/^int gsl_vector_long_double_mul (gsl_vector_long_double * a, const gsl_vector_long_double * b);$/;"	p	signature:(gsl_vector_long_double * a, const gsl_vector_long_double * b)
gsl_vector_long_double_ptr	/usr/local/gsl/include/gsl/gsl_vector_long_double.h	/^INLINE_DECL long double * gsl_vector_long_double_ptr (gsl_vector_long_double * v, const size_t i);$/;"	p	signature:(gsl_vector_long_double * v, const size_t i)
gsl_vector_long_double_ptr	/usr/local/gsl/include/gsl/gsl_vector_long_double.h	/^gsl_vector_long_double_ptr (gsl_vector_long_double * v, const size_t i)$/;"	f	signature:(gsl_vector_long_double * v, const size_t i)
gsl_vector_long_double_reverse	/usr/local/gsl/include/gsl/gsl_vector_long_double.h	/^int gsl_vector_long_double_reverse (gsl_vector_long_double * v);$/;"	p	signature:(gsl_vector_long_double * v)
gsl_vector_long_double_scale	/usr/local/gsl/include/gsl/gsl_vector_long_double.h	/^int gsl_vector_long_double_scale (gsl_vector_long_double * a, const double x);$/;"	p	signature:(gsl_vector_long_double * a, const double x)
gsl_vector_long_double_set	/usr/local/gsl/include/gsl/gsl_vector_long_double.h	/^INLINE_DECL void gsl_vector_long_double_set (gsl_vector_long_double * v, const size_t i, long double x);$/;"	p	signature:(gsl_vector_long_double * v, const size_t i, long double x)
gsl_vector_long_double_set	/usr/local/gsl/include/gsl/gsl_vector_long_double.h	/^gsl_vector_long_double_set (gsl_vector_long_double * v, const size_t i, long double x)$/;"	f	signature:(gsl_vector_long_double * v, const size_t i, long double x)
gsl_vector_long_double_set_all	/usr/local/gsl/include/gsl/gsl_vector_long_double.h	/^void gsl_vector_long_double_set_all (gsl_vector_long_double * v, long double x);$/;"	p	signature:(gsl_vector_long_double * v, long double x)
gsl_vector_long_double_set_basis	/usr/local/gsl/include/gsl/gsl_vector_long_double.h	/^int gsl_vector_long_double_set_basis (gsl_vector_long_double * v, size_t i);$/;"	p	signature:(gsl_vector_long_double * v, size_t i)
gsl_vector_long_double_set_zero	/usr/local/gsl/include/gsl/gsl_vector_long_double.h	/^void gsl_vector_long_double_set_zero (gsl_vector_long_double * v);$/;"	p	signature:(gsl_vector_long_double * v)
gsl_vector_long_double_sub	/usr/local/gsl/include/gsl/gsl_vector_long_double.h	/^int gsl_vector_long_double_sub (gsl_vector_long_double * a, const gsl_vector_long_double * b);$/;"	p	signature:(gsl_vector_long_double * a, const gsl_vector_long_double * b)
gsl_vector_long_double_subvector	/usr/local/gsl/include/gsl/gsl_vector_long_double.h	/^gsl_vector_long_double_subvector (gsl_vector_long_double *v, $/;"	p	signature:(gsl_vector_long_double *v, size_t i, size_t n)
gsl_vector_long_double_subvector_with_stride	/usr/local/gsl/include/gsl/gsl_vector_long_double.h	/^gsl_vector_long_double_subvector_with_stride (gsl_vector_long_double *v, $/;"	p	signature:(gsl_vector_long_double *v, size_t i, size_t stride, size_t n)
gsl_vector_long_double_swap	/usr/local/gsl/include/gsl/gsl_vector_long_double.h	/^int gsl_vector_long_double_swap (gsl_vector_long_double * v, gsl_vector_long_double * w);$/;"	p	signature:(gsl_vector_long_double * v, gsl_vector_long_double * w)
gsl_vector_long_double_swap_elements	/usr/local/gsl/include/gsl/gsl_vector_long_double.h	/^int gsl_vector_long_double_swap_elements (gsl_vector_long_double * v, const size_t i, const size_t j);$/;"	p	signature:(gsl_vector_long_double * v, const size_t i, const size_t j)
gsl_vector_long_double_view	/usr/local/gsl/include/gsl/gsl_vector_long_double.h	/^typedef _gsl_vector_long_double_view gsl_vector_long_double_view;$/;"	t
gsl_vector_long_double_view_array	/usr/local/gsl/include/gsl/gsl_vector_long_double.h	/^gsl_vector_long_double_view_array (long double *v, size_t n);$/;"	p	signature:(long double *v, size_t n)
gsl_vector_long_double_view_array_with_stride	/usr/local/gsl/include/gsl/gsl_vector_long_double.h	/^gsl_vector_long_double_view_array_with_stride (long double *base,$/;"	p	signature:(long double *base, size_t stride, size_t n)
gsl_vector_long_fprintf	/usr/local/gsl/include/gsl/gsl_vector_long.h	/^int gsl_vector_long_fprintf (FILE * stream, const gsl_vector_long * v,$/;"	p	signature:(FILE * stream, const gsl_vector_long * v, const char *format)
gsl_vector_long_fread	/usr/local/gsl/include/gsl/gsl_vector_long.h	/^int gsl_vector_long_fread (FILE * stream, gsl_vector_long * v);$/;"	p	signature:(FILE * stream, gsl_vector_long * v)
gsl_vector_long_free	/usr/local/gsl/include/gsl/gsl_vector_long.h	/^void gsl_vector_long_free (gsl_vector_long * v);$/;"	p	signature:(gsl_vector_long * v)
gsl_vector_long_fscanf	/usr/local/gsl/include/gsl/gsl_vector_long.h	/^int gsl_vector_long_fscanf (FILE * stream, gsl_vector_long * v);$/;"	p	signature:(FILE * stream, gsl_vector_long * v)
gsl_vector_long_fwrite	/usr/local/gsl/include/gsl/gsl_vector_long.h	/^int gsl_vector_long_fwrite (FILE * stream, const gsl_vector_long * v);$/;"	p	signature:(FILE * stream, const gsl_vector_long * v)
gsl_vector_long_get	/usr/local/gsl/include/gsl/gsl_vector_long.h	/^INLINE_DECL long gsl_vector_long_get (const gsl_vector_long * v, const size_t i);$/;"	p	signature:(const gsl_vector_long * v, const size_t i)
gsl_vector_long_get	/usr/local/gsl/include/gsl/gsl_vector_long.h	/^gsl_vector_long_get (const gsl_vector_long * v, const size_t i)$/;"	f	signature:(const gsl_vector_long * v, const size_t i)
gsl_vector_long_isneg	/usr/local/gsl/include/gsl/gsl_vector_long.h	/^int gsl_vector_long_isneg (const gsl_vector_long * v);$/;"	p	signature:(const gsl_vector_long * v)
gsl_vector_long_isnonneg	/usr/local/gsl/include/gsl/gsl_vector_long.h	/^int gsl_vector_long_isnonneg (const gsl_vector_long * v);$/;"	p	signature:(const gsl_vector_long * v)
gsl_vector_long_isnull	/usr/local/gsl/include/gsl/gsl_vector_long.h	/^int gsl_vector_long_isnull (const gsl_vector_long * v);$/;"	p	signature:(const gsl_vector_long * v)
gsl_vector_long_ispos	/usr/local/gsl/include/gsl/gsl_vector_long.h	/^int gsl_vector_long_ispos (const gsl_vector_long * v);$/;"	p	signature:(const gsl_vector_long * v)
gsl_vector_long_max	/usr/local/gsl/include/gsl/gsl_vector_long.h	/^long gsl_vector_long_max (const gsl_vector_long * v);$/;"	p	signature:(const gsl_vector_long * v)
gsl_vector_long_max_index	/usr/local/gsl/include/gsl/gsl_vector_long.h	/^size_t gsl_vector_long_max_index (const gsl_vector_long * v);$/;"	p	signature:(const gsl_vector_long * v)
gsl_vector_long_memcpy	/usr/local/gsl/include/gsl/gsl_vector_long.h	/^int gsl_vector_long_memcpy (gsl_vector_long * dest, const gsl_vector_long * src);$/;"	p	signature:(gsl_vector_long * dest, const gsl_vector_long * src)
gsl_vector_long_min	/usr/local/gsl/include/gsl/gsl_vector_long.h	/^long gsl_vector_long_min (const gsl_vector_long * v);$/;"	p	signature:(const gsl_vector_long * v)
gsl_vector_long_min_index	/usr/local/gsl/include/gsl/gsl_vector_long.h	/^size_t gsl_vector_long_min_index (const gsl_vector_long * v);$/;"	p	signature:(const gsl_vector_long * v)
gsl_vector_long_minmax	/usr/local/gsl/include/gsl/gsl_vector_long.h	/^void gsl_vector_long_minmax (const gsl_vector_long * v, long * min_out, long * max_out);$/;"	p	signature:(const gsl_vector_long * v, long * min_out, long * max_out)
gsl_vector_long_minmax_index	/usr/local/gsl/include/gsl/gsl_vector_long.h	/^void gsl_vector_long_minmax_index (const gsl_vector_long * v, size_t * imin, size_t * imax);$/;"	p	signature:(const gsl_vector_long * v, size_t * imin, size_t * imax)
gsl_vector_long_mul	/usr/local/gsl/include/gsl/gsl_vector_long.h	/^int gsl_vector_long_mul (gsl_vector_long * a, const gsl_vector_long * b);$/;"	p	signature:(gsl_vector_long * a, const gsl_vector_long * b)
gsl_vector_long_ptr	/usr/local/gsl/include/gsl/gsl_vector_long.h	/^INLINE_DECL long * gsl_vector_long_ptr (gsl_vector_long * v, const size_t i);$/;"	p	signature:(gsl_vector_long * v, const size_t i)
gsl_vector_long_ptr	/usr/local/gsl/include/gsl/gsl_vector_long.h	/^gsl_vector_long_ptr (gsl_vector_long * v, const size_t i)$/;"	f	signature:(gsl_vector_long * v, const size_t i)
gsl_vector_long_reverse	/usr/local/gsl/include/gsl/gsl_vector_long.h	/^int gsl_vector_long_reverse (gsl_vector_long * v);$/;"	p	signature:(gsl_vector_long * v)
gsl_vector_long_scale	/usr/local/gsl/include/gsl/gsl_vector_long.h	/^int gsl_vector_long_scale (gsl_vector_long * a, const double x);$/;"	p	signature:(gsl_vector_long * a, const double x)
gsl_vector_long_set	/usr/local/gsl/include/gsl/gsl_vector_long.h	/^INLINE_DECL void gsl_vector_long_set (gsl_vector_long * v, const size_t i, long x);$/;"	p	signature:(gsl_vector_long * v, const size_t i, long x)
gsl_vector_long_set	/usr/local/gsl/include/gsl/gsl_vector_long.h	/^gsl_vector_long_set (gsl_vector_long * v, const size_t i, long x)$/;"	f	signature:(gsl_vector_long * v, const size_t i, long x)
gsl_vector_long_set_all	/usr/local/gsl/include/gsl/gsl_vector_long.h	/^void gsl_vector_long_set_all (gsl_vector_long * v, long x);$/;"	p	signature:(gsl_vector_long * v, long x)
gsl_vector_long_set_basis	/usr/local/gsl/include/gsl/gsl_vector_long.h	/^int gsl_vector_long_set_basis (gsl_vector_long * v, size_t i);$/;"	p	signature:(gsl_vector_long * v, size_t i)
gsl_vector_long_set_zero	/usr/local/gsl/include/gsl/gsl_vector_long.h	/^void gsl_vector_long_set_zero (gsl_vector_long * v);$/;"	p	signature:(gsl_vector_long * v)
gsl_vector_long_sub	/usr/local/gsl/include/gsl/gsl_vector_long.h	/^int gsl_vector_long_sub (gsl_vector_long * a, const gsl_vector_long * b);$/;"	p	signature:(gsl_vector_long * a, const gsl_vector_long * b)
gsl_vector_long_subvector	/usr/local/gsl/include/gsl/gsl_vector_long.h	/^gsl_vector_long_subvector (gsl_vector_long *v, $/;"	p	signature:(gsl_vector_long *v, size_t i, size_t n)
gsl_vector_long_subvector_with_stride	/usr/local/gsl/include/gsl/gsl_vector_long.h	/^gsl_vector_long_subvector_with_stride (gsl_vector_long *v, $/;"	p	signature:(gsl_vector_long *v, size_t i, size_t stride, size_t n)
gsl_vector_long_swap	/usr/local/gsl/include/gsl/gsl_vector_long.h	/^int gsl_vector_long_swap (gsl_vector_long * v, gsl_vector_long * w);$/;"	p	signature:(gsl_vector_long * v, gsl_vector_long * w)
gsl_vector_long_swap_elements	/usr/local/gsl/include/gsl/gsl_vector_long.h	/^int gsl_vector_long_swap_elements (gsl_vector_long * v, const size_t i, const size_t j);$/;"	p	signature:(gsl_vector_long * v, const size_t i, const size_t j)
gsl_vector_long_view	/usr/local/gsl/include/gsl/gsl_vector_long.h	/^typedef _gsl_vector_long_view gsl_vector_long_view;$/;"	t
gsl_vector_long_view_array	/usr/local/gsl/include/gsl/gsl_vector_long.h	/^gsl_vector_long_view_array (long *v, size_t n);$/;"	p	signature:(long *v, size_t n)
gsl_vector_long_view_array_with_stride	/usr/local/gsl/include/gsl/gsl_vector_long.h	/^gsl_vector_long_view_array_with_stride (long *base,$/;"	p	signature:(long *base, size_t stride, size_t n)
gsl_vector_max	/usr/local/gsl/include/gsl/gsl_vector_double.h	/^double gsl_vector_max (const gsl_vector * v);$/;"	p	signature:(const gsl_vector * v)
gsl_vector_max_index	/usr/local/gsl/include/gsl/gsl_vector_double.h	/^size_t gsl_vector_max_index (const gsl_vector * v);$/;"	p	signature:(const gsl_vector * v)
gsl_vector_memcpy	/usr/local/gsl/include/gsl/gsl_vector_double.h	/^int gsl_vector_memcpy (gsl_vector * dest, const gsl_vector * src);$/;"	p	signature:(gsl_vector * dest, const gsl_vector * src)
gsl_vector_min	/usr/local/gsl/include/gsl/gsl_vector_double.h	/^double gsl_vector_min (const gsl_vector * v);$/;"	p	signature:(const gsl_vector * v)
gsl_vector_min_index	/usr/local/gsl/include/gsl/gsl_vector_double.h	/^size_t gsl_vector_min_index (const gsl_vector * v);$/;"	p	signature:(const gsl_vector * v)
gsl_vector_minmax	/usr/local/gsl/include/gsl/gsl_vector_double.h	/^void gsl_vector_minmax (const gsl_vector * v, double * min_out, double * max_out);$/;"	p	signature:(const gsl_vector * v, double * min_out, double * max_out)
gsl_vector_minmax_index	/usr/local/gsl/include/gsl/gsl_vector_double.h	/^void gsl_vector_minmax_index (const gsl_vector * v, size_t * imin, size_t * imax);$/;"	p	signature:(const gsl_vector * v, size_t * imin, size_t * imax)
gsl_vector_mul	/usr/local/gsl/include/gsl/gsl_vector_double.h	/^int gsl_vector_mul (gsl_vector * a, const gsl_vector * b);$/;"	p	signature:(gsl_vector * a, const gsl_vector * b)
gsl_vector_ptr	/usr/local/gsl/include/gsl/gsl_vector_double.h	/^INLINE_DECL double * gsl_vector_ptr (gsl_vector * v, const size_t i);$/;"	p	signature:(gsl_vector * v, const size_t i)
gsl_vector_ptr	/usr/local/gsl/include/gsl/gsl_vector_double.h	/^gsl_vector_ptr (gsl_vector * v, const size_t i)$/;"	f	signature:(gsl_vector * v, const size_t i)
gsl_vector_reverse	/usr/local/gsl/include/gsl/gsl_vector_double.h	/^int gsl_vector_reverse (gsl_vector * v);$/;"	p	signature:(gsl_vector * v)
gsl_vector_scale	/usr/local/gsl/include/gsl/gsl_vector_double.h	/^int gsl_vector_scale (gsl_vector * a, const double x);$/;"	p	signature:(gsl_vector * a, const double x)
gsl_vector_set	/usr/local/gsl/include/gsl/gsl_vector_double.h	/^INLINE_DECL void gsl_vector_set (gsl_vector * v, const size_t i, double x);$/;"	p	signature:(gsl_vector * v, const size_t i, double x)
gsl_vector_set	/usr/local/gsl/include/gsl/gsl_vector_double.h	/^gsl_vector_set (gsl_vector * v, const size_t i, double x)$/;"	f	signature:(gsl_vector * v, const size_t i, double x)
gsl_vector_set_all	/usr/local/gsl/include/gsl/gsl_vector_double.h	/^void gsl_vector_set_all (gsl_vector * v, double x);$/;"	p	signature:(gsl_vector * v, double x)
gsl_vector_set_basis	/usr/local/gsl/include/gsl/gsl_vector_double.h	/^int gsl_vector_set_basis (gsl_vector * v, size_t i);$/;"	p	signature:(gsl_vector * v, size_t i)
gsl_vector_set_zero	/usr/local/gsl/include/gsl/gsl_vector_double.h	/^void gsl_vector_set_zero (gsl_vector * v);$/;"	p	signature:(gsl_vector * v)
gsl_vector_short	/usr/local/gsl/include/gsl/gsl_vector_short.h	/^gsl_vector_short;$/;"	t	typeref:struct:__anon154
gsl_vector_short_add	/usr/local/gsl/include/gsl/gsl_vector_short.h	/^int gsl_vector_short_add (gsl_vector_short * a, const gsl_vector_short * b);$/;"	p	signature:(gsl_vector_short * a, const gsl_vector_short * b)
gsl_vector_short_add_constant	/usr/local/gsl/include/gsl/gsl_vector_short.h	/^int gsl_vector_short_add_constant (gsl_vector_short * a, const double x);$/;"	p	signature:(gsl_vector_short * a, const double x)
gsl_vector_short_alloc	/usr/local/gsl/include/gsl/gsl_vector_short.h	/^gsl_vector_short *gsl_vector_short_alloc (const size_t n);$/;"	p	signature:(const size_t n)
gsl_vector_short_alloc_col_from_matrix	/usr/local/gsl/include/gsl/gsl_matrix_short.h	/^gsl_vector_short_alloc_col_from_matrix (gsl_matrix_short * m,$/;"	p	signature:(gsl_matrix_short * m, const size_t j)
gsl_vector_short_alloc_from_block	/usr/local/gsl/include/gsl/gsl_vector_short.h	/^gsl_vector_short *gsl_vector_short_alloc_from_block (gsl_block_short * b,$/;"	p	signature:(gsl_block_short * b, const size_t offset, const size_t n, const size_t stride)
gsl_vector_short_alloc_from_vector	/usr/local/gsl/include/gsl/gsl_vector_short.h	/^gsl_vector_short *gsl_vector_short_alloc_from_vector (gsl_vector_short * v,$/;"	p	signature:(gsl_vector_short * v, const size_t offset, const size_t n, const size_t stride)
gsl_vector_short_alloc_row_from_matrix	/usr/local/gsl/include/gsl/gsl_matrix_short.h	/^gsl_vector_short_alloc_row_from_matrix (gsl_matrix_short * m,$/;"	p	signature:(gsl_matrix_short * m, const size_t i)
gsl_vector_short_calloc	/usr/local/gsl/include/gsl/gsl_vector_short.h	/^gsl_vector_short *gsl_vector_short_calloc (const size_t n);$/;"	p	signature:(const size_t n)
gsl_vector_short_const_ptr	/usr/local/gsl/include/gsl/gsl_vector_short.h	/^INLINE_DECL const short * gsl_vector_short_const_ptr (const gsl_vector_short * v, const size_t i);$/;"	p	signature:(const gsl_vector_short * v, const size_t i)
gsl_vector_short_const_ptr	/usr/local/gsl/include/gsl/gsl_vector_short.h	/^gsl_vector_short_const_ptr (const gsl_vector_short * v, const size_t i)$/;"	f	signature:(const gsl_vector_short * v, const size_t i)
gsl_vector_short_const_subvector	/usr/local/gsl/include/gsl/gsl_vector_short.h	/^gsl_vector_short_const_subvector (const gsl_vector_short *v, $/;"	p	signature:(const gsl_vector_short *v, size_t i, size_t n)
gsl_vector_short_const_subvector_with_stride	/usr/local/gsl/include/gsl/gsl_vector_short.h	/^gsl_vector_short_const_subvector_with_stride (const gsl_vector_short *v, $/;"	p	signature:(const gsl_vector_short *v, size_t i, size_t stride, size_t n)
gsl_vector_short_const_view	/usr/local/gsl/include/gsl/gsl_vector_short.h	/^typedef const _gsl_vector_short_const_view gsl_vector_short_const_view;$/;"	t
gsl_vector_short_const_view_array	/usr/local/gsl/include/gsl/gsl_vector_short.h	/^gsl_vector_short_const_view_array (const short *v, size_t n);$/;"	p	signature:(const short *v, size_t n)
gsl_vector_short_const_view_array_with_stride	/usr/local/gsl/include/gsl/gsl_vector_short.h	/^gsl_vector_short_const_view_array_with_stride (const short *base,$/;"	p	signature:(const short *base, size_t stride, size_t n)
gsl_vector_short_div	/usr/local/gsl/include/gsl/gsl_vector_short.h	/^int gsl_vector_short_div (gsl_vector_short * a, const gsl_vector_short * b);$/;"	p	signature:(gsl_vector_short * a, const gsl_vector_short * b)
gsl_vector_short_fprintf	/usr/local/gsl/include/gsl/gsl_vector_short.h	/^int gsl_vector_short_fprintf (FILE * stream, const gsl_vector_short * v,$/;"	p	signature:(FILE * stream, const gsl_vector_short * v, const char *format)
gsl_vector_short_fread	/usr/local/gsl/include/gsl/gsl_vector_short.h	/^int gsl_vector_short_fread (FILE * stream, gsl_vector_short * v);$/;"	p	signature:(FILE * stream, gsl_vector_short * v)
gsl_vector_short_free	/usr/local/gsl/include/gsl/gsl_vector_short.h	/^void gsl_vector_short_free (gsl_vector_short * v);$/;"	p	signature:(gsl_vector_short * v)
gsl_vector_short_fscanf	/usr/local/gsl/include/gsl/gsl_vector_short.h	/^int gsl_vector_short_fscanf (FILE * stream, gsl_vector_short * v);$/;"	p	signature:(FILE * stream, gsl_vector_short * v)
gsl_vector_short_fwrite	/usr/local/gsl/include/gsl/gsl_vector_short.h	/^int gsl_vector_short_fwrite (FILE * stream, const gsl_vector_short * v);$/;"	p	signature:(FILE * stream, const gsl_vector_short * v)
gsl_vector_short_get	/usr/local/gsl/include/gsl/gsl_vector_short.h	/^INLINE_DECL short gsl_vector_short_get (const gsl_vector_short * v, const size_t i);$/;"	p	signature:(const gsl_vector_short * v, const size_t i)
gsl_vector_short_get	/usr/local/gsl/include/gsl/gsl_vector_short.h	/^gsl_vector_short_get (const gsl_vector_short * v, const size_t i)$/;"	f	signature:(const gsl_vector_short * v, const size_t i)
gsl_vector_short_isneg	/usr/local/gsl/include/gsl/gsl_vector_short.h	/^int gsl_vector_short_isneg (const gsl_vector_short * v);$/;"	p	signature:(const gsl_vector_short * v)
gsl_vector_short_isnonneg	/usr/local/gsl/include/gsl/gsl_vector_short.h	/^int gsl_vector_short_isnonneg (const gsl_vector_short * v);$/;"	p	signature:(const gsl_vector_short * v)
gsl_vector_short_isnull	/usr/local/gsl/include/gsl/gsl_vector_short.h	/^int gsl_vector_short_isnull (const gsl_vector_short * v);$/;"	p	signature:(const gsl_vector_short * v)
gsl_vector_short_ispos	/usr/local/gsl/include/gsl/gsl_vector_short.h	/^int gsl_vector_short_ispos (const gsl_vector_short * v);$/;"	p	signature:(const gsl_vector_short * v)
gsl_vector_short_max	/usr/local/gsl/include/gsl/gsl_vector_short.h	/^short gsl_vector_short_max (const gsl_vector_short * v);$/;"	p	signature:(const gsl_vector_short * v)
gsl_vector_short_max_index	/usr/local/gsl/include/gsl/gsl_vector_short.h	/^size_t gsl_vector_short_max_index (const gsl_vector_short * v);$/;"	p	signature:(const gsl_vector_short * v)
gsl_vector_short_memcpy	/usr/local/gsl/include/gsl/gsl_vector_short.h	/^int gsl_vector_short_memcpy (gsl_vector_short * dest, const gsl_vector_short * src);$/;"	p	signature:(gsl_vector_short * dest, const gsl_vector_short * src)
gsl_vector_short_min	/usr/local/gsl/include/gsl/gsl_vector_short.h	/^short gsl_vector_short_min (const gsl_vector_short * v);$/;"	p	signature:(const gsl_vector_short * v)
gsl_vector_short_min_index	/usr/local/gsl/include/gsl/gsl_vector_short.h	/^size_t gsl_vector_short_min_index (const gsl_vector_short * v);$/;"	p	signature:(const gsl_vector_short * v)
gsl_vector_short_minmax	/usr/local/gsl/include/gsl/gsl_vector_short.h	/^void gsl_vector_short_minmax (const gsl_vector_short * v, short * min_out, short * max_out);$/;"	p	signature:(const gsl_vector_short * v, short * min_out, short * max_out)
gsl_vector_short_minmax_index	/usr/local/gsl/include/gsl/gsl_vector_short.h	/^void gsl_vector_short_minmax_index (const gsl_vector_short * v, size_t * imin, size_t * imax);$/;"	p	signature:(const gsl_vector_short * v, size_t * imin, size_t * imax)
gsl_vector_short_mul	/usr/local/gsl/include/gsl/gsl_vector_short.h	/^int gsl_vector_short_mul (gsl_vector_short * a, const gsl_vector_short * b);$/;"	p	signature:(gsl_vector_short * a, const gsl_vector_short * b)
gsl_vector_short_ptr	/usr/local/gsl/include/gsl/gsl_vector_short.h	/^INLINE_DECL short * gsl_vector_short_ptr (gsl_vector_short * v, const size_t i);$/;"	p	signature:(gsl_vector_short * v, const size_t i)
gsl_vector_short_ptr	/usr/local/gsl/include/gsl/gsl_vector_short.h	/^gsl_vector_short_ptr (gsl_vector_short * v, const size_t i)$/;"	f	signature:(gsl_vector_short * v, const size_t i)
gsl_vector_short_reverse	/usr/local/gsl/include/gsl/gsl_vector_short.h	/^int gsl_vector_short_reverse (gsl_vector_short * v);$/;"	p	signature:(gsl_vector_short * v)
gsl_vector_short_scale	/usr/local/gsl/include/gsl/gsl_vector_short.h	/^int gsl_vector_short_scale (gsl_vector_short * a, const double x);$/;"	p	signature:(gsl_vector_short * a, const double x)
gsl_vector_short_set	/usr/local/gsl/include/gsl/gsl_vector_short.h	/^INLINE_DECL void gsl_vector_short_set (gsl_vector_short * v, const size_t i, short x);$/;"	p	signature:(gsl_vector_short * v, const size_t i, short x)
gsl_vector_short_set	/usr/local/gsl/include/gsl/gsl_vector_short.h	/^gsl_vector_short_set (gsl_vector_short * v, const size_t i, short x)$/;"	f	signature:(gsl_vector_short * v, const size_t i, short x)
gsl_vector_short_set_all	/usr/local/gsl/include/gsl/gsl_vector_short.h	/^void gsl_vector_short_set_all (gsl_vector_short * v, short x);$/;"	p	signature:(gsl_vector_short * v, short x)
gsl_vector_short_set_basis	/usr/local/gsl/include/gsl/gsl_vector_short.h	/^int gsl_vector_short_set_basis (gsl_vector_short * v, size_t i);$/;"	p	signature:(gsl_vector_short * v, size_t i)
gsl_vector_short_set_zero	/usr/local/gsl/include/gsl/gsl_vector_short.h	/^void gsl_vector_short_set_zero (gsl_vector_short * v);$/;"	p	signature:(gsl_vector_short * v)
gsl_vector_short_sub	/usr/local/gsl/include/gsl/gsl_vector_short.h	/^int gsl_vector_short_sub (gsl_vector_short * a, const gsl_vector_short * b);$/;"	p	signature:(gsl_vector_short * a, const gsl_vector_short * b)
gsl_vector_short_subvector	/usr/local/gsl/include/gsl/gsl_vector_short.h	/^gsl_vector_short_subvector (gsl_vector_short *v, $/;"	p	signature:(gsl_vector_short *v, size_t i, size_t n)
gsl_vector_short_subvector_with_stride	/usr/local/gsl/include/gsl/gsl_vector_short.h	/^gsl_vector_short_subvector_with_stride (gsl_vector_short *v, $/;"	p	signature:(gsl_vector_short *v, size_t i, size_t stride, size_t n)
gsl_vector_short_swap	/usr/local/gsl/include/gsl/gsl_vector_short.h	/^int gsl_vector_short_swap (gsl_vector_short * v, gsl_vector_short * w);$/;"	p	signature:(gsl_vector_short * v, gsl_vector_short * w)
gsl_vector_short_swap_elements	/usr/local/gsl/include/gsl/gsl_vector_short.h	/^int gsl_vector_short_swap_elements (gsl_vector_short * v, const size_t i, const size_t j);$/;"	p	signature:(gsl_vector_short * v, const size_t i, const size_t j)
gsl_vector_short_view	/usr/local/gsl/include/gsl/gsl_vector_short.h	/^typedef _gsl_vector_short_view gsl_vector_short_view;$/;"	t
gsl_vector_short_view_array	/usr/local/gsl/include/gsl/gsl_vector_short.h	/^gsl_vector_short_view_array (short *v, size_t n);$/;"	p	signature:(short *v, size_t n)
gsl_vector_short_view_array_with_stride	/usr/local/gsl/include/gsl/gsl_vector_short.h	/^gsl_vector_short_view_array_with_stride (short *base,$/;"	p	signature:(short *base, size_t stride, size_t n)
gsl_vector_sub	/usr/local/gsl/include/gsl/gsl_vector_double.h	/^int gsl_vector_sub (gsl_vector * a, const gsl_vector * b);$/;"	p	signature:(gsl_vector * a, const gsl_vector * b)
gsl_vector_subvector	/usr/local/gsl/include/gsl/gsl_vector_double.h	/^gsl_vector_subvector (gsl_vector *v, $/;"	p	signature:(gsl_vector *v, size_t i, size_t n)
gsl_vector_subvector_with_stride	/usr/local/gsl/include/gsl/gsl_vector_double.h	/^gsl_vector_subvector_with_stride (gsl_vector *v, $/;"	p	signature:(gsl_vector *v, size_t i, size_t stride, size_t n)
gsl_vector_swap	/usr/local/gsl/include/gsl/gsl_vector_double.h	/^int gsl_vector_swap (gsl_vector * v, gsl_vector * w);$/;"	p	signature:(gsl_vector * v, gsl_vector * w)
gsl_vector_swap_elements	/usr/local/gsl/include/gsl/gsl_vector_double.h	/^int gsl_vector_swap_elements (gsl_vector * v, const size_t i, const size_t j);$/;"	p	signature:(gsl_vector * v, const size_t i, const size_t j)
gsl_vector_uchar	/usr/local/gsl/include/gsl/gsl_vector_uchar.h	/^gsl_vector_uchar;$/;"	t	typeref:struct:__anon42
gsl_vector_uchar_add	/usr/local/gsl/include/gsl/gsl_vector_uchar.h	/^int gsl_vector_uchar_add (gsl_vector_uchar * a, const gsl_vector_uchar * b);$/;"	p	signature:(gsl_vector_uchar * a, const gsl_vector_uchar * b)
gsl_vector_uchar_add_constant	/usr/local/gsl/include/gsl/gsl_vector_uchar.h	/^int gsl_vector_uchar_add_constant (gsl_vector_uchar * a, const double x);$/;"	p	signature:(gsl_vector_uchar * a, const double x)
gsl_vector_uchar_alloc	/usr/local/gsl/include/gsl/gsl_vector_uchar.h	/^gsl_vector_uchar *gsl_vector_uchar_alloc (const size_t n);$/;"	p	signature:(const size_t n)
gsl_vector_uchar_alloc_col_from_matrix	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	/^gsl_vector_uchar_alloc_col_from_matrix (gsl_matrix_uchar * m,$/;"	p	signature:(gsl_matrix_uchar * m, const size_t j)
gsl_vector_uchar_alloc_from_block	/usr/local/gsl/include/gsl/gsl_vector_uchar.h	/^gsl_vector_uchar *gsl_vector_uchar_alloc_from_block (gsl_block_uchar * b,$/;"	p	signature:(gsl_block_uchar * b, const size_t offset, const size_t n, const size_t stride)
gsl_vector_uchar_alloc_from_vector	/usr/local/gsl/include/gsl/gsl_vector_uchar.h	/^gsl_vector_uchar *gsl_vector_uchar_alloc_from_vector (gsl_vector_uchar * v,$/;"	p	signature:(gsl_vector_uchar * v, const size_t offset, const size_t n, const size_t stride)
gsl_vector_uchar_alloc_row_from_matrix	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	/^gsl_vector_uchar_alloc_row_from_matrix (gsl_matrix_uchar * m,$/;"	p	signature:(gsl_matrix_uchar * m, const size_t i)
gsl_vector_uchar_calloc	/usr/local/gsl/include/gsl/gsl_vector_uchar.h	/^gsl_vector_uchar *gsl_vector_uchar_calloc (const size_t n);$/;"	p	signature:(const size_t n)
gsl_vector_uchar_const_ptr	/usr/local/gsl/include/gsl/gsl_vector_uchar.h	/^INLINE_DECL const unsigned char * gsl_vector_uchar_const_ptr (const gsl_vector_uchar * v, const size_t i);$/;"	p	signature:(const gsl_vector_uchar * v, const size_t i)
gsl_vector_uchar_const_ptr	/usr/local/gsl/include/gsl/gsl_vector_uchar.h	/^gsl_vector_uchar_const_ptr (const gsl_vector_uchar * v, const size_t i)$/;"	f	signature:(const gsl_vector_uchar * v, const size_t i)
gsl_vector_uchar_const_subvector	/usr/local/gsl/include/gsl/gsl_vector_uchar.h	/^gsl_vector_uchar_const_subvector (const gsl_vector_uchar *v, $/;"	p	signature:(const gsl_vector_uchar *v, size_t i, size_t n)
gsl_vector_uchar_const_subvector_with_stride	/usr/local/gsl/include/gsl/gsl_vector_uchar.h	/^gsl_vector_uchar_const_subvector_with_stride (const gsl_vector_uchar *v, $/;"	p	signature:(const gsl_vector_uchar *v, size_t i, size_t stride, size_t n)
gsl_vector_uchar_const_view	/usr/local/gsl/include/gsl/gsl_vector_uchar.h	/^typedef const _gsl_vector_uchar_const_view gsl_vector_uchar_const_view;$/;"	t
gsl_vector_uchar_const_view_array	/usr/local/gsl/include/gsl/gsl_vector_uchar.h	/^gsl_vector_uchar_const_view_array (const unsigned char *v, size_t n);$/;"	p	signature:(const unsigned char *v, size_t n)
gsl_vector_uchar_const_view_array_with_stride	/usr/local/gsl/include/gsl/gsl_vector_uchar.h	/^gsl_vector_uchar_const_view_array_with_stride (const unsigned char *base,$/;"	p	signature:(const unsigned char *base, size_t stride, size_t n)
gsl_vector_uchar_div	/usr/local/gsl/include/gsl/gsl_vector_uchar.h	/^int gsl_vector_uchar_div (gsl_vector_uchar * a, const gsl_vector_uchar * b);$/;"	p	signature:(gsl_vector_uchar * a, const gsl_vector_uchar * b)
gsl_vector_uchar_fprintf	/usr/local/gsl/include/gsl/gsl_vector_uchar.h	/^int gsl_vector_uchar_fprintf (FILE * stream, const gsl_vector_uchar * v,$/;"	p	signature:(FILE * stream, const gsl_vector_uchar * v, const char *format)
gsl_vector_uchar_fread	/usr/local/gsl/include/gsl/gsl_vector_uchar.h	/^int gsl_vector_uchar_fread (FILE * stream, gsl_vector_uchar * v);$/;"	p	signature:(FILE * stream, gsl_vector_uchar * v)
gsl_vector_uchar_free	/usr/local/gsl/include/gsl/gsl_vector_uchar.h	/^void gsl_vector_uchar_free (gsl_vector_uchar * v);$/;"	p	signature:(gsl_vector_uchar * v)
gsl_vector_uchar_fscanf	/usr/local/gsl/include/gsl/gsl_vector_uchar.h	/^int gsl_vector_uchar_fscanf (FILE * stream, gsl_vector_uchar * v);$/;"	p	signature:(FILE * stream, gsl_vector_uchar * v)
gsl_vector_uchar_fwrite	/usr/local/gsl/include/gsl/gsl_vector_uchar.h	/^int gsl_vector_uchar_fwrite (FILE * stream, const gsl_vector_uchar * v);$/;"	p	signature:(FILE * stream, const gsl_vector_uchar * v)
gsl_vector_uchar_get	/usr/local/gsl/include/gsl/gsl_vector_uchar.h	/^INLINE_DECL unsigned char gsl_vector_uchar_get (const gsl_vector_uchar * v, const size_t i);$/;"	p	signature:(const gsl_vector_uchar * v, const size_t i)
gsl_vector_uchar_get	/usr/local/gsl/include/gsl/gsl_vector_uchar.h	/^gsl_vector_uchar_get (const gsl_vector_uchar * v, const size_t i)$/;"	f	signature:(const gsl_vector_uchar * v, const size_t i)
gsl_vector_uchar_isneg	/usr/local/gsl/include/gsl/gsl_vector_uchar.h	/^int gsl_vector_uchar_isneg (const gsl_vector_uchar * v);$/;"	p	signature:(const gsl_vector_uchar * v)
gsl_vector_uchar_isnonneg	/usr/local/gsl/include/gsl/gsl_vector_uchar.h	/^int gsl_vector_uchar_isnonneg (const gsl_vector_uchar * v);$/;"	p	signature:(const gsl_vector_uchar * v)
gsl_vector_uchar_isnull	/usr/local/gsl/include/gsl/gsl_vector_uchar.h	/^int gsl_vector_uchar_isnull (const gsl_vector_uchar * v);$/;"	p	signature:(const gsl_vector_uchar * v)
gsl_vector_uchar_ispos	/usr/local/gsl/include/gsl/gsl_vector_uchar.h	/^int gsl_vector_uchar_ispos (const gsl_vector_uchar * v);$/;"	p	signature:(const gsl_vector_uchar * v)
gsl_vector_uchar_max	/usr/local/gsl/include/gsl/gsl_vector_uchar.h	/^unsigned char gsl_vector_uchar_max (const gsl_vector_uchar * v);$/;"	p	signature:(const gsl_vector_uchar * v)
gsl_vector_uchar_max_index	/usr/local/gsl/include/gsl/gsl_vector_uchar.h	/^size_t gsl_vector_uchar_max_index (const gsl_vector_uchar * v);$/;"	p	signature:(const gsl_vector_uchar * v)
gsl_vector_uchar_memcpy	/usr/local/gsl/include/gsl/gsl_vector_uchar.h	/^int gsl_vector_uchar_memcpy (gsl_vector_uchar * dest, const gsl_vector_uchar * src);$/;"	p	signature:(gsl_vector_uchar * dest, const gsl_vector_uchar * src)
gsl_vector_uchar_min	/usr/local/gsl/include/gsl/gsl_vector_uchar.h	/^unsigned char gsl_vector_uchar_min (const gsl_vector_uchar * v);$/;"	p	signature:(const gsl_vector_uchar * v)
gsl_vector_uchar_min_index	/usr/local/gsl/include/gsl/gsl_vector_uchar.h	/^size_t gsl_vector_uchar_min_index (const gsl_vector_uchar * v);$/;"	p	signature:(const gsl_vector_uchar * v)
gsl_vector_uchar_minmax	/usr/local/gsl/include/gsl/gsl_vector_uchar.h	/^void gsl_vector_uchar_minmax (const gsl_vector_uchar * v, unsigned char * min_out, unsigned char * max_out);$/;"	p	signature:(const gsl_vector_uchar * v, unsigned char * min_out, unsigned char * max_out)
gsl_vector_uchar_minmax_index	/usr/local/gsl/include/gsl/gsl_vector_uchar.h	/^void gsl_vector_uchar_minmax_index (const gsl_vector_uchar * v, size_t * imin, size_t * imax);$/;"	p	signature:(const gsl_vector_uchar * v, size_t * imin, size_t * imax)
gsl_vector_uchar_mul	/usr/local/gsl/include/gsl/gsl_vector_uchar.h	/^int gsl_vector_uchar_mul (gsl_vector_uchar * a, const gsl_vector_uchar * b);$/;"	p	signature:(gsl_vector_uchar * a, const gsl_vector_uchar * b)
gsl_vector_uchar_ptr	/usr/local/gsl/include/gsl/gsl_vector_uchar.h	/^INLINE_DECL unsigned char * gsl_vector_uchar_ptr (gsl_vector_uchar * v, const size_t i);$/;"	p	signature:(gsl_vector_uchar * v, const size_t i)
gsl_vector_uchar_ptr	/usr/local/gsl/include/gsl/gsl_vector_uchar.h	/^gsl_vector_uchar_ptr (gsl_vector_uchar * v, const size_t i)$/;"	f	signature:(gsl_vector_uchar * v, const size_t i)
gsl_vector_uchar_reverse	/usr/local/gsl/include/gsl/gsl_vector_uchar.h	/^int gsl_vector_uchar_reverse (gsl_vector_uchar * v);$/;"	p	signature:(gsl_vector_uchar * v)
gsl_vector_uchar_scale	/usr/local/gsl/include/gsl/gsl_vector_uchar.h	/^int gsl_vector_uchar_scale (gsl_vector_uchar * a, const double x);$/;"	p	signature:(gsl_vector_uchar * a, const double x)
gsl_vector_uchar_set	/usr/local/gsl/include/gsl/gsl_vector_uchar.h	/^INLINE_DECL void gsl_vector_uchar_set (gsl_vector_uchar * v, const size_t i, unsigned char x);$/;"	p	signature:(gsl_vector_uchar * v, const size_t i, unsigned char x)
gsl_vector_uchar_set	/usr/local/gsl/include/gsl/gsl_vector_uchar.h	/^gsl_vector_uchar_set (gsl_vector_uchar * v, const size_t i, unsigned char x)$/;"	f	signature:(gsl_vector_uchar * v, const size_t i, unsigned char x)
gsl_vector_uchar_set_all	/usr/local/gsl/include/gsl/gsl_vector_uchar.h	/^void gsl_vector_uchar_set_all (gsl_vector_uchar * v, unsigned char x);$/;"	p	signature:(gsl_vector_uchar * v, unsigned char x)
gsl_vector_uchar_set_basis	/usr/local/gsl/include/gsl/gsl_vector_uchar.h	/^int gsl_vector_uchar_set_basis (gsl_vector_uchar * v, size_t i);$/;"	p	signature:(gsl_vector_uchar * v, size_t i)
gsl_vector_uchar_set_zero	/usr/local/gsl/include/gsl/gsl_vector_uchar.h	/^void gsl_vector_uchar_set_zero (gsl_vector_uchar * v);$/;"	p	signature:(gsl_vector_uchar * v)
gsl_vector_uchar_sub	/usr/local/gsl/include/gsl/gsl_vector_uchar.h	/^int gsl_vector_uchar_sub (gsl_vector_uchar * a, const gsl_vector_uchar * b);$/;"	p	signature:(gsl_vector_uchar * a, const gsl_vector_uchar * b)
gsl_vector_uchar_subvector	/usr/local/gsl/include/gsl/gsl_vector_uchar.h	/^gsl_vector_uchar_subvector (gsl_vector_uchar *v, $/;"	p	signature:(gsl_vector_uchar *v, size_t i, size_t n)
gsl_vector_uchar_subvector_with_stride	/usr/local/gsl/include/gsl/gsl_vector_uchar.h	/^gsl_vector_uchar_subvector_with_stride (gsl_vector_uchar *v, $/;"	p	signature:(gsl_vector_uchar *v, size_t i, size_t stride, size_t n)
gsl_vector_uchar_swap	/usr/local/gsl/include/gsl/gsl_vector_uchar.h	/^int gsl_vector_uchar_swap (gsl_vector_uchar * v, gsl_vector_uchar * w);$/;"	p	signature:(gsl_vector_uchar * v, gsl_vector_uchar * w)
gsl_vector_uchar_swap_elements	/usr/local/gsl/include/gsl/gsl_vector_uchar.h	/^int gsl_vector_uchar_swap_elements (gsl_vector_uchar * v, const size_t i, const size_t j);$/;"	p	signature:(gsl_vector_uchar * v, const size_t i, const size_t j)
gsl_vector_uchar_view	/usr/local/gsl/include/gsl/gsl_vector_uchar.h	/^typedef _gsl_vector_uchar_view gsl_vector_uchar_view;$/;"	t
gsl_vector_uchar_view_array	/usr/local/gsl/include/gsl/gsl_vector_uchar.h	/^gsl_vector_uchar_view_array (unsigned char *v, size_t n);$/;"	p	signature:(unsigned char *v, size_t n)
gsl_vector_uchar_view_array_with_stride	/usr/local/gsl/include/gsl/gsl_vector_uchar.h	/^gsl_vector_uchar_view_array_with_stride (unsigned char *base,$/;"	p	signature:(unsigned char *base, size_t stride, size_t n)
gsl_vector_uint	/usr/local/gsl/include/gsl/gsl_vector_uint.h	/^gsl_vector_uint;$/;"	t	typeref:struct:__anon25
gsl_vector_uint_add	/usr/local/gsl/include/gsl/gsl_vector_uint.h	/^int gsl_vector_uint_add (gsl_vector_uint * a, const gsl_vector_uint * b);$/;"	p	signature:(gsl_vector_uint * a, const gsl_vector_uint * b)
gsl_vector_uint_add_constant	/usr/local/gsl/include/gsl/gsl_vector_uint.h	/^int gsl_vector_uint_add_constant (gsl_vector_uint * a, const double x);$/;"	p	signature:(gsl_vector_uint * a, const double x)
gsl_vector_uint_alloc	/usr/local/gsl/include/gsl/gsl_vector_uint.h	/^gsl_vector_uint *gsl_vector_uint_alloc (const size_t n);$/;"	p	signature:(const size_t n)
gsl_vector_uint_alloc_col_from_matrix	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	/^gsl_vector_uint_alloc_col_from_matrix (gsl_matrix_uint * m,$/;"	p	signature:(gsl_matrix_uint * m, const size_t j)
gsl_vector_uint_alloc_from_block	/usr/local/gsl/include/gsl/gsl_vector_uint.h	/^gsl_vector_uint *gsl_vector_uint_alloc_from_block (gsl_block_uint * b,$/;"	p	signature:(gsl_block_uint * b, const size_t offset, const size_t n, const size_t stride)
gsl_vector_uint_alloc_from_vector	/usr/local/gsl/include/gsl/gsl_vector_uint.h	/^gsl_vector_uint *gsl_vector_uint_alloc_from_vector (gsl_vector_uint * v,$/;"	p	signature:(gsl_vector_uint * v, const size_t offset, const size_t n, const size_t stride)
gsl_vector_uint_alloc_row_from_matrix	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	/^gsl_vector_uint_alloc_row_from_matrix (gsl_matrix_uint * m,$/;"	p	signature:(gsl_matrix_uint * m, const size_t i)
gsl_vector_uint_calloc	/usr/local/gsl/include/gsl/gsl_vector_uint.h	/^gsl_vector_uint *gsl_vector_uint_calloc (const size_t n);$/;"	p	signature:(const size_t n)
gsl_vector_uint_const_ptr	/usr/local/gsl/include/gsl/gsl_vector_uint.h	/^INLINE_DECL const unsigned int * gsl_vector_uint_const_ptr (const gsl_vector_uint * v, const size_t i);$/;"	p	signature:(const gsl_vector_uint * v, const size_t i)
gsl_vector_uint_const_ptr	/usr/local/gsl/include/gsl/gsl_vector_uint.h	/^gsl_vector_uint_const_ptr (const gsl_vector_uint * v, const size_t i)$/;"	f	signature:(const gsl_vector_uint * v, const size_t i)
gsl_vector_uint_const_subvector	/usr/local/gsl/include/gsl/gsl_vector_uint.h	/^gsl_vector_uint_const_subvector (const gsl_vector_uint *v, $/;"	p	signature:(const gsl_vector_uint *v, size_t i, size_t n)
gsl_vector_uint_const_subvector_with_stride	/usr/local/gsl/include/gsl/gsl_vector_uint.h	/^gsl_vector_uint_const_subvector_with_stride (const gsl_vector_uint *v, $/;"	p	signature:(const gsl_vector_uint *v, size_t i, size_t stride, size_t n)
gsl_vector_uint_const_view	/usr/local/gsl/include/gsl/gsl_vector_uint.h	/^typedef const _gsl_vector_uint_const_view gsl_vector_uint_const_view;$/;"	t
gsl_vector_uint_const_view_array	/usr/local/gsl/include/gsl/gsl_vector_uint.h	/^gsl_vector_uint_const_view_array (const unsigned int *v, size_t n);$/;"	p	signature:(const unsigned int *v, size_t n)
gsl_vector_uint_const_view_array_with_stride	/usr/local/gsl/include/gsl/gsl_vector_uint.h	/^gsl_vector_uint_const_view_array_with_stride (const unsigned int *base,$/;"	p	signature:(const unsigned int *base, size_t stride, size_t n)
gsl_vector_uint_div	/usr/local/gsl/include/gsl/gsl_vector_uint.h	/^int gsl_vector_uint_div (gsl_vector_uint * a, const gsl_vector_uint * b);$/;"	p	signature:(gsl_vector_uint * a, const gsl_vector_uint * b)
gsl_vector_uint_fprintf	/usr/local/gsl/include/gsl/gsl_vector_uint.h	/^int gsl_vector_uint_fprintf (FILE * stream, const gsl_vector_uint * v,$/;"	p	signature:(FILE * stream, const gsl_vector_uint * v, const char *format)
gsl_vector_uint_fread	/usr/local/gsl/include/gsl/gsl_vector_uint.h	/^int gsl_vector_uint_fread (FILE * stream, gsl_vector_uint * v);$/;"	p	signature:(FILE * stream, gsl_vector_uint * v)
gsl_vector_uint_free	/usr/local/gsl/include/gsl/gsl_vector_uint.h	/^void gsl_vector_uint_free (gsl_vector_uint * v);$/;"	p	signature:(gsl_vector_uint * v)
gsl_vector_uint_fscanf	/usr/local/gsl/include/gsl/gsl_vector_uint.h	/^int gsl_vector_uint_fscanf (FILE * stream, gsl_vector_uint * v);$/;"	p	signature:(FILE * stream, gsl_vector_uint * v)
gsl_vector_uint_fwrite	/usr/local/gsl/include/gsl/gsl_vector_uint.h	/^int gsl_vector_uint_fwrite (FILE * stream, const gsl_vector_uint * v);$/;"	p	signature:(FILE * stream, const gsl_vector_uint * v)
gsl_vector_uint_get	/usr/local/gsl/include/gsl/gsl_vector_uint.h	/^INLINE_DECL unsigned int gsl_vector_uint_get (const gsl_vector_uint * v, const size_t i);$/;"	p	signature:(const gsl_vector_uint * v, const size_t i)
gsl_vector_uint_get	/usr/local/gsl/include/gsl/gsl_vector_uint.h	/^gsl_vector_uint_get (const gsl_vector_uint * v, const size_t i)$/;"	f	signature:(const gsl_vector_uint * v, const size_t i)
gsl_vector_uint_isneg	/usr/local/gsl/include/gsl/gsl_vector_uint.h	/^int gsl_vector_uint_isneg (const gsl_vector_uint * v);$/;"	p	signature:(const gsl_vector_uint * v)
gsl_vector_uint_isnonneg	/usr/local/gsl/include/gsl/gsl_vector_uint.h	/^int gsl_vector_uint_isnonneg (const gsl_vector_uint * v);$/;"	p	signature:(const gsl_vector_uint * v)
gsl_vector_uint_isnull	/usr/local/gsl/include/gsl/gsl_vector_uint.h	/^int gsl_vector_uint_isnull (const gsl_vector_uint * v);$/;"	p	signature:(const gsl_vector_uint * v)
gsl_vector_uint_ispos	/usr/local/gsl/include/gsl/gsl_vector_uint.h	/^int gsl_vector_uint_ispos (const gsl_vector_uint * v);$/;"	p	signature:(const gsl_vector_uint * v)
gsl_vector_uint_max	/usr/local/gsl/include/gsl/gsl_vector_uint.h	/^unsigned int gsl_vector_uint_max (const gsl_vector_uint * v);$/;"	p	signature:(const gsl_vector_uint * v)
gsl_vector_uint_max_index	/usr/local/gsl/include/gsl/gsl_vector_uint.h	/^size_t gsl_vector_uint_max_index (const gsl_vector_uint * v);$/;"	p	signature:(const gsl_vector_uint * v)
gsl_vector_uint_memcpy	/usr/local/gsl/include/gsl/gsl_vector_uint.h	/^int gsl_vector_uint_memcpy (gsl_vector_uint * dest, const gsl_vector_uint * src);$/;"	p	signature:(gsl_vector_uint * dest, const gsl_vector_uint * src)
gsl_vector_uint_min	/usr/local/gsl/include/gsl/gsl_vector_uint.h	/^unsigned int gsl_vector_uint_min (const gsl_vector_uint * v);$/;"	p	signature:(const gsl_vector_uint * v)
gsl_vector_uint_min_index	/usr/local/gsl/include/gsl/gsl_vector_uint.h	/^size_t gsl_vector_uint_min_index (const gsl_vector_uint * v);$/;"	p	signature:(const gsl_vector_uint * v)
gsl_vector_uint_minmax	/usr/local/gsl/include/gsl/gsl_vector_uint.h	/^void gsl_vector_uint_minmax (const gsl_vector_uint * v, unsigned int * min_out, unsigned int * max_out);$/;"	p	signature:(const gsl_vector_uint * v, unsigned int * min_out, unsigned int * max_out)
gsl_vector_uint_minmax_index	/usr/local/gsl/include/gsl/gsl_vector_uint.h	/^void gsl_vector_uint_minmax_index (const gsl_vector_uint * v, size_t * imin, size_t * imax);$/;"	p	signature:(const gsl_vector_uint * v, size_t * imin, size_t * imax)
gsl_vector_uint_mul	/usr/local/gsl/include/gsl/gsl_vector_uint.h	/^int gsl_vector_uint_mul (gsl_vector_uint * a, const gsl_vector_uint * b);$/;"	p	signature:(gsl_vector_uint * a, const gsl_vector_uint * b)
gsl_vector_uint_ptr	/usr/local/gsl/include/gsl/gsl_vector_uint.h	/^INLINE_DECL unsigned int * gsl_vector_uint_ptr (gsl_vector_uint * v, const size_t i);$/;"	p	signature:(gsl_vector_uint * v, const size_t i)
gsl_vector_uint_ptr	/usr/local/gsl/include/gsl/gsl_vector_uint.h	/^gsl_vector_uint_ptr (gsl_vector_uint * v, const size_t i)$/;"	f	signature:(gsl_vector_uint * v, const size_t i)
gsl_vector_uint_reverse	/usr/local/gsl/include/gsl/gsl_vector_uint.h	/^int gsl_vector_uint_reverse (gsl_vector_uint * v);$/;"	p	signature:(gsl_vector_uint * v)
gsl_vector_uint_scale	/usr/local/gsl/include/gsl/gsl_vector_uint.h	/^int gsl_vector_uint_scale (gsl_vector_uint * a, const double x);$/;"	p	signature:(gsl_vector_uint * a, const double x)
gsl_vector_uint_set	/usr/local/gsl/include/gsl/gsl_vector_uint.h	/^INLINE_DECL void gsl_vector_uint_set (gsl_vector_uint * v, const size_t i, unsigned int x);$/;"	p	signature:(gsl_vector_uint * v, const size_t i, unsigned int x)
gsl_vector_uint_set	/usr/local/gsl/include/gsl/gsl_vector_uint.h	/^gsl_vector_uint_set (gsl_vector_uint * v, const size_t i, unsigned int x)$/;"	f	signature:(gsl_vector_uint * v, const size_t i, unsigned int x)
gsl_vector_uint_set_all	/usr/local/gsl/include/gsl/gsl_vector_uint.h	/^void gsl_vector_uint_set_all (gsl_vector_uint * v, unsigned int x);$/;"	p	signature:(gsl_vector_uint * v, unsigned int x)
gsl_vector_uint_set_basis	/usr/local/gsl/include/gsl/gsl_vector_uint.h	/^int gsl_vector_uint_set_basis (gsl_vector_uint * v, size_t i);$/;"	p	signature:(gsl_vector_uint * v, size_t i)
gsl_vector_uint_set_zero	/usr/local/gsl/include/gsl/gsl_vector_uint.h	/^void gsl_vector_uint_set_zero (gsl_vector_uint * v);$/;"	p	signature:(gsl_vector_uint * v)
gsl_vector_uint_sub	/usr/local/gsl/include/gsl/gsl_vector_uint.h	/^int gsl_vector_uint_sub (gsl_vector_uint * a, const gsl_vector_uint * b);$/;"	p	signature:(gsl_vector_uint * a, const gsl_vector_uint * b)
gsl_vector_uint_subvector	/usr/local/gsl/include/gsl/gsl_vector_uint.h	/^gsl_vector_uint_subvector (gsl_vector_uint *v, $/;"	p	signature:(gsl_vector_uint *v, size_t i, size_t n)
gsl_vector_uint_subvector_with_stride	/usr/local/gsl/include/gsl/gsl_vector_uint.h	/^gsl_vector_uint_subvector_with_stride (gsl_vector_uint *v, $/;"	p	signature:(gsl_vector_uint *v, size_t i, size_t stride, size_t n)
gsl_vector_uint_swap	/usr/local/gsl/include/gsl/gsl_vector_uint.h	/^int gsl_vector_uint_swap (gsl_vector_uint * v, gsl_vector_uint * w);$/;"	p	signature:(gsl_vector_uint * v, gsl_vector_uint * w)
gsl_vector_uint_swap_elements	/usr/local/gsl/include/gsl/gsl_vector_uint.h	/^int gsl_vector_uint_swap_elements (gsl_vector_uint * v, const size_t i, const size_t j);$/;"	p	signature:(gsl_vector_uint * v, const size_t i, const size_t j)
gsl_vector_uint_view	/usr/local/gsl/include/gsl/gsl_vector_uint.h	/^typedef _gsl_vector_uint_view gsl_vector_uint_view;$/;"	t
gsl_vector_uint_view_array	/usr/local/gsl/include/gsl/gsl_vector_uint.h	/^gsl_vector_uint_view_array (unsigned int *v, size_t n);$/;"	p	signature:(unsigned int *v, size_t n)
gsl_vector_uint_view_array_with_stride	/usr/local/gsl/include/gsl/gsl_vector_uint.h	/^gsl_vector_uint_view_array_with_stride (unsigned int *base,$/;"	p	signature:(unsigned int *base, size_t stride, size_t n)
gsl_vector_ulong	/usr/local/gsl/include/gsl/gsl_vector_ulong.h	/^gsl_vector_ulong;$/;"	t	typeref:struct:__anon60
gsl_vector_ulong_add	/usr/local/gsl/include/gsl/gsl_vector_ulong.h	/^int gsl_vector_ulong_add (gsl_vector_ulong * a, const gsl_vector_ulong * b);$/;"	p	signature:(gsl_vector_ulong * a, const gsl_vector_ulong * b)
gsl_vector_ulong_add_constant	/usr/local/gsl/include/gsl/gsl_vector_ulong.h	/^int gsl_vector_ulong_add_constant (gsl_vector_ulong * a, const double x);$/;"	p	signature:(gsl_vector_ulong * a, const double x)
gsl_vector_ulong_alloc	/usr/local/gsl/include/gsl/gsl_vector_ulong.h	/^gsl_vector_ulong *gsl_vector_ulong_alloc (const size_t n);$/;"	p	signature:(const size_t n)
gsl_vector_ulong_alloc_col_from_matrix	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	/^gsl_vector_ulong_alloc_col_from_matrix (gsl_matrix_ulong * m,$/;"	p	signature:(gsl_matrix_ulong * m, const size_t j)
gsl_vector_ulong_alloc_from_block	/usr/local/gsl/include/gsl/gsl_vector_ulong.h	/^gsl_vector_ulong *gsl_vector_ulong_alloc_from_block (gsl_block_ulong * b,$/;"	p	signature:(gsl_block_ulong * b, const size_t offset, const size_t n, const size_t stride)
gsl_vector_ulong_alloc_from_vector	/usr/local/gsl/include/gsl/gsl_vector_ulong.h	/^gsl_vector_ulong *gsl_vector_ulong_alloc_from_vector (gsl_vector_ulong * v,$/;"	p	signature:(gsl_vector_ulong * v, const size_t offset, const size_t n, const size_t stride)
gsl_vector_ulong_alloc_row_from_matrix	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	/^gsl_vector_ulong_alloc_row_from_matrix (gsl_matrix_ulong * m,$/;"	p	signature:(gsl_matrix_ulong * m, const size_t i)
gsl_vector_ulong_calloc	/usr/local/gsl/include/gsl/gsl_vector_ulong.h	/^gsl_vector_ulong *gsl_vector_ulong_calloc (const size_t n);$/;"	p	signature:(const size_t n)
gsl_vector_ulong_const_ptr	/usr/local/gsl/include/gsl/gsl_vector_ulong.h	/^INLINE_DECL const unsigned long * gsl_vector_ulong_const_ptr (const gsl_vector_ulong * v, const size_t i);$/;"	p	signature:(const gsl_vector_ulong * v, const size_t i)
gsl_vector_ulong_const_ptr	/usr/local/gsl/include/gsl/gsl_vector_ulong.h	/^gsl_vector_ulong_const_ptr (const gsl_vector_ulong * v, const size_t i)$/;"	f	signature:(const gsl_vector_ulong * v, const size_t i)
gsl_vector_ulong_const_subvector	/usr/local/gsl/include/gsl/gsl_vector_ulong.h	/^gsl_vector_ulong_const_subvector (const gsl_vector_ulong *v, $/;"	p	signature:(const gsl_vector_ulong *v, size_t i, size_t n)
gsl_vector_ulong_const_subvector_with_stride	/usr/local/gsl/include/gsl/gsl_vector_ulong.h	/^gsl_vector_ulong_const_subvector_with_stride (const gsl_vector_ulong *v, $/;"	p	signature:(const gsl_vector_ulong *v, size_t i, size_t stride, size_t n)
gsl_vector_ulong_const_view	/usr/local/gsl/include/gsl/gsl_vector_ulong.h	/^typedef const _gsl_vector_ulong_const_view gsl_vector_ulong_const_view;$/;"	t
gsl_vector_ulong_const_view_array	/usr/local/gsl/include/gsl/gsl_vector_ulong.h	/^gsl_vector_ulong_const_view_array (const unsigned long *v, size_t n);$/;"	p	signature:(const unsigned long *v, size_t n)
gsl_vector_ulong_const_view_array_with_stride	/usr/local/gsl/include/gsl/gsl_vector_ulong.h	/^gsl_vector_ulong_const_view_array_with_stride (const unsigned long *base,$/;"	p	signature:(const unsigned long *base, size_t stride, size_t n)
gsl_vector_ulong_div	/usr/local/gsl/include/gsl/gsl_vector_ulong.h	/^int gsl_vector_ulong_div (gsl_vector_ulong * a, const gsl_vector_ulong * b);$/;"	p	signature:(gsl_vector_ulong * a, const gsl_vector_ulong * b)
gsl_vector_ulong_fprintf	/usr/local/gsl/include/gsl/gsl_vector_ulong.h	/^int gsl_vector_ulong_fprintf (FILE * stream, const gsl_vector_ulong * v,$/;"	p	signature:(FILE * stream, const gsl_vector_ulong * v, const char *format)
gsl_vector_ulong_fread	/usr/local/gsl/include/gsl/gsl_vector_ulong.h	/^int gsl_vector_ulong_fread (FILE * stream, gsl_vector_ulong * v);$/;"	p	signature:(FILE * stream, gsl_vector_ulong * v)
gsl_vector_ulong_free	/usr/local/gsl/include/gsl/gsl_vector_ulong.h	/^void gsl_vector_ulong_free (gsl_vector_ulong * v);$/;"	p	signature:(gsl_vector_ulong * v)
gsl_vector_ulong_fscanf	/usr/local/gsl/include/gsl/gsl_vector_ulong.h	/^int gsl_vector_ulong_fscanf (FILE * stream, gsl_vector_ulong * v);$/;"	p	signature:(FILE * stream, gsl_vector_ulong * v)
gsl_vector_ulong_fwrite	/usr/local/gsl/include/gsl/gsl_vector_ulong.h	/^int gsl_vector_ulong_fwrite (FILE * stream, const gsl_vector_ulong * v);$/;"	p	signature:(FILE * stream, const gsl_vector_ulong * v)
gsl_vector_ulong_get	/usr/local/gsl/include/gsl/gsl_vector_ulong.h	/^INLINE_DECL unsigned long gsl_vector_ulong_get (const gsl_vector_ulong * v, const size_t i);$/;"	p	signature:(const gsl_vector_ulong * v, const size_t i)
gsl_vector_ulong_get	/usr/local/gsl/include/gsl/gsl_vector_ulong.h	/^gsl_vector_ulong_get (const gsl_vector_ulong * v, const size_t i)$/;"	f	signature:(const gsl_vector_ulong * v, const size_t i)
gsl_vector_ulong_isneg	/usr/local/gsl/include/gsl/gsl_vector_ulong.h	/^int gsl_vector_ulong_isneg (const gsl_vector_ulong * v);$/;"	p	signature:(const gsl_vector_ulong * v)
gsl_vector_ulong_isnonneg	/usr/local/gsl/include/gsl/gsl_vector_ulong.h	/^int gsl_vector_ulong_isnonneg (const gsl_vector_ulong * v);$/;"	p	signature:(const gsl_vector_ulong * v)
gsl_vector_ulong_isnull	/usr/local/gsl/include/gsl/gsl_vector_ulong.h	/^int gsl_vector_ulong_isnull (const gsl_vector_ulong * v);$/;"	p	signature:(const gsl_vector_ulong * v)
gsl_vector_ulong_ispos	/usr/local/gsl/include/gsl/gsl_vector_ulong.h	/^int gsl_vector_ulong_ispos (const gsl_vector_ulong * v);$/;"	p	signature:(const gsl_vector_ulong * v)
gsl_vector_ulong_max	/usr/local/gsl/include/gsl/gsl_vector_ulong.h	/^unsigned long gsl_vector_ulong_max (const gsl_vector_ulong * v);$/;"	p	signature:(const gsl_vector_ulong * v)
gsl_vector_ulong_max_index	/usr/local/gsl/include/gsl/gsl_vector_ulong.h	/^size_t gsl_vector_ulong_max_index (const gsl_vector_ulong * v);$/;"	p	signature:(const gsl_vector_ulong * v)
gsl_vector_ulong_memcpy	/usr/local/gsl/include/gsl/gsl_vector_ulong.h	/^int gsl_vector_ulong_memcpy (gsl_vector_ulong * dest, const gsl_vector_ulong * src);$/;"	p	signature:(gsl_vector_ulong * dest, const gsl_vector_ulong * src)
gsl_vector_ulong_min	/usr/local/gsl/include/gsl/gsl_vector_ulong.h	/^unsigned long gsl_vector_ulong_min (const gsl_vector_ulong * v);$/;"	p	signature:(const gsl_vector_ulong * v)
gsl_vector_ulong_min_index	/usr/local/gsl/include/gsl/gsl_vector_ulong.h	/^size_t gsl_vector_ulong_min_index (const gsl_vector_ulong * v);$/;"	p	signature:(const gsl_vector_ulong * v)
gsl_vector_ulong_minmax	/usr/local/gsl/include/gsl/gsl_vector_ulong.h	/^void gsl_vector_ulong_minmax (const gsl_vector_ulong * v, unsigned long * min_out, unsigned long * max_out);$/;"	p	signature:(const gsl_vector_ulong * v, unsigned long * min_out, unsigned long * max_out)
gsl_vector_ulong_minmax_index	/usr/local/gsl/include/gsl/gsl_vector_ulong.h	/^void gsl_vector_ulong_minmax_index (const gsl_vector_ulong * v, size_t * imin, size_t * imax);$/;"	p	signature:(const gsl_vector_ulong * v, size_t * imin, size_t * imax)
gsl_vector_ulong_mul	/usr/local/gsl/include/gsl/gsl_vector_ulong.h	/^int gsl_vector_ulong_mul (gsl_vector_ulong * a, const gsl_vector_ulong * b);$/;"	p	signature:(gsl_vector_ulong * a, const gsl_vector_ulong * b)
gsl_vector_ulong_ptr	/usr/local/gsl/include/gsl/gsl_vector_ulong.h	/^INLINE_DECL unsigned long * gsl_vector_ulong_ptr (gsl_vector_ulong * v, const size_t i);$/;"	p	signature:(gsl_vector_ulong * v, const size_t i)
gsl_vector_ulong_ptr	/usr/local/gsl/include/gsl/gsl_vector_ulong.h	/^gsl_vector_ulong_ptr (gsl_vector_ulong * v, const size_t i)$/;"	f	signature:(gsl_vector_ulong * v, const size_t i)
gsl_vector_ulong_reverse	/usr/local/gsl/include/gsl/gsl_vector_ulong.h	/^int gsl_vector_ulong_reverse (gsl_vector_ulong * v);$/;"	p	signature:(gsl_vector_ulong * v)
gsl_vector_ulong_scale	/usr/local/gsl/include/gsl/gsl_vector_ulong.h	/^int gsl_vector_ulong_scale (gsl_vector_ulong * a, const double x);$/;"	p	signature:(gsl_vector_ulong * a, const double x)
gsl_vector_ulong_set	/usr/local/gsl/include/gsl/gsl_vector_ulong.h	/^INLINE_DECL void gsl_vector_ulong_set (gsl_vector_ulong * v, const size_t i, unsigned long x);$/;"	p	signature:(gsl_vector_ulong * v, const size_t i, unsigned long x)
gsl_vector_ulong_set	/usr/local/gsl/include/gsl/gsl_vector_ulong.h	/^gsl_vector_ulong_set (gsl_vector_ulong * v, const size_t i, unsigned long x)$/;"	f	signature:(gsl_vector_ulong * v, const size_t i, unsigned long x)
gsl_vector_ulong_set_all	/usr/local/gsl/include/gsl/gsl_vector_ulong.h	/^void gsl_vector_ulong_set_all (gsl_vector_ulong * v, unsigned long x);$/;"	p	signature:(gsl_vector_ulong * v, unsigned long x)
gsl_vector_ulong_set_basis	/usr/local/gsl/include/gsl/gsl_vector_ulong.h	/^int gsl_vector_ulong_set_basis (gsl_vector_ulong * v, size_t i);$/;"	p	signature:(gsl_vector_ulong * v, size_t i)
gsl_vector_ulong_set_zero	/usr/local/gsl/include/gsl/gsl_vector_ulong.h	/^void gsl_vector_ulong_set_zero (gsl_vector_ulong * v);$/;"	p	signature:(gsl_vector_ulong * v)
gsl_vector_ulong_sub	/usr/local/gsl/include/gsl/gsl_vector_ulong.h	/^int gsl_vector_ulong_sub (gsl_vector_ulong * a, const gsl_vector_ulong * b);$/;"	p	signature:(gsl_vector_ulong * a, const gsl_vector_ulong * b)
gsl_vector_ulong_subvector	/usr/local/gsl/include/gsl/gsl_vector_ulong.h	/^gsl_vector_ulong_subvector (gsl_vector_ulong *v, $/;"	p	signature:(gsl_vector_ulong *v, size_t i, size_t n)
gsl_vector_ulong_subvector_with_stride	/usr/local/gsl/include/gsl/gsl_vector_ulong.h	/^gsl_vector_ulong_subvector_with_stride (gsl_vector_ulong *v, $/;"	p	signature:(gsl_vector_ulong *v, size_t i, size_t stride, size_t n)
gsl_vector_ulong_swap	/usr/local/gsl/include/gsl/gsl_vector_ulong.h	/^int gsl_vector_ulong_swap (gsl_vector_ulong * v, gsl_vector_ulong * w);$/;"	p	signature:(gsl_vector_ulong * v, gsl_vector_ulong * w)
gsl_vector_ulong_swap_elements	/usr/local/gsl/include/gsl/gsl_vector_ulong.h	/^int gsl_vector_ulong_swap_elements (gsl_vector_ulong * v, const size_t i, const size_t j);$/;"	p	signature:(gsl_vector_ulong * v, const size_t i, const size_t j)
gsl_vector_ulong_view	/usr/local/gsl/include/gsl/gsl_vector_ulong.h	/^typedef _gsl_vector_ulong_view gsl_vector_ulong_view;$/;"	t
gsl_vector_ulong_view_array	/usr/local/gsl/include/gsl/gsl_vector_ulong.h	/^gsl_vector_ulong_view_array (unsigned long *v, size_t n);$/;"	p	signature:(unsigned long *v, size_t n)
gsl_vector_ulong_view_array_with_stride	/usr/local/gsl/include/gsl/gsl_vector_ulong.h	/^gsl_vector_ulong_view_array_with_stride (unsigned long *base,$/;"	p	signature:(unsigned long *base, size_t stride, size_t n)
gsl_vector_ushort	/usr/local/gsl/include/gsl/gsl_vector_ushort.h	/^gsl_vector_ushort;$/;"	t	typeref:struct:__anon161
gsl_vector_ushort_add	/usr/local/gsl/include/gsl/gsl_vector_ushort.h	/^int gsl_vector_ushort_add (gsl_vector_ushort * a, const gsl_vector_ushort * b);$/;"	p	signature:(gsl_vector_ushort * a, const gsl_vector_ushort * b)
gsl_vector_ushort_add_constant	/usr/local/gsl/include/gsl/gsl_vector_ushort.h	/^int gsl_vector_ushort_add_constant (gsl_vector_ushort * a, const double x);$/;"	p	signature:(gsl_vector_ushort * a, const double x)
gsl_vector_ushort_alloc	/usr/local/gsl/include/gsl/gsl_vector_ushort.h	/^gsl_vector_ushort *gsl_vector_ushort_alloc (const size_t n);$/;"	p	signature:(const size_t n)
gsl_vector_ushort_alloc_col_from_matrix	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	/^gsl_vector_ushort_alloc_col_from_matrix (gsl_matrix_ushort * m,$/;"	p	signature:(gsl_matrix_ushort * m, const size_t j)
gsl_vector_ushort_alloc_from_block	/usr/local/gsl/include/gsl/gsl_vector_ushort.h	/^gsl_vector_ushort *gsl_vector_ushort_alloc_from_block (gsl_block_ushort * b,$/;"	p	signature:(gsl_block_ushort * b, const size_t offset, const size_t n, const size_t stride)
gsl_vector_ushort_alloc_from_vector	/usr/local/gsl/include/gsl/gsl_vector_ushort.h	/^gsl_vector_ushort *gsl_vector_ushort_alloc_from_vector (gsl_vector_ushort * v,$/;"	p	signature:(gsl_vector_ushort * v, const size_t offset, const size_t n, const size_t stride)
gsl_vector_ushort_alloc_row_from_matrix	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	/^gsl_vector_ushort_alloc_row_from_matrix (gsl_matrix_ushort * m,$/;"	p	signature:(gsl_matrix_ushort * m, const size_t i)
gsl_vector_ushort_calloc	/usr/local/gsl/include/gsl/gsl_vector_ushort.h	/^gsl_vector_ushort *gsl_vector_ushort_calloc (const size_t n);$/;"	p	signature:(const size_t n)
gsl_vector_ushort_const_ptr	/usr/local/gsl/include/gsl/gsl_vector_ushort.h	/^INLINE_DECL const unsigned short * gsl_vector_ushort_const_ptr (const gsl_vector_ushort * v, const size_t i);$/;"	p	signature:(const gsl_vector_ushort * v, const size_t i)
gsl_vector_ushort_const_ptr	/usr/local/gsl/include/gsl/gsl_vector_ushort.h	/^gsl_vector_ushort_const_ptr (const gsl_vector_ushort * v, const size_t i)$/;"	f	signature:(const gsl_vector_ushort * v, const size_t i)
gsl_vector_ushort_const_subvector	/usr/local/gsl/include/gsl/gsl_vector_ushort.h	/^gsl_vector_ushort_const_subvector (const gsl_vector_ushort *v, $/;"	p	signature:(const gsl_vector_ushort *v, size_t i, size_t n)
gsl_vector_ushort_const_subvector_with_stride	/usr/local/gsl/include/gsl/gsl_vector_ushort.h	/^gsl_vector_ushort_const_subvector_with_stride (const gsl_vector_ushort *v, $/;"	p	signature:(const gsl_vector_ushort *v, size_t i, size_t stride, size_t n)
gsl_vector_ushort_const_view	/usr/local/gsl/include/gsl/gsl_vector_ushort.h	/^typedef const _gsl_vector_ushort_const_view gsl_vector_ushort_const_view;$/;"	t
gsl_vector_ushort_const_view_array	/usr/local/gsl/include/gsl/gsl_vector_ushort.h	/^gsl_vector_ushort_const_view_array (const unsigned short *v, size_t n);$/;"	p	signature:(const unsigned short *v, size_t n)
gsl_vector_ushort_const_view_array_with_stride	/usr/local/gsl/include/gsl/gsl_vector_ushort.h	/^gsl_vector_ushort_const_view_array_with_stride (const unsigned short *base,$/;"	p	signature:(const unsigned short *base, size_t stride, size_t n)
gsl_vector_ushort_div	/usr/local/gsl/include/gsl/gsl_vector_ushort.h	/^int gsl_vector_ushort_div (gsl_vector_ushort * a, const gsl_vector_ushort * b);$/;"	p	signature:(gsl_vector_ushort * a, const gsl_vector_ushort * b)
gsl_vector_ushort_fprintf	/usr/local/gsl/include/gsl/gsl_vector_ushort.h	/^int gsl_vector_ushort_fprintf (FILE * stream, const gsl_vector_ushort * v,$/;"	p	signature:(FILE * stream, const gsl_vector_ushort * v, const char *format)
gsl_vector_ushort_fread	/usr/local/gsl/include/gsl/gsl_vector_ushort.h	/^int gsl_vector_ushort_fread (FILE * stream, gsl_vector_ushort * v);$/;"	p	signature:(FILE * stream, gsl_vector_ushort * v)
gsl_vector_ushort_free	/usr/local/gsl/include/gsl/gsl_vector_ushort.h	/^void gsl_vector_ushort_free (gsl_vector_ushort * v);$/;"	p	signature:(gsl_vector_ushort * v)
gsl_vector_ushort_fscanf	/usr/local/gsl/include/gsl/gsl_vector_ushort.h	/^int gsl_vector_ushort_fscanf (FILE * stream, gsl_vector_ushort * v);$/;"	p	signature:(FILE * stream, gsl_vector_ushort * v)
gsl_vector_ushort_fwrite	/usr/local/gsl/include/gsl/gsl_vector_ushort.h	/^int gsl_vector_ushort_fwrite (FILE * stream, const gsl_vector_ushort * v);$/;"	p	signature:(FILE * stream, const gsl_vector_ushort * v)
gsl_vector_ushort_get	/usr/local/gsl/include/gsl/gsl_vector_ushort.h	/^INLINE_DECL unsigned short gsl_vector_ushort_get (const gsl_vector_ushort * v, const size_t i);$/;"	p	signature:(const gsl_vector_ushort * v, const size_t i)
gsl_vector_ushort_get	/usr/local/gsl/include/gsl/gsl_vector_ushort.h	/^gsl_vector_ushort_get (const gsl_vector_ushort * v, const size_t i)$/;"	f	signature:(const gsl_vector_ushort * v, const size_t i)
gsl_vector_ushort_isneg	/usr/local/gsl/include/gsl/gsl_vector_ushort.h	/^int gsl_vector_ushort_isneg (const gsl_vector_ushort * v);$/;"	p	signature:(const gsl_vector_ushort * v)
gsl_vector_ushort_isnonneg	/usr/local/gsl/include/gsl/gsl_vector_ushort.h	/^int gsl_vector_ushort_isnonneg (const gsl_vector_ushort * v);$/;"	p	signature:(const gsl_vector_ushort * v)
gsl_vector_ushort_isnull	/usr/local/gsl/include/gsl/gsl_vector_ushort.h	/^int gsl_vector_ushort_isnull (const gsl_vector_ushort * v);$/;"	p	signature:(const gsl_vector_ushort * v)
gsl_vector_ushort_ispos	/usr/local/gsl/include/gsl/gsl_vector_ushort.h	/^int gsl_vector_ushort_ispos (const gsl_vector_ushort * v);$/;"	p	signature:(const gsl_vector_ushort * v)
gsl_vector_ushort_max	/usr/local/gsl/include/gsl/gsl_vector_ushort.h	/^unsigned short gsl_vector_ushort_max (const gsl_vector_ushort * v);$/;"	p	signature:(const gsl_vector_ushort * v)
gsl_vector_ushort_max_index	/usr/local/gsl/include/gsl/gsl_vector_ushort.h	/^size_t gsl_vector_ushort_max_index (const gsl_vector_ushort * v);$/;"	p	signature:(const gsl_vector_ushort * v)
gsl_vector_ushort_memcpy	/usr/local/gsl/include/gsl/gsl_vector_ushort.h	/^int gsl_vector_ushort_memcpy (gsl_vector_ushort * dest, const gsl_vector_ushort * src);$/;"	p	signature:(gsl_vector_ushort * dest, const gsl_vector_ushort * src)
gsl_vector_ushort_min	/usr/local/gsl/include/gsl/gsl_vector_ushort.h	/^unsigned short gsl_vector_ushort_min (const gsl_vector_ushort * v);$/;"	p	signature:(const gsl_vector_ushort * v)
gsl_vector_ushort_min_index	/usr/local/gsl/include/gsl/gsl_vector_ushort.h	/^size_t gsl_vector_ushort_min_index (const gsl_vector_ushort * v);$/;"	p	signature:(const gsl_vector_ushort * v)
gsl_vector_ushort_minmax	/usr/local/gsl/include/gsl/gsl_vector_ushort.h	/^void gsl_vector_ushort_minmax (const gsl_vector_ushort * v, unsigned short * min_out, unsigned short * max_out);$/;"	p	signature:(const gsl_vector_ushort * v, unsigned short * min_out, unsigned short * max_out)
gsl_vector_ushort_minmax_index	/usr/local/gsl/include/gsl/gsl_vector_ushort.h	/^void gsl_vector_ushort_minmax_index (const gsl_vector_ushort * v, size_t * imin, size_t * imax);$/;"	p	signature:(const gsl_vector_ushort * v, size_t * imin, size_t * imax)
gsl_vector_ushort_mul	/usr/local/gsl/include/gsl/gsl_vector_ushort.h	/^int gsl_vector_ushort_mul (gsl_vector_ushort * a, const gsl_vector_ushort * b);$/;"	p	signature:(gsl_vector_ushort * a, const gsl_vector_ushort * b)
gsl_vector_ushort_ptr	/usr/local/gsl/include/gsl/gsl_vector_ushort.h	/^INLINE_DECL unsigned short * gsl_vector_ushort_ptr (gsl_vector_ushort * v, const size_t i);$/;"	p	signature:(gsl_vector_ushort * v, const size_t i)
gsl_vector_ushort_ptr	/usr/local/gsl/include/gsl/gsl_vector_ushort.h	/^gsl_vector_ushort_ptr (gsl_vector_ushort * v, const size_t i)$/;"	f	signature:(gsl_vector_ushort * v, const size_t i)
gsl_vector_ushort_reverse	/usr/local/gsl/include/gsl/gsl_vector_ushort.h	/^int gsl_vector_ushort_reverse (gsl_vector_ushort * v);$/;"	p	signature:(gsl_vector_ushort * v)
gsl_vector_ushort_scale	/usr/local/gsl/include/gsl/gsl_vector_ushort.h	/^int gsl_vector_ushort_scale (gsl_vector_ushort * a, const double x);$/;"	p	signature:(gsl_vector_ushort * a, const double x)
gsl_vector_ushort_set	/usr/local/gsl/include/gsl/gsl_vector_ushort.h	/^INLINE_DECL void gsl_vector_ushort_set (gsl_vector_ushort * v, const size_t i, unsigned short x);$/;"	p	signature:(gsl_vector_ushort * v, const size_t i, unsigned short x)
gsl_vector_ushort_set	/usr/local/gsl/include/gsl/gsl_vector_ushort.h	/^gsl_vector_ushort_set (gsl_vector_ushort * v, const size_t i, unsigned short x)$/;"	f	signature:(gsl_vector_ushort * v, const size_t i, unsigned short x)
gsl_vector_ushort_set_all	/usr/local/gsl/include/gsl/gsl_vector_ushort.h	/^void gsl_vector_ushort_set_all (gsl_vector_ushort * v, unsigned short x);$/;"	p	signature:(gsl_vector_ushort * v, unsigned short x)
gsl_vector_ushort_set_basis	/usr/local/gsl/include/gsl/gsl_vector_ushort.h	/^int gsl_vector_ushort_set_basis (gsl_vector_ushort * v, size_t i);$/;"	p	signature:(gsl_vector_ushort * v, size_t i)
gsl_vector_ushort_set_zero	/usr/local/gsl/include/gsl/gsl_vector_ushort.h	/^void gsl_vector_ushort_set_zero (gsl_vector_ushort * v);$/;"	p	signature:(gsl_vector_ushort * v)
gsl_vector_ushort_sub	/usr/local/gsl/include/gsl/gsl_vector_ushort.h	/^int gsl_vector_ushort_sub (gsl_vector_ushort * a, const gsl_vector_ushort * b);$/;"	p	signature:(gsl_vector_ushort * a, const gsl_vector_ushort * b)
gsl_vector_ushort_subvector	/usr/local/gsl/include/gsl/gsl_vector_ushort.h	/^gsl_vector_ushort_subvector (gsl_vector_ushort *v, $/;"	p	signature:(gsl_vector_ushort *v, size_t i, size_t n)
gsl_vector_ushort_subvector_with_stride	/usr/local/gsl/include/gsl/gsl_vector_ushort.h	/^gsl_vector_ushort_subvector_with_stride (gsl_vector_ushort *v, $/;"	p	signature:(gsl_vector_ushort *v, size_t i, size_t stride, size_t n)
gsl_vector_ushort_swap	/usr/local/gsl/include/gsl/gsl_vector_ushort.h	/^int gsl_vector_ushort_swap (gsl_vector_ushort * v, gsl_vector_ushort * w);$/;"	p	signature:(gsl_vector_ushort * v, gsl_vector_ushort * w)
gsl_vector_ushort_swap_elements	/usr/local/gsl/include/gsl/gsl_vector_ushort.h	/^int gsl_vector_ushort_swap_elements (gsl_vector_ushort * v, const size_t i, const size_t j);$/;"	p	signature:(gsl_vector_ushort * v, const size_t i, const size_t j)
gsl_vector_ushort_view	/usr/local/gsl/include/gsl/gsl_vector_ushort.h	/^typedef _gsl_vector_ushort_view gsl_vector_ushort_view;$/;"	t
gsl_vector_ushort_view_array	/usr/local/gsl/include/gsl/gsl_vector_ushort.h	/^gsl_vector_ushort_view_array (unsigned short *v, size_t n);$/;"	p	signature:(unsigned short *v, size_t n)
gsl_vector_ushort_view_array_with_stride	/usr/local/gsl/include/gsl/gsl_vector_ushort.h	/^gsl_vector_ushort_view_array_with_stride (unsigned short *base,$/;"	p	signature:(unsigned short *base, size_t stride, size_t n)
gsl_vector_view	/usr/local/gsl/include/gsl/gsl_vector_double.h	/^typedef _gsl_vector_view gsl_vector_view;$/;"	t
gsl_vector_view_array	/usr/local/gsl/include/gsl/gsl_vector_double.h	/^gsl_vector_view_array (double *v, size_t n);$/;"	p	signature:(double *v, size_t n)
gsl_vector_view_array_with_stride	/usr/local/gsl/include/gsl/gsl_vector_double.h	/^gsl_vector_view_array_with_stride (double *base,$/;"	p	signature:(double *base, size_t stride, size_t n)
gsl_version	/usr/local/gsl/include/gsl/gsl_version.h	/^GSL_VAR const char * gsl_version;$/;"	v
gsl_wavelet	/usr/local/gsl/include/gsl/gsl_wavelet.h	/^gsl_wavelet;$/;"	t	typeref:struct:__anon166
gsl_wavelet2d_nstransform	/usr/local/gsl/include/gsl/gsl_wavelet2d.h	/^int gsl_wavelet2d_nstransform (const gsl_wavelet * w, $/;"	p	signature:(const gsl_wavelet * w, double *data, size_t tda, size_t size1, size_t size2, gsl_wavelet_direction dir, gsl_wavelet_workspace * work)
gsl_wavelet2d_nstransform_forward	/usr/local/gsl/include/gsl/gsl_wavelet2d.h	/^int gsl_wavelet2d_nstransform_forward (const gsl_wavelet * w, $/;"	p	signature:(const gsl_wavelet * w, double *data, size_t tda, size_t size1, size_t size2, gsl_wavelet_workspace * work)
gsl_wavelet2d_nstransform_inverse	/usr/local/gsl/include/gsl/gsl_wavelet2d.h	/^int gsl_wavelet2d_nstransform_inverse (const gsl_wavelet * w, $/;"	p	signature:(const gsl_wavelet * w, double *data, size_t tda, size_t size1, size_t size2, gsl_wavelet_workspace * work)
gsl_wavelet2d_nstransform_matrix	/usr/local/gsl/include/gsl/gsl_wavelet2d.h	/^gsl_wavelet2d_nstransform_matrix (const gsl_wavelet * w, $/;"	p	signature:(const gsl_wavelet * w, gsl_matrix * a, gsl_wavelet_direction dir, gsl_wavelet_workspace * work)
gsl_wavelet2d_nstransform_matrix_forward	/usr/local/gsl/include/gsl/gsl_wavelet2d.h	/^gsl_wavelet2d_nstransform_matrix_forward (const gsl_wavelet * w, $/;"	p	signature:(const gsl_wavelet * w, gsl_matrix * a, gsl_wavelet_workspace * work)
gsl_wavelet2d_nstransform_matrix_inverse	/usr/local/gsl/include/gsl/gsl_wavelet2d.h	/^gsl_wavelet2d_nstransform_matrix_inverse (const gsl_wavelet * w, $/;"	p	signature:(const gsl_wavelet * w, gsl_matrix * a, gsl_wavelet_workspace * work)
gsl_wavelet2d_transform	/usr/local/gsl/include/gsl/gsl_wavelet2d.h	/^int gsl_wavelet2d_transform (const gsl_wavelet * w, $/;"	p	signature:(const gsl_wavelet * w, double *data, size_t tda, size_t size1, size_t size2, gsl_wavelet_direction dir, gsl_wavelet_workspace * work)
gsl_wavelet2d_transform_forward	/usr/local/gsl/include/gsl/gsl_wavelet2d.h	/^int gsl_wavelet2d_transform_forward (const gsl_wavelet * w, $/;"	p	signature:(const gsl_wavelet * w, double *data, size_t tda, size_t size1, size_t size2, gsl_wavelet_workspace * work)
gsl_wavelet2d_transform_inverse	/usr/local/gsl/include/gsl/gsl_wavelet2d.h	/^int gsl_wavelet2d_transform_inverse (const gsl_wavelet * w, $/;"	p	signature:(const gsl_wavelet * w, double *data, size_t tda, size_t size1, size_t size2, gsl_wavelet_workspace * work)
gsl_wavelet2d_transform_matrix	/usr/local/gsl/include/gsl/gsl_wavelet2d.h	/^gsl_wavelet2d_transform_matrix (const gsl_wavelet * w, $/;"	p	signature:(const gsl_wavelet * w, gsl_matrix * a, gsl_wavelet_direction dir, gsl_wavelet_workspace * work)
gsl_wavelet2d_transform_matrix_forward	/usr/local/gsl/include/gsl/gsl_wavelet2d.h	/^gsl_wavelet2d_transform_matrix_forward (const gsl_wavelet * w, $/;"	p	signature:(const gsl_wavelet * w, gsl_matrix * a, gsl_wavelet_workspace * work)
gsl_wavelet2d_transform_matrix_inverse	/usr/local/gsl/include/gsl/gsl_wavelet2d.h	/^gsl_wavelet2d_transform_matrix_inverse (const gsl_wavelet * w, $/;"	p	signature:(const gsl_wavelet * w, gsl_matrix * a, gsl_wavelet_workspace * work)
gsl_wavelet_alloc	/usr/local/gsl/include/gsl/gsl_wavelet.h	/^gsl_wavelet *gsl_wavelet_alloc (const gsl_wavelet_type * T, size_t k);$/;"	p	signature:(const gsl_wavelet_type * T, size_t k)
gsl_wavelet_backward	/usr/local/gsl/include/gsl/gsl_wavelet.h	/^  gsl_wavelet_forward = 1, gsl_wavelet_backward = -1$/;"	e	enum:__anon164
gsl_wavelet_bspline	/usr/local/gsl/include/gsl/gsl_wavelet.h	/^GSL_VAR const gsl_wavelet_type *gsl_wavelet_bspline;$/;"	v
gsl_wavelet_bspline_centered	/usr/local/gsl/include/gsl/gsl_wavelet.h	/^GSL_VAR const gsl_wavelet_type *gsl_wavelet_bspline_centered;$/;"	v
gsl_wavelet_daubechies	/usr/local/gsl/include/gsl/gsl_wavelet.h	/^GSL_VAR const gsl_wavelet_type *gsl_wavelet_daubechies;$/;"	v
gsl_wavelet_daubechies_centered	/usr/local/gsl/include/gsl/gsl_wavelet.h	/^GSL_VAR const gsl_wavelet_type *gsl_wavelet_daubechies_centered;$/;"	v
gsl_wavelet_direction	/usr/local/gsl/include/gsl/gsl_wavelet.h	/^gsl_wavelet_direction;$/;"	t	typeref:enum:__anon164
gsl_wavelet_forward	/usr/local/gsl/include/gsl/gsl_wavelet.h	/^  gsl_wavelet_forward = 1, gsl_wavelet_backward = -1$/;"	e	enum:__anon164
gsl_wavelet_free	/usr/local/gsl/include/gsl/gsl_wavelet.h	/^void gsl_wavelet_free (gsl_wavelet * w);$/;"	p	signature:(gsl_wavelet * w)
gsl_wavelet_haar	/usr/local/gsl/include/gsl/gsl_wavelet.h	/^GSL_VAR const gsl_wavelet_type *gsl_wavelet_haar;$/;"	v
gsl_wavelet_haar_centered	/usr/local/gsl/include/gsl/gsl_wavelet.h	/^GSL_VAR const gsl_wavelet_type *gsl_wavelet_haar_centered;$/;"	v
gsl_wavelet_name	/usr/local/gsl/include/gsl/gsl_wavelet.h	/^const char *gsl_wavelet_name (const gsl_wavelet * w);$/;"	p	signature:(const gsl_wavelet * w)
gsl_wavelet_transform	/usr/local/gsl/include/gsl/gsl_wavelet.h	/^int gsl_wavelet_transform (const gsl_wavelet * w, $/;"	p	signature:(const gsl_wavelet * w, double *data, size_t stride, size_t n, gsl_wavelet_direction dir, gsl_wavelet_workspace * work)
gsl_wavelet_transform_forward	/usr/local/gsl/include/gsl/gsl_wavelet.h	/^int gsl_wavelet_transform_forward (const gsl_wavelet * w, $/;"	p	signature:(const gsl_wavelet * w, double *data, size_t stride, size_t n, gsl_wavelet_workspace * work)
gsl_wavelet_transform_inverse	/usr/local/gsl/include/gsl/gsl_wavelet.h	/^int gsl_wavelet_transform_inverse (const gsl_wavelet * w, $/;"	p	signature:(const gsl_wavelet * w, double *data, size_t stride, size_t n, gsl_wavelet_workspace * work)
gsl_wavelet_type	/usr/local/gsl/include/gsl/gsl_wavelet.h	/^gsl_wavelet_type;$/;"	t	typeref:struct:__anon165
gsl_wavelet_workspace	/usr/local/gsl/include/gsl/gsl_wavelet.h	/^gsl_wavelet_workspace;$/;"	t	typeref:struct:__anon167
gsl_wavelet_workspace_alloc	/usr/local/gsl/include/gsl/gsl_wavelet.h	/^gsl_wavelet_workspace *gsl_wavelet_workspace_alloc (size_t n);$/;"	p	signature:(size_t n)
gsl_wavelet_workspace_free	/usr/local/gsl/include/gsl/gsl_wavelet.h	/^void gsl_wavelet_workspace_free (gsl_wavelet_workspace * work);$/;"	p	signature:(gsl_wavelet_workspace * work)
h1	/usr/local/gsl/include/gsl/gsl_wavelet.h	/^  const double *h1;$/;"	m	struct:__anon166	access:public
h2	/usr/local/gsl/include/gsl/gsl_wavelet.h	/^  const double *h2;$/;"	m	struct:__anon166	access:public
hadjust	/usr/local/gsl/include/gsl/gsl_odeiv.h	/^  int  (*hadjust) (void * state, size_t dim, unsigned int ord, const double y[], const double yerr[], const double yp[], double * h);$/;"	m	struct:__anon98	access:public
herm_workspace_p	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  gsl_eigen_herm_workspace *herm_workspace_p;$/;"	m	struct:__anon85	access:public
hermv_workspace_p	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  gsl_eigen_hermv_workspace *hermv_workspace_p;$/;"	m	struct:__anon86	access:public
hit_count	/usr/local/gsl/include/gsl/gsl_interp.h	/^  size_t  hit_count;$/;"	m	struct:__anon172	access:public
hits_l	/usr/local/gsl/include/gsl/gsl_monte_miser.h	/^  size_t * hits_l;$/;"	m	struct:__anon4	access:public
hits_r	/usr/local/gsl/include/gsl/gsl_monte_miser.h	/^  size_t * hits_r;$/;"	m	struct:__anon4	access:public
i	/usr/local/gsl/include/gsl/gsl_integration.h	/^    size_t i;$/;"	m	struct:__anon45	access:public
i	/usr/local/gsl/include/gsl/gsl_sum.h	/^  size_t i;                     \/* position in array *\/$/;"	m	struct:__anon170	access:public
i	/usr/local/gsl/include/gsl/gsl_sum.h	/^  size_t i;                     \/* position in array *\/$/;"	m	struct:__anon171	access:public
init	/usr/local/gsl/include/gsl/gsl_interp.h	/^  int     (*init)    (void *, const double xa[], const double ya[], size_t size);$/;"	m	struct:__anon173	access:public
init	/usr/local/gsl/include/gsl/gsl_odeiv.h	/^  int  (*init) (void * state, double eps_abs, double eps_rel, double a_y, double a_dydt);$/;"	m	struct:__anon98	access:public
init	/usr/local/gsl/include/gsl/gsl_wavelet.h	/^  int (*init) (const double **h1, const double **g1,$/;"	m	struct:__anon165	access:public
init_state	/usr/local/gsl/include/gsl/gsl_qrng.h	/^  int (*init_state) (void * state, unsigned int dimension);$/;"	m	struct:__anon168	access:public
interp	/usr/local/gsl/include/gsl/gsl_spline.h	/^  gsl_interp * interp;$/;"	m	struct:__anon41	access:public
it_num	/usr/local/gsl/include/gsl/gsl_monte_vegas.h	/^  unsigned int it_num;$/;"	m	struct:__anon110	access:public
it_start	/usr/local/gsl/include/gsl/gsl_monte_vegas.h	/^  unsigned int it_start;$/;"	m	struct:__anon110	access:public
iterate	/usr/local/gsl/include/gsl/gsl_min.h	/^    int (*iterate) (void *state, gsl_function * f, double * x_minimum, double * f_minimum, double * x_lower, double * f_lower, double * x_upper, double * f_upper);$/;"	m	struct:__anon146	access:public
iterate	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	/^    int (*iterate) (void *state, gsl_multifit_function * function, gsl_vector * x, gsl_vector * f, gsl_vector * dx);$/;"	m	struct:__anon6	access:public
iterate	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	/^    int (*iterate) (void *state, gsl_multifit_function_fdf * fdf, gsl_vector * x, gsl_vector * f, gsl_matrix * J, gsl_vector * dx);$/;"	m	struct:__anon8	access:public
iterate	/usr/local/gsl/include/gsl/gsl_multimin.h	/^  int (*iterate) (void *state, gsl_multimin_function * f, $/;"	m	struct:__anon111	access:public
iterate	/usr/local/gsl/include/gsl/gsl_multimin.h	/^  int (*iterate) (void *state,gsl_multimin_function_fdf * fdf, $/;"	m	struct:__anon113	access:public
iterate	/usr/local/gsl/include/gsl/gsl_multiroots.h	/^    int (*iterate) (void *state, gsl_multiroot_function * function, gsl_vector * x, gsl_vector * f, gsl_vector * dx);$/;"	m	struct:__anon178	access:public
iterate	/usr/local/gsl/include/gsl/gsl_multiroots.h	/^    int (*iterate) (void *state, gsl_multiroot_function_fdf * fdf, gsl_vector * x, gsl_vector * f, gsl_matrix * J, gsl_vector * dx);$/;"	m	struct:__anon180	access:public
iterate	/usr/local/gsl/include/gsl/gsl_roots.h	/^    int (*iterate) (void *state, gsl_function * f, double * root, double * x_lower, double * x_upper);$/;"	m	struct:__anon101	access:public
iterate	/usr/local/gsl/include/gsl/gsl_roots.h	/^    int (*iterate) (void *state, gsl_function_fdf * f, double * root);$/;"	m	struct:__anon103	access:public
iterations	/usr/local/gsl/include/gsl/gsl_monte_vegas.h	/^  unsigned int iterations;$/;"	m	struct:__anon110	access:public
iters_fixed_T	/usr/local/gsl/include/gsl/gsl_siman.h	/^  int iters_fixed_T;    \/* how many iterations at each temperature? *\/$/;"	m	struct:__anon139	access:public
j	/usr/local/gsl/include/gsl/gsl_dht.h	/^  double *  j;     \/* array of computed J_nu zeros, j_{nu,s} = j[s]  *\/$/;"	m	struct:gsl_dht_struct	access:public
jac	/usr/local/gsl/include/gsl/gsl_monte_vegas.h	/^  double jac;$/;"	m	struct:__anon110	access:public
jacobian	/usr/local/gsl/include/gsl/gsl_odeiv.h	/^  int (* jacobian) (double t, const double y[], double * dfdy, double dfdt[], void * params);$/;"	m	struct:__anon95	access:public
k	/usr/local/gsl/include/gsl/gsl_bspline.h	/^    size_t k; \/* spline order *\/$/;"	m	struct:__anon137	access:public
k	/usr/local/gsl/include/gsl/gsl_bspline.h	/^    size_t k; \/* spline order *\/$/;"	m	struct:__anon138	access:public
k	/usr/local/gsl/include/gsl/gsl_combination.h	/^  size_t k;$/;"	m	struct:gsl_combination_struct	access:public
k	/usr/local/gsl/include/gsl/gsl_siman.h	/^  double k, t_initial, mu_t, t_min;$/;"	m	struct:__anon139	access:public
km1	/usr/local/gsl/include/gsl/gsl_bspline.h	/^    size_t km1; \/* k - 1 (polynomial order) *\/$/;"	m	struct:__anon137	access:public
kmax	/usr/local/gsl/include/gsl/gsl_dht.h	/^  double    kmax;  \/* the upper limit to the k-sampling domain       *\/$/;"	m	struct:gsl_dht_struct	access:public
knots	/usr/local/gsl/include/gsl/gsl_bspline.h	/^    gsl_vector *knots; \/* knots vector *\/$/;"	m	struct:__anon137	access:public
l	/usr/local/gsl/include/gsl/gsl_bspline.h	/^    size_t l; \/* number of polynomial pieces on interval *\/$/;"	m	struct:__anon137	access:public
last_step	/usr/local/gsl/include/gsl/gsl_odeiv.h	/^  double last_step;$/;"	m	struct:__anon100	access:public
level	/usr/local/gsl/include/gsl/gsl_integration.h	/^    size_t *level;$/;"	m	struct:__anon45	access:public
limit	/usr/local/gsl/include/gsl/gsl_integration.h	/^    size_t limit;$/;"	m	struct:__anon45	access:public
mantissa	/usr/local/gsl/include/gsl/gsl_ieee_utils.h	/^  char mantissa[24] ; \/* Actual bits are 0..22, element 23 is \\0 *\/$/;"	m	struct:__anon120	access:public
mantissa	/usr/local/gsl/include/gsl/gsl_ieee_utils.h	/^  char mantissa[53] ; \/* Actual bits are 0..51, element 52 is \\0 *\/$/;"	m	struct:__anon121	access:public
matrix	/usr/local/gsl/include/gsl/gsl_matrix_char.h	/^  gsl_matrix_char matrix;$/;"	m	struct:__anon149	access:public
matrix	/usr/local/gsl/include/gsl/gsl_matrix_char.h	/^  gsl_matrix_char matrix;$/;"	m	struct:__anon150	access:public
matrix	/usr/local/gsl/include/gsl/gsl_matrix_complex_double.h	/^  gsl_matrix_complex matrix;$/;"	m	struct:__anon11	access:public
matrix	/usr/local/gsl/include/gsl/gsl_matrix_complex_double.h	/^  gsl_matrix_complex matrix;$/;"	m	struct:__anon12	access:public
matrix	/usr/local/gsl/include/gsl/gsl_matrix_complex_float.h	/^  gsl_matrix_complex_float matrix;$/;"	m	struct:__anon129	access:public
matrix	/usr/local/gsl/include/gsl/gsl_matrix_complex_float.h	/^  gsl_matrix_complex_float matrix;$/;"	m	struct:__anon130	access:public
matrix	/usr/local/gsl/include/gsl/gsl_matrix_complex_long_double.h	/^  gsl_matrix_complex_long_double matrix;$/;"	m	struct:__anon51	access:public
matrix	/usr/local/gsl/include/gsl/gsl_matrix_complex_long_double.h	/^  gsl_matrix_complex_long_double matrix;$/;"	m	struct:__anon52	access:public
matrix	/usr/local/gsl/include/gsl/gsl_matrix_double.h	/^  gsl_matrix matrix;$/;"	m	struct:__anon74	access:public
matrix	/usr/local/gsl/include/gsl/gsl_matrix_double.h	/^  gsl_matrix matrix;$/;"	m	struct:__anon75	access:public
matrix	/usr/local/gsl/include/gsl/gsl_matrix_float.h	/^  gsl_matrix_float matrix;$/;"	m	struct:__anon144	access:public
matrix	/usr/local/gsl/include/gsl/gsl_matrix_float.h	/^  gsl_matrix_float matrix;$/;"	m	struct:__anon145	access:public
matrix	/usr/local/gsl/include/gsl/gsl_matrix_int.h	/^  gsl_matrix_int matrix;$/;"	m	struct:__anon91	access:public
matrix	/usr/local/gsl/include/gsl/gsl_matrix_int.h	/^  gsl_matrix_int matrix;$/;"	m	struct:__anon92	access:public
matrix	/usr/local/gsl/include/gsl/gsl_matrix_long.h	/^  gsl_matrix_long matrix;$/;"	m	struct:__anon107	access:public
matrix	/usr/local/gsl/include/gsl/gsl_matrix_long.h	/^  gsl_matrix_long matrix;$/;"	m	struct:__anon108	access:public
matrix	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	/^  gsl_matrix_long_double matrix;$/;"	m	struct:__anon64	access:public
matrix	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	/^  gsl_matrix_long_double matrix;$/;"	m	struct:__anon65	access:public
matrix	/usr/local/gsl/include/gsl/gsl_matrix_short.h	/^  gsl_matrix_short matrix;$/;"	m	struct:__anon39	access:public
matrix	/usr/local/gsl/include/gsl/gsl_matrix_short.h	/^  gsl_matrix_short matrix;$/;"	m	struct:__anon40	access:public
matrix	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	/^  gsl_matrix_uchar matrix;$/;"	m	struct:__anon141	access:public
matrix	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	/^  gsl_matrix_uchar matrix;$/;"	m	struct:__anon142	access:public
matrix	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	/^  gsl_matrix_uint matrix;$/;"	m	struct:__anon19	access:public
matrix	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	/^  gsl_matrix_uint matrix;$/;"	m	struct:__anon20	access:public
matrix	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	/^  gsl_matrix_ulong matrix;$/;"	m	struct:__anon29	access:public
matrix	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	/^  gsl_matrix_ulong matrix;$/;"	m	struct:__anon30	access:public
matrix	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	/^  gsl_matrix_ushort matrix;$/;"	m	struct:__anon152	access:public
matrix	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	/^  gsl_matrix_ushort matrix;$/;"	m	struct:__anon153	access:public
matrix	/usr/local/gsl/include/gsl/gsl_poly.h	/^  double * matrix ; $/;"	m	struct:__anon5	access:public
max	/usr/local/gsl/include/gsl/gsl_rng.h	/^    unsigned long int max;$/;"	m	struct:__anon93	access:public
max_dimension	/usr/local/gsl/include/gsl/gsl_qrng.h	/^  unsigned int max_dimension;$/;"	m	struct:__anon168	access:public
max_iterations	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  size_t max_iterations;  \/* maximum QZ iterations allowed *\/$/;"	m	struct:__anon87	access:public
max_iterations	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  size_t max_iterations; \/* max iterations since last eigenvalue found *\/$/;"	m	struct:__anon80	access:public
maximum_level	/usr/local/gsl/include/gsl/gsl_integration.h	/^    size_t maximum_level;$/;"	m	struct:__anon45	access:public
min	/usr/local/gsl/include/gsl/gsl_rng.h	/^    unsigned long int min;$/;"	m	struct:__anon93	access:public
min_calls	/usr/local/gsl/include/gsl/gsl_monte_miser.h	/^  size_t min_calls;$/;"	m	struct:__anon4	access:public
min_calls_per_bisection	/usr/local/gsl/include/gsl/gsl_monte_miser.h	/^  size_t min_calls_per_bisection;$/;"	m	struct:__anon4	access:public
min_size	/usr/local/gsl/include/gsl/gsl_interp.h	/^  unsigned int min_size;$/;"	m	struct:__anon173	access:public
miss_count	/usr/local/gsl/include/gsl/gsl_interp.h	/^  size_t  miss_count;   \/* keep statistics  *\/$/;"	m	struct:__anon172	access:public
mode	/usr/local/gsl/include/gsl/gsl_monte_vegas.h	/^  int mode;$/;"	m	struct:__anon110	access:public
mu	/usr/local/gsl/include/gsl/gsl_integration.h	/^  int mu;$/;"	m	struct:__anon46	access:public
mu_t	/usr/local/gsl/include/gsl/gsl_siman.h	/^  double k, t_initial, mu_t, t_min;$/;"	m	struct:__anon139	access:public
n	/usr/local/gsl/include/gsl/gsl_bspline.h	/^    size_t n; \/* number of bspline basis functions (l + k - 1) *\/$/;"	m	struct:__anon137	access:public
n	/usr/local/gsl/include/gsl/gsl_combination.h	/^  size_t n;$/;"	m	struct:gsl_combination_struct	access:public
n	/usr/local/gsl/include/gsl/gsl_fft_complex.h	/^    size_t n;$/;"	m	struct:__anon1	access:public
n	/usr/local/gsl/include/gsl/gsl_fft_complex.h	/^  size_t n;$/;"	m	struct:__anon2	access:public
n	/usr/local/gsl/include/gsl/gsl_fft_complex_float.h	/^    size_t n;$/;"	m	struct:__anon16	access:public
n	/usr/local/gsl/include/gsl/gsl_fft_complex_float.h	/^    size_t n;$/;"	m	struct:__anon17	access:public
n	/usr/local/gsl/include/gsl/gsl_fft_halfcomplex.h	/^    size_t n;$/;"	m	struct:__anon105	access:public
n	/usr/local/gsl/include/gsl/gsl_fft_halfcomplex_float.h	/^    size_t n;$/;"	m	struct:__anon21	access:public
n	/usr/local/gsl/include/gsl/gsl_fft_real.h	/^    size_t n;$/;"	m	struct:__anon66	access:public
n	/usr/local/gsl/include/gsl/gsl_fft_real.h	/^    size_t n;$/;"	m	struct:__anon67	access:public
n	/usr/local/gsl/include/gsl/gsl_fft_real_float.h	/^    size_t n;$/;"	m	struct:__anon68	access:public
n	/usr/local/gsl/include/gsl/gsl_fft_real_float.h	/^    size_t n;$/;"	m	struct:__anon69	access:public
n	/usr/local/gsl/include/gsl/gsl_histogram.h	/^  size_t n ;$/;"	m	struct:__anon175	access:public
n	/usr/local/gsl/include/gsl/gsl_histogram.h	/^  size_t n ;$/;"	m	struct:__anon176	access:public
n	/usr/local/gsl/include/gsl/gsl_integration.h	/^  size_t n;$/;"	m	struct:__anon47	access:public
n	/usr/local/gsl/include/gsl/gsl_multifit.h	/^  size_t n; \/* number of observations *\/$/;"	m	struct:__anon118	access:public
n	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	/^  size_t n;   \/* number of functions *\/$/;"	m	struct:gsl_multifit_function_fdf_struct	access:public
n	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	/^  size_t n;   \/* number of functions *\/$/;"	m	struct:gsl_multifit_function_struct	access:public
n	/usr/local/gsl/include/gsl/gsl_multimin.h	/^  size_t n;$/;"	m	struct:gsl_multimin_function_fdf_struct	access:public
n	/usr/local/gsl/include/gsl/gsl_multimin.h	/^  size_t n;$/;"	m	struct:gsl_multimin_function_struct	access:public
n	/usr/local/gsl/include/gsl/gsl_multiroots.h	/^  size_t n;$/;"	m	struct:gsl_multiroot_function_fdf_struct	access:public
n	/usr/local/gsl/include/gsl/gsl_multiroots.h	/^  size_t n;$/;"	m	struct:gsl_multiroot_function_struct	access:public
n	/usr/local/gsl/include/gsl/gsl_wavelet.h	/^  size_t n;$/;"	m	struct:__anon167	access:public
n_evals	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  size_t n_evals;              \/* number of eigenvalues found *\/$/;"	m	struct:__anon81	access:public
n_evals	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  size_t n_evals;         \/* number of eigenvalues found *\/$/;"	m	struct:__anon87	access:public
n_evals	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  size_t n_evals;        \/* number of eigenvalues found so far *\/$/;"	m	struct:__anon80	access:public
n_iter	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  size_t n_iter;          \/* number of iterations since last eigenvalue found *\/$/;"	m	struct:__anon87	access:public
n_iter	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  size_t n_iter;         \/* number of iterations since last eigenvalue found *\/$/;"	m	struct:__anon80	access:public
n_tries	/usr/local/gsl/include/gsl/gsl_siman.h	/^  int n_tries;          \/* how many points to try for each step *\/$/;"	m	struct:__anon139	access:public
name	/usr/local/gsl/include/gsl/gsl_interp.h	/^  const char * name;$/;"	m	struct:__anon173	access:public
name	/usr/local/gsl/include/gsl/gsl_min.h	/^    const char *name;$/;"	m	struct:__anon146	access:public
name	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	/^    const char *name;$/;"	m	struct:__anon6	access:public
name	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	/^    const char *name;$/;"	m	struct:__anon8	access:public
name	/usr/local/gsl/include/gsl/gsl_multimin.h	/^  const char *name;$/;"	m	struct:__anon111	access:public
name	/usr/local/gsl/include/gsl/gsl_multimin.h	/^  const char *name;$/;"	m	struct:__anon113	access:public
name	/usr/local/gsl/include/gsl/gsl_multiroots.h	/^    const char *name;$/;"	m	struct:__anon178	access:public
name	/usr/local/gsl/include/gsl/gsl_multiroots.h	/^    const char *name;$/;"	m	struct:__anon180	access:public
name	/usr/local/gsl/include/gsl/gsl_odeiv.h	/^  const char * name;$/;"	m	struct:__anon96	access:public
name	/usr/local/gsl/include/gsl/gsl_odeiv.h	/^  const char * name;$/;"	m	struct:__anon98	access:public
name	/usr/local/gsl/include/gsl/gsl_qrng.h	/^  const char * name;$/;"	m	struct:__anon168	access:public
name	/usr/local/gsl/include/gsl/gsl_rng.h	/^    const char *name;$/;"	m	struct:__anon93	access:public
name	/usr/local/gsl/include/gsl/gsl_roots.h	/^    const char *name;$/;"	m	struct:__anon101	access:public
name	/usr/local/gsl/include/gsl/gsl_roots.h	/^    const char *name;$/;"	m	struct:__anon103	access:public
name	/usr/local/gsl/include/gsl/gsl_wavelet.h	/^  const char *name;$/;"	m	struct:__anon165	access:public
nbreak	/usr/local/gsl/include/gsl/gsl_bspline.h	/^    size_t nbreak; \/* number of breakpoints (l + 1) *\/$/;"	m	struct:__anon137	access:public
nc	/usr/local/gsl/include/gsl/gsl_poly.h	/^  size_t nc ;$/;"	m	struct:__anon5	access:public
nc	/usr/local/gsl/include/gsl/gsl_wavelet.h	/^  size_t nc;$/;"	m	struct:__anon166	access:public
needtop	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  int needtop;            \/* need to compute top index? *\/$/;"	m	struct:__anon87	access:public
nf	/usr/local/gsl/include/gsl/gsl_fft_complex.h	/^    size_t nf;$/;"	m	struct:__anon1	access:public
nf	/usr/local/gsl/include/gsl/gsl_fft_complex_float.h	/^    size_t nf;$/;"	m	struct:__anon16	access:public
nf	/usr/local/gsl/include/gsl/gsl_fft_halfcomplex.h	/^    size_t nf;$/;"	m	struct:__anon105	access:public
nf	/usr/local/gsl/include/gsl/gsl_fft_halfcomplex_float.h	/^    size_t nf;$/;"	m	struct:__anon21	access:public
nf	/usr/local/gsl/include/gsl/gsl_fft_real.h	/^    size_t nf;$/;"	m	struct:__anon66	access:public
nf	/usr/local/gsl/include/gsl/gsl_fft_real_float.h	/^    size_t nf;$/;"	m	struct:__anon68	access:public
nonsymm_workspace_p	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  gsl_eigen_nonsymm_workspace *nonsymm_workspace_p;$/;"	m	struct:__anon82	access:public
nrmax	/usr/local/gsl/include/gsl/gsl_integration.h	/^    size_t nrmax;$/;"	m	struct:__anon45	access:public
ntuple_data	/usr/local/gsl/include/gsl/gsl_ntuple.h	/^    void * ntuple_data;$/;"	m	struct:__anon13	access:public
nu	/usr/local/gsl/include/gsl/gsl_dht.h	/^  double    nu;    \/* Bessel function order                          *\/$/;"	m	struct:gsl_dht_struct	access:public
nu	/usr/local/gsl/include/gsl/gsl_integration.h	/^  int nu;$/;"	m	struct:__anon46	access:public
nx	/usr/local/gsl/include/gsl/gsl_histogram2d.h	/^  size_t nx, ny ;$/;"	m	struct:__anon132	access:public
nx	/usr/local/gsl/include/gsl/gsl_histogram2d.h	/^  size_t nx, ny ;$/;"	m	struct:__anon133	access:public
ny	/usr/local/gsl/include/gsl/gsl_histogram2d.h	/^  size_t nx, ny ;$/;"	m	struct:__anon132	access:public
ny	/usr/local/gsl/include/gsl/gsl_histogram2d.h	/^  size_t nx, ny ;$/;"	m	struct:__anon133	access:public
odd_order	/usr/local/gsl/include/gsl/gsl_sf_mathieu.h	/^  size_t odd_order;$/;"	m	struct:__anon177	access:public
offset	/usr/local/gsl/include/gsl/gsl_wavelet.h	/^  size_t offset;$/;"	m	struct:__anon166	access:public
omega	/usr/local/gsl/include/gsl/gsl_integration.h	/^  double omega;$/;"	m	struct:__anon47	access:public
order	/usr/local/gsl/include/gsl/gsl_chebyshev.h	/^  size_t order; \/* order of expansion          *\/$/;"	m	struct:gsl_cheb_series_struct	access:public
order	/usr/local/gsl/include/gsl/gsl_integration.h	/^    size_t *order;$/;"	m	struct:__anon45	access:public
order	/usr/local/gsl/include/gsl/gsl_odeiv.h	/^  unsigned int  (*order) (void * state);$/;"	m	struct:__anon96	access:public
order_sp	/usr/local/gsl/include/gsl/gsl_chebyshev.h	/^  size_t order_sp;$/;"	m	struct:gsl_cheb_series_struct	access:public
ostream	/usr/local/gsl/include/gsl/gsl_monte_vegas.h	/^  FILE * ostream;$/;"	m	struct:__anon110	access:public
owner	/usr/local/gsl/include/gsl/gsl_matrix_char.h	/^  int owner;$/;"	m	struct:__anon148	access:public
owner	/usr/local/gsl/include/gsl/gsl_matrix_complex_double.h	/^  int owner;$/;"	m	struct:__anon10	access:public
owner	/usr/local/gsl/include/gsl/gsl_matrix_complex_float.h	/^  int owner;$/;"	m	struct:__anon128	access:public
owner	/usr/local/gsl/include/gsl/gsl_matrix_complex_long_double.h	/^  int owner;$/;"	m	struct:__anon50	access:public
owner	/usr/local/gsl/include/gsl/gsl_matrix_double.h	/^  int owner;$/;"	m	struct:__anon73	access:public
owner	/usr/local/gsl/include/gsl/gsl_matrix_float.h	/^  int owner;$/;"	m	struct:__anon143	access:public
owner	/usr/local/gsl/include/gsl/gsl_matrix_int.h	/^  int owner;$/;"	m	struct:__anon90	access:public
owner	/usr/local/gsl/include/gsl/gsl_matrix_long.h	/^  int owner;$/;"	m	struct:__anon106	access:public
owner	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	/^  int owner;$/;"	m	struct:__anon63	access:public
owner	/usr/local/gsl/include/gsl/gsl_matrix_short.h	/^  int owner;$/;"	m	struct:__anon38	access:public
owner	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	/^  int owner;$/;"	m	struct:__anon140	access:public
owner	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	/^  int owner;$/;"	m	struct:__anon18	access:public
owner	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	/^  int owner;$/;"	m	struct:__anon28	access:public
owner	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	/^  int owner;$/;"	m	struct:__anon151	access:public
owner	/usr/local/gsl/include/gsl/gsl_vector_char.h	/^  int owner;$/;"	m	struct:__anon70	access:public
owner	/usr/local/gsl/include/gsl/gsl_vector_complex_double.h	/^  int owner;$/;"	m	struct:__anon134	access:public
owner	/usr/local/gsl/include/gsl/gsl_vector_complex_float.h	/^  int owner;$/;"	m	struct:__anon115	access:public
owner	/usr/local/gsl/include/gsl/gsl_vector_complex_long_double.h	/^  int owner;$/;"	m	struct:__anon31	access:public
owner	/usr/local/gsl/include/gsl/gsl_vector_double.h	/^  int owner;$/;"	m	struct:__anon56	access:public
owner	/usr/local/gsl/include/gsl/gsl_vector_float.h	/^  int owner;$/;"	m	struct:__anon35	access:public
owner	/usr/local/gsl/include/gsl/gsl_vector_int.h	/^  int owner;$/;"	m	struct:__anon158	access:public
owner	/usr/local/gsl/include/gsl/gsl_vector_long.h	/^  int owner;$/;"	m	struct:__anon22	access:public
owner	/usr/local/gsl/include/gsl/gsl_vector_long_double.h	/^  int owner;$/;"	m	struct:__anon125	access:public
owner	/usr/local/gsl/include/gsl/gsl_vector_short.h	/^  int owner;$/;"	m	struct:__anon154	access:public
owner	/usr/local/gsl/include/gsl/gsl_vector_uchar.h	/^  int owner;$/;"	m	struct:__anon42	access:public
owner	/usr/local/gsl/include/gsl/gsl_vector_uint.h	/^  int owner;$/;"	m	struct:__anon25	access:public
owner	/usr/local/gsl/include/gsl/gsl_vector_ulong.h	/^  int owner;$/;"	m	struct:__anon60	access:public
owner	/usr/local/gsl/include/gsl/gsl_vector_ushort.h	/^  int owner;$/;"	m	struct:__anon161	access:public
p	/usr/local/gsl/include/gsl/gsl_multifit.h	/^  size_t p; \/* number of parameters *\/$/;"	m	struct:__anon118	access:public
p	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	/^  size_t p;   \/* number of independent variables *\/$/;"	m	struct:gsl_multifit_function_fdf_struct	access:public
p	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	/^  size_t p;   \/* number of independent variables *\/$/;"	m	struct:gsl_multifit_function_struct	access:public
par	/usr/local/gsl/include/gsl/gsl_integration.h	/^  double par;$/;"	m	struct:__anon47	access:public
params	/usr/local/gsl/include/gsl/gsl_math.h	/^  void * params;$/;"	m	struct:gsl_function_fdf_struct	access:public
params	/usr/local/gsl/include/gsl/gsl_math.h	/^  void * params;$/;"	m	struct:gsl_function_struct	access:public
params	/usr/local/gsl/include/gsl/gsl_math.h	/^  void * params;$/;"	m	struct:gsl_function_vec_struct	access:public
params	/usr/local/gsl/include/gsl/gsl_monte.h	/^  void * params;$/;"	m	struct:gsl_monte_function_struct	access:public
params	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	/^  void * params;$/;"	m	struct:gsl_multifit_function_fdf_struct	access:public
params	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	/^  void * params;$/;"	m	struct:gsl_multifit_function_struct	access:public
params	/usr/local/gsl/include/gsl/gsl_multimin.h	/^  void * params;$/;"	m	struct:gsl_multimin_function_fdf_struct	access:public
params	/usr/local/gsl/include/gsl/gsl_multimin.h	/^  void * params;$/;"	m	struct:gsl_multimin_function_struct	access:public
params	/usr/local/gsl/include/gsl/gsl_multiroots.h	/^  void * params;$/;"	m	struct:gsl_multiroot_function_fdf_struct	access:public
params	/usr/local/gsl/include/gsl/gsl_multiroots.h	/^  void * params;$/;"	m	struct:gsl_multiroot_function_struct	access:public
params	/usr/local/gsl/include/gsl/gsl_ntuple.h	/^  void * params;$/;"	m	struct:__anon14	access:public
params	/usr/local/gsl/include/gsl/gsl_ntuple.h	/^  void * params;$/;"	m	struct:__anon15	access:public
params	/usr/local/gsl/include/gsl/gsl_odeiv.h	/^  void * params;$/;"	m	struct:__anon95	access:public
q_den	/usr/local/gsl/include/gsl/gsl_sum.h	/^  double *q_den;$/;"	m	struct:__anon170	access:public
q_den	/usr/local/gsl/include/gsl/gsl_sum.h	/^  double *q_den;$/;"	m	struct:__anon171	access:public
q_num	/usr/local/gsl/include/gsl/gsl_sum.h	/^  double *q_num;$/;"	m	struct:__anon170	access:public
q_num	/usr/local/gsl/include/gsl/gsl_sum.h	/^  double *q_num;$/;"	m	struct:__anon171	access:public
qa	/usr/local/gsl/include/gsl/gsl_sf_mathieu.h	/^  double qa;   \/* allow for caching of results: not implemented yet *\/$/;"	m	struct:__anon177	access:public
qb	/usr/local/gsl/include/gsl/gsl_sf_mathieu.h	/^  double qb;   \/* allow for caching of results: not implemented yet *\/$/;"	m	struct:__anon177	access:public
range	/usr/local/gsl/include/gsl/gsl_histogram.h	/^  double * range ;$/;"	m	struct:__anon175	access:public
range	/usr/local/gsl/include/gsl/gsl_histogram.h	/^  double * range ;$/;"	m	struct:__anon176	access:public
reset	/usr/local/gsl/include/gsl/gsl_odeiv.h	/^  int  (*reset) (void * state, size_t dim);$/;"	m	struct:__anon96	access:public
restart	/usr/local/gsl/include/gsl/gsl_multimin.h	/^  int (*restart) (void *state);$/;"	m	struct:__anon113	access:public
result	/usr/local/gsl/include/gsl/gsl_monte_vegas.h	/^  double result;$/;"	m	struct:__anon110	access:public
rg	/usr/local/gsl/include/gsl/gsl_integration.h	/^  double rg[25];$/;"	m	struct:__anon46	access:public
rh	/usr/local/gsl/include/gsl/gsl_integration.h	/^  double rh[25];$/;"	m	struct:__anon46	access:public
ri	/usr/local/gsl/include/gsl/gsl_integration.h	/^  double ri[25];$/;"	m	struct:__anon46	access:public
rj	/usr/local/gsl/include/gsl/gsl_integration.h	/^  double rj[25];$/;"	m	struct:__anon46	access:public
rlist	/usr/local/gsl/include/gsl/gsl_integration.h	/^    double *rlist;$/;"	m	struct:__anon45	access:public
root	/usr/local/gsl/include/gsl/gsl_roots.h	/^    double root ;$/;"	m	struct:__anon102	access:public
root	/usr/local/gsl/include/gsl/gsl_roots.h	/^    double root ;$/;"	m	struct:__anon104	access:public
samples	/usr/local/gsl/include/gsl/gsl_monte_vegas.h	/^  unsigned int samples;$/;"	m	struct:__anon110	access:public
scratch	/usr/local/gsl/include/gsl/gsl_fft_complex.h	/^  double *scratch;$/;"	m	struct:__anon2	access:public
scratch	/usr/local/gsl/include/gsl/gsl_fft_complex_float.h	/^    float *scratch;$/;"	m	struct:__anon17	access:public
scratch	/usr/local/gsl/include/gsl/gsl_fft_real.h	/^    double *scratch;$/;"	m	struct:__anon67	access:public
scratch	/usr/local/gsl/include/gsl/gsl_fft_real_float.h	/^    float *scratch;$/;"	m	struct:__anon69	access:public
scratch	/usr/local/gsl/include/gsl/gsl_wavelet.h	/^  double *scratch;$/;"	m	struct:__anon167	access:public
sd	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  double * sd;$/;"	m	struct:__anon76	access:public
sd	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  double * sd;$/;"	m	struct:__anon77	access:public
sd	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  double * sd;$/;"	m	struct:__anon78	access:public
sd	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  double * sd;$/;"	m	struct:__anon79	access:public
set	/usr/local/gsl/include/gsl/gsl_min.h	/^    int (*set) (void *state, gsl_function * f, double x_minimum, double f_minimum, double x_lower, double f_lower, double x_upper, double f_upper);$/;"	m	struct:__anon146	access:public
set	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	/^    int (*set) (void *state, gsl_multifit_function * function, gsl_vector * x, gsl_vector * f, gsl_vector * dx);$/;"	m	struct:__anon6	access:public
set	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	/^    int (*set) (void *state, gsl_multifit_function_fdf * fdf, gsl_vector * x, gsl_vector * f, gsl_matrix * J, gsl_vector * dx);$/;"	m	struct:__anon8	access:public
set	/usr/local/gsl/include/gsl/gsl_multimin.h	/^  int (*set) (void *state, gsl_multimin_function * f,$/;"	m	struct:__anon111	access:public
set	/usr/local/gsl/include/gsl/gsl_multimin.h	/^  int (*set) (void *state, gsl_multimin_function_fdf * fdf,$/;"	m	struct:__anon113	access:public
set	/usr/local/gsl/include/gsl/gsl_multiroots.h	/^    int (*set) (void *state, gsl_multiroot_function * function, gsl_vector * x, gsl_vector * f, gsl_vector * dx);$/;"	m	struct:__anon178	access:public
set	/usr/local/gsl/include/gsl/gsl_multiroots.h	/^    int (*set) (void *state, gsl_multiroot_function_fdf * fdf, gsl_vector * x, gsl_vector * f, gsl_matrix * J, gsl_vector * dx);$/;"	m	struct:__anon180	access:public
set	/usr/local/gsl/include/gsl/gsl_rng.h	/^    void (*set) (void *state, unsigned long int seed);$/;"	m	struct:__anon93	access:public
set	/usr/local/gsl/include/gsl/gsl_roots.h	/^    int (*set) (void *state, gsl_function * f, double * root, double x_lower, double x_upper);$/;"	m	struct:__anon101	access:public
set	/usr/local/gsl/include/gsl/gsl_roots.h	/^    int (*set) (void *state, gsl_function_fdf * f, double * root);$/;"	m	struct:__anon103	access:public
sigma	/usr/local/gsl/include/gsl/gsl_monte_vegas.h	/^  double sigma;$/;"	m	struct:__anon110	access:public
sigma_l	/usr/local/gsl/include/gsl/gsl_monte_miser.h	/^  double * sigma_l;$/;"	m	struct:__anon4	access:public
sigma_r	/usr/local/gsl/include/gsl/gsl_monte_miser.h	/^  double * sigma_r;$/;"	m	struct:__anon4	access:public
sign	/usr/local/gsl/include/gsl/gsl_ieee_utils.h	/^  int sign ;$/;"	m	struct:__anon120	access:public
sign	/usr/local/gsl/include/gsl/gsl_ieee_utils.h	/^  int sign ;$/;"	m	struct:__anon121	access:public
sine	/usr/local/gsl/include/gsl/gsl_integration.h	/^  enum gsl_integration_qawo_enum sine;$/;"	m	struct:__anon47	typeref:enum:__anon47::gsl_integration_qawo_enum	access:public
size	/usr/local/gsl/include/gsl/gsl_block_char.h	/^  size_t size;$/;"	m	struct:gsl_block_char_struct	access:public
size	/usr/local/gsl/include/gsl/gsl_block_complex_double.h	/^  size_t size;$/;"	m	struct:gsl_block_complex_struct	access:public
size	/usr/local/gsl/include/gsl/gsl_block_complex_float.h	/^  size_t size;$/;"	m	struct:gsl_block_complex_float_struct	access:public
size	/usr/local/gsl/include/gsl/gsl_block_complex_long_double.h	/^  size_t size;$/;"	m	struct:gsl_block_complex_long_double_struct	access:public
size	/usr/local/gsl/include/gsl/gsl_block_double.h	/^  size_t size;$/;"	m	struct:gsl_block_struct	access:public
size	/usr/local/gsl/include/gsl/gsl_block_float.h	/^  size_t size;$/;"	m	struct:gsl_block_float_struct	access:public
size	/usr/local/gsl/include/gsl/gsl_block_int.h	/^  size_t size;$/;"	m	struct:gsl_block_int_struct	access:public
size	/usr/local/gsl/include/gsl/gsl_block_long.h	/^  size_t size;$/;"	m	struct:gsl_block_long_struct	access:public
size	/usr/local/gsl/include/gsl/gsl_block_long_double.h	/^  size_t size;$/;"	m	struct:gsl_block_long_double_struct	access:public
size	/usr/local/gsl/include/gsl/gsl_block_short.h	/^  size_t size;$/;"	m	struct:gsl_block_short_struct	access:public
size	/usr/local/gsl/include/gsl/gsl_block_uchar.h	/^  size_t size;$/;"	m	struct:gsl_block_uchar_struct	access:public
size	/usr/local/gsl/include/gsl/gsl_block_uint.h	/^  size_t size;$/;"	m	struct:gsl_block_uint_struct	access:public
size	/usr/local/gsl/include/gsl/gsl_block_ulong.h	/^  size_t size;$/;"	m	struct:gsl_block_ulong_struct	access:public
size	/usr/local/gsl/include/gsl/gsl_block_ushort.h	/^  size_t size;$/;"	m	struct:gsl_block_ushort_struct	access:public
size	/usr/local/gsl/include/gsl/gsl_dht.h	/^  size_t    size;  \/* size of the sample arrays to be transformed    *\/$/;"	m	struct:gsl_dht_struct	access:public
size	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  size_t size;                 \/* size of matrices *\/$/;"	m	struct:__anon81	access:public
size	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  size_t size;                 \/* size of matrices *\/$/;"	m	struct:__anon82	access:public
size	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  size_t size;            \/* size of matrices *\/$/;"	m	struct:__anon83	access:public
size	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  size_t size;            \/* size of matrices *\/$/;"	m	struct:__anon84	access:public
size	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  size_t size;            \/* size of matrices *\/$/;"	m	struct:__anon85	access:public
size	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  size_t size;            \/* size of matrices *\/$/;"	m	struct:__anon86	access:public
size	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  size_t size;            \/* size of matrices *\/$/;"	m	struct:__anon87	access:public
size	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  size_t size;            \/* size of matrices *\/$/;"	m	struct:__anon88	access:public
size	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  size_t size;           \/* matrix size *\/$/;"	m	struct:__anon80	access:public
size	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  size_t size;$/;"	m	struct:__anon76	access:public
size	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  size_t size;$/;"	m	struct:__anon77	access:public
size	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  size_t size;$/;"	m	struct:__anon78	access:public
size	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  size_t size;$/;"	m	struct:__anon79	access:public
size	/usr/local/gsl/include/gsl/gsl_integration.h	/^    size_t size;$/;"	m	struct:__anon45	access:public
size	/usr/local/gsl/include/gsl/gsl_interp.h	/^  size_t  size;$/;"	m	struct:__anon174	access:public
size	/usr/local/gsl/include/gsl/gsl_min.h	/^    size_t size;$/;"	m	struct:__anon146	access:public
size	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	/^    size_t size;$/;"	m	struct:__anon6	access:public
size	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	/^    size_t size;$/;"	m	struct:__anon8	access:public
size	/usr/local/gsl/include/gsl/gsl_multimin.h	/^  double size;$/;"	m	struct:__anon112	access:public
size	/usr/local/gsl/include/gsl/gsl_multimin.h	/^  size_t size;$/;"	m	struct:__anon111	access:public
size	/usr/local/gsl/include/gsl/gsl_multimin.h	/^  size_t size;$/;"	m	struct:__anon113	access:public
size	/usr/local/gsl/include/gsl/gsl_multiroots.h	/^    size_t size;$/;"	m	struct:__anon178	access:public
size	/usr/local/gsl/include/gsl/gsl_multiroots.h	/^    size_t size;$/;"	m	struct:__anon180	access:public
size	/usr/local/gsl/include/gsl/gsl_ntuple.h	/^    size_t size;$/;"	m	struct:__anon13	access:public
size	/usr/local/gsl/include/gsl/gsl_permutation.h	/^  size_t size;$/;"	m	struct:gsl_permutation_struct	access:public
size	/usr/local/gsl/include/gsl/gsl_rng.h	/^    size_t size;$/;"	m	struct:__anon93	access:public
size	/usr/local/gsl/include/gsl/gsl_roots.h	/^    size_t size;$/;"	m	struct:__anon101	access:public
size	/usr/local/gsl/include/gsl/gsl_roots.h	/^    size_t size;$/;"	m	struct:__anon103	access:public
size	/usr/local/gsl/include/gsl/gsl_sf_mathieu.h	/^  size_t size;$/;"	m	struct:__anon177	access:public
size	/usr/local/gsl/include/gsl/gsl_spline.h	/^  size_t  size;$/;"	m	struct:__anon41	access:public
size	/usr/local/gsl/include/gsl/gsl_sum.h	/^  size_t size;$/;"	m	struct:__anon170	access:public
size	/usr/local/gsl/include/gsl/gsl_sum.h	/^  size_t size;$/;"	m	struct:__anon171	access:public
size	/usr/local/gsl/include/gsl/gsl_vector_char.h	/^  size_t size;$/;"	m	struct:__anon70	access:public
size	/usr/local/gsl/include/gsl/gsl_vector_complex_double.h	/^  size_t size;$/;"	m	struct:__anon134	access:public
size	/usr/local/gsl/include/gsl/gsl_vector_complex_float.h	/^  size_t size;$/;"	m	struct:__anon115	access:public
size	/usr/local/gsl/include/gsl/gsl_vector_complex_long_double.h	/^  size_t size;$/;"	m	struct:__anon31	access:public
size	/usr/local/gsl/include/gsl/gsl_vector_double.h	/^  size_t size;$/;"	m	struct:__anon56	access:public
size	/usr/local/gsl/include/gsl/gsl_vector_float.h	/^  size_t size;$/;"	m	struct:__anon35	access:public
size	/usr/local/gsl/include/gsl/gsl_vector_int.h	/^  size_t size;$/;"	m	struct:__anon158	access:public
size	/usr/local/gsl/include/gsl/gsl_vector_long.h	/^  size_t size;$/;"	m	struct:__anon22	access:public
size	/usr/local/gsl/include/gsl/gsl_vector_long_double.h	/^  size_t size;$/;"	m	struct:__anon125	access:public
size	/usr/local/gsl/include/gsl/gsl_vector_short.h	/^  size_t size;$/;"	m	struct:__anon154	access:public
size	/usr/local/gsl/include/gsl/gsl_vector_uchar.h	/^  size_t size;$/;"	m	struct:__anon42	access:public
size	/usr/local/gsl/include/gsl/gsl_vector_uint.h	/^  size_t size;$/;"	m	struct:__anon25	access:public
size	/usr/local/gsl/include/gsl/gsl_vector_ulong.h	/^  size_t size;$/;"	m	struct:__anon60	access:public
size	/usr/local/gsl/include/gsl/gsl_vector_ushort.h	/^  size_t size;$/;"	m	struct:__anon161	access:public
size1	/usr/local/gsl/include/gsl/gsl_matrix_char.h	/^  size_t size1;$/;"	m	struct:__anon148	access:public
size1	/usr/local/gsl/include/gsl/gsl_matrix_complex_double.h	/^  size_t size1;$/;"	m	struct:__anon10	access:public
size1	/usr/local/gsl/include/gsl/gsl_matrix_complex_float.h	/^  size_t size1;$/;"	m	struct:__anon128	access:public
size1	/usr/local/gsl/include/gsl/gsl_matrix_complex_long_double.h	/^  size_t size1;$/;"	m	struct:__anon50	access:public
size1	/usr/local/gsl/include/gsl/gsl_matrix_double.h	/^  size_t size1;$/;"	m	struct:__anon73	access:public
size1	/usr/local/gsl/include/gsl/gsl_matrix_float.h	/^  size_t size1;$/;"	m	struct:__anon143	access:public
size1	/usr/local/gsl/include/gsl/gsl_matrix_int.h	/^  size_t size1;$/;"	m	struct:__anon90	access:public
size1	/usr/local/gsl/include/gsl/gsl_matrix_long.h	/^  size_t size1;$/;"	m	struct:__anon106	access:public
size1	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	/^  size_t size1;$/;"	m	struct:__anon63	access:public
size1	/usr/local/gsl/include/gsl/gsl_matrix_short.h	/^  size_t size1;$/;"	m	struct:__anon38	access:public
size1	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	/^  size_t size1;$/;"	m	struct:__anon140	access:public
size1	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	/^  size_t size1;$/;"	m	struct:__anon18	access:public
size1	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	/^  size_t size1;$/;"	m	struct:__anon28	access:public
size1	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	/^  size_t size1;$/;"	m	struct:__anon151	access:public
size2	/usr/local/gsl/include/gsl/gsl_matrix_char.h	/^  size_t size2;$/;"	m	struct:__anon148	access:public
size2	/usr/local/gsl/include/gsl/gsl_matrix_complex_double.h	/^  size_t size2;$/;"	m	struct:__anon10	access:public
size2	/usr/local/gsl/include/gsl/gsl_matrix_complex_float.h	/^  size_t size2;$/;"	m	struct:__anon128	access:public
size2	/usr/local/gsl/include/gsl/gsl_matrix_complex_long_double.h	/^  size_t size2;$/;"	m	struct:__anon50	access:public
size2	/usr/local/gsl/include/gsl/gsl_matrix_double.h	/^  size_t size2;$/;"	m	struct:__anon73	access:public
size2	/usr/local/gsl/include/gsl/gsl_matrix_float.h	/^  size_t size2;$/;"	m	struct:__anon143	access:public
size2	/usr/local/gsl/include/gsl/gsl_matrix_int.h	/^  size_t size2;$/;"	m	struct:__anon90	access:public
size2	/usr/local/gsl/include/gsl/gsl_matrix_long.h	/^  size_t size2;$/;"	m	struct:__anon106	access:public
size2	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	/^  size_t size2;$/;"	m	struct:__anon63	access:public
size2	/usr/local/gsl/include/gsl/gsl_matrix_short.h	/^  size_t size2;$/;"	m	struct:__anon38	access:public
size2	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	/^  size_t size2;$/;"	m	struct:__anon140	access:public
size2	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	/^  size_t size2;$/;"	m	struct:__anon18	access:public
size2	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	/^  size_t size2;$/;"	m	struct:__anon28	access:public
size2	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	/^  size_t size2;$/;"	m	struct:__anon151	access:public
stage	/usr/local/gsl/include/gsl/gsl_monte_vegas.h	/^  int stage;$/;"	m	struct:__anon110	access:public
state	/usr/local/gsl/include/gsl/gsl_interp.h	/^  void * state;$/;"	m	struct:__anon174	access:public
state	/usr/local/gsl/include/gsl/gsl_min.h	/^    void *state;$/;"	m	struct:__anon147	access:public
state	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	/^    void *state;$/;"	m	struct:__anon7	access:public
state	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	/^    void *state;$/;"	m	struct:__anon9	access:public
state	/usr/local/gsl/include/gsl/gsl_multimin.h	/^  void *state;$/;"	m	struct:__anon112	access:public
state	/usr/local/gsl/include/gsl/gsl_multimin.h	/^  void *state;$/;"	m	struct:__anon114	access:public
state	/usr/local/gsl/include/gsl/gsl_multiroots.h	/^    void *state;$/;"	m	struct:__anon179	access:public
state	/usr/local/gsl/include/gsl/gsl_multiroots.h	/^    void *state;$/;"	m	struct:__anon181	access:public
state	/usr/local/gsl/include/gsl/gsl_odeiv.h	/^  void * state;$/;"	m	struct:__anon97	access:public
state	/usr/local/gsl/include/gsl/gsl_odeiv.h	/^  void * state;$/;"	m	struct:__anon99	access:public
state	/usr/local/gsl/include/gsl/gsl_qrng.h	/^  void * state;$/;"	m	struct:__anon169	access:public
state	/usr/local/gsl/include/gsl/gsl_rng.h	/^    void *state;$/;"	m	struct:__anon94	access:public
state	/usr/local/gsl/include/gsl/gsl_roots.h	/^    void *state;$/;"	m	struct:__anon102	access:public
state	/usr/local/gsl/include/gsl/gsl_roots.h	/^    void *state;$/;"	m	struct:__anon104	access:public
state_size	/usr/local/gsl/include/gsl/gsl_qrng.h	/^  size_t (*state_size) (unsigned int dimension);$/;"	m	struct:__anon168	access:public
state_size	/usr/local/gsl/include/gsl/gsl_qrng.h	/^  size_t state_size;$/;"	m	struct:__anon169	access:public
step_size	/usr/local/gsl/include/gsl/gsl_siman.h	/^  double step_size;     \/* max step size in the random walk *\/$/;"	m	struct:__anon139	access:public
stride	/usr/local/gsl/include/gsl/gsl_vector_char.h	/^  size_t stride;$/;"	m	struct:__anon70	access:public
stride	/usr/local/gsl/include/gsl/gsl_vector_complex_double.h	/^  size_t stride;$/;"	m	struct:__anon134	access:public
stride	/usr/local/gsl/include/gsl/gsl_vector_complex_float.h	/^  size_t stride;$/;"	m	struct:__anon115	access:public
stride	/usr/local/gsl/include/gsl/gsl_vector_complex_long_double.h	/^  size_t stride;$/;"	m	struct:__anon31	access:public
stride	/usr/local/gsl/include/gsl/gsl_vector_double.h	/^  size_t stride;$/;"	m	struct:__anon56	access:public
stride	/usr/local/gsl/include/gsl/gsl_vector_float.h	/^  size_t stride;$/;"	m	struct:__anon35	access:public
stride	/usr/local/gsl/include/gsl/gsl_vector_int.h	/^  size_t stride;$/;"	m	struct:__anon158	access:public
stride	/usr/local/gsl/include/gsl/gsl_vector_long.h	/^  size_t stride;$/;"	m	struct:__anon22	access:public
stride	/usr/local/gsl/include/gsl/gsl_vector_long_double.h	/^  size_t stride;$/;"	m	struct:__anon125	access:public
stride	/usr/local/gsl/include/gsl/gsl_vector_short.h	/^  size_t stride;$/;"	m	struct:__anon154	access:public
stride	/usr/local/gsl/include/gsl/gsl_vector_uchar.h	/^  size_t stride;$/;"	m	struct:__anon42	access:public
stride	/usr/local/gsl/include/gsl/gsl_vector_uint.h	/^  size_t stride;$/;"	m	struct:__anon25	access:public
stride	/usr/local/gsl/include/gsl/gsl_vector_ulong.h	/^  size_t stride;$/;"	m	struct:__anon60	access:public
stride	/usr/local/gsl/include/gsl/gsl_vector_ushort.h	/^  size_t stride;$/;"	m	struct:__anon161	access:public
sum	/usr/local/gsl/include/gsl/gsl_histogram.h	/^  double * sum ;$/;"	m	struct:__anon176	access:public
sum	/usr/local/gsl/include/gsl/gsl_histogram2d.h	/^  double * sum ;$/;"	m	struct:__anon133	access:public
sum_plain	/usr/local/gsl/include/gsl/gsl_sum.h	/^  double sum_plain;$/;"	m	struct:__anon170	access:public
sum_plain	/usr/local/gsl/include/gsl/gsl_sum.h	/^  double sum_plain;$/;"	m	struct:__anon171	access:public
sum_wgts	/usr/local/gsl/include/gsl/gsl_monte_vegas.h	/^  double sum_wgts;$/;"	m	struct:__anon110	access:public
symm_workspace_p	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  gsl_eigen_symm_workspace *symm_workspace_p;$/;"	m	struct:__anon83	access:public
symmv_workspace_p	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  gsl_eigen_symmv_workspace *symmv_workspace_p;$/;"	m	struct:__anon84	access:public
t	/usr/local/gsl/include/gsl/gsl_multifit.h	/^  gsl_vector * t;$/;"	m	struct:__anon118	access:public
t_initial	/usr/local/gsl/include/gsl/gsl_siman.h	/^  double k, t_initial, mu_t, t_min;$/;"	m	struct:__anon139	access:public
t_min	/usr/local/gsl/include/gsl/gsl_siman.h	/^  double k, t_initial, mu_t, t_min;$/;"	m	struct:__anon139	access:public
tau	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  double * tau;$/;"	m	struct:__anon78	access:public
tau	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  double * tau;$/;"	m	struct:__anon79	access:public
tau	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  gsl_vector *tau;             \/* Householder coefficients *\/$/;"	m	struct:__anon81	access:public
tda	/usr/local/gsl/include/gsl/gsl_matrix_char.h	/^  size_t tda;$/;"	m	struct:__anon148	access:public
tda	/usr/local/gsl/include/gsl/gsl_matrix_complex_double.h	/^  size_t tda;$/;"	m	struct:__anon10	access:public
tda	/usr/local/gsl/include/gsl/gsl_matrix_complex_float.h	/^  size_t tda;$/;"	m	struct:__anon128	access:public
tda	/usr/local/gsl/include/gsl/gsl_matrix_complex_long_double.h	/^  size_t tda;$/;"	m	struct:__anon50	access:public
tda	/usr/local/gsl/include/gsl/gsl_matrix_double.h	/^  size_t tda;$/;"	m	struct:__anon73	access:public
tda	/usr/local/gsl/include/gsl/gsl_matrix_float.h	/^  size_t tda;$/;"	m	struct:__anon143	access:public
tda	/usr/local/gsl/include/gsl/gsl_matrix_int.h	/^  size_t tda;$/;"	m	struct:__anon90	access:public
tda	/usr/local/gsl/include/gsl/gsl_matrix_long.h	/^  size_t tda;$/;"	m	struct:__anon106	access:public
tda	/usr/local/gsl/include/gsl/gsl_matrix_long_double.h	/^  size_t tda;$/;"	m	struct:__anon63	access:public
tda	/usr/local/gsl/include/gsl/gsl_matrix_short.h	/^  size_t tda;$/;"	m	struct:__anon38	access:public
tda	/usr/local/gsl/include/gsl/gsl_matrix_uchar.h	/^  size_t tda;$/;"	m	struct:__anon140	access:public
tda	/usr/local/gsl/include/gsl/gsl_matrix_uint.h	/^  size_t tda;$/;"	m	struct:__anon18	access:public
tda	/usr/local/gsl/include/gsl/gsl_matrix_ulong.h	/^  size_t tda;$/;"	m	struct:__anon28	access:public
tda	/usr/local/gsl/include/gsl/gsl_matrix_ushort.h	/^  size_t tda;$/;"	m	struct:__anon151	access:public
terms_used	/usr/local/gsl/include/gsl/gsl_sum.h	/^  size_t terms_used;            \/* number of calls *\/$/;"	m	struct:__anon170	access:public
terms_used	/usr/local/gsl/include/gsl/gsl_sum.h	/^  size_t terms_used;            \/* number of calls *\/$/;"	m	struct:__anon171	access:public
trig	/usr/local/gsl/include/gsl/gsl_fft_complex.h	/^    gsl_complex *trig;$/;"	m	struct:__anon1	access:public
trig	/usr/local/gsl/include/gsl/gsl_fft_complex_float.h	/^    gsl_complex_float *trig;$/;"	m	struct:__anon16	access:public
trig	/usr/local/gsl/include/gsl/gsl_fft_halfcomplex.h	/^    gsl_complex *trig;$/;"	m	struct:__anon105	access:public
trig	/usr/local/gsl/include/gsl/gsl_fft_halfcomplex_float.h	/^    gsl_complex_float *trig;$/;"	m	struct:__anon21	access:public
trig	/usr/local/gsl/include/gsl/gsl_fft_real.h	/^    gsl_complex *trig;$/;"	m	struct:__anon66	access:public
trig	/usr/local/gsl/include/gsl/gsl_fft_real_float.h	/^    gsl_complex_float *trig;$/;"	m	struct:__anon68	access:public
tt	/usr/local/gsl/include/gsl/gsl_sf_mathieu.h	/^  double *tt;$/;"	m	struct:__anon177	access:public
twiddle	/usr/local/gsl/include/gsl/gsl_fft_complex.h	/^    gsl_complex *twiddle[64];$/;"	m	struct:__anon1	access:public
twiddle	/usr/local/gsl/include/gsl/gsl_fft_complex_float.h	/^    gsl_complex_float *twiddle[64];$/;"	m	struct:__anon16	access:public
twiddle	/usr/local/gsl/include/gsl/gsl_fft_halfcomplex.h	/^    gsl_complex *twiddle[64];$/;"	m	struct:__anon105	access:public
twiddle	/usr/local/gsl/include/gsl/gsl_fft_halfcomplex_float.h	/^    gsl_complex_float *twiddle[64];$/;"	m	struct:__anon21	access:public
twiddle	/usr/local/gsl/include/gsl/gsl_fft_real.h	/^    gsl_complex *twiddle[64];$/;"	m	struct:__anon66	access:public
twiddle	/usr/local/gsl/include/gsl/gsl_fft_real_float.h	/^    gsl_complex_float *twiddle[64];$/;"	m	struct:__anon68	access:public
type	/usr/local/gsl/include/gsl/gsl_ieee_utils.h	/^  int type ;$/;"	m	struct:__anon120	access:public
type	/usr/local/gsl/include/gsl/gsl_ieee_utils.h	/^  int type ;$/;"	m	struct:__anon121	access:public
type	/usr/local/gsl/include/gsl/gsl_interp.h	/^  const gsl_interp_type * type;$/;"	m	struct:__anon174	access:public
type	/usr/local/gsl/include/gsl/gsl_min.h	/^    const gsl_min_fminimizer_type * type;$/;"	m	struct:__anon147	access:public
type	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	/^    const gsl_multifit_fdfsolver_type * type;$/;"	m	struct:__anon9	access:public
type	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	/^    const gsl_multifit_fsolver_type * type;$/;"	m	struct:__anon7	access:public
type	/usr/local/gsl/include/gsl/gsl_multimin.h	/^  const gsl_multimin_fdfminimizer_type *type;$/;"	m	struct:__anon114	access:public
type	/usr/local/gsl/include/gsl/gsl_multimin.h	/^  const gsl_multimin_fminimizer_type *type;$/;"	m	struct:__anon112	access:public
type	/usr/local/gsl/include/gsl/gsl_multiroots.h	/^    const gsl_multiroot_fdfsolver_type * type;$/;"	m	struct:__anon181	access:public
type	/usr/local/gsl/include/gsl/gsl_multiroots.h	/^    const gsl_multiroot_fsolver_type * type;$/;"	m	struct:__anon179	access:public
type	/usr/local/gsl/include/gsl/gsl_odeiv.h	/^  const gsl_odeiv_control_type * type;$/;"	m	struct:__anon99	access:public
type	/usr/local/gsl/include/gsl/gsl_odeiv.h	/^  const gsl_odeiv_step_type * type;$/;"	m	struct:__anon97	access:public
type	/usr/local/gsl/include/gsl/gsl_qrng.h	/^  const gsl_qrng_type * type;$/;"	m	struct:__anon169	access:public
type	/usr/local/gsl/include/gsl/gsl_rng.h	/^    const gsl_rng_type * type;$/;"	m	struct:__anon94	access:public
type	/usr/local/gsl/include/gsl/gsl_roots.h	/^    const gsl_root_fdfsolver_type * type;$/;"	m	struct:__anon104	access:public
type	/usr/local/gsl/include/gsl/gsl_roots.h	/^    const gsl_root_fsolver_type * type;$/;"	m	struct:__anon102	access:public
type	/usr/local/gsl/include/gsl/gsl_wavelet.h	/^  const gsl_wavelet_type *type;$/;"	m	struct:__anon166	access:public
val	/usr/local/gsl/include/gsl/gsl_sf_result.h	/^  double val;$/;"	m	struct:gsl_sf_result_e10_struct	access:public
val	/usr/local/gsl/include/gsl/gsl_sf_result.h	/^  double val;$/;"	m	struct:gsl_sf_result_struct	access:public
vector	/usr/local/gsl/include/gsl/gsl_vector_char.h	/^  gsl_vector_char vector;$/;"	m	struct:__anon71	access:public
vector	/usr/local/gsl/include/gsl/gsl_vector_char.h	/^  gsl_vector_char vector;$/;"	m	struct:__anon72	access:public
vector	/usr/local/gsl/include/gsl/gsl_vector_complex_double.h	/^  gsl_vector_complex vector;$/;"	m	struct:__anon135	access:public
vector	/usr/local/gsl/include/gsl/gsl_vector_complex_double.h	/^  gsl_vector_complex vector;$/;"	m	struct:__anon136	access:public
vector	/usr/local/gsl/include/gsl/gsl_vector_complex_float.h	/^  gsl_vector_complex_float vector;$/;"	m	struct:__anon116	access:public
vector	/usr/local/gsl/include/gsl/gsl_vector_complex_float.h	/^  gsl_vector_complex_float vector;$/;"	m	struct:__anon117	access:public
vector	/usr/local/gsl/include/gsl/gsl_vector_complex_long_double.h	/^  gsl_vector_complex_long_double vector;$/;"	m	struct:__anon32	access:public
vector	/usr/local/gsl/include/gsl/gsl_vector_complex_long_double.h	/^  gsl_vector_complex_long_double vector;$/;"	m	struct:__anon33	access:public
vector	/usr/local/gsl/include/gsl/gsl_vector_double.h	/^  gsl_vector vector;$/;"	m	struct:__anon57	access:public
vector	/usr/local/gsl/include/gsl/gsl_vector_double.h	/^  gsl_vector vector;$/;"	m	struct:__anon58	access:public
vector	/usr/local/gsl/include/gsl/gsl_vector_float.h	/^  gsl_vector_float vector;$/;"	m	struct:__anon36	access:public
vector	/usr/local/gsl/include/gsl/gsl_vector_float.h	/^  gsl_vector_float vector;$/;"	m	struct:__anon37	access:public
vector	/usr/local/gsl/include/gsl/gsl_vector_int.h	/^  gsl_vector_int vector;$/;"	m	struct:__anon159	access:public
vector	/usr/local/gsl/include/gsl/gsl_vector_int.h	/^  gsl_vector_int vector;$/;"	m	struct:__anon160	access:public
vector	/usr/local/gsl/include/gsl/gsl_vector_long.h	/^  gsl_vector_long vector;$/;"	m	struct:__anon23	access:public
vector	/usr/local/gsl/include/gsl/gsl_vector_long.h	/^  gsl_vector_long vector;$/;"	m	struct:__anon24	access:public
vector	/usr/local/gsl/include/gsl/gsl_vector_long_double.h	/^  gsl_vector_long_double vector;$/;"	m	struct:__anon126	access:public
vector	/usr/local/gsl/include/gsl/gsl_vector_long_double.h	/^  gsl_vector_long_double vector;$/;"	m	struct:__anon127	access:public
vector	/usr/local/gsl/include/gsl/gsl_vector_short.h	/^  gsl_vector_short vector;$/;"	m	struct:__anon155	access:public
vector	/usr/local/gsl/include/gsl/gsl_vector_short.h	/^  gsl_vector_short vector;$/;"	m	struct:__anon156	access:public
vector	/usr/local/gsl/include/gsl/gsl_vector_uchar.h	/^  gsl_vector_uchar vector;$/;"	m	struct:__anon43	access:public
vector	/usr/local/gsl/include/gsl/gsl_vector_uchar.h	/^  gsl_vector_uchar vector;$/;"	m	struct:__anon44	access:public
vector	/usr/local/gsl/include/gsl/gsl_vector_uint.h	/^  gsl_vector_uint vector;$/;"	m	struct:__anon26	access:public
vector	/usr/local/gsl/include/gsl/gsl_vector_uint.h	/^  gsl_vector_uint vector;$/;"	m	struct:__anon27	access:public
vector	/usr/local/gsl/include/gsl/gsl_vector_ulong.h	/^  gsl_vector_ulong vector;$/;"	m	struct:__anon61	access:public
vector	/usr/local/gsl/include/gsl/gsl_vector_ulong.h	/^  gsl_vector_ulong vector;$/;"	m	struct:__anon62	access:public
vector	/usr/local/gsl/include/gsl/gsl_vector_ushort.h	/^  gsl_vector_ushort vector;$/;"	m	struct:__anon162	access:public
vector	/usr/local/gsl/include/gsl/gsl_vector_ushort.h	/^  gsl_vector_ushort vector;$/;"	m	struct:__anon163	access:public
verbose	/usr/local/gsl/include/gsl/gsl_monte_miser.h	/^  int verbose;$/;"	m	struct:__anon4	access:public
verbose	/usr/local/gsl/include/gsl/gsl_monte_vegas.h	/^  int verbose;$/;"	m	struct:__anon110	access:public
vol	/usr/local/gsl/include/gsl/gsl_monte_vegas.h	/^  double vol;$/;"	m	struct:__anon110	access:public
weight	/usr/local/gsl/include/gsl/gsl_monte_vegas.h	/^  double * weight;$/;"	m	struct:__anon110	access:public
wmat	/usr/local/gsl/include/gsl/gsl_sf_mathieu.h	/^  gsl_eigen_symmv_workspace *wmat;$/;"	m	struct:__anon177	access:public
work	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  gsl_vector *work;            \/* scratch workspace *\/$/;"	m	struct:__anon82	access:public
work	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  gsl_vector *work;       \/* scratch workspace *\/$/;"	m	struct:__anon87	access:public
work1	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  gsl_vector *work1;      \/* 1-norm of columns of A *\/$/;"	m	struct:__anon88	access:public
work2	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  gsl_vector *work2;           \/* scratch workspace *\/$/;"	m	struct:__anon82	access:public
work2	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  gsl_vector *work2;      \/* 1-norm of columns of B *\/$/;"	m	struct:__anon88	access:public
work3	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  gsl_vector *work3;           \/* scratch workspace *\/$/;"	m	struct:__anon82	access:public
work3	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  gsl_vector *work3;      \/* real part of eigenvector *\/$/;"	m	struct:__anon88	access:public
work4	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  gsl_vector *work4;      \/* imag part of eigenvector *\/$/;"	m	struct:__anon88	access:public
work5	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  gsl_vector *work5;      \/* real part of back-transformed eigenvector *\/$/;"	m	struct:__anon88	access:public
work6	/usr/local/gsl/include/gsl/gsl_eigen.h	/^  gsl_vector *work6;      \/* imag part of back-transformed eigenvector *\/$/;"	m	struct:__anon88	access:public
wtd_int_sum	/usr/local/gsl/include/gsl/gsl_monte_vegas.h	/^  double wtd_int_sum; $/;"	m	struct:__anon110	access:public
x	/usr/local/gsl/include/gsl/gsl_monte_miser.h	/^  double * x;$/;"	m	struct:__anon4	access:public
x	/usr/local/gsl/include/gsl/gsl_monte_plain.h	/^  double *x;$/;"	m	struct:__anon49	access:public
x	/usr/local/gsl/include/gsl/gsl_monte_vegas.h	/^  double * x;$/;"	m	struct:__anon110	access:public
x	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	/^    gsl_vector * x ;$/;"	m	struct:__anon7	access:public
x	/usr/local/gsl/include/gsl/gsl_multifit_nlin.h	/^    gsl_vector * x;$/;"	m	struct:__anon9	access:public
x	/usr/local/gsl/include/gsl/gsl_multimin.h	/^  gsl_vector * x;$/;"	m	struct:__anon112	access:public
x	/usr/local/gsl/include/gsl/gsl_multimin.h	/^  gsl_vector * x;$/;"	m	struct:__anon114	access:public
x	/usr/local/gsl/include/gsl/gsl_multiroots.h	/^    gsl_vector * x ;$/;"	m	struct:__anon179	access:public
x	/usr/local/gsl/include/gsl/gsl_multiroots.h	/^    gsl_vector * x;$/;"	m	struct:__anon181	access:public
x	/usr/local/gsl/include/gsl/gsl_spline.h	/^  double  * x;$/;"	m	struct:__anon41	access:public
x_lower	/usr/local/gsl/include/gsl/gsl_min.h	/^    double x_lower ;$/;"	m	struct:__anon147	access:public
x_lower	/usr/local/gsl/include/gsl/gsl_roots.h	/^    double x_lower;$/;"	m	struct:__anon102	access:public
x_minimum	/usr/local/gsl/include/gsl/gsl_min.h	/^    double x_minimum ;$/;"	m	struct:__anon147	access:public
x_upper	/usr/local/gsl/include/gsl/gsl_min.h	/^    double x_upper ;$/;"	m	struct:__anon147	access:public
x_upper	/usr/local/gsl/include/gsl/gsl_roots.h	/^    double x_upper;$/;"	m	struct:__anon102	access:public
xi	/usr/local/gsl/include/gsl/gsl_monte_vegas.h	/^  double * xi;$/;"	m	struct:__anon110	access:public
xin	/usr/local/gsl/include/gsl/gsl_monte_vegas.h	/^  double * xin;$/;"	m	struct:__anon110	access:public
xmax	/usr/local/gsl/include/gsl/gsl_dht.h	/^  double    xmax;  \/* the upper limit to the x-sampling domain       *\/$/;"	m	struct:gsl_dht_struct	access:public
xmax	/usr/local/gsl/include/gsl/gsl_interp.h	/^  double  xmax;$/;"	m	struct:__anon174	access:public
xmid	/usr/local/gsl/include/gsl/gsl_monte_miser.h	/^  double * xmid;$/;"	m	struct:__anon4	access:public
xmin	/usr/local/gsl/include/gsl/gsl_interp.h	/^  double  xmin;$/;"	m	struct:__anon174	access:public
xrange	/usr/local/gsl/include/gsl/gsl_histogram2d.h	/^  double * xrange ;$/;"	m	struct:__anon132	access:public
xrange	/usr/local/gsl/include/gsl/gsl_histogram2d.h	/^  double * xrange ;$/;"	m	struct:__anon133	access:public
xt	/usr/local/gsl/include/gsl/gsl_multifit.h	/^  gsl_vector * xt;$/;"	m	struct:__anon118	access:public
y	/usr/local/gsl/include/gsl/gsl_spline.h	/^  double  * y;$/;"	m	struct:__anon41	access:public
y0	/usr/local/gsl/include/gsl/gsl_odeiv.h	/^  double * y0;$/;"	m	struct:__anon100	access:public
yerr	/usr/local/gsl/include/gsl/gsl_odeiv.h	/^  double * yerr;$/;"	m	struct:__anon100	access:public
yrange	/usr/local/gsl/include/gsl/gsl_histogram2d.h	/^  double * yrange ;$/;"	m	struct:__anon132	access:public
yrange	/usr/local/gsl/include/gsl/gsl_histogram2d.h	/^  double * yrange ;$/;"	m	struct:__anon133	access:public
zz	/usr/local/gsl/include/gsl/gsl_sf_mathieu.h	/^  double *zz;$/;"	m	struct:__anon177	access:public
